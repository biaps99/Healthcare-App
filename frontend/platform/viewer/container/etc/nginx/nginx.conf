# The identifier Backend is internal to nginx, and used to name this specific upstream
upstream Backend {
    # django-service is metadata.name of sevice
    server django-service;
}

upstream Orthanc1 {
    # django-service is metadata.name of sevice
    server orthanc-service:8047;
}

upstream Orthanc2 {
    # django-service is metadata.name of sevice
    server orthanc-service2:8048;
}



map $http_apikey $api_client_name {
    default "";

    "9jcoFNyj/XR2ipwhdMVuwYnT" "client_one";
    "QzVV6y1EmQFbbxOfRCwyJs35" "client_two";
    "mGcjH8Fv6U9y3BVF9H3Ypb9T" "client_six";
}

server {
    keepalive_timeout 3600;
    proxy_connect_timeout 3600;
    proxy_send_timeout 3600;
    proxy_read_timeout 3600;
    send_timeout 3600;
    client_max_body_size 500M;
    include mime.types;
    listen 0.0.0.0:80;
    listen [::]:80;
    #default_type application/octet-stream;

    gzip                    on;
    gzip_comp_level         6;
    gzip_vary               on;
    gzip_min_length         1000;
    gzip_proxied            any;
    gzip_types              text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers            16 8k;
    rewrite_log on;
    resolver kube-dns.kube-system.svc.cluster.local;

    location ~ /ml/(?<name>.+)/(?<port>\d+)/(?<model>.+)/(?<serie>.+) {
        resolver kube-dns.kube-system.svc.cluster.local valid=5s;
        #proxy_set_header Connection "";
        rewrite_log on;
        #return 301 $scheme:http://ml-deployment-$model:8581/;
        proxy_pass http://ml-deployment-$name.default.svc.cluster.local:$port/container_api/infer/$model/$serie;
    }

    location /orthanc/ {
        proxy_set_header Connection "";
        proxy_pass http://Orthanc1;
    }

    location /orthanc2/ {
        proxy_set_header Connection "";
        proxy_pass http://Orthanc2;
    }

    location /instances {
        proxy_set_header Connection "";
        proxy_pass http://Orthanc2;
    }

    location /dicom-web {
        proxy_set_header Connection "";
        proxy_pass http://Orthanc1;
    }

    location /wado {
        proxy_set_header Connection "";
        proxy_pass http://Orthanc1;
    }

    location /studies {
        proxy_set_header Connection "";
        proxy_pass http://Orthanc1;
    }

    location /media {
        proxy_set_header Connection "";
        proxy_pass http://Backend;
    }

    location /api/ {
        proxy_read_timeout 900s;
        #proxy_connect_timeout 75s;
        #client_max_body_size 100M;
        # The following statement will proxy traffic to the upstream named Backend
        proxy_set_header Connection "";
        #auth_request /_validate_apikey;
        #auth_basic "Administrator’s Area";
        #auth_basic_user_file conf/.htpasswd;
        
        
        location /api/add_main_group {
            #client_max_body_size 100M;
            # The following statement will proxy traffic to the upstream named Backend
            proxy_set_header Connection "";
            #auth_request /_validate_apikey;
            auth_basic "Administrator’s Area";
            auth_basic_user_file conf/.htpasswd;
            proxy_pass http://Backend;
        }

        location /api/2FA_login_login {
            #client_max_body_size 100M;
            # The following statement will proxy traffic to the upstream named Backend
            proxy_set_header Connection "";
            #auth_request /_validate_apikey;
            auth_basic "Administrator’s Area";
            auth_basic_user_file conf/.htpasswd;
            proxy_pass http://Backend;
        }

        location /api/check_superuser {
            #client_max_body_size 100M;
            # The following statement will proxy traffic to the upstream named Backend
            proxy_set_header Connection "";
            #auth_request /_validate_apikey;
            auth_basic "Administrator’s Area";
            auth_basic_user_file conf/.htpasswd;
            proxy_pass http://Backend;
        }

        location /api/check_main_group_login {
            #client_max_body_size 100M;
            # The following statement will proxy traffic to the upstream named Backend
            proxy_set_header Connection "";
            #auth_request /_validate_apikey;
            auth_basic "Administrator’s Area";
            auth_basic_user_file conf/.htpasswd;
            proxy_pass http://Backend;
        }

        location /api/check_secret_login {
            #client_max_body_size 100M;
            # The following statement will proxy traffic to the upstream named Backend
            proxy_set_header Connection "";
            #auth_request /_validate_apikey;
            auth_basic "Administrator’s Area";
            auth_basic_user_file conf/.htpasswd;
            proxy_pass http://Backend;
        }

        location /api/check_medical_certificate_login {
            #client_max_body_size 100M;
            # The following statement will proxy traffic to the upstream named Backend
            proxy_set_header Connection "";
            #auth_request /_validate_apikey;
            auth_basic "Administrator’s Area";
            auth_basic_user_file conf/.htpasswd;
            proxy_pass http://Backend;
        }

        location /api/encrypt_db {
            #client_max_body_size 100M;
            # The following statement will proxy traffic to the upstream named Backend
            proxy_set_header Connection "";
            #auth_request /_validate_apikey;
            auth_basic "Administrator’s Area";
            auth_basic_user_file conf/.htpasswd;
            proxy_pass http://Backend;
        }
        proxy_pass http://Backend;
    }

    location /auth/ {
        #client_max_body_size 100M;
        # The following statement will proxy traffic to the upstream named Backend
        proxy_set_header Connection "";
        #auth_request /_validate_apikey;
        #auth_basic "Administrator’s Area";
        #auth_basic_user_file conf/.htpasswd;
        #location /auth/o/ {
            # The following statement will proxy traffic to the upstream named Backend
            #proxy_set_header Connection "";
            #auth_request /_validate_apikey;
            #auth_basic "Administrator’s Area";
            #auth_basic_user_file conf/.htpasswd;
            #proxy_pass http://Backend;
        #}
        proxy_pass http://Backend;

    }

    # API key validation
    location = /_validate_apikey {
        internal;

        if ($http_apikey = "") {
            return 401; # Unauthorized
        }
        if ($api_client_name = "") {
            return 403; # Forbidden
        }

        return 204; # OK (no content)
    }

    location / {
        root /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
        #auth_basic off;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}