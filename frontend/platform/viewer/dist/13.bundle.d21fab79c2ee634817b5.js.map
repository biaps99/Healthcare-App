{"version":3,"sources":["webpack:///./editor/Tree/state/TreeContext.js","webpack:///./editor/Tree/state/constants.js","webpack:///./editor/Tree/state/reducer.js","webpack:///./editor/utils.js","webpack:///./editor/Tree/Tree.style.js","webpack:///./editor/Tree/Folder/TreeFolder.style.js","webpack:///./editor/Tree/FileIcons.js","webpack:///./editor/Tree/File/TreeFile.style.js","webpack:///./editor/Tree/TreePlaceholderInput.js","webpack:///./editor/Tree/Folder/TreeFolder.js","webpack:///./editor/Tree/File/TreeFile.js","webpack:///./editor/Tree/Tree.js","webpack:///./editor/template.js","webpack:///./components/ConnectedAPI.js","webpack:///./editor/Editor.js"],"names":["TreeContext","React","createContext","dispatch","state","isImparative","onNodeClick","useTreeContext","useContext","createActionTypes","name","CREATE","EDIT","DELETE","FILE","FOLDER","reducer","action","newState","_cloneDeep","node","parent","payload","id","foundNode","data","cond","childPathKey","final","parentPath","next","prev","recursiveFind","tree","forEach","item","index","p","includes","push","nextSibling","previousSibling","searchDFS","parentNode","type","files","Array","isArray","filter","file","StyledTree","styled","div","ActionsWrapper","StyledName","Collapse","isOpen","VerticalLine","section","StyledFolder","theme","indent","FILE_ICONS","js","css","html","jsx","StyledFile","FileEdit","ext","inputRef","updateExt","defaultValue","style","extension","className","ref","onChange","FolderEdit","v4","handleClick","PlaceholderInput","onSubmit","onCancel","useState","setExt","useRef","useEffect","current","focus","addEventListener","e","key","target","value","splitted","split","length","FolderName","onClick","Folder","children","onAdd","isEditing","setEditing","setIsOpen","childs","setChilds","commitFileCreation","handleCancel","handleNodeClick","useCallback","event","stopPropagation","paddingLeft","File","onDelete","padding","Tree","func","didMount","onUpdate","useReducer","useLayoutEffect","Provider","TreeRecusive","map","template","ConnectedAPI","createMyModelEntry","form_data","FormData","notification","UINotificationService","create","append","version","algorithm_overview","model_architecture","model_performance","data_description","input","output","references","additional_info","user","task","inputExtension","inputModality","visibility","framework","bodyPart","axiosInstance","post","headers","Authorization","localStorage","getItem","then","res","catch","error","response","myNewModel","console","log","status","show","title","message","duration","Editor","props","Object","keys","setState","active","el","indexOf","splice","newValue","f","zip","require","files_list","fileNames","preTrainedFiles","modelFile","list","fileContent","blobFile","Blob","content","parentFolder","entries","generateAsync","saveAs","form","location","port","uiModelService","UIModalService","undefined","this","hide","fileName","url","email","req","XMLHttpRequest","open","responseType","setRequestHeader","send","scope","onload","blob","loadAsync","fileNamePlusExtension","async","fileBlob","fileString","activeContent","display","marginRight","handleTreeClick","flex","width","margin","htmlFor","marginBottom","fontSize","fontFamily","multiple","accept","handleModelUpload","marginLeft","Button","marginTop","float","backgroundColor","borderColor","handleSubmit","startIcon","variant","handleDownload","mode","handleChange","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","height","showPrintMargin","highlightActiveLine","readOnly","Component","PropTypes","object","ConnectedEditor","connect","auth"],"mappings":"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","file":"13.bundle.d21fab79c2ee634817b5.js","sourcesContent":["import React from 'react';\n\nconst defaultValue = {\n  dispatch: null,\n  state: null,\n  isImparative: null,\n  onNodeClick: () => {},\n};\nconst TreeContext = React.createContext(defaultValue);\n\nconst useTreeContext = () => React.useContext(TreeContext);\n\nexport { TreeContext, useTreeContext };\n","const createActionTypes = name => {\n  return {\n    CREATE: `${name}_CREATE`,\n    EDIT: `${name}_EDIT`,\n    DELETE: `${name}_DELETE`,\n  };\n};\n\nconst FILE = createActionTypes('FILE');\nconst FOLDER = createActionTypes('FOLDER');\n\nexport { FILE, FOLDER };\n","import _cloneDeep from 'lodash.clonedeep';\nimport { searchDFS, createFile, createFolder } from '../../utils';\nimport { FILE, FOLDER } from './constants';\n\nconst reducer = (state, action) => {\n  let newState = _cloneDeep(state);\n  let node = null;\n  let parent = null;\n  if (action.payload && action.payload.id) {\n    let foundNode = searchDFS({\n      data: newState,\n      cond: item => {\n        return item.id === action.payload.id;\n      },\n    });\n    node = foundNode.item;\n    parent = node.parentNode;\n  }\n\n  switch (action.type) {\n    case 'SET_DATA':\n      return action.payload;\n\n    case FILE.CREATE:\n      node.files.push(createFile({ name: action.payload.name }));\n      return newState;\n\n    case FOLDER.CREATE:\n      node.files.push(createFolder({ name: action.payload.name }));\n      return newState;\n\n    case FOLDER.EDIT:\n    case FILE.EDIT:\n      node.name = action.payload.name;\n      return newState;\n\n    case FOLDER.DELETE:\n    case FILE.DELETE:\n      if (!parent || Array.isArray(parent)) {\n        newState = newState.filter(file => file.id !== action.payload.id);\n        return newState;\n      } else {\n        parent.files = parent.files.filter(\n          file => file.id !== action.payload.id\n        );\n      }\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport { reducer };\n","import { useRef, useEffect } from 'react';\r\n\r\n// @deprecated\r\nexport const findNodeById = (nodes, id) => {\r\n  let final;\r\n\r\n  function findNode(nodes, id) {\r\n    nodes.forEach(n => {\r\n      if (n.id === id) {\r\n        final = n;\r\n        return;\r\n      }\r\n      if (n.files) findNode(n.files, id);\r\n    });\r\n  }\r\n\r\n  findNode(nodes, id);\r\n\r\n  return final;\r\n};\r\n\r\nexport const searchDFS = ({ data, cond, childPathKey = 'files' }) => {\r\n  let final = null;\r\n  let parentPath = [];\r\n  let parent = null;\r\n  let next = null;\r\n  let prev = null;\r\n\r\n  const recursiveFind = tree => {\r\n    tree.forEach((item, index) => {\r\n      if (cond(item, index)) {\r\n        final = item;\r\n\r\n        if (parentPath) {\r\n          parentPath.forEach(p => {\r\n            // check if parent has the `current item`\r\n            if (p && p[childPathKey].includes(item)) {\r\n              parent = p;\r\n              // set next & previous indexes\r\n              next = p[childPathKey][index + 1];\r\n              prev = p[childPathKey][index - 1];\r\n            } else {\r\n              parent = tree;\r\n              // if parent is null then check the root of the tree\r\n              next = tree[index + 1];\r\n              prev = tree[index - 1];\r\n            }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      if (item[childPathKey]) {\r\n        // push parent stack\r\n        parentPath.push(item);\r\n        recursiveFind(item[childPathKey]);\r\n      }\r\n    });\r\n  };\r\n\r\n  recursiveFind(data);\r\n  return {\r\n    parent,\r\n    item: final,\r\n    nextSibling: next,\r\n    previousSibling: prev,\r\n  };\r\n};\r\n\r\nexport const useDidMountEffect = (func, deps) => {\r\n  const didMount = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (didMount.current) func();\r\n    else didMount.current = true;\r\n  }, [func]);\r\n};\r\n\r\nexport const createFile = ({ name }) => ({ name, type: 'file' });\r\nexport const createFolder = ({ name }) => ({ name, type: 'folder', files: [] });\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledTree = styled.div`\r\n  line-height: 1.75;\r\n  z-index: 1;\r\n  .tree__input {\r\n    width: 50%;\r\n    height: 50%;\r\n  }\r\n`;\r\n\r\nexport const ActionsWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n\r\n  .actions {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-between;\r\n    opacity: 0;\r\n    pointer-events: none;\r\n    transition: 0.2s;\r\n\r\n    > svg {\r\n      cursor: pointer;\r\n      margin-left: 10px;\r\n      transform: scale(1);\r\n      transition: 0.2s;\r\n\r\n      :hover {\r\n        transform: scale(1.1);\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover .actions {\r\n    opacity: 1;\r\n    pointer-events: all;\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n\r\nexport const StyledName = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  color: #ff4500;\r\n`;\r\n\r\nexport const Collapse = styled.div`\r\n  height: max-content;\r\n  max-height: ${p => (p.isOpen ? '800px' : '0px')};\r\n  overflow: hidden;\r\n  transition: 0.3s ease-in-out;\r\n`;\r\n\r\nexport const VerticalLine = styled.section`\r\n  position: relative;\r\n  :before {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    top: -2px; /* just to hide 1px peek */\r\n    left: 1px;\r\n    width: 0;\r\n    height: 100%;\r\n    z-index: -1;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\n\nexport const StyledFolder = styled.section`\n  font-weight: bold;\n  padding-left: ${p => p.theme.indent}px;\n  .tree__file {\n    padding-left: ${p => p.theme.indent}px;\n  }\n`;\n","import React from 'react';\r\nimport { DiJavascript1, DiCss3Full, DiHtml5, DiReact } from 'react-icons/di';\r\n\r\nconst FILE_ICONS = {\r\n  js: <DiJavascript1 />,\r\n  css: <DiCss3Full />,\r\n  html: <DiHtml5 />,\r\n  jsx: <DiReact />,\r\n};\r\n\r\nexport default FILE_ICONS;\r\n","import styled from 'styled-components';\n\nexport const StyledFile = styled.div`\n  flex-wrap: nowrap;\n  display: flex;\n  align-items: center;\n  font-weight: normal;\n  padding-left: ${p => p.theme.indent}px;\n`;\n","/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { v4 } from 'uuid';\r\nimport { AiOutlineFile } from 'react-icons/ai';\r\n\r\nimport FILE_ICONS from './FileIcons';\r\nimport { StyledFile } from './File/TreeFile.style';\r\nimport { FolderName } from './Folder/TreeFolder';\r\nimport { StyledFolder } from './Folder/TreeFolder.style';\r\n\r\nconst FileEdit = ({ ext, inputRef, updateExt, defaultValue, style }) => {\r\n  const extension = FILE_ICONS[ext] ? FILE_ICONS[ext] : <AiOutlineFile />;\r\n\r\n  return (\r\n    <StyledFile className=\"tree__file\" style={style}>\r\n      {extension}\r\n      &nbsp;&nbsp;\r\n      <input\r\n        ref={inputRef}\r\n        onChange={updateExt}\r\n        defaultValue={defaultValue}\r\n        className=\"tree__input\"\r\n      />\r\n    </StyledFile>\r\n  );\r\n};\r\n\r\nconst FolderEdit = ({ name, inputRef, defaultValue, style }) => {\r\n  return (\r\n    <StyledFolder id={v4()} name={name} style={style}>\r\n      <FolderName\r\n        isOpen={true}\r\n        handleClick={() => {}}\r\n        name={\r\n          <input\r\n            ref={inputRef}\r\n            className=\"tree__input\"\r\n            defaultValue={defaultValue}\r\n          />\r\n        }\r\n      />\r\n    </StyledFolder>\r\n  );\r\n};\r\n\r\nconst PlaceholderInput = ({\r\n  type,\r\n  name,\r\n  onSubmit,\r\n  onCancel,\r\n  defaultValue,\r\n  style,\r\n}) => {\r\n  const [ext, setExt] = useState('');\r\n  const inputRef = useRef();\r\n\r\n  const updateExt = e => {\r\n    let splitted = e.target.value.split('.');\r\n    let ext = splitted && splitted[splitted.length - 1];\r\n    setExt(ext);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!inputRef.current) return;\r\n    inputRef.current.focus();\r\n    inputRef.current.addEventListener('keyup', e => {\r\n      if (e.key === 'Enter') onSubmit(e.target.value);\r\n      if (e.key === 'Escape') {\r\n        onCancel && onCancel();\r\n      }\r\n    });\r\n  }, [inputRef, onCancel, onSubmit]);\r\n\r\n  return type === 'file' ? (\r\n    <FileEdit\r\n      ext={ext}\r\n      style={style}\r\n      updateExt={updateExt}\r\n      inputRef={inputRef}\r\n      defaultValue={defaultValue}\r\n    />\r\n  ) : (\r\n    <FolderEdit\r\n      style={style}\r\n      name={name}\r\n      inputRef={inputRef}\r\n      defaultValue={defaultValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport { PlaceholderInput };\r\n","/* eslint-disable react/jsx-key */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport {\n  AiOutlineFileAdd,\n  AiOutlineFolder,\n  AiOutlineFolderOpen,\n} from 'react-icons/ai';\n\nimport {\n  ActionsWrapper,\n  Collapse,\n  StyledName,\n  VerticalLine,\n} from '../Tree.style';\nimport { StyledFolder } from './TreeFolder.style';\n\nimport { FILE, FOLDER } from '../state/constants';\nimport { useTreeContext } from '../state/TreeContext';\nimport { PlaceholderInput } from '../TreePlaceholderInput';\n\nconst FolderName = ({ isOpen, name, handleClick }) => (\n  <StyledName onClick={handleClick}>\n    {isOpen ? <AiOutlineFolderOpen /> : <AiOutlineFolder />}\n    &nbsp;&nbsp;{name}\n  </StyledName>\n);\n\nconst Folder = ({ id, name, children, node, data }) => {\n  const { dispatch, isImparative, onNodeClick, onAdd } = useTreeContext();\n  const [isEditing, setEditing] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [childs, setChilds] = useState([]);\n\n  useEffect(() => {\n    setChilds([children]);\n  }, [children]);\n\n  const commitFileCreation = name => {\n    data.push({\n      type: 'file',\n      name: name,\n    });\n    onAdd(name);\n    //dispatch({ type: FILE.CREATE, payload: { id, name } });\n  };\n\n  const commitFolderEdit = name => {\n    dispatch({ type: FOLDER.EDIT, payload: { id, name } });\n    setEditing(false);\n  };\n\n  const handleCancel = () => {\n    setEditing(false);\n    setChilds([children]);\n  };\n\n  const handleNodeClick = React.useCallback(\n    event => {\n      event.stopPropagation();\n      onNodeClick({ node });\n    },\n    [node, onNodeClick]\n  );\n\n  const handleFileCreation = event => {\n    event.stopPropagation();\n    setIsOpen(true);\n    setChilds([\n      ...childs,\n      <PlaceholderInput\n        type=\"file\"\n        onSubmit={commitFileCreation}\n        onCancel={handleCancel}\n      />,\n    ]);\n  };\n\n  return (\n    <StyledFolder id={id} onClick={handleNodeClick} className=\"tree__folder\">\n      <VerticalLine>\n        <ActionsWrapper>\n          {isEditing ? (\n            <PlaceholderInput\n              type=\"folder\"\n              style={{ paddingLeft: 0 }}\n              defaultValue={name}\n              onCancel={handleCancel}\n              onSubmit={commitFolderEdit}\n            />\n          ) : (\n            <FolderName\n              name={name}\n              isOpen={isOpen}\n              handleClick={() => setIsOpen(!isOpen)}\n            />\n          )}\n\n          {isImparative && (\n            <div className=\"actions\">\n              <AiOutlineFileAdd onClick={handleFileCreation} />\n            </div>\n          )}\n        </ActionsWrapper>\n        <Collapse className=\"tree__folder--collapsible\" isOpen={isOpen}>\n          {childs}\n        </Collapse>\n      </VerticalLine>\n    </StyledFolder>\n  );\n};\n\nexport { Folder, FolderName };\n","/* eslint-disable react/prop-types */\nimport React, { useRef, useState } from 'react';\nimport { AiOutlineFile, AiOutlineDelete } from 'react-icons/ai';\nimport { StyledFile } from './TreeFile.style';\nimport { useTreeContext } from '../state/TreeContext';\nimport { ActionsWrapper, StyledName } from '../Tree.style.js';\nimport { PlaceholderInput } from '../TreePlaceholderInput';\n\nimport { FILE } from '../state/constants';\nimport FILE_ICONS from '../FileIcons';\n\nconst File = ({ name, id, node }) => {\n  const { dispatch, isImparative, onNodeClick, onDelete } = useTreeContext();\n  const [isEditing, setEditing] = useState(false);\n  const ext = useRef('');\n\n  let splitted = name.split('.');\n  ext.current = splitted[splitted.length - 1];\n\n  const commitEditing = name => {\n    dispatch({ type: FILE.EDIT, payload: { id, name } });\n    setEditing(false);\n  };\n  const commitDelete = () => {\n    if (\n      !['main.py', '__init__.py', 'requirements.txt', 'template'].includes(name)\n    ) {\n      dispatch({ type: FILE.DELETE, payload: { id } });\n      onDelete(name);\n    }\n  };\n  const handleNodeClick = React.useCallback(\n    e => {\n      e.stopPropagation();\n      onNodeClick({ node });\n    },\n    [node, onNodeClick]\n  );\n  const handleCancel = () => {\n    setEditing(false);\n  };\n\n  return (\n    <StyledFile onClick={handleNodeClick} className=\"tree__file\">\n      {isEditing ? (\n        <PlaceholderInput\n          type=\"file\"\n          style={{ padding: '2px 2px' }}\n          defaultValue={name}\n          onSubmit={commitEditing}\n          onCancel={handleCancel}\n        />\n      ) : (\n        <ActionsWrapper>\n          <StyledName>\n            {FILE_ICONS[ext.current] ? (\n              FILE_ICONS[ext.current]\n            ) : (\n              <AiOutlineFile />\n            )}\n            &nbsp;&nbsp;{name}\n          </StyledName>\n          {isImparative && (\n            <div className=\"actions\">\n              <AiOutlineDelete onClick={commitDelete} />\n            </div>\n          )}\n        </ActionsWrapper>\n      )}\n    </StyledFile>\n  );\n};\n\nexport { File };\n","/* eslint-disable react/prop-types */\r\nimport React, { useReducer, useLayoutEffect } from 'react';\r\nimport { v4 } from 'uuid';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport { useDidMountEffect } from '../utils';\r\nimport { TreeContext, reducer } from './state';\r\n\r\nimport { StyledTree } from './Tree.style';\r\nimport { Folder } from './Folder/TreeFolder';\r\nimport { File } from './File/TreeFile';\r\n\r\nconst Tree = ({ children, data, onNodeClick, onUpdate, onDelete, onAdd }) => {\r\n  const [state, dispatch] = useReducer(reducer, data);\r\n\r\n  useLayoutEffect(() => {\r\n    dispatch({ type: 'SET_DATA', payload: data });\r\n  }, [data]);\r\n\r\n  useDidMountEffect(() => {\r\n    onUpdate && onUpdate(state);\r\n  }, [state]);\r\n\r\n  const isImparative = data && !children;\r\n\r\n  return (\r\n    <ThemeProvider theme={{ indent: 20 }}>\r\n      <TreeContext.Provider\r\n        value={{\r\n          isImparative,\r\n          state,\r\n          dispatch,\r\n          onNodeClick: node => {\r\n            onNodeClick && onNodeClick(node);\r\n          },\r\n          onDelete: name => {\r\n            onDelete && onDelete(name);\r\n          },\r\n          onAdd: (name, data) => {\r\n            onAdd && onAdd(name, data);\r\n          },\r\n        }}\r\n      >\r\n        <StyledTree>\r\n          {isImparative ? (\r\n            <TreeRecusive data={state} parentNode={state} />\r\n          ) : (\r\n            children\r\n          )}\r\n        </StyledTree>\r\n      </TreeContext.Provider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst TreeRecusive = ({ data, parentNode }) => {\r\n  return data.map(item => {\r\n    item.parentNode = parentNode;\r\n    if (!parentNode) {\r\n      item.parentNode = data;\r\n    }\r\n    if (!item.id) item.id = v4();\r\n\r\n    if (item.type === 'file') {\r\n      return <File key={item.id} id={item.id} name={item.name} node={item} />;\r\n    }\r\n    if (item.type === 'folder') {\r\n      return (\r\n        <Folder\r\n          key={item.id}\r\n          id={item.id}\r\n          name={item.name}\r\n          node={item}\r\n          data={item.files}\r\n        >\r\n          <TreeRecusive parentNode={item} data={item.files} />\r\n        </Folder>\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\nTree.File = File;\r\nTree.Folder = Folder;\r\n\r\nexport default Tree;\r\n","/* eslint-disable no-multi-str */\r\nlet template =\r\n  \"'''Algorithm-creation Template\\n\\\r\n\\\r\n\\nDeploying a model in order to perform Inference means that you have trained a model, tested its performance, and decided to use it to make predictions on new\\ndata, in this case, images.\\n\\\r\n\\n\\\r\nThis template uses two Python modules to provide structure for algorithm deployment: `InferTask` and `Application`.\\n\\\r\n\\n\\\r\nThe instantiation of an `Application` object is what turns your code into an algorithm that can run on our application.\\n\\\r\n\\\r\n\\nEach algorithm is treated as an inference task, therefore it must inherit the `InferTask` class.\\n\\\r\n\\n\\\r\nAfter you created your algorithm class, you must instantiate it in the `Application` class, in its `init_infer` method.\\n\\\r\n\\n\\\r\nBelow you can find an example of how to use the provided template.\\n\\\r\n\\n\\\r\nThis code should be on the `main.py` file! All the Python modules that you use must be in `requirements.txt` file, one per line, alongside its corresponding version.\\n\\\r\n'''\\n\\\r\n\\nimport os\\n\\\r\nfrom container_api.scripts.app import Application\\n\\\r\nfrom container_api.scripts.infer_task import InferTask\\n\\\r\n\\\r\n\\\r\n\\nclass SegmentationSpleen(InferTask):\\n\\\r\n\\n\\\r\n        def __init__(self,\\n\\\r\n                root_dir,\\n\\\r\n                task,\\n\\\r\n        ):\\n\\\r\n                \\n\\\r\n                super().__init__(\\n\\\r\n                        root_dir=root_dir\\n\\\r\n                        task=task\\n\\\r\n                )\\n\\\r\n\\n\\\r\n        '''\\n\\\r\n        def pre_processing(self, data):\\n\\\r\n            (...)\\n\\\r\n\\n\\\r\n        def post_processing(self, data):\\n\\\r\n            (...)\\n\\\r\n        '''\\n\\\r\n\\n\\\r\n\\n\\\r\n        '''\\n\\\r\n        def run(self, input_data): (Note: This function is mandatory!)\\n\\\r\n\\n\\\r\n\\n\\\r\n        According to the task performed by the algorithm, the variable `input_data` is the following:\\n\\\r\n\\n              Segmentation, Classification, Lesion Detection, Object Localisation and Image Processing - \\n\\\r\n\\n              {'image': 'path to nii.gz file or DICOM dir containing the input images'}\\n\\\r\n\\n              Image Registration - \\n\\\r\n\\n              {'image': \\n\\\r\n        \\n              {'fixed_image': 'path to nii.gz file or DICOM dir containing the input images', \\n\\\r\n        \\n              'moving_image': 'path to nii.gz file or DICOM dir containing the input images'} \\n\\\r\n\\n              }\\n\\\r\n\\n\\\r\n        Here you should provide all the code you want to run, the workflow of your algorithm.\\n\\\r\n        All the other functions you may add should be called here.\\n\\\r\n\\n\\\r\n        Also according to the task performed by the algorithm, the variable `output_data` must be the following:\\n\\\r\n\\n              Segmentation, Image Registration, Lesion Detection, Object Localisation and Image Processing - \\n\\\r\n\\n              {'image_np': 'a Python array containing the result image data', \\n\\\r\n\\n              'affine': 'an optional Python array containing the affine transformation of the result image'}\\n\\\r\n\\n              Classification - a Python dictionary containing the prediction labels as keys and the corresponding results as values as \\n\\\r\n\\n              {'prediction_label': 'prediction_result' (...)}\\n\\\r\n\\n\\\r\n\\n\\\r\n\\n              return output_data\\n\\\r\n\\n\\\r\n\\n\\\r\n\\n\\\r\n        The backend of our application will look for the `run` method and execute its code.\\n\\\r\n\\n\\\r\n        Finally, the output is written in the appropriate format and sent to the Viewer, that is:\\n\\\r\n\\n              Segmentation, Image Registration, Lesion Detection, Object Localisation and Image Processing - \\n\\\r\n\\n              the output Python array containing the result image data is converted to an ITK image, written in a .nrrd file and sent to the Viewer.\\n\\\r\n\\n              Classification - the Python dictionary containing the labels and their prediction result is sent as an JSON object to the Viewer.\\n\\\r\n        '''\\n\\\r\n\\n\\\r\n\\n\\\r\n\\n\\\r\nclass MyApp(Application):\\n\\\r\n\\n\\\r\n        def __init__(self, root_dir, task):\\n\\\r\n\\n\\\r\n        '''\\n\\\r\n        Base Class for Any Algorithm Application\\n\\\r\n        \\n\\\r\n        :param root_dir: path for Algorithm root directory.\\n\\\r\n        :param task: task performed by the Algorithm.\\n\\\r\n        '''\\n\\\r\n\\n\\\r\n                super().__init__(\\n\\\r\n                root_dir=root_dir\\n\\\r\n                task=task\\n\\\r\n                )\\n\\\r\n\\n\\\r\n        def init_infer(self):\\n\\\r\n\\n\\\r\n        '''\\n\\\r\n        Init the provided algorithm class.\\n\\\r\n        '''\\n\\\r\n\\n\\\r\n                infer = SegmentationSpleen(self.root_dir, self.task),\\n\\\r\n                \\n\\\r\n                return infer\";\r\n\r\nexport default template;\r\n","/* eslint-disable no-console */\nimport axiosInstance from 'axios';\nimport { UINotificationService } from '@ohif/core';\n\nconst ConnectedAPI = {\n  createMyModelEntry: async data => {\n    let form_data = new FormData();\n    let notification = UINotificationService.create({});\n\n    if (data) {\n      form_data.append('name', data.name);\n      form_data.append('version', data.version);\n      form_data.append('algorithm_overview', data.algorithm_overview);\n      form_data.append('model_architecture', data.model_architecture);\n      form_data.append('model_performance', data.model_performance);\n      form_data.append('data_description', data.data_description);\n      form_data.append('input', data.input);\n      form_data.append('output', data.output);\n      form_data.append('references', data.references);\n      form_data.append('additional_info', data.additional_info);\n      form_data.append('file', data.file[1], data.file[0] + '.zip');\n      form_data.append('user', data.user);\n      form_data.append('task', data.task);\n      form_data.append('inputExtension', data.inputExtension);\n      form_data.append('inputModality', data.inputModality);\n      form_data.append('visibility', data.visibility);\n      form_data.append('framework', data.framework);\n      form_data.append('bodyPart', data.bodyPart);\n    }\n\n    const myNewModel = await axiosInstance\n      .post(`/api/model/`, form_data, {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then(res => {\n        return res;\n      })\n      .catch(error => {\n        return error.response;\n      });\n\n    console.log(myNewModel.status);\n\n    if (myNewModel.status === 201) {\n      notification.show({\n        title: 'Add Algorithm',\n        message: 'Algorithm added - Success',\n        type: 'success',\n        duration: 8000,\n      });\n    } else if (myNewModel.status === 200) {\n      notification.show({\n        title: 'Edit Algorithm',\n        message: 'Algorithm edited - Success',\n        type: 'success',\n        duration: 8000,\n      });\n    } else {\n      const error = myNewModel.data['error'];\n      notification.show({\n        title: 'Add Algorithm',\n        message: 'Failed to add algorithm - ' + error,\n        type: 'error',\n        duration: 10000,\n      });\n\n      return myNewModel;\n    }\n  },\n};\n\nexport default ConnectedAPI;\n","/* eslint-disable react/prop-types */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/snippets/python';\nimport 'ace-builds/src-noconflict/theme-dracula';\nimport Tree from './Tree/Tree';\nimport template from './template.js';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloudDownload from '@material-ui/icons/CloudDownload';\nimport { saveAs } from 'file-saver';\nimport ConnectedAPI from '../components/ConnectedAPI';\nimport { UIModalService } from '@ohif/core';\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tree: [\n        {\n          type: 'folder',\n          name: this.props.location.state.name,\n          files: [\n            { type: 'file', name: '__init__.py' },\n            { type: 'file', name: 'main.py' },\n            { type: 'file', name: 'requirements.txt' },\n            { type: 'file', name: 'template' },\n          ],\n        },\n      ],\n      '__init__.py': '',\n      'main.py': '',\n      'requirements.txt': '',\n      template: template,\n      active: 'template',\n      preTrainedFiles: [],\n    };\n\n    this.uiModelService = UIModalService.create({});\n  }\n\n  static propTypes = {\n    user: PropTypes.object,\n  };\n\n  async componentDidMount() {\n    if (this.props.location.state.file !== undefined) {\n      this.uiModelService.hide();\n      let fileName = this.props.location.state.file;\n\n      let url = `http://localhost:8000/api/model/?user=${this.props.user.email}&file=${fileName}`;\n\n      var req = new XMLHttpRequest();\n      req.open('GET', url, true);\n      req.responseType = 'blob';\n      req.setRequestHeader(\n        'Authorization',\n        `JWT ${localStorage.getItem('access')}`\n      );\n      req.send();\n\n      const scope = this;\n      req.onload = () => {\n        const zip = require('jszip')();\n        var blob = req.response;\n        zip.loadAsync(blob).then(async function(zip) {\n          for (let fileName in zip.files) {\n            let fileNamePlusExtension = fileName.split('.');\n            let extension = fileNamePlusExtension[1];\n            let preTrainedModelExt = ['ts', 'pl', 'hdf5', 'npy', 'pth', 'pt'];\n            if (preTrainedModelExt.includes(extension)) {\n              var fileBlob = await zip.file(fileName).async('blob');\n              var file = new File([fileBlob], fileName);\n\n              scope.setState({\n                [fileName]:\n                  '#The file is not displayed in the editor because it is binary.',\n              });\n              scope.state['preTrainedFiles'].push({\n                [fileName]: file,\n              });\n            } else {\n              var fileString = await zip.file(fileName).async('string');\n              scope.setState({\n                [fileName]: fileString,\n              });\n            }\n            let treeFiles = [\n              '__init__.py',\n              'main.py',\n              'requirements.txt',\n              'template',\n            ];\n\n            if (!treeFiles.includes(fileName)) {\n              scope.state['tree'][0]['files'].push({\n                type: 'file',\n                name: fileName,\n              });\n            }\n            //console.log(scope.state.preTrainedFiles);\n          }\n        });\n      };\n    }\n  }\n\n  handleTreeClick = node => {\n    Object.keys(this.state).forEach(key => {\n      if (node['node']['name'] === key) {\n        this.setState({ active: node['node']['name'] });\n      }\n    });\n  };\n\n  onDelete = name => {\n    let file = this.state['tree'][0]['files'].filter(function(el) {\n      return el.type === 'file' && el.name === name;\n    });\n\n    const index = this.state['tree'][0]['files'].indexOf(file[0]);\n\n    this.state['tree'][0]['files'].splice(index, 1);\n\n    //console.log(this.state['tree'][0]['files']);\n  };\n\n  onAdd = name => {\n    this.setState({\n      [name]: '',\n      active: name,\n    });\n  };\n\n  handleChange = newValue => {\n    let active = this.state.active;\n    this.setState({\n      [active]: newValue,\n    });\n  };\n\n  handleModelUpload = e => {\n    for (let f = 0; f < e.target.files.length; f++) {\n      this.state['preTrainedFiles'].push({\n        [e.target.files[f]['name']]: e.target.files[f],\n      });\n    }\n  };\n\n  handleDownload = () => {\n    const zip = require('jszip')();\n    let files_list = [];\n    let fileNames = [];\n\n    for (let f = 0; f < this.state.preTrainedFiles.length; f++) {\n      let modelFile = this.state.preTrainedFiles[f];\n      let filename = Object.keys(modelFile)[0];\n\n      if (modelFile[filename] instanceof File) {\n        files_list.push(modelFile);\n        fileNames.push(Object.keys(modelFile)[0]);\n      }\n    }\n\n    let list = this.state.tree[0]['files'];\n    for (let f = 0; f < list.length; f++) {\n      if (!fileNames.includes(list[f]['name'])) {\n        let fileContent = this.state[list[f]['name']];\n\n        let blobFile = new Blob([fileContent], {\n          type: 'text/plain;charset=utf-8',\n        });\n        const content = {};\n        content[list[f]['name']] = blobFile;\n        files_list.push(content);\n      }\n    }\n\n    let parentFolder = this.state.tree;\n\n    for (let f = 0; f < files_list.length; f++) {\n      for (const [name, file] of Object.entries(files_list[f])) {\n        zip.file(name, file);\n      }\n    }\n\n    zip.generateAsync({ type: 'blob' }).then(content => {\n      saveAs(content, parentFolder[0]['name']);\n    });\n  };\n\n  handleSubmit = () => {\n    const zip = require('jszip')();\n    let files = [];\n    let fileNames = [];\n\n    for (let f = 0; f < this.state.preTrainedFiles.length; f++) {\n      let modelFile = this.state.preTrainedFiles[f];\n      let filename = Object.keys(modelFile)[0];\n\n      if (modelFile[filename] instanceof File) {\n        files.push(modelFile);\n        fileNames.push(Object.keys(modelFile)[0]);\n        //console.log(files);\n        //console.log(fileNames);\n      }\n    }\n\n    let list = this.state.tree[0]['files'];\n    for (let f = 0; f < list.length; f++) {\n      if (!fileNames.includes(list[f]['name'])) {\n        let fileContent = this.state[list[f]['name']];\n\n        let blobFile = new Blob([fileContent], {\n          type: 'text/plain;charset=utf-8',\n        });\n        const content = {};\n        content[list[f]['name']] = blobFile;\n        files.push(content);\n      }\n    }\n    let parentFolder = this.state.tree;\n\n    for (let f = 0; f < files.length; f++) {\n      for (const [name, file] of Object.entries(files[f])) {\n        zip.file(name, file);\n      }\n    }\n\n    zip.generateAsync({ type: 'blob' }).then(content => {\n      const form = this.props.location.state;\n\n      let data = {};\n\n      data['name'] = form.name;\n      data['port'] = form.port;\n      data['version'] = form.version;\n      data['algorithm_overview'] = form.algorithm_overview;\n      data['model_architecture'] = form.model_architecture;\n      data['model_performance'] = form.model_performance;\n      data['data_description'] = form.data_description;\n      data['input'] = form.input;\n      data['output'] = form.output;\n      data['references'] = form.references;\n      data['additional_info'] = form.additional_info;\n      data['file'] = [parentFolder[0]['name'], content];\n      data['user'] = form.user;\n      data['task'] = form.task;\n      data['inputExtension'] = form.inputExtension;\n      data['inputModality'] = form.inputModality;\n      data['visibility'] = form.visibility;\n      data['framework'] = form.framework;\n      data['bodyPart'] = form.bodyPart;\n\n      ConnectedAPI.createMyModelEntry(data);\n    });\n  };\n\n  render() {\n    let active = this.state.active;\n    let activeContent = this.state[`${active}`];\n    return (\n      <Fragment>\n        <div style={{ display: 'flex' }}>\n          <div style={{ marginRight: '10px' }}>\n            <Tree\n              data={this.state.tree}\n              onNodeClick={this.handleTreeClick}\n              onDelete={this.onDelete}\n              onAdd={this.onAdd}\n            />\n          </div>\n\n          <div style={{ flex: '0%' }}>\n            <div\n              className=\"buttons\"\n              style={{ width: '200px', margin: '0 auto', display: 'inline' }}\n            >\n              <label\n                htmlFor=\"file\"\n                style={{\n                  marginBottom: '5px',\n                  fontSize: '12px',\n                  fontFamily: 'Helvetica',\n                }}\n              >\n                <input\n                  title=\"Upload Pre-trained Model Files\"\n                  type=\"file\"\n                  name=\"file\"\n                  id=\"file\"\n                  multiple\n                  accept=\".ts, .pl. .hdf5, .npy, .pth, .pt\"\n                  onChange={e => {\n                    this.handleModelUpload(e);\n                  }}\n                />\n              </label>\n\n              <h4\n                style={{\n                  fontSize: '14px',\n                  fontFamily: 'Helvetica',\n                  display: 'inline',\n                  margin: '0 auto',\n                  marginLeft: '20%',\n                }}\n              >\n                <b>{this.state.active}</b>\n              </h4>\n\n              <Button\n                style={{\n                  marginTop: '6px',\n                  marginRight: '8px',\n                  fontSize: '12px',\n                  fontFamily: 'Helvetica',\n                  float: 'right',\n                  display: 'flex',\n                  backgroundColor: '#ff4500',\n                  borderColor: '#FFFAFA',\n                }}\n                onClick={this.handleSubmit}\n                startIcon={<SaveIcon />}\n                variant=\"outlined\"\n              >\n                Publish\n              </Button>\n              <Button\n                style={{\n                  marginTop: '6px',\n                  marginRight: '8px',\n                  fontSize: '12px',\n                  fontFamily: 'Helvetica',\n                  float: 'right',\n                  display: 'flex',\n                  backgroundColor: '#00BFFF',\n                  borderColor: '#FFFAFA',\n                }}\n                onClick={this.handleDownload}\n                startIcon={<CloudDownload />}\n                variant=\"outlined\"\n              >\n                Download\n              </Button>\n            </div>\n\n            <AceEditor\n              mode=\"python\"\n              theme=\"dracula\"\n              onChange={this.handleChange}\n              name=\"editor\"\n              value={activeContent}\n              enableBasicAutocompletion={true}\n              enableLiveAutocompletion={true}\n              enableSnippets={true}\n              width=\"100%\"\n              height=\"520px\"\n              showPrintMargin={false}\n              highlightActiveLine={true}\n              readOnly={this.state.active === 'template'}\n            />\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nconst ConnectedEditor = connect(\n  mapStateToProps,\n  null\n)(Editor);\n\nexport default ConnectedEditor;\n"],"sourceRoot":""}