{"version":3,"sources":["webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Add_or_Remove_studies.js"],"names":["Add_or_Remove_studies","props","user","groupName","useState","location","state","redirect","setRedirect","isLoaded","setIsLoaded","choice","setChoice","sharedStudies","setSharedStudies","studies","setStudies","selectedStudiesToAdd","setSelectedStudiesToAdd","selectedStudiesToRemove","setSelectedStudiesToRemove","patient_name","patient_id","study_date","filterValues","setFilterValues","rowsPerPage","setRowsPerPage","pageNumber","setPageNumber","debouncedFilters","useDebounce","useEffect","config","headers","Authorization","localStorage","getItem","Accept","axiosInstance","get","response","sharedStudiesIds","Object","keys","data","Studies","forEach","study_uid","includes","push","removable","_fetchStudies","study","email","alert","fetchStudies","mediumTableMetaStudies","displayText","fieldName","inputType","size","totalSizeStudies","map","field","reduce","prev","next","handleStudiesFilterChange","value","handleSelectStudyToAdd","event","target","filter","selectedStudyUID","handleSelectAllStudiesToAdd","length","handleSubmitAdd","document","getElementById","textContent","form_data","FormData","append","JSON","stringify","axios","post","Status","handleSelectStudyToRemove","handleSelectAllStudiesToRemove","handleSubmitRemove","className","style","marginTop","name","onChange","e","required","key","c","onSubmit","render","formRenderProps","maxWidth","marginBottom","fontSize","i","percentWidth","width","textAlign","meta","values","onValueChange","sortFieldName","sortDirection","color","paddingBottom","paddingLeft","type","checked","backgroundColor","colSpan","currentPage","pageOptions","nextPageFunc","prevPageFunc","onRowsPerPageChange","Rows","recordCount","id","onClick","to","match","params","filters","url","param","then","res","catch","error","accessStudies","allowedStudies","defaults","xsrfHeaderName","xsrfCookieName","withCredentials","propTypes","PropTypes","object","connect","auth","load_user"],"mappings":"w1CAmBA,SAASA,EAAsBC,GAAO,IAC5BC,EAASD,EAATC,KAEDC,EAH6B,EAGhBC,mBAASH,EAAMI,SAASC,OAHR,UAIJF,oBAAS,GAJL,GAI7BG,EAJ6B,KAInBC,EAJmB,SAKJJ,oBAAS,GALL,GAK7BK,EAL6B,KAKnBC,EALmB,SAMRN,mBAAS,OAND,GAM7BO,EAN6B,KAMrBC,EANqB,SAQMR,mBAAS,IARf,GAQ7BS,EAR6B,KAQdC,EARc,SASNV,mBAAS,IATH,GAS7BW,EAT6B,KASpBC,EAToB,SAUoBZ,mBAAS,IAV7B,GAU7Ba,EAV6B,KAUPC,EAVO,SAW0Bd,mBAAS,IAXnC,GAW7Be,EAX6B,KAWJC,EAXI,SAaIhB,mBAAS,CAC/CiB,aAAc,GACdC,WAAY,GACZC,WAAY,KAhBsB,GAa7BC,EAb6B,KAafC,EAbe,SAmBErB,mBAAS,GAnBX,GAmB7BsB,EAnB6B,KAmBhBC,EAnBgB,SAoBAvB,mBAAS,GApBT,GAoB7BwB,EApB6B,KAoBjBC,EApBiB,KAsB9BC,EAAmBC,YAAYP,EAAc,KAEnDQ,qBAAU,YACU,4CAAG,6HAEXC,EAAS,CACbC,QAAS,CACPC,cAAe,OAAF,OAASC,aAAaC,QAAQ,WAC3C,eAAgB,mBAChBC,OAAQ,qBANK,SAUMC,IAAcC,IAAd,sCACUrC,EADV,iBAEnBD,EAAI,OAEN+B,GAde,cAUXQ,EAVW,OAmBbC,EAAmB,GACvBC,OAAOC,KAAKH,EAASI,KAAKC,SAASC,SAAQ,SAASC,GAE7CN,EAAiBO,SAASD,IAC7BN,EAAiBQ,KAAKF,MAItBG,EAAY,GA3BC,mBA8BQC,EAAclD,EAAM4B,GA9B5B,QA8BTW,EA9BS,OAgCX1B,EAAU,GACd0B,EAASM,SAAQ,SAASM,GAErBX,EAAiBO,SAASI,EAAK,YAC/BtC,EAAQkC,SAASI,IAClBA,EAAK,OAAanD,EAAKoD,MAGdZ,EAAiBO,SAASI,EAAK,YACxCF,EAAUD,KAAKG,GAFftC,EAAQmC,KAAKG,MAMjBvC,EAAiBqC,GACjBnC,EAAWD,GACXL,GAAY,GA/CG,kDAiDf6C,MAAM,EAAD,IAjDU,0DAoDjBA,MAAM,EAAD,IApDY,iEAAH,qDAwDlBC,KACC,CACD1B,EACA3B,EACAD,EACAe,EACAE,IAGF,IAAMsC,EAAyB,CAC7B,CACEC,YAAa,cACbC,UAAW,eACXC,UAAW,OACXC,KAAM,IAER,CACEH,YAAa,YACbC,UAAW,aACXC,UAAW,OACXC,KAAM,IAER,CACEH,YAAa,YACbC,UAAW,aACXC,UAAW,OACXC,KAAM,MAIJC,EAAmBL,EACtBM,KAAI,SAAAC,GAAK,OAAIA,EAAMH,QACnBI,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,KAEjC,SAASC,EAA0BT,EAAWU,GAC5C5C,GAAgB,SAAAnB,GACd,O,+UAAA,IACKA,EADL,KAEGqD,EAAYU,OAKnB,IAAMC,EAAyB,SAAAC,GAC7B,IAAMvB,EAAYuB,EAAMC,OAAOH,MAE1BpD,EAAqBgC,SAASD,GAGjC9B,EACED,EAAqBwD,QAAO,SAAAC,GAC1B,OAAOA,IAAqB1B,MAJhC/B,EAAqBiC,KAAKF,IAUxB2B,EAA8B,WAC9B1D,EAAqB2D,OAAS7D,EAAQ6D,OACxC1D,EAAwBH,EAAQgD,KAAI,qBAAGf,cAEvC9B,EAAwB,KA9IQ,SAkJrB2D,IAlJqB,gFAkJpC,wGACqC,GAA/B5D,EAAqB2D,OAD3B,gBAEeE,SAASC,eAAe,YAC9BC,YAAc,uCAHvB,uCAMY/C,EAAS,CACbC,QAAS,CACPC,cAAe,OAAF,OAASC,aAAaC,QAAQ,WAC3C,eAAgB,mBAChBC,OAAQ,sBAGR2C,EAAY,IAAIC,UACVC,OAAO,YAAahF,GAC9B8E,EAAUE,OAAO,WAAYjF,EAAKoD,OAClC2B,EAAUE,OAAO,UAAWC,KAAKC,UAAUpE,IAhBjD,UAkBwBqE,IAAMC,KAAN,uCAEhBN,EACAhD,GArBR,SAwB8B,IAxB9B,OAwBcY,KAAK2C,OACXhF,GAAY,GAEZ+C,MAAM,8BA3Bd,kDA8BMA,MAAM,EAAD,IA9BX,2DAlJoC,sBAqLpC,IAAMkC,EAA4B,SAAAlB,GAChC,IAAMvB,EAAYuB,EAAMC,OAAOH,MAE1BlD,EAAwB8B,SAASD,GAGpC5B,EACED,EAAwBsD,QAAO,SAAAC,GAC7B,OAAOA,IAAqB1B,MAJhC7B,EAAwB+B,KAAKF,IAU3B0C,EAAiC,WACjCvE,EAAwByD,OAAS/D,EAAc+D,OACjDxD,EACEP,EAAckD,KAAI,qBAAGf,cAGvB5B,EAA2B,KAzMK,SA6MrBuE,KA7MqB,mFA6MpC,wGACwC,GAAlCxE,EAAwByD,OAD9B,gBAEeE,SAASC,eAAe,YAC9BC,YAAc,uCAHvB,uCAMY/C,EAAS,CACbC,QAAS,CACPC,cAAe,OAAF,OAASC,aAAaC,QAAQ,WAC3C,eAAgB,mBAChBC,OAAQ,sBAGR2C,EAAY,IAAIC,UACVC,OAAO,YAAahF,GAC9B8E,EAAUE,OAAO,WAAYjF,EAAKoD,OAClC2B,EAAUE,OAAO,UAAWC,KAAKC,UAAUlE,IAhBjD,UAkBwBmE,IAAMC,KAAN,0CAEhBN,EACAhD,GArBR,SAwB8B,IAxB9B,OAwBcY,KAAK2C,OACXhF,GAAY,GAEZ+C,MAAM,gCA3Bd,kDA8BMA,MAAM,EAAD,IA9BX,2DA7MoC,sBAgPpC,OAAInB,aAAaC,QAAQ,qCAAuC5B,EAE5D,kBAAC,WAAD,KACE,yBAAKmF,UAAU,UAAUC,MAAO,CAAEC,UAAW,QAC3C,8CACA,uBAAGF,UAAU,eAAb,yBACwB,qCADxB,OACyC,kCADzC,wBAEIzF,EAFJ,MAIA,4BACEyF,UAAU,SACVG,KAAK,SACL1B,MAAO1D,EACPqF,SAAU,SAAAC,GAAC,OAAIrF,EAAUqF,EAAEzB,OAAOH,QAClC6B,UAAQ,GAER,4BAAQC,IAAI,KACX,CAAC,MAAO,UAAUpC,KAAI,SAAAqC,GAAC,OACtB,4BAAQD,IAAKC,GAAIA,OAIT,QAAXzF,EACC,kBAAC,IAAD,CACEiF,UAAU,WACVS,SAAUxB,EACVyB,OAAQ,SAAAC,GAAe,OACrB,0BACEX,UAAU,WACVC,MAAO,CACLW,SAAU,KAEZH,SAAUE,EAAgBF,UAE1B,8BAAUT,UAAW,mBACnB,yBAAKA,UAAU,QACb,4BACEA,UAAW,gBACXC,MAAO,CACLY,aAAc,OACdX,UAAW,MACXY,SAAU,SAGZ,4CAGF,2BAAOd,UAAU,SACf,kCACGnC,EAAuBM,KAAI,SAACC,EAAO2C,GAClC,IACMC,EADO5C,EAAMH,KAETC,EAAoB,IAE9B,OACE,yBACEqC,IAAKQ,EACLd,MAAO,CACLgB,MAAO,GAAF,OAAKD,EAAL,KACLE,UAAW,gBAMrB,2BAAOlB,UAAU,cACf,wBAAIA,UAAU,WACZ,kBAAC,IAAD,CACEmB,KAAMtD,EACNuD,OAAQxF,EACRyF,cAAe7C,EACf8C,cAAe,eACfC,cAAe,QAEjB,wBACEtB,MAAO,CACLuB,MAAO,QACPC,cAAe,OACfC,YAAa,OAEf1B,UAAU,aAEV,2BACE2B,KAAK,WACLC,QACEvG,EAAqB2D,SAAW7D,EAAQ6D,OAE1CoB,SAAUrB,OAKlB,2BAAOiB,UAAU,eAEb7E,EAAQ6D,QACR,wBAAIiB,MAAO,CAAE4B,gBAAiB,YAC5B,wBAAIC,QAASjE,EAAuBmB,QAClC,6BAAM,yBAIX7D,EAAQgD,KACP,YAKM,IAJJf,EAII,EAJJA,UACA3B,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEA,OACE,wBACEsE,MAAO,CAAE4B,gBAAiB,WAC1BtB,IAAKnD,GAEL,wBAAI4C,UAAU,eACXvE,GAAgB,SAEnB,wBAAIuE,UAAU,eAAetE,GAC7B,wBAAIsE,UAAU,eACXrE,GAAc,gBAEjB,wBACEsE,MAAO,CACLyB,YAAa,QAGf,2BACEC,KAAK,WACLlD,MAAOrB,EACPwE,QAASvG,EAAqBgC,SAC5BD,GAEFgD,SAAU1B,WAU1B,kBAAC,IAAD,CACEqD,YAAa/F,EACbgG,YAAa,CAAC,EAAG,GAAI,IACrBC,aAAc,kBAAMhG,EAAcD,EAAa,IAC/CkG,aAAc,kBAAMjG,EAAcD,EAAa,IAC/CmG,oBAAqB,SAAAC,GAAI,OAAIrG,EAAeqG,IAC5CtG,YAAaA,EACbuG,YAAalH,EAAQ6D,SAGvB,yBACEgB,UAAU,UACVsC,GAAG,WACHrC,MAAO,CAAEuB,MAAO,WAItB,yBAAKxB,UAAU,kBACb,4BACEA,UAAU,uEACVuC,QAAS,kBAAMtD,MAFjB,YAUK,WAAXlE,EACF,kBAAC,IAAD,CACEiF,UAAU,WACVS,SAAUV,GACVW,OAAQ,SAAAC,GAAe,OACrB,0BACEX,UAAU,WACVC,MAAO,CACLW,SAAU,KAEZH,SAAUE,EAAgBF,UAE1B,8BAAUT,UAAW,mBACnB,yBAAKA,UAAU,QACb,4BACEA,UAAW,gBACXC,MAAO,CACLY,aAAc,OACdX,UAAW,MACXY,SAAU,SAGZ,+CAGF,2BAAOd,UAAU,SACf,kCACGnC,EAAuBM,KAAI,SAACC,EAAO2C,GAClC,IACMC,EADO5C,EAAMH,KAETC,EAAoB,IAE9B,OACE,yBACEqC,IAAKQ,EACLd,MAAO,CACLgB,MAAO,GAAF,OAAKD,EAAL,KACLE,UAAW,gBAMrB,2BAAOlB,UAAU,cACf,wBAAIA,UAAU,WACZ,kBAAC,IAAD,CACEmB,KAAMtD,EACNuD,OAAQxF,EACRyF,cAAe7C,EACf8C,cAAe,eACfC,cAAe,QAEjB,wBACEtB,MAAO,CACLuB,MAAO,QACPC,cAAe,OACfC,YAAa,OAEf1B,UAAU,aAEV,2BACE2B,KAAK,WACLC,QACErG,EAAwByD,SACxB/D,EAAc+D,OAEhBoB,SAAUN,OAKlB,2BAAOE,UAAU,eAEb/E,EAAc+D,QACd,wBAAIiB,MAAO,CAAE4B,gBAAiB,YAC5B,wBAAIC,QAASjE,EAAuBmB,QAClC,6BAAM,yBAIX/D,EAAckD,KACb,YAKM,IAJJf,EAII,EAJJA,UACA3B,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEA,OACE,wBACEsE,MAAO,CAAE4B,gBAAiB,WAC1BtB,IAAKnD,GAEL,wBAAI4C,UAAU,eACXvE,GAAgB,SAEnB,wBAAIuE,UAAU,eAAetE,GAC7B,wBAAIsE,UAAU,eACXrE,GAAc,gBAEjB,wBACEsE,MAAO,CACLyB,YAAa,QAGf,2BACEC,KAAK,WACLlD,MAAOrB,EACPwE,QAASrG,EAAwB8B,SAC/BD,GAEFgD,SAAUP,WAU1B,kBAAC,IAAD,CACEkC,YAAa/F,EACbgG,YAAa,CAAC,EAAG,GAAI,IACrBC,aAAc,kBAAMhG,EAAcD,EAAa,IAC/CkG,aAAc,kBAAMjG,EAAcD,EAAa,IAC/CmG,oBAAqB,SAAAC,GAAI,OAAIrG,EAAeqG,IAC5CtG,YAAaA,EACbuG,YAAalH,EAAQ6D,SAGvB,yBACEgB,UAAU,UACVsC,GAAG,WACHrC,MAAO,CAAEuB,MAAO,WAItB,yBAAKxB,UAAU,kBACb,4BACEA,UAAU,uEACVuC,QAAS,kBAAMxC,OAFjB,eAUN,KAEHpF,EACC,kBAAC,IAAD,CAAU6H,GAAI,iBAAmBjI,IAEjC,kBAAC,WAAD,QAKCiC,aAAaC,QAAQ,oCAE5B,kBAAC,WAAD,KACE,yBAAKuD,UAAU,WACZrF,EACC,kBAAC,IAAD,CACE6H,GAAE,yBAAoBnI,EAAMoI,MAAMC,OAAOvC,KAAvC,YAA+C7F,EAAI,SAGvD,kBAAC,WAAD,QAMD,K,SAQIkD,E,qFAAf,WAA6BlD,EAAMqI,GAAnC,iGACMC,EADN,2BACgCtI,EAAKoD,OAEnCX,OAAOC,KAAK2F,GAASxF,SAAQ,SAAAiB,GAC3B,GAAuB,OAAnBuE,EAAQvE,IAAsC,KAAnBuE,EAAQvE,GAAe,CACpD,IAAIyE,EAAQF,EAAQvE,GACpBwE,GAAY,IAAH,OAAOxE,EAAP,YAAgByE,OAN/B,SAU8BlG,IACzBC,IAAIgG,EAAK,CACRtG,QAAS,CACP,eAAgB,sBAChBC,cAAe,OAAF,OAASC,aAAaC,QAAQ,cAG9CqG,MAAK,SAAAC,GACJ,OAAOA,KAERC,OAAM,SAAAC,GACL,OAAOA,EAAMpG,YArBnB,cAUQqG,EAVR,OAwBMC,EAAiB,GAErBD,EAAcjG,KAAKE,SAAQ,SAAAM,GACzB0F,EAAe7F,KAAKG,MA3BxB,kBA8BS0F,GA9BT,4C,sBAllBAzD,IAAM0D,SAASC,eAAiB,cAChC3D,IAAM0D,SAASE,eAAiB,YAChC5D,IAAM0D,SAASG,iBAAkB,EA4kBjCnJ,EAAsBoJ,UAAY,CAChClJ,KAAMmJ,IAAUC,QAwCHC,uBAJS,SAAAjJ,GAAK,MAAK,CAChCJ,KAAMI,EAAMkJ,KAAKtJ,QAKjB,CAAEuJ,eAFWF,CAGbvJ","file":"12.bundle.8cc1777e285ec44524b8.js","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { Form } from '@progress/kendo-react-form';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { TableSearchFilter, TablePagination } from '@ohif/ui';\nimport { Redirect } from 'react-router-dom';\nimport { load_user } from '../actions/auth';\nimport './Add_group.css';\nimport { useDebounce } from '@ohif/ui';\nimport axiosInstance from 'axios';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nfunction Add_or_Remove_studies(props) {\n  const { user } = props;\n\n  const [groupName] = useState(props.location.state);\n  const [redirect, setRedirect] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [choice, setChoice] = useState('Add');\n\n  const [sharedStudies, setSharedStudies] = useState([]);\n  const [studies, setStudies] = useState([]);\n  const [selectedStudiesToAdd, setSelectedStudiesToAdd] = useState([]);\n  const [selectedStudiesToRemove, setSelectedStudiesToRemove] = useState([]);\n\n  const [filterValues, setFilterValues] = useState({\n    patient_name: '',\n    patient_id: '',\n    study_date: '',\n  });\n\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [pageNumber, setPageNumber] = useState(0);\n\n  const debouncedFilters = useDebounce(filterValues, 250);\n\n  useEffect(() => {\n    const fetchStudies = async () => {\n      try {\n        const config = {\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('access')}`,\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n        };\n\n        const response = await axiosInstance.get(\n          `/api/view_studies?groupName=${groupName}&user=${\n            user['email']\n          }`,\n          config\n        );\n\n        //console.log(response.data.Studies);\n\n        let sharedStudiesIds = [];\n        Object.keys(response.data.Studies).forEach(function(study_uid) {\n          //console.log(study_uid);\n          if (!sharedStudiesIds.includes(study_uid)) {\n            sharedStudiesIds.push(study_uid);\n          }\n        });\n\n        let removable = [];\n\n        try {\n          const response = await _fetchStudies(user, debouncedFilters);\n\n          let studies = [];\n          response.forEach(function(study) {\n            if (\n              !sharedStudiesIds.includes(study['study_uid']) &&\n              !studies.includes(study) &&\n              study['user'] === user.email\n            ) {\n              studies.push(study);\n            } else if (sharedStudiesIds.includes(study['study_uid'])) {\n              removable.push(study);\n            }\n          });\n\n          setSharedStudies(removable);\n          setStudies(studies);\n          setIsLoaded(true);\n        } catch (error) {\n          alert(error);\n        }\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    fetchStudies();\n  }, [\n    debouncedFilters,\n    groupName,\n    user,\n    selectedStudiesToAdd,\n    selectedStudiesToRemove,\n  ]);\n\n  const mediumTableMetaStudies = [\n    {\n      displayText: 'PatientName',\n      fieldName: 'patient_name',\n      inputType: 'text',\n      size: 50,\n    },\n    {\n      displayText: 'PatientId',\n      fieldName: 'patient_id',\n      inputType: 'text',\n      size: 50,\n    },\n    {\n      displayText: 'StudyDate',\n      fieldName: 'study_date',\n      inputType: 'text',\n      size: 100,\n    },\n  ];\n\n  const totalSizeStudies = mediumTableMetaStudies\n    .map(field => field.size)\n    .reduce((prev, next) => prev + next);\n\n  function handleStudiesFilterChange(fieldName, value) {\n    setFilterValues(state => {\n      return {\n        ...state,\n        [fieldName]: value,\n      };\n    });\n  }\n\n  const handleSelectStudyToAdd = event => {\n    const study_uid = event.target.value;\n\n    if (!selectedStudiesToAdd.includes(study_uid)) {\n      selectedStudiesToAdd.push(study_uid);\n    } else {\n      setSelectedStudiesToAdd(\n        selectedStudiesToAdd.filter(selectedStudyUID => {\n          return selectedStudyUID !== study_uid;\n        })\n      );\n    }\n  };\n\n  const handleSelectAllStudiesToAdd = () => {\n    if (selectedStudiesToAdd.length < studies.length) {\n      setSelectedStudiesToAdd(studies.map(({ study_uid }) => study_uid));\n    } else {\n      setSelectedStudiesToAdd([]);\n    }\n  };\n\n  async function handleSubmitAdd() {\n    if (selectedStudiesToAdd.length == 0) {\n      let text = document.getElementById('message2');\n      text.textContent = 'At least one study must be selected!';\n    } else {\n      try {\n        const config = {\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('access')}`,\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n        };\n        let form_data = new FormData();\n        form_data.append('groupName', groupName);\n        form_data.append('mainUser', user.email);\n        form_data.append('studies', JSON.stringify(selectedStudiesToAdd));\n\n        const res = await axios.post(\n          `/api/health_professional_add_studies`,\n          form_data,\n          config\n        );\n\n        if (res.data.Status === true) {\n          setRedirect(true);\n        } else {\n          alert('Error while adding studies');\n        }\n      } catch (err) {\n        alert(err);\n      }\n    }\n  }\n\n  const handleSelectStudyToRemove = event => {\n    const study_uid = event.target.value;\n\n    if (!selectedStudiesToRemove.includes(study_uid)) {\n      selectedStudiesToRemove.push(study_uid);\n    } else {\n      setSelectedStudiesToRemove(\n        selectedStudiesToRemove.filter(selectedStudyUID => {\n          return selectedStudyUID !== study_uid;\n        })\n      );\n    }\n  };\n\n  const handleSelectAllStudiesToRemove = () => {\n    if (selectedStudiesToRemove.length < sharedStudies.length) {\n      setSelectedStudiesToRemove(\n        sharedStudies.map(({ study_uid }) => study_uid)\n      );\n    } else {\n      setSelectedStudiesToRemove([]);\n    }\n  };\n\n  async function handleSubmitRemove() {\n    if (selectedStudiesToRemove.length == 0) {\n      let text = document.getElementById('message2');\n      text.textContent = 'At least one study must be selected!';\n    } else {\n      try {\n        const config = {\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('access')}`,\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n        };\n        let form_data = new FormData();\n        form_data.append('groupName', groupName);\n        form_data.append('mainUser', user.email);\n        form_data.append('studies', JSON.stringify(selectedStudiesToRemove));\n\n        const res = await axios.post(\n          `/api/health_professional_remove_studies`,\n          form_data,\n          config\n        );\n\n        if (res.data.Status === true) {\n          setRedirect(true);\n        } else {\n          alert('Error while removing studies');\n        }\n      } catch (err) {\n        alert(err);\n      }\n    }\n  }\n\n  if (localStorage.getItem('HealthProfessional_Authenticated') && isLoaded) {\n    return (\n      <Fragment>\n        <div className=\"content\" style={{ marginTop: '5px' }}>\n          <h4>Add or Remove?</h4>\n          <p className=\"tooltiptext\">\n            Choose if you want to <b>remove</b> or <b>add</b> studies from group\n            \"{groupName}\".\n          </p>\n          <select\n            className=\"select\"\n            name=\"choice\"\n            value={choice}\n            onChange={e => setChoice(e.target.value)}\n            required\n          >\n            <option key=\"\"></option>\n            {['Add', 'Remove'].map(c => (\n              <option key={c}>{c}</option>\n            ))}\n          </select>\n\n          {choice === 'Add' ? (\n            <Form\n              className=\"addGroup\"\n              onSubmit={handleSubmitAdd}\n              render={formRenderProps => (\n                <form\n                  className=\"addGroup\"\n                  style={{\n                    maxWidth: 650,\n                  }}\n                  onSubmit={formRenderProps.onSubmit}\n                >\n                  <fieldset className={'k-form-fieldset'}>\n                    <div className=\"mb-3\">\n                      <legend\n                        className={'k-form-legend'}\n                        style={{\n                          marginBottom: '10px',\n                          marginTop: '5px',\n                          fontSize: '14px',\n                        }}\n                      >\n                        <b>Add studies:</b>\n                      </legend>\n\n                      <table className=\"table\">\n                        <colgroup>\n                          {mediumTableMetaStudies.map((field, i) => {\n                            const size = field.size;\n                            const percentWidth =\n                              (size / totalSizeStudies) * 100.0;\n\n                            return (\n                              <col\n                                key={i}\n                                style={{\n                                  width: `${percentWidth}%`,\n                                  textAlign: 'center',\n                                }}\n                              />\n                            );\n                          })}\n                        </colgroup>\n                        <thead className=\"table-head\">\n                          <tr className=\"filters\">\n                            <TableSearchFilter\n                              meta={mediumTableMetaStudies}\n                              values={filterValues}\n                              onValueChange={handleStudiesFilterChange}\n                              sortFieldName={'patient_name'}\n                              sortDirection={'asc'}\n                            />\n                            <th\n                              style={{\n                                color: 'black',\n                                paddingBottom: '15px',\n                                paddingLeft: '8px',\n                              }}\n                              className=\"text-left\"\n                            >\n                              <input\n                                type=\"checkbox\"\n                                checked={\n                                  selectedStudiesToAdd.length === studies.length\n                                }\n                                onChange={handleSelectAllStudiesToAdd}\n                              />\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"table-body\">\n                          {/* EMPTY */}\n                          {!studies.length && (\n                            <tr style={{ backgroundColor: '#5F9EA0' }}>\n                              <td colSpan={mediumTableMetaStudies.length}>\n                                <div>{'No matching results'}</div>\n                              </td>\n                            </tr>\n                          )}\n                          {studies.map(\n                            ({\n                              study_uid,\n                              patient_name,\n                              patient_id,\n                              study_date,\n                            }) => {\n                              return (\n                                <tr\n                                  style={{ backgroundColor: '#5F9EA0' }}\n                                  key={study_uid}\n                                >\n                                  <td className=\"text-center\">\n                                    {patient_name || 'Empty'}\n                                  </td>\n                                  <td className=\"text-center\">{patient_id}</td>\n                                  <td className=\"text-center\">\n                                    {study_date || 'Invalid date'}\n                                  </td>\n                                  <td\n                                    style={{\n                                      paddingLeft: '8px',\n                                    }}\n                                  >\n                                    <input\n                                      type=\"checkbox\"\n                                      value={study_uid}\n                                      checked={selectedStudiesToAdd.includes(\n                                        study_uid\n                                      )}\n                                      onChange={handleSelectStudyToAdd}\n                                    />\n                                  </td>\n                                </tr>\n                              );\n                            }\n                          )}\n                        </tbody>\n                      </table>\n\n                      <TablePagination\n                        currentPage={pageNumber}\n                        pageOptions={[5, 10, 15]}\n                        nextPageFunc={() => setPageNumber(pageNumber + 1)}\n                        prevPageFunc={() => setPageNumber(pageNumber - 1)}\n                        onRowsPerPageChange={Rows => setRowsPerPage(Rows)}\n                        rowsPerPage={rowsPerPage}\n                        recordCount={studies.length}\n                      />\n\n                      <div\n                        className=\"message\"\n                        id=\"message2\"\n                        style={{ color: 'red' }}\n                      ></div>\n                    </div>\n                  </fieldset>\n                  <div className=\"k-form-buttons\">\n                    <button\n                      className=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\"\n                      onClick={() => handleSubmitAdd()}\n                    >\n                      Add\n                    </button>\n                  </div>\n                </form>\n              )}\n            />\n          ) : choice === 'Remove' ? (\n            <Form\n              className=\"addGroup\"\n              onSubmit={handleSubmitRemove}\n              render={formRenderProps => (\n                <form\n                  className=\"addGroup\"\n                  style={{\n                    maxWidth: 650,\n                  }}\n                  onSubmit={formRenderProps.onSubmit}\n                >\n                  <fieldset className={'k-form-fieldset'}>\n                    <div className=\"mb-3\">\n                      <legend\n                        className={'k-form-legend'}\n                        style={{\n                          marginBottom: '10px',\n                          marginTop: '5px',\n                          fontSize: '14px',\n                        }}\n                      >\n                        <b>Remove studies:</b>\n                      </legend>\n\n                      <table className=\"table\">\n                        <colgroup>\n                          {mediumTableMetaStudies.map((field, i) => {\n                            const size = field.size;\n                            const percentWidth =\n                              (size / totalSizeStudies) * 100.0;\n\n                            return (\n                              <col\n                                key={i}\n                                style={{\n                                  width: `${percentWidth}%`,\n                                  textAlign: 'center',\n                                }}\n                              />\n                            );\n                          })}\n                        </colgroup>\n                        <thead className=\"table-head\">\n                          <tr className=\"filters\">\n                            <TableSearchFilter\n                              meta={mediumTableMetaStudies}\n                              values={filterValues}\n                              onValueChange={handleStudiesFilterChange}\n                              sortFieldName={'patient_name'}\n                              sortDirection={'asc'}\n                            />\n                            <th\n                              style={{\n                                color: 'black',\n                                paddingBottom: '15px',\n                                paddingLeft: '8px',\n                              }}\n                              className=\"text-left\"\n                            >\n                              <input\n                                type=\"checkbox\"\n                                checked={\n                                  selectedStudiesToRemove.length ===\n                                  sharedStudies.length\n                                }\n                                onChange={handleSelectAllStudiesToRemove}\n                              />\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"table-body\">\n                          {/* EMPTY */}\n                          {!sharedStudies.length && (\n                            <tr style={{ backgroundColor: '#5F9EA0' }}>\n                              <td colSpan={mediumTableMetaStudies.length}>\n                                <div>{'No matching results'}</div>\n                              </td>\n                            </tr>\n                          )}\n                          {sharedStudies.map(\n                            ({\n                              study_uid,\n                              patient_name,\n                              patient_id,\n                              study_date,\n                            }) => {\n                              return (\n                                <tr\n                                  style={{ backgroundColor: '#5F9EA0' }}\n                                  key={study_uid}\n                                >\n                                  <td className=\"text-center\">\n                                    {patient_name || 'Empty'}\n                                  </td>\n                                  <td className=\"text-center\">{patient_id}</td>\n                                  <td className=\"text-center\">\n                                    {study_date || 'Invalid date'}\n                                  </td>\n                                  <td\n                                    style={{\n                                      paddingLeft: '8px',\n                                    }}\n                                  >\n                                    <input\n                                      type=\"checkbox\"\n                                      value={study_uid}\n                                      checked={selectedStudiesToRemove.includes(\n                                        study_uid\n                                      )}\n                                      onChange={handleSelectStudyToRemove}\n                                    />\n                                  </td>\n                                </tr>\n                              );\n                            }\n                          )}\n                        </tbody>\n                      </table>\n\n                      <TablePagination\n                        currentPage={pageNumber}\n                        pageOptions={[5, 10, 15]}\n                        nextPageFunc={() => setPageNumber(pageNumber + 1)}\n                        prevPageFunc={() => setPageNumber(pageNumber - 1)}\n                        onRowsPerPageChange={Rows => setRowsPerPage(Rows)}\n                        rowsPerPage={rowsPerPage}\n                        recordCount={studies.length}\n                      />\n\n                      <div\n                        className=\"message\"\n                        id=\"message2\"\n                        style={{ color: 'red' }}\n                      ></div>\n                    </div>\n                  </fieldset>\n                  <div className=\"k-form-buttons\">\n                    <button\n                      className=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\"\n                      onClick={() => handleSubmitRemove()}\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </form>\n              )}\n            />\n          ) : null}\n\n          {redirect ? (\n            <Redirect to={'/view_studies/' + groupName} />\n          ) : (\n            <Fragment></Fragment>\n          )}\n        </div>\n      </Fragment>\n    );\n  } else if (localStorage.getItem('HealthProfessional_Authenticated')) {\n    return (\n      <Fragment>\n        <div className=\"content\">\n          {redirect ? (\n            <Redirect\n              to={`/group_details/${props.match.params.name}/${user['email']}`}\n            />\n          ) : (\n            <Fragment></Fragment>\n          )}\n        </div>\n      </Fragment>\n    );\n  } else {\n    return null;\n  }\n}\n\nAdd_or_Remove_studies.propTypes = {\n  user: PropTypes.object,\n};\n\nasync function _fetchStudies(user, filters) {\n  let url = `/api/image/?user=${user.email}`;\n\n  Object.keys(filters).forEach(field => {\n    if (filters[field] !== null && filters[field] !== '') {\n      let param = filters[field];\n      url = url + `&${field}=${param}`;\n    }\n  });\n\n  const accessStudies = await axiosInstance\n    .get(url, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n      },\n    })\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      return error.response;\n    });\n\n  let allowedStudies = [];\n\n  accessStudies.data.forEach(study => {\n    allowedStudies.push(study);\n  });\n\n  return allowedStudies;\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  { load_user }\n)(Add_or_Remove_studies);\n"],"sourceRoot":""}