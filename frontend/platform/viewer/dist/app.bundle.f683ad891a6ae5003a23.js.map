{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/layoutButton/LayoutChooser.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/viewer/ToolbarButton.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/layoutButton/LayoutButton.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/tableList/TableList.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/tableList/TableListItem.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/tabComponents/TabComponents.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/tabComponents/TabFooter.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/customForm/HotkeyField.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/languageSwitcher/LanguageSwitcher.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/checkbox/checkbox.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/cineDialog/CineDialog.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/content/viewportDownloadForm/ViewportDownloadForm.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/quickSwitch/StudiesItem.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/quickSwitch/StudiesList.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/ScrollableArea/ScrollableArea.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/utils/throttled.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/utils/getScrollbarSize.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/quickSwitch/SeriesList.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/quickSwitch/QuickSwitch.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/roundedButtonGroup/RoundedButtonGroup.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/selectTree/InputRadio.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/selectTree/SelectTreeBreadcrumb.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/selectTree/SelectTree.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/simpleDialog/SimpleDialog.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/ohifModal/OHIFModal.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/contextMenu/ContextMenu.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/errorPage/ErrorPage.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/errorPage/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/studyList/CustomDateRangePicker.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/studyList/TableSearchFilter.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/studyList/StudyList.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/studyList/TablePagination.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/studyList/PageToolbar.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/viewer/ExpandableToolMenu.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/toolbarSection/ToolbarSection.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/errorBoundary/ErrorBoundary.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/hooks/useMedia.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/hooks/useDebounce.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/elements/form/OldSelect.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/elements/form/Select.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/elements/form/Label.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/elements/form/Range.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/elements/form/TextArea.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/elements/form/TextInput.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/elements/form/DropdownMenu.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/viewer/PlayClipButton.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/viewer/SimpleToolbarButton.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/viewer/Toolbar.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/utils/viewerbaseDragDropContext.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/utils/asyncComponent/asyncComponent.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/index.js","webpack:///./context/AppContext.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/metadataProvider/fetchPaletteColorLookupTableData.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/metadataProvider/unpackOverlay.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/metadataProvider/fetchOverlayData.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/metadataProvider/validNumber.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/MetadataProvider.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/metadataProvider/getPixelSpacingInformation.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/hotkeys/pausePlugin.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/hotkeys/recordPlugin.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/hotkeys/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/log.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/enums.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/studyMetadataManager.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/metadata/OHIFInstanceMetadata.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/metadata/OHIFSeriesMetadata.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/metadata/OHIFStudyMetadata.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/metadata/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/isDisplaySetReconstructable.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/metadata/StudyMetadata.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/naturalizeSOPClassUID.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/utils/drawCanvasCrosshairs.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/tools/DICOMSegTempCrosshairsTool.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/tools/TOOL_NAMES.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/toolbarModule.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/loadSegmentation.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/utils/refreshViewports.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/utils/setActiveLabelMap.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/getSourceDisplaySet.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/getOHIFDicomSegSopClassHandler.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/components/BrushColorSelector/BrushColorSelector.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/components/BrushRadius/BrushRadius.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/components/SegmentationItem/SegmentationItem.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/components/SegmentationSettings/SegmentationSettings.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/components/SegmentItem/SegmentItem.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/components/SegmentationSelect.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/utils/SegmentationUtils.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/utils/GenericAnatomyColors.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/components/SegmentationLabelForm.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/utils/GenericUtils.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/utils/SegmentationReader.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/components/SegmentationList.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/services/Client.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/components/SegmentationPanel/SegmentationPanel.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/index.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-segmentation/src/init.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-tag-browser/src/components/DicomBrowserSelect.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-tag-browser/src/components/DicomBrowserSelectItem.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-tag-browser/src/components/DicomTagBrowser.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-tag-browser/src/getCommandsModule.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-tag-browser/src/toolbarModule.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/dicom-tag-browser/src/index.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/toolbarModule.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/components/ModelSelector.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/components/actions/BaseTab.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/components/actions/Inference.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/components/NrrdResult.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/components/Panel.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/panelModule.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/index.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/monai-label/src/init.js","webpack:///./index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/ImageSet.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/sopClassDictionary.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/extensions/ExtensionManager.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/services/ServicesManager.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/services/UINotificationService/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/services/UIModalService/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/services/UIDialogService/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/services/LoggerService/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/services/_shared/pubSubServiceInterface.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/services/MeasurementService/MeasurementService.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/services/MeasurementService/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/getImageId.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/overlayTrigger/Fade.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/overlayTrigger/Overlay.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/overlayTrigger/createChainedFunction.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/overlayTrigger/OverlayTrigger.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/overlayTrigger/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/StudyMetadataSource.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/retrieveStudyMetadata.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/actions/types.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/tooltip/Tooltip.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/tooltip/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/str2ab.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/objectPath.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/absoluteUrl.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/addServers.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/dicomLoaderService.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/b64toBlob.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/loadAndCacheDerivedDisplaySets.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/urlUtil.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/makeDeferred.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/Queue.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/hierarchicalListUtils.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/progressTrackingUtils.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/writeScript.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/makeCancelable.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/isDicomUid.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/resolveObjectPath.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/StudyPrefetcher.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/StudyLoadingListener.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/PubSub.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/LogManager.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/OHIFStudyMetadataSource.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/isImage.js","webpack:///./routes/routesUtil.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMWeb/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMWeb/getAttribute.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMWeb/getAuthorizationHeader.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMWeb/getModalities.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMWeb/getName.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMWeb/getNumber.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMWeb/getString.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/isLowPriorityModality.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/lib/validate.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/customAttributes.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/HPMatcher.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/customViewportSettings.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/lib/comparators.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/classes/Rule.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/classes/rules.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/lib/removeFromArray.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/classes/ViewportStructure.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/classes/Viewport.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/classes/Stage.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/classes/Protocol.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/ProtocolEngine.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/lib/sortByScore.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/protocolStore/classes/ProtocolStore.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/protocolStore/defaultProtocol.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/hanging-protocols/protocolStore/classes/ProtocolStrategy.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/header.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/object.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/string.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/ui/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/ui/getScrollbarSize.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/ui/getOffset.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/ui/isCharacterKeyPress.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/ui/handleError.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/sortBy.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/StackManager.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/TypeSafeCollection.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/arrowAnnotate.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/bidirectional.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/ellipticalRoi.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/circleRoi.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/freehandMouse.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/length.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/nonTarget.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/rectangleRoi.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/angle.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/targetCR.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/targetNE.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/targetUN.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/tools/dicomSRDisplayTool.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/toolGroups/allTools.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/configuration.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/dataExchange.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/classes/TimepointApi.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/lib/getLabel.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/lib/getDescription.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/lib/getImageIdForImagePath.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/classes/MeasurementApi.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/conformance/criteria/BaseCriterion.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/conformance/criteria/Location.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/conformance/criteria/MaxTargetsPerOrgan.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/conformance/criteria/MaxTargets.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/conformance/criteria/MeasurementsLength.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/conformance/criteria/Modality.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/conformance/criteria/NonTargetResponse.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/conformance/criteria/TargetType.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/conformance/CriteriaEvaluator.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/conformance/evaluations/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/conformance/ConformanceCriteria.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/lib/getImageAttributes.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/lib/refreshCornerstoneViewports.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/measurementHandlers/handleSingleMeasurementAdded.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/measurementHandlers/handleChildMeasurementAdded.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/measurementHandlers/handleSingleMeasurementModified.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/measurementHandlers/handleChildMeasurementModified.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/measurementHandlers/handleSingleMeasurementRemoved.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/measurementHandlers/handleChildMeasurementRemoved.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/measurementHandlers/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/toolGroups/targets.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/toolGroups/nonTargets.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/toolGroups/temp.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/ltTools.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/measurements/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/services/qido/instances.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/services/qido/studies.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/services/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/searchStudies.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/retrieveStudiesMetadata.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/getStudyBoxData.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/getWADORSImageId.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/getSeriesInfo.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/sortStudy.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/services/wado/getReferencedSeriesSequence.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/services/wado/studyInstanceHelpers.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/services/wado/retrieveMetadataLoader.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/services/wado/retrieveMetadataLoaderSync.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/services/wado/retrieveMetadataLoaderAsync.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/services/wado/retrieveMetadata.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/cornerstone/src/initCornerstoneTools.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/cornerstone/src/utils/measurementServiceMappings/measurementServiceMappingsFactory.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/cornerstone/src/tools/modules/dicomSRModule.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/cornerstone/src/init.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/cornerstone/src/utils/setCornerstoneLayout.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/cornerstone/src/CornerstoneViewportDownloadForm.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/cornerstone/src/commandsModule.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/cornerstone/src/toolbarModule.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/cornerstone/src/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/components/Navbar.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Add_description.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Facebook.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Github.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Spotify.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Linkedin.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Home.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Login.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Signup.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Activate.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/ResetPassword.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/ResetPasswordConfirm.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Google.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/reducers/auth.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/reducers/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/store.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/hocs/Layout.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/hocs/Layout_refresh.js","webpack:///./version.js","webpack:///./utils/initWebWorkers.js","webpack:///./store/index.js","webpack:///./appExtensions/GenericViewerCommands/commandsModule.js","webpack:///./appExtensions/GenericViewerCommands/index.js","webpack:///./appExtensions/MeasurementsPanel/MeasurementTableItem.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/utils/findMostRecentStructuredReport.js","webpack:///./appExtensions/MeasurementsPanel/Report.js","webpack:///./appExtensions/MeasurementsPanel/MeasurementTable.js","webpack:///./appExtensions/MeasurementsPanel/jumpToRowItem.js","webpack:///./appExtensions/MeasurementsPanel/ConnectedMeasurementTable.js","webpack:///./components/Labelling/LabellingTransition.js","webpack:///./components/Labelling/OHIFLabellingData.js","webpack:///./components/SimpleDialog/SimpleDialog.js","webpack:///./components/EditDescriptionDialog/EditDescriptionDialog.js","webpack:///./components/Labelling/LabellingFlow.js","webpack:///./connectedComponents/ToolContextMenu.js","webpack:///./appExtensions/MeasurementsPanel/init.js","webpack:///./appExtensions/MeasurementsPanel/index.js","webpack:///./components/LoadingBar/Bar.js","webpack:///./components/LoadingBar/Container.js","webpack:///./OHIFStandaloneViewer.js","webpack:///./App.js","webpack:///./config.js","webpack:///./modelList/CustomDateRangePicker.js","webpack:///./modelList/TableSearchFilter.js","webpack:///./modelList/ModelList.js","webpack:///./modelList/TablePagination.js","webpack:///./modelList/ModelContent.js","webpack:///./modelList/ModelContentNoEdit.js","webpack:///./modelList/ModelListRoute.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/viewer/ViewportErrorIndicator.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/viewer/ViewportLoadingIndicator.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/studyBrowser/ImageThumbnail.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/studyBrowser/Thumbnail.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/studies/services/qido/StaticWadoClient.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/studyList/StudyListLoadingText.js","webpack:///./store/layout/selectors.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/actions/auth.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/elements/Icon/getIcon.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/elements/Icon/Icon.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/elements/Icon/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Superuser.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/TwoFA.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/View_groups.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Group_details.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/View_models.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Add_permissions.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Remove_permissions.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Add_group.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Add_elements.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/Verify_Secret.js","webpack:///./studyList/StudyListRoute.js","webpack:///./studyList/ConnectedStudyList.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/auth/src/containers/View_studies.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/CommandsManager.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/HotkeysManager.js","webpack:///./components/bodyParts.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/enums.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/utils/getSequenceAsArray.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/utils/getMergedContentSequencesByTrackingUniqueIdentifiers.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/utils/getLabelFromMeasuredValueSequence.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/utils/getCoordsFromSCOORDOrSCOORD3D.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/utils/processTID1410Measurement.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/utils/processNonGeometricallyDefinedMeasurement.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/utils/processMeasurement.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/utils/getMeasurements.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/utils/getReferencedImagesList.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/utils/isRehydratable.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/constants/toolNames.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/constants/scoordTypes.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/utils/getRenderableData.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/utils/addMeasurement.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/SCOORD3D/parseSCOORD3D.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/utils/findInstanceMetadataBySopInstanceUid.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/parseDicomStructuredReport.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/utils/isToolSupported.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/parseMeasurementsData.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/utils/getAllDisplaySets.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/handleStructuredReport.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/dataExchange.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/DICOMSR/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/redux/constants/ActionTypes.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/redux/actions.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/redux/reducers/extensions.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/redux/reducers/preferences.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/redux/reducers/servers.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/redux/reducers/studies.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/redux/reducers/timepointManager.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/redux/reducers/viewports.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/redux/reducers/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/redux/localStorage.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/redux/sessionStorage.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/redux/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/cornerstone.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/lib/cornerstone.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/studyBrowser/StudyBrowser.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/cornerstone/src/tools/id.js","webpack:///./routes/NotFound.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/guid.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/errorHandler.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/OHIFError.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/utils/xhrRetryRequestHook.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/metadata/Metadata.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/contextProviders/ModalProvider.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/snackbar/SnackbarItem.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/snackbar/SnackbarContainer.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/components/snackbar/SnackbarTypes.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/contextProviders/SnackbarProvider.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/contextProviders/LanguageProvider.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/contextProviders/DialogProvider.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/contextProviders/LoggerProvider.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/ui/src/contextProviders/index.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/user.js","webpack:///./modelList/ConnectedModelList.js","webpack:///./googleCloud/DicomUploader.js","webpack:///./googleCloud/utils/helpers.js","webpack:///./googleCloud/DicomFileUploaderModal.js","webpack:///./googleCloud/ConnectedDicomFilesUploader.js","webpack:///./components/OHIFLogo/OHIFLogo.js","webpack:///./components/Header/Header.js","webpack:///./connectedComponents/ConnectedHeader.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/extensions/MODULE_TYPES.js","webpack:///D:/tese/Bia_final/frontend_bia/extensions/cornerstone/src/state.js","webpack:///D:/tese/Bia_final/frontend_bia/node_modules/moment/locale sync ^\\.\\/.*$","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/metadata/InstanceMetadata.js","webpack:///D:/tese/Bia_final/frontend_bia/platform/core/src/classes/metadata/SeriesMetadata.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","3","exports","module","l","e","promises","Promise","resolve","reject","href","fullhref","p","existingLinkTags","document","getElementsByTagName","dataHref","tag","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","jsonpScriptSrc","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","head","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","LayoutChooser","props","cell","parentCell","row","col","currentCell","table","Rows","newRow","Columns","isRange","className","emptyCell","state","selectedCell","setState","column","this","highlightCells","onClick","onChange","style","display","visible","minWidth","boxSize","cellBorder","role","map","width","height","border","onMouseEnter","onMouseLeave","PureComponent","PropTypes","number","isRequired","bool","func","ToolbarButton","isActive","icon","labelWhenActive","classnames","active","iconProps","label","arrowIconName","isExpanded","arrowIcon","isExpandable","Icon","cypressSelectorId","toLowerCase","data-cy","propTypes","id","string","oneOfType","shape","defaultProps","LayoutButton","dropdownVisible","prevProps","TableList","customHeader","Fragment","headerTitle","children","headless","onHeaderClick","getHeader","Component","node","defaultItems","TableListItem","onItemClick","preventDefault","stopPropagation","itemKey","itemClass","itemMetaClass","itemIndex","itemMeta","arrayOf","any","customProps","hidden","translate","word","TabFooter","onResetPreferences","onSave","onCancel","hasErrors","disabled","array","Checkbox","checked","checkbox","handleChange","CineDialog","parseFloat","onFrameRateChanged","isPlaying","onPlayPauseChanged","onClickNextButton","onClickBackButton","onClickSkipToStart","onClickSkipToEnd","cineFrameRate","title","data-toggle","onClickPlayPause","min","cineMinFrameRate","max","cineMaxFrameRate","step","cineStepFrameRate","handleInputChange","toFixed","connectedComponent","withTranslation","FILE_TYPE_OPTIONS","ViewportDownloadForm","activeViewport","onClose","updateViewportPreview","enableViewport","disableViewport","toggleAnnotations","loadImage","downloadBlob","defaultSize","minimumSize","maximumSize","canvasClass","useTranslation","useState","filename","setFilename","fileType","setFileType","dimensions","setDimensions","showAnnotations","setShowAnnotations","keepAspect","setKeepAspect","aspectMultiplier","setAspectMultiplier","viewportElement","setViewportElement","viewportElementDimensions","setViewportElementDimensions","ref","createRef","downloadCanvas","setDownloadCanvas","viewportPreview","setViewportPreview","setError","hasError","values","includes","refreshViewport","useRef","onDimensionsChange","dimension","oppositeDimension","sanitizedTargetValue","replace","isEmpty","newDimensions","updatedDimension","Math","round","error_messages","renderErrorHandler","validSize","loadAndUpdateViewports","useCallback","scaledWidth","scaledHeight","scaledDimensions","current","dataUrl","viewportElementWidth","viewportElementHeight","useEffect","evt","alt","base","options","htmlFor","position","left","StudiesItem","studyData","StudyDate","StudyDescription","modalities","studyAvailable","activeClass","hasDescriptionAndDate","getModalitiesStyle","StudiesList","studyListData","index","StudyInstanceUID","activeStudyInstanceUID","class","getBrowserItems","ScrollableArea","delay","callback","args","context","isThrottled","scrollableElement","currentTop","scrollTop","offsetHeight","limit","scrollHeight","scrollStep","hideScrollbar","x","scrollX","y","scrollY","scrollbarSize","inner","outer","top","visibility","overflow","body","w1","offsetWidth","h1","w2","h2","clientWidth","clientHeight","getScrollbarSize","marginRight","marginBottom","scrollAreaClasses","scrollHandlerThrottled","scrollHandler","wrapper","arguments","scrollableClass","element","onScroll","onTransitionEnd","scrollNavUp","scrollNavDown","adjustMargins","addEventListener","removeEventListener","SeriesList","seriesItems","seriesData","Thumbnail","displaySetInstanceUID","activeDisplaySetInstanceUID","getSeriesItems","QuickSwitch","find","study","thumbnails","studyDataSelected","onStudySelected","seriesQuickSwitchOpen","seriesDataSelected","onSeriesSelected","sideClass","side","quickSwitchClass","hideSeriesSwitch","showSeriesSwitch","getSmallListItems","onSeriesClick","onStudyClick","RoundedButtonGroup","badgeNumbers","newValue","onValueChanged","onStateEvent","optionIndex","findIndex","detail","badgeNumber","forEach","option","stateEvent","prevState","buttons","roundedButtonWrapper","noselect","optionText","bottomLabel","badgeNumberOverflow","String","onClickOption","InputRadio","onSelected","itemData","labelClass","SelectTreeBreadcrumb","SelectTree","onComponentChange","item","Array","isArray","items","searchTerm","selectTreeFirstTitle","currentNode","selectTreeSecondTitle","searchEnabled","placeholder","autoFocus","searchLocations","currentTarget","isLeafSelected","treeItems","getTreeItems","headerItem","onBreadcrumbSelected","filteredItems","cloneDeep","indexOf","filterItems","getLabelClass","SimpleDialog","onConfirm","isOpen","rootClass","componentRef","componentStyle","float","onSubmit","defaultValue","setValue","customStyle","overlay","zIndex","backgroundColor","alignItems","justifyContent","Modal","setAppElement","getElementById","OHIFModal","closeButton","shouldCloseOnEsc","fullscreen","classes","classNames","ContextMenu","onContextMenu","ErrorPage","description","onRetry","stack","location","reload","CustomDateRangePicker","onDatesChange","startDate","endDate","dateRangePickerProps","presets","renderCalendarInfo","text","start","end","isSelected","preset","renderMonthElement","month","onMonthSelect","onYearSelect","containerStyle","margin","moment","months","year","renderYearsOptions","startDatePlaceholderText","endDatePlaceholderText","phrases","closeDatePicker","clearDates","required","instanceOf","Date","getDateEntry","datePicked","rangeDatePicked","getDateEntryFromRange","today","numOfDays","edge","subtract","TableSearchFilter","meta","onSort","onValueChange","sortFieldName","sortDirection","studyListDateFilterNumDays","studyDateTo","studyDateFrom","focusedInput","setFocusedInput","sortIcons","sortIconForSortField","lastWeek","lastMonth","defaultStartDate","defaultEndDate","studyDatePresets","field","displayText","fieldName","inputType","sortIcon","fontSize","startDateId","endDateId","onFocusChange","updatedVal","numberOfMonths","showClearDates","anchorDirection","hideKeyboardShortcutsPanel","isOutsideRange","day","isInclusivelyBeforeDay","oneOf","size","getContentFromUseMediaValue","displaySize","contentArrayMap","defaultContent","StudyList","isLoading","studies","sort","handleSort","filterValues","handleFilterChange","onFilterChange","handleSelectItem","onSelectItem","smallTableMeta","tableMeta","large","medium","small","totalSize","reduce","prev","next","percentWidth","direction","colSpan","StudyListLoadingText","TableRow","AccessionNumber","PatientID","PatientName","isHighlighted","handleClick","largeRowTemplate","mediumRowTemplate","textAlign","color","aria-label","smallRowTemplate","fontWeight","paddingTop","whiteSpace","flexGrow","paddingLeft","flexDirection","maxWidth","patientNameOrId","accessionOrModalityOrDescription","allFields","TablePagination","nextPageFunc","currentPage","prevPageFunc","onRowsPerPageChange","parseInt","prevPage","nextPage","recordCount","rowsPerPage","pageOptions","pageNumber","renderRowsPerPageDropdown","renderPaginationButtons","PageToolbar","onImport","getImportTool","ExpandableToolMenu","placement","random","getButtons","button","activeCommand","btn","onGroupMenuClick","toolbarComponent","activeIcon","trigger","rootClose","handleHide","onOverlayHide","onExpandableToolClick","toolbarMenuOverlay","React","ToolbarSection","activeButton","activeButtons","ErrorFallback","componentStack","resetErrorBoundary","OHIFErrorBoundary","onReset","onError","fallbackComponent","FallbackComponent","getDisplaySize","mediaQueryMap","mediaTypesAliases","defaultDisplaySize","mql","matches","getMediaQueryMap","mediaQueriesStringList","q","matchMedia","useMedia","defaultMediaType","_mediaQueryMap","mount","onMediaQueryChange","mediaQuery","nextDisplaySize","media","originalMediaQuery","getMediaTypeAlias","_mediaQueriesStringList","_mediaTypesAliases","isEqual","updateState","removeListener","addListener","useDebounce","debouncedValue","setDebouncedValue","handler","Select","selected","for","Range","showPercentage","showValue","valueRenderer","cols","TextInput","toTimeString","DropdownMenu","open","list","align","link","handleOnClick","getListItems","toggleList","contains","titleElement","handleMouseClick","renderTitleElement","renderList","PlayClipButton","iconName","data-container","data-placement","SimpleToolbarButton","Toolbar","maybePlayClipButton","maybeLayoutButton","includePlayClipButton","includeLayoutButton","isTouchDevice","navigator","maxTouchPoints","viewerbaseDragDropContext","DecoratedClass","backend","TouchBackend","HTML5Backend","opts","enableMouseEvents","retryImport","fn","retriesLeft","interval","catch","retry","component","asyncComponent","importComponent","isFunction","default","onLoaded","toString","addDynamicallyLoadedComponentToState","AppContext","createContext","CONTEXTS","CORNERSTONE","useAppContext","useContext","AppProvider","config","activeContexts","useSelector","getActiveContexts","Provider","appConfig","withAppContext","fetchPaletteColorLookupTableData","instance","server","PaletteColorLookupTableUID","RedPaletteColorLookupTableDescriptor","GreenPaletteColorLookupTableDescriptor","BluePaletteColorLookupTableDescriptor","RedPaletteColorLookupTableData","GreenPaletteColorLookupTableData","BluePaletteColorLookupTableData","entry","_paletteColorCache","isValidUID","_getPaletteColor","add","count","maxAge","entries","now","time","uid","paletteColorLookupTableData","lutDescriptor","numLutEntries","bits","arrayBufferToPaletteColorLUT","arraybuffer","byteArray","Uint16Array","Uint8Array","lut","BulkDataURI","uri","wadoRoot","url","headers","DICOMWeb","getAuthorizationHeader","errorInterceptor","errorHandler","getHTTPErrorHandler","requestHooks","getXHRRetryRequestHook","api","DICOMwebClient","retrieveBulkData","InlineBinary","inlineBinaryData","atob","str2ab","unpackOverlay","arrayBuffer","bitArray","byteIndex","bitIndex","bitByteIndex","floor","fetchOverlayData","OverlayDataPromises","OverlayDataTags","overlayGroup","groupStr","OverlayDataTag","_getOverlayData","ArrayBuffer","results","dicomWeb","validNumber","val","v","Number","metadataProvider","configurable","writable","Map","datasets","dicomJSONDatasetOrP10ArrayBuffer","dicomData","DicomMessage","readFile","dicomJSONDataset","dict","naturalizedDataset","dcmjs","DicomMetaDictionary","naturalizeDataset","SeriesInstanceUID","SOPInstanceUID","_getAndCacheStudyDataset","_getAndCacheStudy","series","_getAndCacheSeriesFromStudy","_getAndCacheInstanceFromStudy","assign","_checkBulkDataAndInlineBinaries","imageId","uids","imageIdToUIDs","set","dataset","instances","PhotometricInterpretation","_getUIDsFromImageID","_getInstanceData","query","fallback","_getInstance","INSTANCE","getTagFromInstance","naturalizedTagOrWADOImageLoaderTag","_getCornerstoneWADOImageLoaderTag","wadoImageLoaderTag","metadata","WADO_IMAGE_LOADER_TAGS","GENERAL_SERIES_MODULE","seriesDate","seriesTime","SeriesDate","SeriesTime","dicomParser","parseDA","parseTM","modality","Modality","seriesInstanceUID","seriesNumber","SeriesNumber","studyInstanceUID","PATIENT_STUDY_MODULE","patientAge","PatientAge","patientSize","PatientSize","patientWeight","PatientWeight","IMAGE_PLANE_MODULE","rowPixelSpacing","columnPixelSpacing","rowCosines","columnCosines","ImageOrientationPatient","PixelSpacing","ImagerPixelSpacing","SOPClassUID","PixelSpacingCalibrationType","PixelSpacingCalibrationDescription","EstimatedRadiographicMagnificationFactor","SequenceOfUltrasoundRegions","isProjection","TYPES","CorrectedImagerPixelSpacing","pixelSpacing","log","info","PhysicalDeltaX","PhysicalDeltaY","warn","getPixelSpacingInformation","frameOfReferenceUID","FrameOfReferenceUID","rows","columns","imageOrientationPatient","imagePositionPatient","ImagePositionPatient","sliceThickness","SliceThickness","sliceLocation","SliceLocation","IMAGE_PIXEL_MODULE","samplesPerPixel","SamplesPerPixel","photometricInterpretation","bitsAllocated","BitsAllocated","bitsStored","BitsStored","highBit","HighBit","pixelRepresentation","PixelRepresentation","planarConfiguration","PlanarConfiguration","pixelAspectRatio","PixelAspectRatio","smallestPixelValue","SmallestPixelValue","largestPixelValue","LargestPixelValue","redPaletteColorLookupTableDescriptor","greenPaletteColorLookupTableDescriptor","bluePaletteColorLookupTableDescriptor","redPaletteColorLookupTableData","greenPaletteColorLookupTableData","bluePaletteColorLookupTableData","VOI_LUT_MODULE","WindowCenter","WindowWidth","windowCenter","windowWidth","MODALITY_LUT_MODULE","rescaleSlope","RescaleSlope","rescaleIntercept","RescaleIntercept","rescaleType","RescaleType","SOP_COMMON_MODULE","sopClassUID","sopInstanceUID","PET_ISOTOPE_MODULE","RadiopharmaceuticalInformationSequence","RadiopharmaceuticalInformation","RadiopharmaceuticalStartTime","RadionuclideTotalDose","RadionuclideHalfLife","radiopharmaceuticalInfo","radiopharmaceuticalStartTime","radionuclideTotalDose","radionuclideHalfLife","OVERLAY_PLANE_MODULE","overlays","OverlayData","OverlayRowsTag","OverlayColumnsTag","OverlayType","OverlayOriginTag","OverlayDescriptionTag","OverlayLabelTag","ROIAreaTag","ROIMeanTag","ROIStandardDeviationTag","OverlayOrigin","pixelData","roiArea","roiMean","roiStandardDeviation","PATIENT_MODULE","patientName","Alphabetic","patientId","GENERAL_IMAGE_MODULE","sopInstanceUid","instanceNumber","InstanceNumber","lossyImageCompression","LossyImageCompression","lossyImageCompressionRatio","LossyImageCompressionRatio","lossyImageCompressionMethod","LossyImageCompressionMethod","GENERAL_STUDY_MODULE","studyDescription","studyDate","studyTime","StudyTime","accessionNumber","CINE_MODULE","frameTime","FrameTime","splitImageId","split","qs","queryString","parse","studyUID","seriesUID","objectUID","Mousetrap","_originalStopCallback","_recordedSequence","_recordedSequenceCallback","_currentRecordedKeys","_recordedCharacterKey","_origHandleKey","handleKey","_handleKey","character","modifiers","recording","_recordCurrentCombo","_recordKey","_finishRecording","sequence","join","_normalizeSequence","record","self","stopRecord","startRecording","init","recordPlugin","stopCallback","combo","paused","pause","unpause","trace","debug","timeEnd","ReconstructionIssues","DATASET_4D","VARYING_IMAGESDIMENSIONS","VARYING_IMAGESCOMPONENTS","VARYING_IMAGESORIENTATION","MISSING_FRAMES","IRREGULAR_SPACING","MULTIFFRAMES","studyMetadataList","TypeSafeCollection","studyMetadata","insert","findBy","remove","purge","removeAll","OHIFInstanceMetadata","getData","defineProperties","_sopInstanceUID","_study","_series","_instance","_cache","tagOrProperty","bypassCache","rawValue","instanceData","frame","thumbnail","_imageId","getImageId","InstanceMetadata","OHIFSeriesMetadata","addInstance","SeriesMetadata","OHIFStudyMetadata","addSeries","StudyMetadata","Metadata","isDisplaySetReconstructable","firstInstance","isMultiframe","NumberOfFrames","constructableModalities","reconstructionIssues","MULTIFRAMES","firstImage","firstImageRows","firstImageColumns","firstImageSamplesPerPixel","firstImageOrientationPatient","ii","_isSameArray","instanceMetadataControl","jj","instanceMetadata","_isDataset4D","processSingleframe","iop1","iop2","abs","iopTolerance","spacingTolerance","_getSpacingIssue","spacing","averageSpacing","multipleOfAverageSpacing","numberOfSpacings","issue","missingFrames","_getPerpendicularDistance","a","b","sqrt","pow","_studyInstanceUID","_displaySets","_derivedDisplaySets","_firstSeries","_firstInstance","_definePublicProperties","derivatedDisplaySet","allDisplaySets","concat","displaySets","otherDisplaySets","filter","ds","referencedSeriesInstanceUIDs","SourceImageSequence","firstFunctionalGroups","_toArray","PerFrameFunctionalGroupsSequence","DerivationImageSequence","sourceImageArray","ReferencedSOPInstanceUID","_findReferencedSeriesInstanceUIDsFromSOPInstanceUID","_findReferencedSeriesInstanceUIDsFromSourceImageSequence","noReferencedSeriesAvailable","ReferencedSeriesSequence","ReferencedSeries","_findReferencedSeriesInstanceUIDsFromReferencedSeriesSequence","ReferencedImageSequence","referencedImageArray","_findReferencedSeriesInstanceUIDsFromReferencedImageSequence","getStudyInstanceUID","sopClassHandlerModules","getInstanceCount","displaySet","ImageSet","setAttributes","SeriesDescription","sopClassUIDs","uniqueSopClassUIDsInSeries","Set","forEachInstance","instanceSopClassUID","getTagValue","from","getSopClassUIDs","sopClassHandlerExtensions","handlersForSopClassUID","extension","plugin","dicomWebClient","dwc","getDisplaySetFromSeries","getFirstInstance","_getDisplaySetFromSopClassModule","sopClassModule","isDerived","_addDerivedDisplaySet","stackableInstances","naturalizedName","isImage","isMultiFrame","makeDisplaySet","isClip","getSeriesInstanceUID","numImageFrames","AcquisitionDatetime","isSingleImageModality","frameRate","isReconstructable","isSOPClassUIDSupported","SOPClassUIDNaturalized","sopClassDictionary","MRSpectroscopyStorage","EnhancedUSVolumeStorage","Sop12LeadECGWaveformStorage","GeneralECGWaveformStorage","AmbulatoryECGWaveformStorage","HemodynamicWaveformStorage","CardiacElectrophysiologyWaveformStorage","BasicVoiceAudioWaveformStorage","GeneralAudioWaveformStorage","ArterialPulseWaveformStorage","RespiratoryWaveformStorage","GrayscaleSoftcopyPresentationStateStorage","ColorSoftcopyPresentationStateStorage","PseudoColorSoftcopyPresentationStateStorage","BlendingSoftcopyPresentationStateStorage","XAXRFGrayscaleSoftcopyPresentationStateStorage","RawDataStorage","SpatialRegistrationStorage","SpatialFiducialsStorage","DeformableSpatialRegistrationStorage","SegmentationStorage","SurfaceSegmentationStorage","RealWorldValueMappingStorage","SurfaceScanMeshStorage","SurfaceScanPointCloudStorage","StereometricRelationshipStorage","LensometryMeasurementsStorage","AutorefractionMeasurementsStorage","KeratometryMeasurementsStorage","SubjectiveRefractionMeasurementsStorage","VisualAcuityMeasurementsStorage","SpectaclePrescriptionReportStorage","OphthalmicAxialMeasurementsStorage","IntraocularLensCalculationsStorage","MacularGridThicknessandVolumeReport","OphthalmicVisualFieldStaticPerimetryMeasurementsStorage","OphthalmicThicknessMapStorage","CornealTopographyMapStorage","BasicTextSR","EnhancedSR","ComprehensiveSR","Comprehensive3DSR","ProcedureLog","MammographyCADSR","KeyObjectSelection","ChestCADSR","XRayRadiationDoseSR","RadiopharmaceuticalRadiationDoseSR","ColonCADSR","ImplantationPlanSRDocumentStorage","EncapsulatedPDFStorage","EncapsulatedCDAStorage","BasicStructuredDisplayStorage","RTDoseStorage","RTStructureSetStorage","RTBeamsTreatmentRecordStorage","RTPlanStorage","RTBrachyTreatmentRecordStorage","RTTreatmentSummaryRecordStorage","RTIonPlanStorage","RTIonBeamsTreatmentRecordStorage","RTBeamsDeliveryInstructionStorage","GenericImplantTemplateStorage","ImplantAssemblyTemplateStorage","ImplantTemplateGroupStorage","referencedSeriesInstanceUID","referencedFrameOfReferenceUID","filteredDerivedDisplaySets","referencedDisplaySet","getReferencedDisplaySet","getSeriesCount","forEachSeries","_createDisplaySetsForSeries","_insertDisplaySet","containsSeries","addDisplaySet","isValidCallback","firstIndexWithSameSeriesNumber","insertIndex","isLowPriorityModality","startingIndex","seriesDateTime","displaySetI","some","getSeriesByUID","found","isValidIndex","sum","getSeriesByIndex","findDisplaySet","images","firstSeries","getFirstSeries","findInstance","findSeriesAndInstanceByInstance","imageSet","sortBy","getImage","displayReconstructableInfo","displaySpacingInfo","sortByImagePositionPatient","datasetIs4D","firstImagePositionPatient","lastIpp","averageSpacingBetweenFrames","previousImagePositionPatient","spacingBetweenFrames","spacingIssue","isUniform","isSpacingUniform","imageSets","image","arrayOrObject","importInternal","cornerstoneTools","draw","drawLine","getNewContext","_drawCanvasCrosshairs","eventData","center","canvasContext","canvas","centerCanvas","cornerstone","pixelToCanvas","DICOM_SEG_TEMP_CROSSHAIRS_TOOL","getters","getModule","DICOMSegTempCrosshairsTool","mixins","initialProps","_rtStructModule","toolState","getToolState","drawCanvasCrosshairs","toolColors","getActiveColor","lineWidth","pop","addCrosshair","segmentNumber","labelmap3D","stackToolState","getEnabledElement","imageIdIndex","imageIds","imgId","labelmaps2D","xCenter","yCenter","globalToolState","globalImageIdSpecificToolStateManager","saveToolState","imageIdSpecificToolState","getToolForElement","setToolEnabled","definitions","defaultContext","loadSegmentation","segDisplaySet","labelmapBuffer","segMetadata","segmentsOnFrame","labelmapSegments","setters","labelmapIndex","_getNextLabelmapIndex","colorLUTIndex","_makeColorLUTAndGetIndex","labelmap3DByFirstImageId","CustomEvent","dispatchEvent","firstImageId","brushStackState","labelmaps3D","colorLutTables","_getNextColorLUTIndex","segment","ROIDisplayColor","RecommendedDisplayCIELabValue","colorLUT","rgb","Colors","dicomlab2RGB","refreshViewports","getEnabledElements","enabledElement","updateImage","studyMetadataManager","utils","setActiveLabelmap","onDisplaySetLoadFailure","getFirstImageId","activeLabelmapIndex","hasOverlapping","originLabelMapIndex","isLoaded","loadError","load","segLoadErrorMessagge","getSourceDisplaySet","activatedLabelmapPromise","activateLabelMap","onDisplaySetLoadFailureHandler","DicomLoaderService","OHIF","DICOM_SEG","_parseSeg","adapters","Cornerstone","Segmentation","generateToolState","metaData","_getImageIdsForDisplaySet","BrushColorSelector","defaultColor","onNext","onPrev","BrushRadius","SegmentationItem","SegmentationSettings","configuration","onBack","disabledFields","renderFill","renderOutline","shouldRenderInactiveLabelmaps","fillAlpha","outlineAlpha","outlineWidth","fillAlphaInactive","outlineAlphaInactive","check","save","toFloat","CustomCheck","CustomRange","persist","ColoredCircle","SegmentItem","onVisibilityChange","isVisible","setIsVisible","data-tip","data-for","delayShow","place","newVisibility","computedstyle","getComputedStyle","uiGrayDarker","getPropertyValue","activeColor","uiGrayDark","segmentationSelectStyles","singleValue","control","cursor","background","borderRadius","isFocused","borderColor","boxShadow","minHeight","menu","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","SegmentationSelect","formatOptionLabel","styles","getImageIdsForDisplaySet","getLabelMaps","labelmaps","segmentationModule","segments","colorLutTable","SegmentNumber","segmentItem","segmentIndex","SegmentLabel","SegmentDescription","flattenLabelmaps","createSegment","newLabelMap","labelMeta","SegmentedPropertyCategoryCodeSequence","CodeValue","CodingSchemeDesignator","CodeMeaning","SegmentAlgorithmType","SegmentAlgorithmName","SegmentedPropertyTypeCodeSequence","nextLabelmapIndex","labelmap2D","nextSegmentId","activeSegmentIndex","g","updateSegment","buffer","numberOfFrames","operation","segmentsOnLabelmap","unshift","segmentOffset","slicelengthInBytes","byteLength","srcBuffer","useSourceBuffer","sliceOffset","sliceLength","srcPixelData","updateSegmentMeta","desc","componentToHex","hex","rgbToHex","GenericNames","GenericAnatomyColors","SegmentationLabelForm","inputValue","newOption","createOption","dot","content","colourStyles","isDisabled","chroma","alpha","css","contrast","input","isClearable","onInputChange","onCreateOption","handleCreate","onChangeComplete","setColor","disableAlpha","randomName","ceil","hexToRgb","exec","getLabelColor","itkVersion","require","dependencies","itk","substring","itkModulesPath","SegmentationReader","nrrdfile","nrrd","encoding","pako","inflate","header","blob","msSaveOrOpenBlob","URL","createObjectURL","download","click","revokeObjectURL","nrrdBuffer","serializeNrrd","readImageArrayBuffer","response","writeArrayBuffer","webWorker","saveFile","Blob","nrrdOrg","serialize","SegmentationList","selectedSegmentId","uiModelService","hide","viewConstants","refreshSegTable","addedSegmentName","addedSegmentColor","onSegmentCreated","activeIndex","getSelectedActiveIndex","onSegmentUpdated","show","contentProps","onAddSegment","customClassName","getSegmentInfo","onUpdateSegment","textContent","newData","indexOfSegment","z","deleteSegment","onSegmentDeleted","notification","duration","onSegmentSelected","labels","overlap","parseNrrdData","seg","resp","uiDialogService","InputDialog","onClickSubmitLabel","dismissAll","params","label_info","submission_name","client","save_label","status","UINotificationService","UIModalService","UIDialogService","snapshot","setActiveSegment","segmentId","onClickAddSegment","onClickEditSegment","onClickDeleteSegment","onClickExportSegments","localStorage","getItem","canEditStudy","onClickSubmit","onSelectSegment","contentEditable","suppressContentEditableWarning","onKeyUp","onUpdateLabelOrDesc","marginTop","Client","server_url","api_get","model","infer","responseType","result_extension","port","encodeURIComponent","result_dtype","result_compress","api_post","searchParams","append","constructFormDataFromArray","api_put_data","fileName","formData","FormData","JSON","stringify","files","constructFormData","Authorization","axios","finally","delete","form","constructFormOrJsonData","api_post_data","post","accept","put","SegmentationPanel","viewports","onSegmentItemClick","onSegmentVisibilityChange","onConfigurationChange","onSelectedSegmentationChange","contexts","isVTK","VTK","isCornerstone","DEFAULT_BRUSH_RADIUS","radius","brushRadius","brushColor","selectedSegment","selectedSegmentation","showSettings","showList","labelMapList","segmentList","segmentsHidden","segmentNumbers","setCanEditStudy","getActiveViewport","getViewConstants","viewport","imageIdsToIndex","cookiePostfix","MD5","update","digest","getActiveLabelMaps3D","getBrushStackState","getActiveLabelMapIndex","getActiveSegmentIndex","getActiveLabelMaps2D","getCurrentDisplaySet","getDisplaySets","newLabelmapIndex","keys","labelmapModifiedHandler","studiesEditControl","refreshSegmentations","updateSegmentationComboBox","store","enabledElements","activatedLabelmapIndex","getLabelMapList","getSegmentList","numbers","_getReferencedSegDisplaysets","segDisplay","dateStr","displayDate","format","setCurrentSelectedSegment","validIndexList","labelMap2D","average","closest","curr","frameIndex","activeViewportIndex","labelMaps3D","currentDisplaySet","getColorLUTTable","onSegmentVisibilityChangeHandler","segmentationSeriesInstanceUID","uniqueSegmentIndexes","acc","segmentIndexes","hasLabelmapMeta","segmentLabel","segmentMeta","sameSegment","deleteSegmentation","referencedSegDisplaysets","filteredReferencedSegDisplaysets","wadoUri","date","wadoURI","patientID","form_data","axiosInstance","res","selectedSegmentationOption","newConfiguration","padding","marginLeft","isHidden","referencedDisplaysets","getDerivedDatasets","aNumber","SegmentsSection","defaultVisibility","version","preRegistration","servicesManager","BrushTool","csTools","SphericalBrushTool","CorrectionScissorsTool","tool","addTool","alwaysEraseOnClick","getToolbarModule","toolbarModule","getPanelModule","commandsManager","services","LoggerService","triggerSegmentationPanelTabUpdatedEvent","seriesInstanceUid","menuOptions","referencedDS","components","hooks","runCommand","globalOpacity","outlineThickness","autoClose","getSopClassHandlerModule","MODULE_TYPES","SOP_CLASS_HANDLER","authorizationHeaders","guid","wadouri","referencedDisplaySetUID","findDicomDataPromise","segArrayBuffer","_meta","namifyDataset","labelmapBufferArray","segmentsOnFrameArray","labelmapIndexes","dicomBrowserSelectStyles","DicomBrowserSelect","DicomBrowserSelectItem","nameMap","OHIFCornerstone","DicomTagTable","getFormattedRowsFromTags","tags","tagInfo","vr","tagIndent","keyword","formatedRowsFromTags","originalTagInfo","getStudyDataset","Tag","fromPString","toCleanString","_sortTagList","tagList","DicomTagBrowser","setActiveDisplaySetInstanceUID","activeInstance","setActiveInstance","setTags","setMeta","instanceList","setInstanceList","displaySetList","setDisplaySetList","isImageStack","setIsImageStack","activeDisplaySet","newDisplaySetList","getRows","depth","keywords","objectOrArray","sequenceAsArray","sequenceRows","getSortedTags","selectedDisplaySetValue","instanceSelectList","instanceIndex","commandName","getCommandsModule","actions","openDICOMTagViewer","activeViewportSpecificData","viewportSpecificData","noScroll","commandFn","storeContexts","TOOLBAR_BUTTON_TYPES","commandOptions","toolName","ModelSelector","currentModelInfo","currentModel","onSelectModel","filterBodyPart","buttonDisabled","models","onClickApply","current_state","user","useFilter","modelInfo","hasPerm","references","modelOwner","userPermissionsOnModel","email","matchingString","RegExp","test","match","lastIndexOf","onChangeModel","onClickBtn","isButtonDisabled","task","bodyPart","algorithm_overview","model_architecture","wordBreak","model_performance","data_description","inputModality","output","additional_info","created_at","BaseTab","onSelectActionTab","tabId","tabIndex","updateView","onOptionsConfig","Inference","nid","modelSelector","inputExtension","algo","segmentation","classification","layoutViewports","seriesIds","substr","registration","alert","snackbar","hideAll","bodyPartDescription","bodyParts","modelsAvailableHealthProfessionals","modelInputModality","onInference","ConnectedInference","connect","auth","larvitar","NrrdResult","getViewport","imageDimensions","voi","wwwc","stackData","scale","currentImageIdIndex","stackSize","color_maps","getColormapsList","color_counter","color_map","keyCode","colormap","colors","getColormap","setViewport","activeColorMap","updateTheImage","resultImage","csToolsUpdateImageIds","nrrdSeries","selectedResultId","resetImage","refreshTable","disableResultsButton","file","File","reader","FileReader","readAsArrayBuffer","scope","volume","importNRRDImage","serie","buildNrrdImage","renderImage","numberOfSlices","imageIndex","isColor","isTimeserie","thickness","spacing_x","spacing_y","wc","ww","defaultWW","defaultWC","displayImage","resize","invert","fitToWindow","seriesStack","getSeriesData","mainImage","logMouseButton","logScrollButton","logKeyButton","resultId","zoomPercentage","onClickDelete","onClickExport","onSelect","Panel","onInfo","isResultsButtonDisabled","onModelsClick","renderNrrd","action","onLeaveActionTab","onEnterActionTab","elements","segmentationList","nrrdImageList","disableResults","inference","onResultsClick","ConnectedPanel","panelModule","CircleScissorsTool","FreehandScissorsTool","RectangleScissorsTool","defaultStrategy","appProps","defaultExtensions","OHIFDicomSegmentationExtension","OHIFDicomTagBrowserExtension","OHIFMonaiLabelExtension","app","App","ReactDOM","render","OHIFError","attribute","attributes","hasOwn","sortingCallback","referenceImagePositionPatient","_getImagePositionPatient","refIppVec","Vector3","scanAxisNormal","cross","distanceImagePairs","ippVec","distance","clone","sub","sortedImages","ComputedRadiographyImageStorage","DigitalXRayImageStorageForPresentation","DigitalXRayImageStorageForProcessing","DigitalMammographyXRayImageStorageForPresentation","DigitalMammographyXRayImageStorageForProcessing","DigitalIntraOralXRayImageStorageForPresentation","DigitalIntraOralXRayImageStorageForProcessing","CTImageStorage","EnhancedCTImageStorage","LegacyConvertedEnhancedCTImageStorage","UltrasoundMultiframeImageStorage","MRImageStorage","EnhancedMRImageStorage","EnhancedMRColorImageStorage","LegacyConvertedEnhancedMRImageStorage","UltrasoundImageStorage","SecondaryCaptureImageStorage","MultiframeSingleBitSecondaryCaptureImageStorage","MultiframeGrayscaleByteSecondaryCaptureImageStorage","MultiframeGrayscaleWordSecondaryCaptureImageStorage","MultiframeTrueColorSecondaryCaptureImageStorage","XRayAngiographicImageStorage","EnhancedXAImageStorage","XRayRadiofluoroscopicImageStorage","EnhancedXRFImageStorage","XRay3DAngiographicImageStorage","XRay3DCraniofacialImageStorage","BreastTomosynthesisImageStorage","BreastProjectionXRayImageStorageForPresentation","BreastProjectionXRayImageStorageForProcessing","IntravascularOpticalCoherenceTomographyImageStorageForPresentation","IntravascularOpticalCoherenceTomographyImageStorageForProcessing","NuclearMedicineImageStorage","VLEndoscopicImageStorage","VideoEndoscopicImageStorage","VLMicroscopicImageStorage","VideoMicroscopicImageStorage","VLSlideCoordinatesMicroscopicImageStorage","VLPhotographicImageStorage","VideoPhotographicImageStorage","OphthalmicPhotography8BitImageStorage","OphthalmicPhotography16BitImageStorage","OphthalmicTomographyImageStorage","VLWholeSlideMicroscopyImageStorage","PositronEmissionTomographyImageStorage","EnhancedPETImageStorage","LegacyConvertedEnhancedPETImageStorage","RTImageStorage","ExtensionManager","registeredExtensionIds","registeredExtensionVesions","moduleTypeNames","_commandsManager","_servicesManager","_appConfig","_api","moduleType","extensions","ohifExtension","registerExtension","extensionId","extensionModule","_getExtensionModule","_initSpecialModuleTypes","lower","getModuleFnName","charAt","toUpperCase","getModuleFn","extensionManager","ex","_initCommandsModule","commandDefinitions","getContext","commandDefinition","registerCommand","ServicesManager","registeredServiceNames","service","ohifService","registerService","serviceShowRequestQueue","publicAPI","serviceImplementation","_hide","_show","setServiceImplementation","hideImplementation","showImplementation","showArguments","showScrollbar","dismiss","_dismiss","_dismissAll","onStart","onDrag","onStop","centralize","preservePosition","isDraggable","showOverlay","defaultPosition","_create","dismissImplementation","dismissAllImplementation","createImplementation","displayOnConsole","_info","_error","infoImplementation","errorImplementation","subscribe","eventName","_isValidEvent","listenerId","subscription","listeners","unsubscribe","_unsubscribe","publish","callbackProps","hasListeners","hasCallbacks","listener","EVENTS","MEASUREMENT_SCHEMA_KEYS","MEASUREMENT_UPDATED","INTERNAL_MEASUREMENT_UPDATED","MEASUREMENT_ADDED","RAW_MEASUREMENT_ADDED","MEASUREMENT_REMOVED","MEASUREMENTS_CLEARED","JUMP_TO_MEASUREMENT","VALUE_TYPES","POLYLINE","POINT","BIDIRECTIONAL","ELLIPSE","MULTIPOINT","CIRCLE","MeasurementService","obj","sources","mappings","measurements","_jumpToMeasurementCache","pubSubServiceInterface","_arrayOfObjects","measurement","source","definition","addOrUpdate","measurementId","getAnnotation","_getSourceId","sourceId","matchingCriteria","toSourceSchema","toMeasurementSchema","_isValidSource","mapping","_getSourceInfo","_getMappingByMeasurementSource","getMeasurement","matchingMapping","_getMatchingMapping","notYetUpdatedAtSource","updatedMeasurement","modifiedTimestamp","dataSource","sourceInfo","_sourceHasMappings","_isValidMeasurement","internalId","newMeasurement","sourceMeasurement","viewportIndex","_addJumpToMeasurement","properties","every","points","measurementData","regex","separator","renderingAttr","wadorsuri","getWADORSImageId","in","mountOnEnter","unmountOnExit","appear","onEnter","onEntering","onEntered","onExit","onExiting","onExited","fadeStyles","ENTERING","ENTERED","Fade","innerProps","cloneElement","onHide","animation","elementType","Overlay","child","transition","createChainedFunction","funcs","f","isOneOf","one","of","triggerType","delayHide","defaultOverlayShown","onBlur","onFocus","onMouseOut","onMouseOver","OverlayTrigger","handleToggle","handleDelayedShow","handleDelayedHide","handleMouseOver","handleMouseOverOut","handleMouseOut","_mountNode","renderOverlay","unmountComponentAtNode","_hoverShowDelay","_hoverHideDelay","relatedNative","related","relatedTarget","nativeEvent","unstable_renderSubtreeIntoContainer","_overlay","Children","only","childProps","triggerProps","warning","makeOverlay","StudyMetadataSource","moduleName","StudyMetaDataPromises","retrieveStudyMetadata","filters","separateSeriesInstanceUIDFilters","has","seriesInstanceUIDs","seriesSpecificFilters","RetrieveMetadata","__separateSeriesRequestToAggregatePromiseateSeriesRequestToAggregatePromise","deleteStudyMetadataPromise","UPDATE_TOKEN","SUPERUSER_LOGIN_SUCCESS","SUPERUSER_LOGIN_FAIL","INVESTIGATOR_LOGIN","HEALTHPROFESSIONAL_LOGIN","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","SUPERUSER_AUTHENTICATED_SUCCESS","SUPERUSER_AUTHENTICATED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","GOOGLE_AUTH_SUCCESS","GOOGLE_AUTH_FAIL","FACEBOOK_AUTH_SUCCESS","FACEBOOK_AUTH_FAIL","GITHUB_AUTH_SUCCESS","GITHUB_AUTH_FAIL","LINKEDIN_AUTH_SUCCESS","LINKEDIN_AUTH_FAIL","SPOTIFY_AUTH_SUCCESS","SPOTIFY_AUTH_FAIL","USER_LOADED_APPS_SUCCESS","USER_LOADED_APPS_FAIL","LOGOUT","positionTop","positionLeft","arrowOffsetTop","arrowOffsetLeft","Tooltip","outerStyle","arrowStyle","str","strLen","bytes","charCodeAt","ObjectPath","path","getPathComponents","isValidObject","last","currentObject","isValid","absoluteUrl","absolutePath","origin","absoluteUrlParts","rootUrlPrefixIndex","addServers","servers","serverType","endpoint","dispatch","imageObj","someInvalidStrings","strings","getImageInstance","getImageInstanceId","imageInstance","fetchIt","fetch","cornerstoneRetriever","loadAndCacheImage","wadorsRetriever","retrieveInstance","dicomLoaderService","localFile","findImageIdOnStudies","cornerstoneWADOImageLoader","loadFileRequest","getDicomDataMethod","loaderRegExp","loaderType","lastIndex","getImageLoaderType","getSOPInstanceUID","getLocalData","getDataByImageType","getDataByDatasetType","loaderIterator","getLoaderIterator","loader","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","byteNumbers","logger","derivedDisplaySets","displaySetsPerModality","recentDateTime","recentDisplaySet","dateTime","selectionFired","lastDateTime","loadAndCacheDerivedDisplaySets","toLowerCaseFirstLetter","toParse","lib","getQueryFilters","search","searchParameters","paramString","isValidPath","paramPatternPiece","parseParam","paramStr","_paramDecoded","strToDecode","decoded","decode","replaceParam","paramKey","paramValue","paramPattern","makeDeferred","rej","freeze","Queue","awaiting","boundTask","queue","cleaner","clean","chain","SEPARATOR","addToList","addValuesToList","isSublist","sublist","toSublist","forEachValue","indexOrPath","subpath","print","prevLen","repeat","subject","TYPE","TASK","LIST","createList","objectWithType","named","observers","isList","isOfType","createTask","isTask","failed","progress","increaseList","notify","getOverallProgress","isValidProgress","finish","seal","total","partial","failures","waitOn","thenable","addDeferred","deferred","setTaskName","getTaskByName","addObserver","observer","removeObserver","writeScript","StackManager","urlUtil","makeCancelable","isCanceled","cancel","hotkeys","isDicomUid","trim","resolveObjectPath","root","hierarchicalListUtils","progressTrackingUtils","xhrRetryRequestHook","noop","StudyPrefetcher","order","displaySetCount","onImageCached","requestType","preventCache","prefetchDisplaySetsTimeout","maxNumPrefetchRequests","includeActiveDisplaySet","stopPrefetching","events","cacheFullHandler","prefetchDisplaySets","imageLoadPoolManager","clearRequestStack","prefetchDisplaySetsHandler","displaySetsToPrefetch","getDisplaySetsToPrefetch","getImageIdsFromDisplaySets","prefetchImageIds","requestFn","nonCachedImageIds","filterCachedImageIds","maxNumRequests","prefetch","addRequest","getInstanceByUID","displaySetImage","getActiveViewportImage","getStudy","getSeries","getInstance","getDisplaySetByUID","getDisplaySetBySOPInstanceUID","prefetchOrder","topdown","downward","upward","selectedDisplaySets","activeDisplaySetIndex","reverse","begin","right","getImageIdsFromDisplaySet","numFrames","isImageCached","imageCache","sizeInBytes","BaseLoadingListener","getNewId","statsItemsLimit","stats","elapsedTime","speed","_setProgressData","_clearProgressById","_addStatsData","_updateProgress","newItem","oldestItem","getTime","progressId","_getProgressId","stopListening","_clearProgress","timeSlice","randomNumber","DICOMFileLoadingListener","dataSetUrl","_convertImageIdToDataSetUrl","bytesDiff","loaded","_lastLoaded","_dataSetUrl","imageLoadProgressEventHandler","_imageLoadProgressEventHandler","_getDataSetUrl","_checkCachedData","startListening","dataSet","dataSetCacheManager","dataSetLength","percentComplete","imageLoadProgressEventName","_getImageLoadProgressEventName","imageLoadProgressEventHandle","progressData","multiFrame","bytesLoaded","bytesTotal","bytesPerSecond","StudyLoadingListenerEvents","OnProgress","promiseState","uniqueValue","race","reason","StackLoadingListener","imageLoadedEventHandler","_imageLoadedEventHandler","imageCachePromiseRemovedEventHandler","_imageCachePromiseRemovedEventHandler","imageDataMap","_convertImageIdsArrayToMap","framesStatus","_createArray","loadedCount","_debouncedSetProgressData","debounce","studyPrefetcher","getElement","imageIdsMap","debounced","imageObject","getImageLoadObject","_updateFrameStatus","IMAGE_LOADED","IMAGE_CACHE_PROMISE_REMOVED","imageLoadedEventName","_getImageLoadedEventName","imageCachePromiseRemovedEventName","_getImageCachePromiseRemoveEventName","imageData","totalFramesCount","loadedFramesCount","loadingFramesCount","framesPerSecond","progressBar","ch","StudyLoadingListener","stackMetaData","_createListener","findOrCreateStack","addStack","addStudy","displaySetInstanceUIDs","destroy","_getSchema","colonIndex","DEFAULT_OPTIONS","_subscriptions","_lastSubscriptionId","PubSub","subscriptionId","callbacks","payload","LogEvents","OnLog","OHIFStudyMetadataSource","studyInfo","viewer","Studies","_updateStudyCollections","getByInstanceUID","createDisplaySets","MetadataProvider","CommandsManager","HotkeysManager","LogManager","imagesTypes","UrlUtil","IHEInvokeImageDisplay","UploadModel","ModelList","Editor","ViewerRouting","StudyListRouting","StandaloneRouting","ViewerLocalFileData","Superuser","TwoFA","View_groups","Group_details","View_studies","View_models","Add_permissions","Add_models","Add_or_Remove_studies","Remove_permissions","NewGroup","Add_elements","Verify_Secret","ROUTES_DEF","superuser","verifySecret","groupDetails","removePermissions","addGroup","addElements","addModels","addRemoveStudies","addPermissions","viewModels","viewStudies","viewGroups","twoFa","standaloneViewer","upload","modelList","editor","local","getRoutes","routes","keyConfig","routesConfig","routeKey","route","condition","parsePath","_path","_paramsCopy","parseViewerPath","viewerPath","enableGoogleCloudAdapter","gcloud","Value","padFour","convertToInt","requestOptions","btoa","username","getModalities","ModalitiesInStudy","getName","getNumber","getString","LOW_PRIORITY_MODALITIES","validate","validators","equals","doesNotEqual","doesNotContain","startsWith","endsWith","CustomAttributeRetrievalCallbacks","HPMatcher","metadataInstance","rules","details","passed","requiredFailed","score","rule","customAttribute","setCustomAttribute","errorMessages","testConstraint","constraint","attributeMap","customAttributeExists","getCustomAttribute","weight","CustomViewportSettings","comparators","validator","validatorOption","EQUALS_REGEXP","Rule","_constraintInfo","_validatorAndValue","constraintInfo","ruleConstraint","comparator","isRuleForPrior","ruleValidatorAndValue","getConstraintValidatorAndValue","intValue","validatorAndValue","getConstraintInfo","currentValidator","ProtocolMatchingRule","StudyMatchingRule","SeriesMatchingRule","ImageMatchingRule","removeFromArray","indexToRemove","ViewportStructure","Viewport","viewportSettings","imageMatchingRules","seriesMatchingRules","studyMatchingRules","ruleObject","fromObject","Stage","viewportStructure","createdDate","currentStage","clonedStage","viewportObject","Protocol","locked","hasUpdatedPriorsInformation","modifiedDate","userLoggedIn","createdBy","getUserId","modifiedBy","availableTo","editableBy","protocolMatchingRules","stages","numberOfPriorsReferenced","skipCache","stage","priorsReferenced","getNumberOfPriorsReferenced","updateNumberOfPriorsReferenced","stageObject","currentProtocol","clonedProtocol","protocolWasModified","ProtocolEngine","protocolStore","priorStudies","studyMetadataSource","reset","newStageIds","protocol","getBestProtocolMatch","setHangingProtocol","matched","studyInstance","numberOfAvailablePriors","getNumberOfAvailablePriors","getObjectID","getProtocol","matchedProtocols","clear","matchedProtocolScores","_clearMatchedProtocols","findMatchByStudy","matchedDetail","highestScoringProtocolId","_largestKeyByValue","updateProtocolMatches","bestMatch","_getHighestScoringProtocol","studyObjectID","getAvailableStudyPriors","priors","instanceMatchingRules","matchingScores","currentStudy","highestStudyMatchingScore","highestSeriesMatchingScore","priorStudy","validatorType","abstractPriorValue","studyIndex","priorStudyObjectID","loadStudy","updateViewports","studyMatchDetails","seriesMatchDetails","instanceMatchDetails","matchDetails","totalMatchScore","currentSOPInstanceUID","imageDetails","matchingScore","sortingInfo","getUID","sortingFunction","numRows","numColumns","setLayout","numViewports","getNumProtocolStages","stageModel","getCurrentStageModel","getLayoutTemplateName","layoutProps","viewportData","matchImages","cornerstoneViewportParams","viewportSettingsKeys","currentViewportData","customSettings","renderedCallback","customSetting","currentMatch","currentPosition","scoresLength","setViewportSpecificData","newProtocol","isPrototypeOf","numberOfStages","stageAction","isPreviousStageAvailable","isNextStageAvailable","setCurrentProtocolStage","ProtocolStore","strategy","protocolObject","protocolInstance","onReady","protocolId","getProtocolInstance","addProtocol","updateProtocol","removeProtocol","defaultProtocol","oneByOne","first","getDefaultProtocol","hangingProtocols","ProtocolStrategy","defaultsAdded","addCustomAttribute","attributeId","attributeName","addCustomViewportSetting","settingId","settingName","getNestedObject","shallowObject","nestedObject","propertyArray","currentProperty","getShallowObject","putValues","baseKey","resultObject","currentKey","currentValue","isString","pattern","encodeId","ui","getOffset","offsetParent","offsetLeft","offsetTop","isCharacterKeyPress","which","ctrlKey","metaKey","altKey","handleError","hideConfirm","cancelLabel","cancelClass","redux","DICOMSR","fields","n_fields","A","B","primer","stackMap","stackUpdatedCallbacks","createAndAddStack","numImages","naturalizedInstance","frameNumber","addImageIdToUIDs","clearStacks","makeAndAddStack","findStack","getAllStacks","addStackUpdatedCallback","getConfiguration","setConfiguration","PROPERTY_SEPARATOR","ORDER_ASC","ORDER_DESC","MIN_COUNT","_operationCount","_elementList","_handlers","silent","_elements","handlers","_isFunction","_elementWithPayload","_invalidate","_elementWithId","_trigger","propertyMap","findAllEntriesBy","foundCount","removed","_isObject","_compareToPropertyMapStrict","_sortListBy","_isString","_hasOwnProperty","_getPropertyValue","targetObject","propertyName","propertyValue","fragments","fragmentCount","firstFragment","remainingFragments","specifiers","_isValidSortingSpecifier","specifierCount","specifier","aValue","bValue","arrowAnnotate","toolGroup","cornerstoneToolType","measurementTable","displayFunction","caseProgress","include","evaluate","bidirectional","shortestDiameter","longestDiameter","ellipticalRoi","meanValue","cachedStats","mean","isNaN","circleRoi","freehandMouse","meanStdDev","lengthValue","nonTarget","rectangleRoi","angle","rAngle","fromCharCode","targetCR","targetNE","targetUN","dicomSRDisplayTool","lesionNamingNumber","measurementNumber","childTools","tools","measurementApiDefaultConfig","measurementTools","newLesions","toolGroupId","dataExchange","retrieve","timepointIds","timepointData","timepointId","disassociate","TIMEPOINT_TYPE_NAMES","prebaseline","baseline","followup","TimepointApi","currentTimepointId","Instance","initialize","comparisonTimepointKey","timepoints","onTimepointsUpdated","timepoint","visitNumber","tp1","tp2","visitDate","tp","timepointType","retrievalFn","timepointIndex","storeFn","disassociateFn","retrieveTimepoints","removeFn","tpIndex","updateFn","prior","comparisonTimepoint","comparison","userComparison","nextBaselineAfterCurrent","currentTimepoint","allNextTimepoints","latestInitialBeforeNextFUIndex","timepointToCheck","latestInitialTimepointAfterCurrent","visitDateToCheck","preBaselineTimepointIds","baselineTimepointIds","currentVisitDate","nadir","timepointKey","resultIncludes","studyInstanceUIDs","timepointTypeName","calculateVisitNumber","timepointName","currentIndex","parenthesis","0","1","parenthesisText","toolType","imagePath","MeasurementApi","timepointApi","toolsGroupsMap","getToolsGroupsMap","measurementLabel","getLabel","getToolConfiguration","childToolKey","childMeasurement","_id","syncMeasurementAndToolData","getImageIdForImagePath","currentToolState","toolData","alreadyExists","restoreToolState","toolGroups","toolGroupTools","getToolGroupTools","onMeasurementsUpdated","measurementTypeId","isReadOnly","addMeasurement","syncMeasurementsAndToolData","isToolIncluded","timepointFilter","sortedMeasurements","toolId","toolItemId","includedChildTools","toolConfig","parentTool","currentMeasurement","initialTimepointIds","initialtpid","lesionExistsAtTimepoints","groupId","toolGroupMeasurement","isNewLesionsMeasurement","maxTargetMeasurementNumber","calculateLesionMaxMeasurementNumber","maxNonTargetMeasurementNumber","maxNewTargetMeasurementNumber","calculateNewLesionMaxMeasurementNumber","maxNewNonTargetMeasurementNumber","additionalData","TrialPatientLocationUID","childToolTypes","childToolType","collectionToUpdate","propertyFilter","increment","updateNumbering","groupCollection","collection","relatedMeasurement","emptyItem","groupTool","createdAt","measurementsInTimepoint","calculateLesionNamingNumber","calculateMeasurementNumber","addedMeasurement","updateObject","getPreviousMeasurement","isSplitLesion","isNodal","getDescription","hasDuplicateMeasurementNumber","updateMeasurementNumberForAllMeasurements","toolIndex","groupIndex","group","lesionNamingNumberFilter","tGroup","childTool","filterKeys","groupItems","filterKey","groupItem","measurementsData","measurementEntries","measurementEntry","mEntry","onMeasurementRemoved","syncFilter","syncFilterKeys","syncFilterKey","BaseCriterion","criterionName","isGlobal","baselineMeasurementNumbers","newTargetNumbers","newTarget","targets","LocationSchema","LocationCriterion","nonTargets","generateResponse","MaxTargetsPerOrganSchema","minimum","MaxTargetsPerOrganCriterion","targetsPerOrgan","getNewTargetNumbers","MaxTargetsSchema","locationIn","minItems","uniqueItems","locationNotIn","MaxTargetsCriterion","measurementNumbers","lesionType","plural","amount","MeasurementsLengthSchema","longAxis","shortAxis","longAxisSliceThicknessMultiplier","shortAxisSliceThicknessMultiplier","modalityIn","modalityNotIn","anyOf","MeasurementsLengthCriterion","longMultiplier","shortMultiplier","childToolsCount","ModalitySchema","method","enum","measurementTypes","ModalityCriterion","modalitiesSet","validationMethod","invalidModalities","measurementType","uniqueModalities","uniqueModalitiesText","modalityText","NonTargetResponseSchema","NonTargetResponseCriterion","TargetTypeSchema","TargetTypeCriterion","Criteria","initialCriteria","CriteriaEvaluator","criteriaObject","criteriaValidator","getCriteriaValidator","criteria","errors","dataPath","criterionkey","optionsObject","Criterion","criterionKey","criterionDefinitions","criterion","newTargetMatch","schema","criterionDefinition","$ref","Ajv","compile","nonconformities","criterionResult","recist11","evaluations","initialEvaluations","ConformanceCriteria","measurementApi","groupedNonConformities","maxTargets","maxNewTargets","trialCriteriaType","baselinePromise","followupPromise","baselineData","followupData","mergedData","resultBoth","validateTimepoint","resultBaseline","resultFollowup","groupNonConformities","groups","nonConformity","globals","messages","groupName","measureNumber","evaluators","getEvaluators","evaluator","getMaxTargets","resultItem","trialCriteriaTypeId","evaluation","evaluationTimepoint","studyPromises","fillData","evaluationKey","evaluationDefinitions","refreshCornerstoneViewports","handleSingleMeasurementAdded","cancelled","imageAttributes","getImageAttributes","userId","additionalProperties","parentMeasurement","updateMeasurement","handleSingleMeasurementRemoved","deleteMeasurements","measurementIndex","getEventData","MeasurementHandlers","handleChildMeasurementAdded","handleSingleMeasurementModified","handleChildMeasurementModified","handleChildMeasurementRemoved","onAdded","onModified","onRemoved","temp","ltTools","resultDataToStudyMetadata","resultData","seriesMap","wadoUriRoot","dateToString","getFullYear","getMonth","getDate","resultDataToStudies","referringPhysicianName","PatientBirthdate","patientSex","studyId","numberOfStudyRelatedSeries","numberOfStudyRelatedInstances","staticWado","qidoRoot","StaticWadoClient","qidoSupportsIncludeField","queryParams","serverSupportsQIDOIncludeField","commaSeparatedFields","parameters","fuzzymatching","includefield","dateFrom","dateTo","studyUIDs","getQIDOQueryParams","searchForStudies","WADO","QIDO","Instances","searchForInstances","studySearchPromises","loadingDict","retrieveStudiesMetadata","getStudyBoxData","searchStudies","promiseKeyObj","promiseKey","sortStudy","getWADORSImageUrl","INFO","getSeriesInfo","isLowPriority","seriesSortCriteria","seriesInfoSortingCriteria","secondSeries","instancesSortCriteria","sortingCriteria","sortStudySeries","seriesSortingCriteria","sortStudyInstances","instancesList","instancesSortingCriteria","deepSort","getReferencedSeriesSequence","referencedSeriesSequenceRaw","referencedSeriesSequence","referencedSeries","referencedInstanceSequenceRaw","referencedInstanceSequence","referencedInstance","referencedSOPClassUID","referencedSOPInstanceUID","createStudy","aSopInstance","seriesLoader","NumberOfStudyRelatedInstances","InstitutionName","buildInstanceWadoUrl","buildInstanceWadoRsUri","buildInstanceFrameWadoRsUri","baseWadoRsUri","makeSOPInstance","sopInstance","imageRendering","thumbnailRendering","wadoRSMetadata","wadorsImageId","wadors","metaDataManager","addInstancesToStudy","sopInstanceList","createStudyFromSOPInstanceList","firstSopInstance","RetrieveMetadataLoader","configLoad","preLoad","preLoadData","loadData","posLoad","postLoadData","loaders","done","RetrieveMetadataLoaderSync","retrieveSeriesMetadata","getLoaders","runLoaders","attachSeriesLoader","hasNext","sopInstances","makeSeriesAsyncLoader","seriesInstanceUIDList","RetrieveMetadataLoaderAsync","preLoaders","searchForSeries","getPreLoaders","seriesSorted","seriesInstanceUIDsMap","seriesAsyncLoader","asyncLoader","idx","seriesDataFromQIDO","enableStudyLazyLoad","retrieveMetadataLoader","execLoad","external","Hammer","cornerstoneMath","loadHandlerManager","setErrorLoadingHandler","fontFamily","textStyle","setFont","toolStyle","setToolWidth","setToolColor","setActiveColor","touchProximity","stackPrefetch","maxImagesToPrefetch","preserveExistingPool","maxSimultaneousRequests","SUPPORTED_TOOLS","measurementServiceMappingsFactory","measurementService","_getAttributes","_getValueTypeFromToolType","Length","EllipticalRoi","RectangleRoi","ArrowAnnotate","_getPointsFromHandles","handles","handle","point","_getHandlesFromPoints","toAnnotation","unit","referenceSeriesUID","_measurementServiceId","toMeasurement","csToolsAnnotation","area","TrackingUniqueIdentifier","trackingIdentifiersByEnabledElementUUID","trackingUniqueIdentifiersForElement","uuid","trackingUniqueIdentifiers","activeTrackingUniqueIdentifierForElement","trackingIdentifiersForElement","tuid","register","srModuleId","dicomSRModule","callInputDialog","dialogId","useLastPosition","csToolsConfig","Infinity","addProvider","initCornerstoneTools","globalToolSyncEnabled","showSVGCursors","autoResizeViewports","toolsGroupedByType","touch","PanMultiTouchTool","ZoomTouchPinchTool","annotations","ArrowAnnotateTool","BidirectionalTool","LengthTool","AngleTool","FreehandRoiTool","EllipticalRoiTool","DragProbeTool","RectangleRoiTool","other","PanTool","ZoomTool","WwwcTool","WwwcRegionTool","MagnifyTool","StackScrollTool","StackScrollMouseWheelTool","OverlayTool","toolsGroup","_connectToolsToMeasurementService","internalToolsConfig","getTextCallback","eventDetails","changeTextCallback","externalToolProps","internalToolProps","merge","toolsWithHideableHandles","parsedProps","hideHandles","drawHandlesOnHover","parseToolProps","BaseAnnotationTool","setToolPassive","setToolActive","mouseButtonMask","pointers","csToolsVer4MeasurementSource","createSource","valueType","addMapping","_initMeasurementService","ELEMENT_ENABLED","annotation","addMeasurementServiceId","MEASUREMENT_MODIFIED","csToolsEvtName","csTool","measurementServiceId","addOrUpdateMeasurement","setCornerstoneLayout","CornerstoneViewportDownloadForm","activeEnabledElement","enable","disable","updateViewport","toDataURL","newWidth","newHeight","multiplier","translation","toggle","setToolEnabledForElement","setToolDisabledForElement","mimetype","msToBlob","msSaveBlob","querySelector","toBlob","URLObj","webkitURL","scroll","import","commandsModule","rotateViewport","rotation","flipViewportHorizontal","hflip","flipViewportVertical","vflip","scaleViewport","resetViewport","invertViewport","clearAnnotations","imageIdToolState","measurementsToRemove","nextImage","previousImage","getActiveViewportEnabledElement","showDownloadViewportModal","updateTableWithNewMeasurementData","getNearbyToolData","canvasCoordinates","availableToolTypes","nearbyTool","pointNearTool","elementToolData","elementToolInstance","removeToolState","setWindowLevel","level","jumpToImage","rotateViewportCW","rotateViewportCCW","scaleUpViewport","scaleDownViewport","fitViewportToWindow","setZoomTool","COMMAND","SET_TOOL_ACTIVE","BUILT_IN","TOOLBAR_BUTTON_BEHAVIORS","CINE","DOWNLOAD_SCREEN_SHOT","behavior","togglable","lazy","OHIFCornerstoneViewport","Suspense","getViewportModule","isStackPrefetchEnabled","enabled","onNewImage","jumpData","isAuthenticated","isInvestigatorAuthenticated","isHealthProfessionalAuthenticated","isSuperuserAuthenticated","logout","redirect","setRedirect","logout_user","toast","success","hideProgressBar","closeOnClick","pauseOnHover","draggable","logout_user2","data-target","aria-controls","aria-expanded","to","social_apps","newestOnTop","rtl","pauseOnFocusLoss","defaults","xsrfHeaderName","xsrfCookieName","withCredentials","csrftoken","Cookies","profession","isbeingApproved","hasMedicalCertificate","setFormData","selectedFile","setSelectedFile","Accept","HTTP_X_CSRFTOKEN","Status","onChange1","load_user_apps","facebookAuthenticate","useLocation","login","hasSecret","notMedicalCertificate","pin","githubAuthenticate","spotifyAuthenticate","linkedinAuthenticate","faGithub","loginSuperuser","prop","password","showPassword","setValues","onSubmit1","continueWithGoogle","authorization_url","continueWithFacebook","Input","getModifierState","minLength","endAdornment","InputAdornment","IconButton","onMouseDown","faGoogle","faFacebook","faLinkedin","faSpotify","signup","accountCreated","first_name","last_name","re_password","showRe_Password","handlePasswordChange","input_password","confirm_password","text1","text2","verify","verified","setVerified","token","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","googleAuthenticate","initialState","access","refresh","superuser_authenticated","authenticated","investigator_authenticated","healthProfessional_authenticated","setItem","removeItem","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","checkAuthenticated_Superuser","checkAuthenticated","load_user","updateToken","authTokens","setAuthTokens","loading","setLoading","setInterval","clearInterval","initialized","MAX_CONCURRENCY","reducers","sessionStorage","thunkMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combineReducers","preloadedState","loadState","disableServersCache","saveState","getState","setViewportActive","setActiveViewportSpecificData","updateActiveViewport","maxIndex","newIndex","setWindowLevelPreset","preferences","windowLevelData","updateViewportDisplaySet","currentDisplaySetIndex","newDisplaySetData","incrementActiveViewport","decrementActiveViewport","windowLevelPreset1","windowLevelPreset2","windowLevelPreset3","windowLevelPreset4","windowLevelPreset5","windowLevelPreset6","windowLevelPreset7","windowLevelPreset8","windowLevelPreset9","nextViewportDisplaySet","previousViewportDisplaySet","MeasurementTableItem","btnLabel","onClickCallback","measurement_number","onMeasurementDelete","actionButtons","onRelabel","relabelButton","getActionButton","onRelabelClick","created_by","onDelete","deleteButton","onDeleteClick","measurementDelete","last_modification_by","last_modification_at","getDataDisplayText","onReport","onEditDescription","getTableListItem","isStructuredReportSeries","compareSeriesDate","series1","series2","_data","findMostRecentStructuredReport","mostRecentStructuredReport","Report","report","saveReport","isEditingDjango","Form","initialValues","formRenderProps","FormElement","theme","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showPrintMargin","highlightActiveLine","ConnectedReport","MeasurementTable","measurementCollection","selectedMeasurementNumber","onEditDescriptionClick","saveFunction","onSaveComplete","modal","selectedKey","setSelectedKey","setInfo","el","filtered","djangoMeasurement","collectionMeasurement","wadorsURI","fetchInfo","isRepeated","rep","deleteMeasurement","instance_uid","myNewMeasurement","latestSeries","withModal","getMeasurementText","getDataForEachMeasurementNumber","measurementNumberList","eachData","convertMeasurementsToTableData","toolCollections","getAllTools","tableMeasurements","toolMeasurements","groupedMeasurements","groupedMeasurementsIndex","isToolSupported","hasWarnings","warningTitle","warningList","tableMeasurement","itemNumber","tm","m1","m2","convertTimepointsToTableData","latestDate","ConnectedMeasurementTable","timepointManager","storeMeasurements","getSaveFunction","ownProps","dispatchRelabel","viewportsState","toolForLocation","dispatchEditDescription","dispatchJumpToRowItem","timepointManagerState","invertViewportTimepointsOrder","layout","numTimepoints","numViewportsToUpdate","measurementsForToolGroup","measurementsToJumpTo","dataAtThisTimepoint","displaySetContainsSopInstance","jumpToRowItem","measurementToActive","propsFromState","propsFromDispatch","LabellingTransition","displayComponent","onTransitionExit","OHIFLabellingData","EditDescriptionDialog","onUpdate","autoComplete","LabellingFlow","editLocation","editDescription","skipAddLabelButton","updateLabelling","labellingDoneCallback","editDescriptionOnDialog","fadeOutTimer","setFadeOutTimer","showComponent","setShowComponent","descriptionInput","newMeasurementData","newEditLocation","focus","relabel","setDescriptionUpdateMode","descriptionCancel","handleKeyPress","descriptionSave","selectTreeSelectCallback","itemSelected","locationLabel","showLabelling","fadeOutAndLeaveFast","onKeyPress","labellingStateFragment","initialTopDistance","toolTypes","ToolContextMenu","onSetLabel","onSetDescription","isTouchEvent","defaultDropdownItems","actionType","nearbyToolData","dropdownItems","currentPoints","getDropdownItems","MEASUREMENT_ACTION_MAP","added","modified","throttle","onMeasurementsChanged","onMeasurementAdded","onMeasurementModified","onLabelmapModified","_getDefaultPosition","showLabellingDialog","labellingData","_updateLabellingHandler","onTouchPress","onTouchStart","resetLabelligAndContextMenu","cornerstoneMouseClickEvent","LABELMAP_MODIFIED","TOUCH_PRESS","MOUSE_CLICK","TOUCH_START","ELEMENT_DISABLED","Bar","animationDuration","opacity","transform","Container","isFinished","pointerEvents","OHIFStandaloneViewer","unlisten","history","listen","setContext","pathname","RoutesUtil","currentPath","noMatchingRoutes","matchPath","exact","isAnimating","NotFound","userManager","ConnectedOHIFStandaloneViewer","ViewerbaseDragDropContext","withRouter","commandsManagerConfig","getAppState","ohif","showStudyList","cornerstoneExtensionConfig","routerBasename","homepage","process","env","PUBLIC_URL","getAccessToken","oidc","access_token","httpErrorHandler","configure","beforeSend","xhr","setRequestHeader","registerServices","requiredExtensions","GenericViewerCommands","OHIFCornerstoneExtension","MeasurementsPanel","mergedExtensions","registerExtensions","_initExtensions","_initServers","maxWebWorkers","hardwareConcurrency","startWebWorkersOnDemand","taskConfiguration","decodeTask","initializeCodecsOnStartup","usePDFJS","strict","webWorkerManager","initWebWorkers","basename","Home","Login","Signup","Add_description","Facebook","Google","Github","Linkedin","Spotify","ResetPassword","ResetPasswordConfirm","Activate","ExportedApp","modelDateTo","modelDateFrom","datePresets","mediumTableMeta","ModelContent","fieldRenderProps","others","TextArea","autoSize","maxLength","fieldType","ValidationMessage","valid","visited","validationMessage","caption","goToEditor","deleteRecord","readOnly","valueGetter","Field","FormTextArea","requiredValidator","optional","onFormReset","allowSubmit","ConnectedModelContent","ModelContentNoEdit","ConnectedModelContentNoEdit","ModelListRoute","setSort","setFilterValues","setModels","isSearchingForModels","searchStatus","setSearchStatus","setRowsPerPage","setPageNumber","appContext","debouncedSort","debouncedFilters","getModelList","isFetching","fetchModels","modelListDateFilterNumDays","mappedFilters","_fetchModels","sortedModels","_sortModels","numToTake","fieldA","fieldB","toISOString","param","ViewportErrorIndicator","bottom","ViewportLoadingIndicator","ImageThumbnail","loadingOrError","cancelablePromise","imageSrc","stackPercentComplete","propsError","showProgressBar","setImage","canvasRef","showStackLoadingProgressBar","shouldRenderToCanvas","fetchImagePromise","setImagePromise","purgeCancelablePromise","renderToCanvas","ThumbnailFooter","hasDerivedDisplaySets","inconsistencyWarnings","inconsistencyWarningsSet","derivedDisplaySetsActive","derivedDisplaySetsActiveSet","unmounted","infoOnly","getInfo","getWarningContent","listedWarnings","getDerivedInfo","getWarningInfo","getSeriesInformation","altImageText","onDoubleClick","supportsDrag","setStackPercentComplete","onProgressChange","percent","useDrag","canDrag","monitor","drag","hasImage","hasAltText","qidoConfig","searchResult","filterItem","desired","actual","compareValues","actualItem","range","dash","testValue","valueElem","compareDateRange","createSelector","activeLayoutViewport","activeViewportPluginName","activeViewportExtension","Group","loginInvestigator","loginHealthProfessional","formBody","medical_certificate","adjust","angleDoubleDown","angleDoubleUp","angleLeft","arrows","arrowsAltH","arrowsAltV","bars","brain","brush","caretDown","caretUp","checkCircle","checkCircleO","chevronDown","circle","circleNotch","circleO","clipboard","cog","createComment","createScreenCapture","crosshairs","cube","d3Rotate","database","dotCircle","edit","ellipseCircle","ellipseH","ellipseV","exclamationCircle","exclamationTriangle","fastBackward","fastForward","stop","inlineEdit","linkCircles","liver","lock","lockAlt","lung","measureNonTarget","measureTarget","measureTargetCr","measureTargetNe","measureTargetUn","measureTemp","objectGroup","ohifLogo","ohifTextLogo","oval","palette","play","plus","powerOff","rotate","rotateRight","saveRegular","scissors","searchPlus","softTissue","sortDown","sortUp","sphere","squareO","star","stepBackward","stepForward","sun","th","thLarge","thList","times","trash","unlink","youtube","eye","eyeClosed","envelopeSquare","ICONS","getIcon","approval","setApproval","img_data","Img","onSubmit2","secret_key","getCode","seeGroups","setGroups","Groups","seeDetails","badUser","userName","mainUser","appUser","users","setUsers","permissions","setPermissions","userSpecificPerms","setUserSpecificPerms","userDetails","Perms","Users","Permissions","deleteGroup","Msg","closeToast","Msg2","removeGroup","paddingBottom","paddingRight","permission","givenByGroup","userr","userEmail","selectedPermissions","setSelectedPermissions","handleSubmit","inputElements","getElementsByClassName","namePermissions","perm","selectedModels","setSelectedModels","setStudies","selectedStudies","setSelectedStudies","selectedUsers","setSelectedUsers","patient_name","patient_id","study_date","filterValuesUsers","setFilterValuesUsers","filterValuesModels","setFilterValuesModels","fetchStudies","_fetchStudies","fetchUsers","_getUsers","person","userData","mediumTableMetaUsers","mediumTableMetaModels","totalSizeModels","totalSizeUsers","CustomInput","handleModelsFilterChange","handleUsersFilterChange","handleSelectUser","selectedUserEmail","handleSelectAllUsers","handleSelectModel","selectedModelName","handleSelectAllModels","handleSelectStudy","study_uid","selectedStudyUID","handleSelectAllStudies","accessStudies","allowedStudies","groupUsersEmails","groupUsers","Secret_Key","pinChange","verify_pin","StudyListRoute","studyListFunctionsEnabled","isSearchingForStudies","activeModalId","setActiveModalId","getStudyList","ConnectedDicomFilesUploader","ConnectedHeader","useLargeLogo","supportsFuzzyMatching","mappedStudies","sortedStudies","_sortStudies","queryFiltersArray","firstSet","_getQueryFiltersForValue","secondSet","queryPromises","searchStudiesPromise","lotsOfStudies","allowedUIDs","studiesIDs","arrayOfStudies","user_permissions","studiesAccessControl","studiesMap","studiesMapKeys","queryFilters","ConnectedStudyList","_getAppState","_getActiveContexts","contextName","clearContext","foundCommand","activeContext","getCommand","definitionOptions","commandParams","appState","hotkeyDefinitions","hotkeyDefaults","isEnabled","_getValidDefinitions","registerHotkeys","_parseToArrayLike","hotkeyDefinitionsObj","copy","entryValue","_parseToHotKeyObj","previouslyRegisteredDefinition","previouslyRegisteredKeys","_unbindHotkeys","_bindHotkeys","setHotkeys","combinedKeys","unbind","Abdomen","Aorta","Axilla","Back","Bladder","Brain","Breast","Bronchus","Buttock","Calcaneus","Cerebellum","Cervix","Cheek","Chest","Clavicle","Coccyx","Colon","Cornea","Duodenum","Ear","Esophagus","Extremity","Eye","Eyelid","Face","Femur","Finger","Foot","Gallbladder","Hand","Head","Heart","Humerus","Ileum","Ilium","Jejunum","Kidney","Knee","Larynx","Liver","Lung","Mandible","Maxilla","Mediastinum","Mouth","Neck","Nose","Ovary","Pancreas","Patella","Pelvis","Penis","Pharynx","Prostate","Radius","Rectum","Rib","Sacrum","Scalp","Scapula","Sclera","Scrotum","Shoulder","Skull","Spine","Spleen","Sternum","Stomach","Testis","Thigh","Thumb","Thymus","Thyroid","Tibia","Toe","Tongue","Trachea","Ulna","Ureter","Urethra","Uterus","Vagina","Vulva","Zygoma","CodeNameCodeSequenceValues","ImagingMeasurementReport","ImageLibrary","ImagingMeasurements","MeasurementGroup","ImageLibraryGroup","TrackingIdentifier","Finding","FindingSite","CornerstoneFreeText","Score","RELATIONSHIP_TYPE","INFERRED_FROM","SELECTED_FROM","CodingSchemeDesignators","SRT","cornerstoneTools4","getSequenceAsArray","getMergedContentSequencesByTrackingUniqueIdentifiers","MeasurementGroups","mergedContentSequencesByTrackingUniqueIdentifiers","ContentSequence","TrackingUniqueIdentifierItem","ConceptNameCodeSequence","trackingUniqueIdentifier","UID","getLabelFromMeasuredValueSequence","MeasuredValueSequence","NumericValue","MeasurementUnitsCodeSequence","formatedNumericValue","getCoordsFromSCOORDOrSCOORD3D","graphicItem","ValueType","coords","RelationshipType","GraphicType","GraphicData","ReferencedSOPSequence","ReferencedFrameOfReferenceUID","ReferencedFrameOfReferenceSequence","processTID1410Measurement","mergedContentSequence","UIDREFContentItem","TrackingIdentifierContentItem","NUMContentItems","TextValue","coord","processNonGeometricallyDefinedMeasurement","FindingSites","ConceptCodeSequence","cornerstoneFreeTextFindingSite","processMeasurement","getMeasurements","ImagingMeasurementReportContentSequence","getReferencedImagesList","referencedImages","ReferencedSOPClassUID","cornerstoneAdapters","TOOL_NAMES","DICOM_SR_DISPLAY_TOOL","getRenderableData","imageMetadata","renderableData","orientation","sliceSpacing","M","M1","inv","worldToIJK","SCOORD_TYPES","onPerimeter","csMath","majorAxis","minorAxis","minorAxisLength","minorAxisDirection","halfMinorAxisLength","corner1","corner2","addToMeasurementApi","checkIfCanAddMeasurementsToDisplaySet","srDisplaySet","imageDisplaySet","sliceNormal","distanceAlongNormal","SOPInstanceUIDs","parseSCOORD3D","getSourceMappings","isHydrated","isRehydratable","mappingDefinitions","adapterKeys","adapterKey","isValidCornerstoneTrackingIdentifier","adapter","findInstanceMetadataBySopInstanceUID","instanceFound","getImagePath","parseDicomStructuredReport","part10SRArrayBuffer","storedMeasurementByToolType","MeasurementReport","seriesDescription","parseMeasurementsData","unsupportedTools","generateReport","getAllDisplaySets","retrieveMeasurementFromSR","measurementSeries","serverUrl","stowSRFromMeasurements","allTools","DicomDict","FileMetaInformationVersion","MediaStorageSOPClassUID","MediaStorageSOPInstanceUID","TransferSyntaxUID","ImplementationClassUID","ImplementationVersionName","denaturalized","denaturalizeDataset","dicomDict","part10Buffer","write","storeInstances","retrieveMeasurements","firstMeasurementKey","firstMeasurement","setViewportLayoutAndData","clearViewportSpecificData","setUserPreferences","setExtensionData","setTimepoints","setMeasurements","setStudyData","setServers","defaultState","extensionName","currentData","incomingData","2","4","5","6","7","8","9","10","generalPreferences","uniqBy","newServer","newServers","updatedStudyData","setAutoFreeze","DEFAULT_STATE","findActiveViewportSpecificData","currentViewportSpecificData","numberOfViewports","getActiveViewportIndex","currentActiveViewportIndex","useActiveViewport","produce","draftState","LocalStorageApi","serializedState","SessionStorageApi","getBoundingBox","textLines","font","getFont","getFontSize","textBaseline","measureText","boundingBox","centering","restore","pixelToPage","canvasOffset","$","canvasPosition","repositionTextBox","isCreating","allowedBorders","uiSettings","autoPositionMeasurementsTextCallOuts","allow","T","R","L","getRenderingInformation","limits","mid","directions","diffX","cornerAxis","x1","y1","calculateAxisCenter","axis","lowest","textBox","$canvas","canvasWidth","outerWidth","canvasHeight","outerHeight","canvasDimensions","bounds","getHandlePosition","cornerAxisPosition","availableAreas","labelWidth","labelHeight","topLeft","bottomRight","getAvailableBlankAreas","tempDirections","tempCornerAxis","foundPlace","renderingInformation","pageToPixel","toolAxis","getTextBoxSizeInPixels","textBoxOffset","centerX","centerY","halfBoxSizeX","halfBoxSizeY","offsetY","offsetX","getTextBoxOffset","canvasBorders","x0","y0","pixelPosition","StudyBrowser","onThumbnailClick","onThumbnailDoubleClick","showThumbnailProgressBar","thumb","thumbIndex","derivedDisplaySetsNumber","flat","getFourRandomValues","constructor","defaultRetryOptions","retries","factor","minTimeout","maxTimeout","randomize","retryableStatusCodes","retryOptions","originalRequestSend","send","attempt","currentAttempt","originalOnReadyStateChange","onreadystatechange","errorMessage","attemptFailedError","_uid","_custom","_hasOwn","ModalContext","ModalProvider","setOptions","ModalContent","visibleScrollbar","Consumer","SnackbarItem","handleClose","close","SnackbarContainer","useSnackbarContext","snackbarItems","topCenter","topRight","bottomLeft","bottomCenter","pos","itemId","renderItem","SnackbarContext","SnackbarProvider","SnackbarTypes","setCount","setSnackbarItems","onLogHandler","namespace","i18n","WrapperI18n","I18NextWithTranslation","DialogContext","DialogProvider","isDragging","setIsDragging","dialogs","setDialogs","lastDialogId","setLastDialogId","lastDialogPosition","setLastDialogPosition","centerPositions","setCenterPositions","dialog","getCenterPosition","itemBounds","getBoundingClientRect","_bringToFront","topDialog","_updateLastDialogPosition","draggableItemBounds","validCallback","DialogContent","dragableItem","srcElement","tagName","withDialog","LoggerContext","useLogger","LoggerProvider","infos","onErrorHandler","errorObject","setData","ConnectedModelList","DicomUploader","isCancelled","errorsCount","uploadedVolume","wholeVolumeStr","isFilesListHidden","timeLeft","uploadedList","totalCount","successfullyUploadedCount","lastFile","uploadContext","zip","filesToSend","req","XMLHttpRequest","generateAsync","formatFileSize","fileId","processed","uploadFiles","multiple","webkitdirectory","mozdirectory","percents","filesLeft","renderTableRow","retrieveAuthHeaderFunction","ConnectedDicomUploader","DicomFileUploaderModal","ConnectedDicomFileUploader","activeServer","OHIFLogo","Header","linkPath","linkText","hasLink","studyLink","COMMANDS","PANEL","TOOLBAR","VIEWPORT","setEnabledElement","webpackContext","webpackContextResolve","hasIndexValues","splitValues","indexedValue","getIndexedValue","_seriesInstanceUID","_instances","getInstanceByIndex"],"mappings":"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AAYR,EAClDjL,IAAYgE,YAAY9/B,QA9EtBtQ,QAAQoyB,KAAK,gCARbpyB,QAAQoyB,KAAK,4BAyFjB,SAAS8lB,GACP5nC,EACAw+B,EACAmH,GAIA,IAHA5yC,EAGA,4DAHQhF,EACR85C,EAEA,4DAFO95C,EACPogB,EACA,4DADQpgB,EAEFivC,EAAaf,GAAQe,WAAWh9B,EAASw+B,GAC/C,GAAKxB,EAAL,CAKA,IAAM9d,EAAW8d,EAAW9d,SAASt2B,KACjCo0C,EAAW9d,SAASt2B,KACpBo0C,EAAW9d,SACf,GAAKA,GAYL,GAPInsB,IACFmsB,EAASymB,GAAcC,aAAe7yC,GAEpC80C,IACF3oB,EAASymB,GAAcE,mBAAqBgC,GAG1C15B,EAAO,CACT,IACMq3B,EADqBpK,IAAiBc,UAAU,gBAEjCrrC,MAAMquC,eAAelC,EAAW0B,eAErD8G,EAAcG,GAAc,GAAKx3B,EAAMxf,EACvC62C,EAAcG,GAAc,GAAKx3B,EAAM04B,EACvCrB,EAAcG,GAAc,GAAKx3B,EAAMohB,QAlBvC7/B,QAAQoyB,KAAK,gCARbpyB,QAAQoyB,KAAK,4B,gCCpXjB,SAASgmB,GAAe15C,GACtB,IAAM25C,EAAM35C,EAAE8oB,SAAS,IACvB,OAAsB,IAAf6wB,EAAI3+C,OAAe,IAAM2+C,EAAMA,EAGxC,SAASC,GAASr5C,EAAGk4C,EAAGtX,GACtB,MAAO,IAAMuY,GAAen5C,GAAKm5C,GAAejB,GAAKiB,GAAevY,GAG/D,IAAM0Y,GAAe,CAC1B,QACA,SACA,OACA,UACA,UACA,QACA,UACA,SACA,SACA,UACA,cACA,SACA,UACA,UACA,OACA,SACA,SACA,OACA,SACA,SACA,UACA,QACA,QACA,SACA,SACA,SACA,UACA,QACA,UACA,OACA,QACA,OACA,WACA,OACA,WACA,UACA,QACA,SACA,QACA,UACA,WACA,SACA,UACA,QACA,YACA,UACA,UACA,OACA,SACA,QACA,QACA,QACA,OACA,OACA,QACA,SACA,UACA,UACA,QACA,OACA,SACA,QACA,SACA,SACA,QACA,YACA,QACA,OACA,SACA,OACA,QACA,OACA,SACA,SACA,WACA,QACA,QACA,QACA,MACA,SACA,QACA,QACA,SACA,SACA,UACA,QACA,OACA,OACA,QACA,MACA,QACA,QACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,SACA,OACA,WACA,WACA,QACA,YACA,UACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,WACA,SACA,SACA,WACA,QACA,QACA,WACA,UACA,QACA,SACA,UACA,UACA,YACA,UACA,SACA,QACA,UACA,WACA,MACA,UACA,SACA,QACA,OACA,SACA,SACA,SACA,OACA,WACA,YACA,YACA,QACA,SACA,YACA,UACA,QACA,OACA,QACA,UACA,QACA,WACA,QACA,QACA,WACA,SACA,QACA,YACA,SACA,OACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,aACA,UACA,SACA,MACA,SACA,UACA,OACA,SACA,OACA,QACA,UACA,QACA,UACA,QACA,OACA,QACA,SACA,QACA,UACA,UACA,WACA,UACA,SACA,QACA,QACA,WACA,UACA,WACA,YACA,OACA,SACA,SAGWC,GAAuB,CAClC,CAAEn1C,MAAO,aAAcjE,MAAOk5C,GAAS,EAAG,EAAG,IAC7C,CAAEj1C,MAAO,SAAUjE,MAAOk5C,GAAS,IAAK,IAAK,MAC7C,CAAEj1C,MAAO,OAAQjE,MAAOk5C,GAAS,IAAK,IAAK,MAC3C,CAAEj1C,MAAO,OAAQjE,MAAOk5C,GAAS,IAAK,IAAK,MAC3C,CAAEj1C,MAAO,oBAAqBjE,MAAOk5C,GAAS,IAAK,IAAK,MACxD,CAAEj1C,MAAO,QAASjE,MAAOk5C,GAAS,IAAK,IAAK,KAC5C,CAAEj1C,MAAO,QAASjE,MAAOk5C,GAAS,IAAK,IAAK,MAC5C,CAAEj1C,MAAO,OAAQjE,MAAOk5C,GAAS,IAAK,IAAK,MAC3C,CAAEj1C,MAAO,SAAUjE,MAAOk5C,GAAS,IAAK,IAAK,KAC7C,CAAEj1C,MAAO,iBAAkBjE,MAAOk5C,GAAS,IAAK,IAAK,KACrD,CAAEj1C,MAAO,QAASjE,MAAOk5C,GAAS,GAAI,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AW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR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","file":"app.bundle.f683ad891a6ae5003a23.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t3: 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t3: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".bundle.\" + {\"0\":\"7dd0ac998e86b8f2fb1b\",\"1\":\"57197f3fce3b4e7e87be\",\"2\":\"bd136a0554054e34dbeb\",\"5\":\"f96338662082ffac379c\",\"6\":\"19168320fc5b0a3adc21\",\"7\":\"8004d119a9fc661e6821\",\"8\":\"3054c8efd6a282273f51\",\"9\":\"19c1dc7000afbfbb7606\",\"10\":\"0f558d36f10d14d443d4\",\"11\":\"565d8ad244ec623c48d2\",\"12\":\"8cc1777e285ec44524b8\",\"13\":\"d21fab79c2ee634817b5\",\"14\":\"8fcf41a48d2df80d0e43\",\"15\":\"fb50134fb4522a380baf\",\"16\":\"2d9a9e50137e2d9bd79e\",\"17\":\"68b1d9b1d8e8a11efe5e\",\"18\":\"b8528c5be49244b59d08\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// extract-css-chunks-webpack-plugin CSS loading\n \t\tvar cssChunks = {\"0\":1,\"8\":1,\"9\":1,\"10\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"\" + chunkId + \".\" + \"423ea8326b4857e83bd4\" + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1374,4]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './LayoutChooser.styl';\n\n/**\n * Adds the 'hover' class to cells above and to the left of the current cell\n * This is used to \"fill in\" the grid that the user will change the layout to,\n * if they click on a specific table cell.\n **/\n\nclass LayoutChooser extends PureComponent {\n  static propTypes = {\n    Rows: PropTypes.number.isRequired,\n    Columns: PropTypes.number.isRequired,\n    visible: PropTypes.bool.isRequired,\n    selectedCell: PropTypes.object,\n    boxSize: PropTypes.number.isRequired,\n    cellBorder: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    Rows: 3,\n    Columns: 3,\n    visible: true,\n    boxSize: 20,\n    cellBorder: 1,\n    selectedCell: {\n      row: -1,\n      col: -1,\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.emptyCell = {\n      row: -1,\n      column: -1,\n    };\n    this.state = {\n      table: [[]],\n      selectedCell: this.props.selectedCell,\n    };\n  }\n  componentDidMount() {\n    this.highlightCells(this.emptyCell);\n  }\n  onClick(currentCell) {\n    this.setState({\n      selectedCell: currentCell,\n    });\n    this.highlightCells(currentCell);\n    if (this.props.onClick) {\n      this.props.onClick(currentCell);\n    }\n    if (this.props.onChange) {\n      this.props.onChange(currentCell);\n    }\n  }\n  isRange = (cell, parentCell) => {\n    return cell.row <= parentCell.row && cell.col <= parentCell.col;\n  };\n  highlightCells = currentCell => {\n    let table = [];\n    for (let row = 0; row < this.props.Rows; row++) {\n      let newRow = [];\n      for (let col = 0; col < this.props.Columns; col++) {\n        let cell = { row: row, col: col };\n        if (this.isRange(cell, currentCell)) {\n          cell.className = 'hover';\n        } else if (\n          this.isRange(currentCell, this.emptyCell) &&\n          this.isRange(cell, this.state.selectedCell)\n        ) {\n          cell.className = 'selectedBefore';\n        }\n        newRow.push(cell);\n      }\n      table.push(newRow);\n    }\n    this.setState({ table: table });\n  };\n\n  render() {\n    let Columns = this.props.Columns;\n    const style = {\n      display: this.props.visible ? 'block' : 'none',\n      minWidth:\n        Columns * this.props.boxSize + (Columns + 5) * this.props.cellBorder,\n    };\n    return (\n      <div\n        className=\"layoutChooser layoutChooser-dropdown-menu\"\n        role=\"menu\"\n        style={style}\n      >\n        <table>\n          <tbody>\n            {this.state.table.map((row, i) => {\n              return (\n                <tr key={i}>\n                  {row.map((cell, j) => {\n                    return (\n                      <td\n                        className={cell.className}\n                        style={{\n                          width: this.props.boxSize,\n                          height: this.props.boxSize,\n                          border: 'solid 1px black',\n                        }}\n                        key={j}\n                        onMouseEnter={() => this.highlightCells(cell)}\n                        onMouseLeave={() => this.highlightCells(this.emptyCell)}\n                        onClick={() => this.onClick(cell)}\n                      />\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport { LayoutChooser };\n","import './toolbar-button.styl';\nimport { Icon } from './../elements/Icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classnames from 'classnames';\n\nexport function ToolbarButton(props) {\n  const { isActive, icon, labelWhenActive, onClick } = props;\n  const className = classnames(props.className, { active: isActive });\n  const iconProps = typeof icon === 'string' ? { name: icon } : icon;\n  const label = isActive && labelWhenActive ? labelWhenActive : props.label;\n\n  const arrowIconName = props.isExpanded ? 'caret-up' : 'caret-down';\n  const arrowIcon = props.isExpandable && (\n    <Icon name={arrowIconName} className=\"expand-caret\" />\n  );\n\n  const handleClick = event => {\n    if (onClick) {\n      onClick(event, props);\n    }\n  };\n\n  const cypressSelectorId = props.label.toLowerCase();\n\n  return (\n    <div\n      className={className}\n      onClick={handleClick}\n      data-cy={cypressSelectorId}\n    >\n      {iconProps && <Icon {...iconProps} />}\n      <div className=\"toolbar-button-label\">\n        {label}\n        {arrowIcon}\n      </div>\n    </div>\n  );\n}\n\nToolbarButton.propTypes = {\n  id: PropTypes.string,\n  isActive: PropTypes.bool,\n  /** Display label for button */\n  label: PropTypes.string.isRequired,\n  /** Alternative text to show when button is active */\n  labelWhenActive: PropTypes.string,\n  className: PropTypes.string.isRequired,\n  icon: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }),\n  ]),\n  onClick: PropTypes.func,\n  /** Determines if we show expandable 'caret' symbol */\n  isExpandable: PropTypes.bool,\n  /** Direction of expandable 'caret' symbol */\n  isExpanded: PropTypes.bool,\n};\n\nToolbarButton.defaultProps = {\n  isActive: false,\n  className: 'toolbar-button',\n};\n\nexport default ToolbarButton;\n","import React, { PureComponent } from 'react';\n\nimport { LayoutChooser } from './LayoutChooser.js';\nimport PropTypes from 'prop-types';\nimport ToolbarButton from '../../viewer/ToolbarButton';\n\nexport class LayoutButton extends PureComponent {\n  static defaultProps = {\n    dropdownVisible: false,\n  };\n\n  static propTypes = {\n    dropdownVisible: PropTypes.bool.isRequired,\n    /** Called with the selectedCell number when grid sell is selected */\n    onChange: PropTypes.func,\n    /** The cell to show as selected */\n    selectedCell: PropTypes.object,\n  };\n\n  state = {\n    dropdownVisible: this.props.dropdownVisible,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.dropdownVisible !== prevProps.dropdownVisible) {\n      this.setState({\n        dropdownVisible: this.props.dropdownVisible,\n      });\n    }\n  }\n\n  onClick = () => {\n    this.setState({\n      dropdownVisible: !this.state.dropdownVisible,\n    });\n  };\n\n  onChange = selectedCell => {\n    if (this.props.onChange) {\n      this.props.onChange(selectedCell);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"btn-group\">\n        <ToolbarButton\n          isActive={this.state.dropdownVisible}\n          label={'Layout'}\n          icon=\"th\"\n          onClick={this.onClick}\n        />\n        <LayoutChooser\n          visible={this.state.dropdownVisible}\n          onChange={this.onChange}\n          onClick={this.onClick}\n          selectedCell={this.props.selectedCell}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LayoutButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TableList.styl';\n\nexport class TableList extends Component {\n  static propTypes = {\n    customHeader: PropTypes.node,\n    defaultItems: PropTypes.object,\n    children: PropTypes.node.isRequired,\n    headerTitle: PropTypes.string,\n    headless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    headless: false,\n  };\n\n  render() {\n    return (\n      <div className=\"tableList\">\n        {!this.props.headless && (\n          <div className=\"tableListHeader\" onClick={this.onHeaderClick}>\n            {this.getHeader()}\n          </div>\n        )}\n        <div className=\"tableListContent\">{this.props.children}</div>\n      </div>\n    );\n  }\n\n  getHeader = () => {\n    if (this.props.customHeader) {\n      return this.props.customHeader;\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"tableListHeaderTitle\">{this.props.headerTitle}</div>\n          <div className=\"numberOfItems\">{this.props.children.length}</div>\n        </React.Fragment>\n      );\n    }\n  };\n}\n","import './TableListItem.styl';\n\nimport { Component } from 'react';\nimport { Icon } from './../../elements/Icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport class TableListItem extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    itemClass: PropTypes.string,\n    itemIndex: PropTypes.number,\n    itemMeta: PropTypes.node,\n    itemMetaClass: PropTypes.string,\n    itemKey: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    onItemClick: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    itemMeta: null,\n    itemMetaClass: ''\n  };\n\n  render() {\n    return (\n      <div\n        className={`tableListItem ${this.props.itemClass}`}\n        onClick={this.onItemClick}\n      >\n        <div className={`itemIndex ${this.props.itemMetaClass}`}>\n          {this.props.itemIndex}\n          {this.props.itemMeta}\n          <span className=\"warning-icon\">\n            <Icon name=\"exclamation-triangle\" />\n          </span>\n        </div>\n        <div className=\"itemContent\">{this.props.children}</div>\n      </div>\n    );\n  }\n\n  onItemClick = event => {\n    if (this.props.onItemClick) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.props.onItemClick(event, this.props.itemKey);\n    }\n  };\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n// Style\nimport './TabComponents.styl';\n\n/**\n * Take name of the tab and create the data-cy value for it\n *\n * @param {string} [name=''] tab name\n * @returns {string} data-cy value\n */\nconst getDataCy = (name = '') => {\n  return name\n    .split(' ')\n    .join('-')\n    .toLowerCase();\n};\n\n/**\n * Single tab data information\n *\n * @typedef {Object} tabData\n * @property {string} name - name of the tab\n * @property {Object} Component - tab component to be rendered\n * @property {Object} customProps - tab custom properties\n * @property {bool} hidden - bool to define if tab is hidden of not\n */\n\n/**\n * Take a list of components data and render then into tabs\n *\n * @param {Object} props\n * @param {[tabData]} props.tabs array of tab data\n * @param {Object} props.customProps common custom properties\n */\nfunction TabComponents({ tabs, customProps = {} }) {\n  const [currentTabIndex, setCurrentTabIndex] = useState(0);\n\n  return (\n    tabs.length > 0 && (\n      <div className=\"TabComponents\">\n        <div className=\"TabComponents_tabHeader\">\n          <div className=\"TabComponents_tabHeader_selector\">\n            <div className=\"dialog-separator-after\">\n              <ul className=\"nav nav-tabs\">\n                {tabs.map((tab, index) => {\n                  const { name, hidden = false } = tab;\n                  return (\n                    !hidden && (\n                      <li\n                        key={index}\n                        onClick={() => {\n                          setCurrentTabIndex(index);\n                        }}\n                        className={classnames(\n                          'nav-link',\n                          index === currentTabIndex && 'active'\n                        )}\n                        data-cy={getDataCy(name)}\n                      >\n                        <button>{name}</button>\n                      </li>\n                    )\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n        </div>\n        {tabs.map((tab, index) => {\n          const {\n            Component,\n            customProps: tabCustomProps,\n            hidden = false,\n          } = tab;\n          return (\n            !hidden && (\n              <div\n                key={index}\n                className={classnames(\n                  'TabComponents_content',\n                  index === currentTabIndex && 'active'\n                )}\n              >\n                <Component {...customProps} {...tabCustomProps} />\n              </div>\n            )\n          );\n        })}\n      </div>\n    )\n  );\n}\n\nTabComponents.propTypes = {\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      Component: PropTypes.any,\n      customProps: PropTypes.object,\n      hidden: PropTypes.bool,\n    })\n  ),\n  customProps: PropTypes.object,\n};\n\nexport { TabComponents };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TabFooter.styl';\n\n// In case translate is not passed\nconst translate = word => word;\n\nfunction TabFooter({\n  onResetPreferences,\n  onSave,\n  onCancel,\n  hasErrors,\n  t = translate,\n}) {\n  return (\n    <div className=\"footer\">\n      <button\n        className=\"btn btn-danger pull-left\"\n        data-cy=\"reset-default-btn\"\n        onClick={onResetPreferences}\n      >\n        {t('Reset to Defaults')}\n      </button>\n      <div>\n        <div\n          onClick={onCancel}\n          data-cy=\"cancel-btn\"\n          className=\"btn btn-default\"\n        >\n          {t('Cancel')}\n        </div>\n        <button\n          className=\"btn btn-primary\"\n          data-cy=\"save-btn\"\n          disabled={hasErrors}\n          onClick={onSave}\n        >\n          {t('Save')}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nTabFooter.propTypes = {\n  onResetPreferences: PropTypes.func,\n  onSave: PropTypes.func,\n  onCancel: PropTypes.func,\n  hasErrors: PropTypes.bool,\n  t: PropTypes.func,\n};\n\nexport { TabFooter };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { hotkeys } from '@ohif/core';\n\n/**\n * Take the pressed key array and return the readable string for the keys\n *\n * @param {Array} [keys=[]]\n * @returns {string} string representation of an array of keys\n */\nconst formatKeysForInput = (keys = []) => keys.join('+');\n\n/**\n * formats given keys sequence to insert the modifier keys in the first index of the array\n * @param {string} sequence keys sequence from MouseTrap Record -> \"shift+left\"\n * @returns {Array} keys in array-format -> ['shift','left']\n */\nconst getKeys = ({ sequence, modifier_keys }) => {\n  const keysArray = sequence.join(' ').split('+');\n  let keys = [];\n  let modifiers = [];\n  keysArray.forEach(key => {\n    if (modifier_keys && modifier_keys.includes(key)) {\n      modifiers.push(key);\n    } else {\n      keys.push(key);\n    }\n  });\n  return [...modifiers, ...keys];\n};\n\n/**\n * HotkeyField\n * Renders a hotkey input\n *\n * @param {object} props component props\n * @param {Array[]} props.keys array of keys to be controlled by this field\n * @param {function} props.handleChange Callback function to communicate parent once value is changed\n * @param {string} props.classNames string caontaining classes to be added in the input field\n * @param {Array[]} props.modifier_keys\n */\nfunction HotkeyField({ keys, handleChange, classNames, modifier_keys }) {\n  const inputValue = formatKeysForInput(keys);\n\n  const onInputKeyDown = event => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    hotkeys.record(sequence => {\n      const keys = getKeys({ sequence, modifier_keys });\n      hotkeys.unpause();\n      handleChange(keys);\n    });\n  };\n\n  const onFocus = () => {\n    hotkeys.pause();\n    hotkeys.startRecording();\n  };\n\n  return (\n    <input\n      readOnly={true}\n      type=\"text\"\n      value={inputValue}\n      className={classNames}\n      onKeyDown={onInputKeyDown}\n      onFocus={onFocus}\n    />\n  );\n}\n\nHotkeyField.propTypes = {\n  keys: PropTypes.array.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  classNames: PropTypes.string,\n  modifier_keys: PropTypes.array,\n  allowed_keys: PropTypes.array,\n};\n\nexport { HotkeyField };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './LanguageSwitcher.styl';\n\nconst LanguageSwitcher = ({ language, onLanguageChange, languages }) => {\n  const onChange = event => {\n    const { value } = event.target;\n    onLanguageChange(value);\n  };\n\n  return (\n    <select\n      name=\"language-select\"\n      id=\"language-select\"\n      className=\"language-select\"\n      value={language}\n      onChange={onChange}\n    >\n      {languages.map(lng => (\n        <option key={lng.value} value={lng.value}>\n          {lng.label}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nLanguageSwitcher.propTypes = {\n  language: PropTypes.string.isRequired,\n  languages: PropTypes.array.isRequired,\n  onLanguageChange: PropTypes.func.isRequired,\n};\n\nexport { LanguageSwitcher };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './checkbox.css';\n\nexport class Checkbox extends Component {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { checked: !!props.checked, label: props.label };\n  }\n\n  handleChange(e) {\n    const checked = e.target.checked;\n    this.setState({ checked });\n    if (this.props.onChange) this.props.onChange(checked);\n  }\n\n  componentDidUpdate(props) {\n    const { checked = false, label } = props;\n\n    if (this.state.checked !== checked || this.state.label !== label) {\n      this.setState({\n        checked,\n        label,\n      });\n    }\n  }\n\n  render() {\n    let checkbox;\n    if (this.state.checked) {\n      checkbox = <span className=\"ohif-checkbox ohif-checked\" />;\n    } else {\n      checkbox = <span className=\"ohif-checkbox\" />;\n    }\n\n    return (\n      <div className=\"ohif-check-container\">\n        <form>\n          <label className=\"ohif-check-label\">\n            <input\n              type=\"checkbox\"\n              checked={this.state.checked}\n              onChange={this.handleChange.bind(this)}\n            />\n            {checkbox}\n            {this.state.label}\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n","import './CineDialog.styl';\n\nimport React, { PureComponent } from 'react';\nimport { withTranslation } from '../../contextProviders';\nimport { Icon } from './../../elements/Icon';\nimport PropTypes from 'prop-types';\n\nclass CineDialog extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cineFrameRate: props.cineFrameRate,\n      isPlaying: props.isPlaying,\n    };\n  }\n\n  static propTypes = {\n    /** Minimum value for range slider */\n    cineMinFrameRate: PropTypes.number.isRequired,\n    /** Maximum value for range slider */\n    cineMaxFrameRate: PropTypes.number.isRequired,\n    /** Increment range slider can \"step\" in either direction. */\n    cineStepFrameRate: PropTypes.number.isRequired,\n    cineFrameRate: PropTypes.number.isRequired,\n    /** 'True' if playing, 'False' if paused. */\n    isPlaying: PropTypes.bool.isRequired,\n    onPlayPauseChanged: PropTypes.func,\n    onFrameRateChanged: PropTypes.func,\n    onClickNextButton: PropTypes.func,\n    onClickBackButton: PropTypes.func,\n    onClickSkipToStart: PropTypes.func,\n    onClickSkipToEnd: PropTypes.func,\n    /** i18next translation function */\n    t: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    cineMinFrameRate: 1,\n    cineMaxFrameRate: 90,\n    cineStepFrameRate: 1,\n    cineFrameRate: 24,\n    isPlaying: false,\n  };\n\n  componentDidUpdate(prevProps) {\n    // TODO: Not sure if we should just switch this to a stateless\n    // fully-controlled component instead\n    if (\n      this.props.isPlaying !== prevProps.isPlaying ||\n      this.props.isPlaying !== this.state.isPlaying\n    ) {\n      this.setState({\n        isPlaying: this.props.isPlaying,\n      });\n    }\n\n    if (\n      this.props.cineFrameRate !== prevProps.cineFrameRate ||\n      this.props.cineFrameRate !== this.state.cineFrameRate\n    ) {\n      this.setState({\n        cineFrameRate: this.props.cineFrameRate,\n      });\n    }\n  }\n\n  handleInputChange = event => {\n    const target = event.target;\n\n    let value = target.value;\n\n    if (target.type === 'range') {\n      value = parseFloat(target.value);\n    }\n\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n\n    if (name === 'cineFrameRate' && this.props.onFrameRateChanged) {\n      this.props.onFrameRateChanged(parseFloat(value));\n    }\n  };\n\n  onClickPlayPause = () => {\n    const value = !this.state.isPlaying;\n\n    this.setState({\n      isPlaying: value,\n    });\n\n    if (this.props.onPlayPauseChanged) {\n      this.props.onPlayPauseChanged(value);\n    }\n  };\n\n  onClickNextButton = event => {\n    if (this.props.onClickNextButton) {\n      this.props.onClickNextButton(event);\n    }\n  };\n\n  onClickBackButton = event => {\n    if (this.props.onClickBackButton) {\n      this.props.onClickBackButton(event);\n    }\n  };\n\n  onClickSkipToStart = event => {\n    if (this.props.onClickSkipToStart) {\n      this.props.onClickSkipToStart(event);\n    }\n  };\n\n  onClickSkipToEnd = event => {\n    if (this.props.onClickSkipToEnd) {\n      this.props.onClickSkipToEnd(event);\n    }\n  };\n\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"CineDialog\">\n        <div className=\"noselect double-row-style\">\n          <div className=\"cine-controls\">\n            <div className=\"btn-group\">\n              <button\n                title={t('Skip to first image')}\n                className=\"btn\"\n                data-toggle=\"tooltip\"\n                onClick={this.onClickSkipToStart}\n              >\n                <Icon name=\"fast-backward\" />\n              </button>\n              <button\n                title={t('Previous image')}\n                className=\"btn\"\n                data-toggle=\"tooltip\"\n                onClick={this.onClickBackButton}\n              >\n                <Icon name=\"step-backward\" />\n              </button>\n              <button\n                title={t('Play / Stop')}\n                className=\"btn\"\n                data-toggle=\"tooltip\"\n                onClick={this.onClickPlayPause}\n              >\n                <Icon name={this.state.isPlaying ? 'stop' : 'play'} />\n              </button>\n              <button\n                title={t('Next image')}\n                className=\"btn\"\n                data-toggle=\"tooltip\"\n                onClick={this.onClickNextButton}\n              >\n                <Icon name=\"step-forward\" />\n              </button>\n              <button\n                title={t('Skip to last image')}\n                className=\"btn\"\n                data-toggle=\"tooltip\"\n                onClick={this.onClickSkipToEnd}\n              >\n                <Icon name=\"fast-forward\" />\n              </button>\n            </div>\n          </div>\n          <div className=\"cine-options\">\n            <div className=\"fps-section\">\n              <input\n                type=\"range\"\n                name=\"cineFrameRate\"\n                min={this.props.cineMinFrameRate}\n                max={this.props.cineMaxFrameRate}\n                step={this.props.cineStepFrameRate}\n                value={this.state.cineFrameRate}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <span className=\"fps\">\n              {this.state.cineFrameRate.toFixed(1)} {t('fps')}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst connectedComponent = withTranslation('CineDialog')(CineDialog);\nexport { connectedComponent as CineDialog };\nexport default connectedComponent;\n","import React, {\n  useRef,\n  useCallback,\n  useEffect,\n  useState,\n  createRef,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport './ViewportDownloadForm.styl';\nimport { TextInput, Select, Icon } from '@ohif/ui';\nimport classnames from 'classnames';\n\nconst FILE_TYPE_OPTIONS = [\n  {\n    key: 'jpg',\n    value: 'jpg',\n  },\n  {\n    key: 'png',\n    value: 'png',\n  },\n];\n\nconst DEFAULT_FILENAME = 'image';\nconst REFRESH_VIEWPORT_TIMEOUT = 1000;\n\nconst ViewportDownloadForm = ({\n  activeViewport,\n  onClose,\n  updateViewportPreview,\n  enableViewport,\n  disableViewport,\n  toggleAnnotations,\n  loadImage,\n  downloadBlob,\n  defaultSize,\n  minimumSize,\n  maximumSize,\n  canvasClass,\n}) => {\n  const [t] = useTranslation('ViewportDownloadForm');\n\n  const [filename, setFilename] = useState(DEFAULT_FILENAME);\n  const [fileType, setFileType] = useState('jpg');\n\n  const [dimensions, setDimensions] = useState({\n    width: defaultSize,\n    height: defaultSize,\n  });\n\n  const [showAnnotations, setShowAnnotations] = useState(true);\n\n  const [keepAspect, setKeepAspect] = useState(true);\n  const [aspectMultiplier, setAspectMultiplier] = useState({\n    width: 1,\n    height: 1,\n  });\n\n  const [viewportElement, setViewportElement] = useState();\n  const [viewportElementDimensions, setViewportElementDimensions] = useState({\n    width: defaultSize,\n    height: defaultSize,\n  });\n\n  const [downloadCanvas, setDownloadCanvas] = useState({\n    ref: createRef(),\n    width: defaultSize,\n    height: defaultSize,\n  });\n\n  const [viewportPreview, setViewportPreview] = useState({\n    src: null,\n    width: defaultSize,\n    height: defaultSize,\n  });\n\n  const [error, setError] = useState({\n    width: false,\n    height: false,\n    filename: false,\n  });\n\n  const hasError = Object.values(error).includes(true);\n\n  const refreshViewport = useRef(null);\n\n  const downloadImage = () => {\n    downloadBlob(\n      filename || DEFAULT_FILENAME,\n      fileType,\n      viewportElement,\n      downloadCanvas.ref.current\n    );\n  };\n\n  /**\n   * @param {object} event - Input change event\n   * @param {string} dimension - \"height\" | \"width\"\n   */\n  const onDimensionsChange = (event, dimension) => {\n    const oppositeDimension = dimension === 'height' ? 'width' : 'height';\n    const sanitizedTargetValue = event.target.value.replace(/\\D/, '');\n    const isEmpty = sanitizedTargetValue === '';\n    const newDimensions = { ...dimensions };\n    const updatedDimension = isEmpty\n      ? ''\n      : Math.min(sanitizedTargetValue, maximumSize);\n\n    if (updatedDimension === dimensions[dimension]) {\n      return;\n    }\n\n    newDimensions[dimension] = updatedDimension;\n\n    if (keepAspect && newDimensions[oppositeDimension] !== '') {\n      newDimensions[oppositeDimension] = Math.round(\n        newDimensions[dimension] * aspectMultiplier[oppositeDimension]\n      );\n    }\n\n    // In current code, keepAspect is always `true`\n    // And we always start w/ a square width/height\n    setDimensions(newDimensions);\n\n    // Only update if value is non-empty\n    if (!isEmpty) {\n      setViewportElementDimensions(newDimensions);\n      setDownloadCanvas(state => ({\n        ...state,\n        ...newDimensions,\n      }));\n    }\n  };\n\n  const error_messages = {\n    width: t('minWidthError'),\n    height: t('minHeightError'),\n    filename: t('emptyFilenameError'),\n  };\n\n  const renderErrorHandler = errorType => {\n    if (!error[errorType]) {\n      return null;\n    }\n\n    return <div className=\"input-error\">{error_messages[errorType]}</div>;\n  };\n\n  const onKeepAspectToggle = () => {\n    const { width, height } = dimensions;\n    const aspectMultiplier = { ...aspectMultiplier };\n    if (!keepAspect) {\n      const base = Math.min(width, height);\n      aspectMultiplier.width = width / base;\n      aspectMultiplier.height = height / base;\n      setAspectMultiplier(aspectMultiplier);\n    }\n\n    setKeepAspect(!keepAspect);\n  };\n\n  const validSize = value => (value >= minimumSize ? value : minimumSize);\n  const loadAndUpdateViewports = useCallback(async () => {\n    const { width: scaledWidth, height: scaledHeight } = await loadImage(\n      activeViewport,\n      viewportElement,\n      dimensions.width,\n      dimensions.height\n    );\n\n    toggleAnnotations(showAnnotations, viewportElement);\n\n    const scaledDimensions = {\n      height: validSize(scaledHeight),\n      width: validSize(scaledWidth),\n    };\n\n    setViewportElementDimensions(scaledDimensions);\n    setDownloadCanvas(state => ({\n      ...state,\n      ...scaledDimensions,\n    }));\n\n    const {\n      dataUrl,\n      width: viewportElementWidth,\n      height: viewportElementHeight,\n    } = await updateViewportPreview(\n      viewportElement,\n      downloadCanvas.ref.current,\n      fileType\n    );\n\n    setViewportPreview(state => ({\n      ...state,\n      src: dataUrl,\n      width: validSize(viewportElementWidth),\n      height: validSize(viewportElementHeight),\n    }));\n  }, [\n    activeViewport,\n    viewportElement,\n    showAnnotations,\n    loadImage,\n    toggleAnnotations,\n    updateViewportPreview,\n    fileType,\n    downloadCanvas.ref,\n    minimumSize,\n    maximumSize,\n    viewportElementDimensions,\n  ]);\n\n  useEffect(() => {\n    enableViewport(viewportElement);\n\n    return () => {\n      disableViewport(viewportElement);\n    };\n  }, [disableViewport, enableViewport, viewportElement]);\n\n  useEffect(() => {\n    if (refreshViewport.current !== null) {\n      clearTimeout(refreshViewport.current);\n    }\n\n    refreshViewport.current = setTimeout(() => {\n      refreshViewport.current = null;\n      loadAndUpdateViewports();\n    }, REFRESH_VIEWPORT_TIMEOUT);\n  }, [\n    activeViewport,\n    viewportElement,\n    showAnnotations,\n    dimensions,\n    loadImage,\n    toggleAnnotations,\n    updateViewportPreview,\n    fileType,\n    downloadCanvas.ref,\n    minimumSize,\n    maximumSize,\n  ]);\n\n  useEffect(() => {\n    const { width, height } = dimensions;\n    const hasError = {\n      width: width < minimumSize,\n      height: height < minimumSize,\n      filename: !filename,\n    };\n\n    setError({ ...hasError });\n  }, [dimensions, filename, minimumSize]);\n\n  return (\n    <div className=\"ViewportDownloadForm\">\n      <div className=\"title\">{t('formTitle')}</div>\n\n      <div className=\"file-info-container\" data-cy=\"file-info-container\">\n        <div className=\"dimension-wrapper\">\n          <div className=\"dimensions\">\n            <div className=\"width\">\n              <TextInput\n                type=\"number\"\n                min={minimumSize}\n                max={maximumSize}\n                value={dimensions.width}\n                label={t('imageWidth')}\n                onChange={evt => onDimensionsChange(evt, 'width')}\n                data-cy=\"image-width\"\n              />\n              {renderErrorHandler('width')}\n            </div>\n            <div className=\"height\">\n              <TextInput\n                type=\"number\"\n                min={minimumSize}\n                max={maximumSize}\n                value={dimensions.height}\n                label={t('imageHeight')}\n                onChange={evt => onDimensionsChange(evt, 'height')}\n                data-cy=\"image-height\"\n              />\n              {renderErrorHandler('height')}\n            </div>\n          </div>\n          <div className=\"keep-aspect-wrapper\">\n            <button\n              id=\"keep-aspect\"\n              className={classnames(\n                'form-button btn',\n                keepAspect ? 'active' : ''\n              )}\n              data-cy=\"keep-aspect\"\n              alt={t('keepAspectRatio')}\n              onClick={onKeepAspectToggle}\n            >\n              <Icon\n                name={keepAspect ? 'link' : 'unlink'}\n                alt={keepAspect ? 'Dismiss Aspect' : 'Keep Aspect'}\n              />\n            </button>\n          </div>\n        </div>\n\n        <div className=\"col\">\n          <div className=\"file-name\">\n            <TextInput\n              type=\"text\"\n              data-cy=\"file-name\"\n              value={filename}\n              onChange={event => setFilename(event.target.value)}\n              label={t('filename')}\n              id=\"file-name\"\n            />\n            {renderErrorHandler('filename')}\n          </div>\n          <div className=\"file-type\">\n            <Select\n              value={fileType}\n              data-cy=\"file-type\"\n              onChange={event => setFileType(event.target.value)}\n              options={FILE_TYPE_OPTIONS}\n              label={t('fileType')}\n            />\n          </div>\n        </div>\n\n        <div className=\"col\">\n          <div className=\"show-annotations\">\n            <label htmlFor=\"show-annotations\" className=\"form-check-label\">\n              <input\n                id=\"show-annotations\"\n                data-cy=\"show-annotations\"\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                checked={showAnnotations}\n                onChange={event => setShowAnnotations(event.target.checked)}\n              />\n              {t('showAnnotations')}\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <div\n        style={{\n          height: viewportElementDimensions.height,\n          width: viewportElementDimensions.width,\n          position: 'absolute',\n          left: '9999px',\n        }}\n        ref={ref => setViewportElement(ref)}\n      >\n        <canvas\n          className={canvasClass}\n          style={{\n            height: downloadCanvas.height,\n            width: downloadCanvas.width,\n            display: 'block',\n          }}\n          width={downloadCanvas.width}\n          height={downloadCanvas.height}\n          ref={downloadCanvas.ref}\n        ></canvas>\n      </div>\n\n      {viewportPreview.src ? (\n        <div className=\"preview\" data-cy=\"image-preview\">\n          <div className=\"preview-header\"> {t('imagePreview')}</div>\n          <img\n            className=\"viewport-preview\"\n            src={viewportPreview.src}\n            alt={t('imagePreview')}\n            data-cy=\"image-preview\"\n            data-cy=\"viewport-preview-img\"\n          />\n        </div>\n      ) : (\n        <div className=\"loading-image\">\n          <Icon name=\"circle-notch\" className=\"icon-spin\" />\n          {t('loadingPreview')}\n        </div>\n      )}\n\n      <div className=\"actions\">\n        <div className=\"action-cancel\">\n          <button\n            type=\"button\"\n            data-cy=\"cancel-btn\"\n            className=\"btn btn-danger\"\n            onClick={onClose}\n          >\n            {t('Buttons:Cancel')}\n          </button>\n        </div>\n        <div className=\"action-save\">\n          <button\n            disabled={hasError}\n            onClick={downloadImage}\n            className=\"btn btn-primary\"\n            data-cy=\"download-btn\"\n          >\n            {t('Buttons:Download')}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nViewportDownloadForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  activeViewport: PropTypes.object,\n  updateViewportPreview: PropTypes.func.isRequired,\n  enableViewport: PropTypes.func.isRequired,\n  disableViewport: PropTypes.func.isRequired,\n  toggleAnnotations: PropTypes.func.isRequired,\n  loadImage: PropTypes.func.isRequired,\n  downloadBlob: PropTypes.func.isRequired,\n  /** A default width & height, between the minimum and maximum size */\n  defaultSize: PropTypes.number.isRequired,\n  minimumSize: PropTypes.number.isRequired,\n  maximumSize: PropTypes.number.isRequired,\n  canvasClass: PropTypes.string.isRequired,\n};\n\nexport default ViewportDownloadForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './StudiesItem.styl';\n\nexport class StudiesItem extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    studyData: PropTypes.object.isRequired,\n    active: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      StudyDate,\n      StudyDescription,\n      modalities,\n      studyAvailable,\n    } = this.props.studyData;\n    const activeClass = this.props.active ? ' active' : '';\n    const hasDescriptionAndDate = StudyDate && StudyDescription;\n    return (\n      <div\n        className={`studyBrowseItem${activeClass}`}\n        onClick={this.props.onClick}\n      >\n        <div className=\"studyItemBox\">\n          <div className=\"studyModality\">\n            <div\n              className=\"studyModalityText\"\n              style={this.getModalitiesStyle()}\n            >\n              {modalities}\n            </div>\n          </div>\n          <div className=\"studyText\">\n            {hasDescriptionAndDate ? (\n              <React.Fragment>\n                <div className=\"studyDate\">{StudyDate}</div>\n                <div className=\"studyDescription\">{StudyDescription}</div>\n              </React.Fragment>\n            ) : (\n              <div className=\"studyAvailability\">\n                {studyAvailable ? (\n                  <React.Fragment>N/A</React.Fragment>\n                ) : (\n                  <React.Fragment>Click to load</React.Fragment>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  getModalitiesStyle = () => {\n    return {};\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StudiesItem } from './StudiesItem.js';\nimport './StudiesList.styl';\n\nexport class StudiesList extends Component {\n  static propTypes = {\n    class: PropTypes.string,\n    studyListData: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    activeStudyInstanceUID: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <div className={`studiesList ${this.props.class}`}>\n        {this.getBrowserItems()}\n      </div>\n    );\n  }\n\n  getBrowserItems = () => {\n    return this.props.studyListData.map((studyData, index) => {\n      return (\n        <StudiesItem\n          key={index}\n          studyData={studyData}\n          active={\n            studyData.StudyInstanceUID === this.props.activeStudyInstanceUID\n          }\n          onClick={event => this.props.onClick(studyData)}\n        />\n      );\n    });\n  };\n}\n","import './ScrollableArea.styl';\n\nimport React, { Component } from 'react';\n\nimport { Icon } from './../elements/Icon';\nimport PropTypes from 'prop-types';\nimport getScrollbarSize from '../utils/getScrollbarSize.js';\nimport throttled from '../utils/throttled.js';\n\nexport class ScrollableArea extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    class: PropTypes.string,\n    scrollableClass: PropTypes.string,\n    scrollX: PropTypes.bool,\n    scrollY: PropTypes.bool,\n    hideScrollbar: PropTypes.bool,\n    scrollStep: PropTypes.number,\n  };\n\n  static defaultProps = {\n    hideScrollbar: true,\n    class: 'flex-grow fit',\n    scrollY: true,\n    scrollX: false,\n    scrollStep: 100,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrollAreaClasses: '',\n    };\n\n    this.scrollHandlerThrottled = throttled(150, this.scrollHandler);\n  }\n\n  render() {\n    let scrollableClass = 'scrollable';\n    if (this.props.scrollableClass) {\n      scrollableClass += ` ${this.props.scrollableClass}`;\n    }\n    if (this.props.scrollX) {\n      scrollableClass += ` scrollX`;\n    }\n    if (this.props.scrollY) {\n      scrollableClass += ` scrollY`;\n    }\n\n    return (\n      <div\n        className={`scrollArea ${this.props.class} ${\n          this.state.scrollAreaClasses\n        }`}\n      >\n        <div\n          className={scrollableClass}\n          ref={element => {\n            this.scrollableElement = element;\n          }}\n          onScroll={this.scrollHandlerThrottled}\n          onMouseEnter={this.scrollHandlerThrottled}\n          onTransitionEnd={this.scrollHandlerThrottled}\n        >\n          {this.props.children}\n        </div>\n        <div className=\"scrollNav scrollNavUp\" onClick={this.scrollNavUp}>\n          {/* <svg className=\"scrollNavIcon\"> */}\n          <Icon name=\"angle-double-up\" />\n        </div>\n        <div className=\"scrollNav scrollNavDown\" onClick={this.scrollNavDown}>\n          <Icon name=\"angle-double-down\" />\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.adjustMargins();\n    this.scrollHandler();\n    window.addEventListener('resize', this.adjustMargins);\n  }\n\n  componentDidUpdate() {\n    this.adjustMargins();\n    this.scrollHandler();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.adjustMargins);\n  }\n\n  scrollNavDown = event => {\n    const {\n      scrollTop: currentTop,\n      offsetHeight: height,\n      scrollHeight,\n    } = this.scrollableElement;\n\n    const limit = scrollHeight - height;\n    let scrollTop = currentTop + this.props.scrollStep;\n    scrollTop = scrollTop > limit ? limit : scrollTop;\n    this.scrollableElement.scrollTop = scrollTop;\n  };\n\n  scrollNavUp = event => {\n    const { scrollTop: currentTop } = this.scrollableElement;\n\n    let scrollTop = currentTop - this.props.scrollStep;\n    scrollTop = scrollTop < 0 ? 0 : scrollTop;\n\n    this.scrollableElement.scrollTop = scrollTop;\n  };\n\n  adjustMargins = () => {\n    if (this.props.hideScrollbar) {\n      const x = this.props.scrollX ? 1 : 0;\n      const y = this.props.scrollY ? 1 : 0;\n      const scrollbarSize = getScrollbarSize();\n      this.scrollableElement.style.marginRight = `${0 -\n        scrollbarSize[0] * y}px`;\n      this.scrollableElement.style.marginBottom = `${0 -\n        scrollbarSize[1] * x}px`;\n    }\n  };\n\n  scrollHandler = () => {\n    const {\n      offsetHeight: height,\n      scrollTop: scrollTop,\n      scrollHeight,\n    } = this.scrollableElement;\n    let scrollAreaClasses = '';\n\n    // Check if can scroll up\n    if (scrollTop) {\n      scrollAreaClasses += 'canScrollUp';\n    }\n\n    // Check if can scroll down\n    if (scrollTop + height < scrollHeight) {\n      scrollAreaClasses += ' canScrollDown';\n    }\n\n    if (this.state.scrollAreaClasses !== scrollAreaClasses) {\n      this.setState({\n        scrollAreaClasses,\n      });\n    }\n  };\n}\n","export default function throttled(delay, callback) {\n  let isThrottled = false,\n    args,\n    context;\n\n  function wrapper() {\n    if (isThrottled) {\n      args = arguments;\n      context = this;\n      return;\n    }\n\n    isThrottled = true;\n    callback.apply(this, arguments);\n\n    setTimeout(() => {\n      isThrottled = false;\n      if (args) {\n        wrapper.apply(context, args);\n        args = context = null;\n      }\n    }, delay);\n  }\n\n  return wrapper;\n}\n","/**\n * Get the vertical and horizontal scrollbar sizes\n * Got from https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n *\n * @returns {Array} Array containing the scrollbar horizontal and vertical sizes\n */\nexport default function getScrollbarSize() {\n  const inner = document.createElement('p');\n  inner.style.width = '100%';\n  inner.style.height = '100%';\n\n  const outer = document.createElement('div');\n  outer.style.position = 'absolute';\n  outer.style.top = '0px';\n  outer.style.left = '0px';\n  outer.style.visibility = 'hidden';\n  outer.style.width = '100px';\n  outer.style.height = '100px';\n  outer.style.overflow = 'hidden';\n  outer.appendChild(inner);\n\n  document.body.appendChild(outer);\n\n  const w1 = inner.offsetWidth;\n  const h1 = inner.offsetHeight;\n  outer.style.overflow = 'scroll';\n  let w2 = inner.offsetWidth;\n  let h2 = inner.offsetHeight;\n\n  if (w1 === w2) {\n    w2 = outer.clientWidth;\n  }\n\n  if (h1 === h2) {\n    h2 = outer.clientHeight;\n  }\n\n  document.body.removeChild(outer);\n\n  return [w1 - w2, h1 - h2];\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Thumbnail } from './../studyBrowser';\nimport './SeriesList.styl';\n\nexport class SeriesList extends Component {\n  static propTypes = {\n    seriesItems: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    activeDisplaySetInstanceUID: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"study-browser-series clearfix thumbnails-wrapper\">\n          <div className=\"study-series-container\">{this.getSeriesItems()}</div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  getSeriesItems = () => {\n    return this.props.seriesItems.map((seriesData, index) => {\n      return (\n        <Thumbnail\n          key={seriesData.displaySetInstanceUID}\n          id={`series_thumb_${index}`}\n          {...seriesData}\n          active={\n            seriesData.displaySetInstanceUID ===\n            this.props.activeDisplaySetInstanceUID\n          }\n          onClick={() => this.props.onClick(seriesData)}\n        />\n      );\n    });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StudiesList } from './StudiesList.js';\nimport { ScrollableArea } from './../../ScrollableArea/ScrollableArea.js';\nimport { SeriesList } from './SeriesList.js';\n\nimport './QuickSwitch.styl';\n\nexport class QuickSwitch extends Component {\n  static propTypes = {\n    side: PropTypes.string,\n    studyListData: PropTypes.array.isRequired,\n    onSeriesSelected: PropTypes.func.isRequired,\n    seriesData: PropTypes.array,\n    onStudySelected: PropTypes.func,\n    activeStudyInstanceUID: PropTypes.string,\n    activeDisplaySetInstanceUID: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      seriesQuickSwitchOpen: false,\n      sideClass: this.props.side || '',\n      activeStudyInstanceUID: this.props.activeStudyInstanceUID,\n      activeDisplaySetInstanceUID: this.props.activeDisplaySetInstanceUID,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const props = this.props;\n\n    if (props.activeStudyInstanceUID !== prevProps.activeStudyInstanceUID) {\n      this.setState({\n        activeStudyInstanceUID: props.activeStudyInstanceUID,\n      });\n    }\n\n    if (\n      props.activeDisplaySetInstanceUID !==\n      prevProps.activeDisplaySetInstanceUID\n    ) {\n      this.setState({\n        activeDisplaySetInstanceUID: props.activeDisplaySetInstanceUID,\n      });\n    }\n  }\n\n  render() {\n    const quickSwitchClass = this.state.seriesQuickSwitchOpen\n      ? 'series-triggered'\n      : '';\n\n    return (\n      <div\n        className={`series-quick-switch clearfix noselect ${this.state.sideClass} ${quickSwitchClass}`}\n        onMouseLeave={this.hideSeriesSwitch}\n      >\n        <div className=\"series-switch\" onMouseEnter={this.showSeriesSwitch}>\n          <div className=\"title-label\">Series</div>\n          <div className=\"series-box\">\n            {this.getSmallListItems()}\n            <ScrollableArea scrollStep={201} class=\"series-browser\">\n              <SeriesList\n                seriesItems={this.getSeriesItems()}\n                onClick={this.onSeriesClick}\n                activeDisplaySetInstanceUID={\n                  this.state.activeDisplaySetInstanceUID\n                }\n              />\n            </ScrollableArea>\n          </div>\n        </div>\n        <div className=\"study-switch\">\n          <div className=\"title-label\">Study</div>\n          <div className=\"study-box\">\n            <ScrollableArea scrollStep={91} class=\"study-browser\">\n              <StudiesList\n                studyListData={this.props.studyListData}\n                onClick={this.onStudyClick}\n                activeStudyInstanceUID={this.state.activeStudyInstanceUID}\n              />\n            </ScrollableArea>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  getSeriesItems = () => {\n    let seriesData;\n\n    if (this.props.seriesData) {\n      seriesData = this.props.seriesData;\n    } else if (this.state.activeStudyInstanceUID) {\n      const study = this.props.studyListData.find(\n        study => study.StudyInstanceUID === this.state.activeStudyInstanceUID\n      );\n\n      seriesData = study.thumbnails;\n    } else {\n      seriesData = this.props.studyListData[0].thumbnails;\n    }\n\n    return seriesData || [];\n  };\n\n  getSmallListItems = () => {\n    const seriesItems = this.getSeriesItems() || [];\n    return seriesItems.map((seriesData, index) => {\n      const active =\n        seriesData.displaySetInstanceUID ===\n        this.state.activeDisplaySetInstanceUID;\n      return (\n        <div key={index} className={`series-item ${active ? 'active' : ''}`} />\n      );\n    });\n  };\n\n  onStudyClick = studyDataSelected => {\n    if (this.props.onStudySelected) {\n      this.props.onStudySelected(studyDataSelected);\n    }\n    this.setState({\n      activeStudyInstanceUID: studyDataSelected.StudyInstanceUID,\n      seriesQuickSwitchOpen: true,\n    });\n  };\n\n  onSeriesClick = seriesDataSelected => {\n    this.setState({\n      activeDisplaySetInstanceUID: seriesDataSelected.displaySetInstanceUID,\n    });\n\n    this.props.onSeriesSelected(seriesDataSelected);\n  };\n\n  showSeriesSwitch = () => {\n    this.setState({\n      seriesQuickSwitchOpen: true,\n    });\n  };\n\n  hideSeriesSwitch = () => {\n    this.setState({\n      seriesQuickSwitchOpen: false,\n    });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Icon } from './../../elements/Icon';\nimport './RoundedButtonGroup.css';\n\nclass RoundedButtonGroup extends Component {\n  static className = 'RoundedButtonGroup';\n\n  static propTypes = {\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        value: PropTypes.any,\n        label: PropTypes.string,\n        stateEvent: PropTypes.string,\n        icon: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n          }),\n        ]),\n      })\n    ),\n    value: PropTypes.string,\n    onValueChanged: PropTypes.func,\n  };\n\n  static defaultProps = {\n    options: [],\n    value: null,\n  };\n\n  state = {\n    badgeNumbers: [],\n  };\n\n  constructor() {\n    super();\n    this.onStateEvent = this.onStateEvent.bind(this);\n  }\n\n  onClickOption = value => {\n    let newValue = value;\n    if (this.props.value === value) {\n      newValue = null;\n    }\n\n    if (this.props.onValueChanged) {\n      this.props.onValueChanged(newValue);\n    }\n  };\n\n  onStateEvent(event) {\n    const optionIndex = this.props.options.findIndex(\n      o => o.value === event.detail.target\n    );\n    if (optionIndex > -1) {\n      const badgeNumbers = this.state.badgeNumbers;\n      badgeNumbers[optionIndex] = event.detail.badgeNumber;\n      this.setState({ badgeNumbers });\n    }\n  }\n\n  componentDidMount() {\n    this.props.options.forEach(option => {\n      if (option.stateEvent) {\n        document.addEventListener(option.stateEvent, this.onStateEvent);\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.props.options.forEach((option, index) => {\n      if (\n        option.stateEvent &&\n        option.stateEvent !==\n          (prevProps.options[index]\n            ? prevProps.options[index].stateEvent\n            : null)\n      ) {\n        document.removeEventListener(option.stateEvent, this.onStateEvent);\n        document.addEventListener(option.stateEvent, this.onStateEvent);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.options.forEach(option => {\n      if (option.stateEvent) {\n        document.removeEventListener(option.stateEvent, this.onStateEvent);\n      }\n    });\n  }\n\n  render() {\n    let className = classnames(\n      RoundedButtonGroup.className,\n      'clearfix center-table'\n    );\n\n    const buttons = this.props.options.map((option, index) => {\n      const className = classnames({\n        roundedButtonWrapper: true,\n        noselect: true,\n        active: this.props.value === option.value,\n      });\n\n      const optionText = option.label && <span>{option.label}</span>;\n      const iconProps =\n        typeof option.icon === 'string' ? { name: option.icon } : option.icon;\n\n      const bottomLabel = option.bottomLabel && (\n        <div className=\"bottomLabel\">{option.bottomLabel}</div>\n      );\n\n      let badgeNumber = this.state.badgeNumbers[index];\n      const badgeNumberOverflow = String(badgeNumber).length > 2;\n      badgeNumber = badgeNumber\n        ? badgeNumberOverflow\n          ? 99\n          : badgeNumber\n        : null;\n\n      return (\n        <div\n          key={index}\n          className={className}\n          onClick={() => this.onClickOption(option.value)}\n        >\n          <div className=\"roundedButton\">\n            {optionText}\n            {badgeNumber && (\n              <div className=\"badgeNumber-container\">\n                <span className=\"badgeNumber\">\n                  {badgeNumber}\n                  {badgeNumberOverflow && '+'}\n                </span>\n              </div>\n            )}\n            {iconProps && <Icon {...iconProps} />}\n          </div>\n          {bottomLabel}\n        </div>\n      );\n    });\n\n    return <div className={className}>{buttons}</div>;\n  }\n}\n\nexport { RoundedButtonGroup };\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InputRadio extends Component {\n  static propTypes = {\n    value: PropTypes.string,\n    label: PropTypes.string.isRequired,\n    itemData: PropTypes.object.isRequired,\n    labelClass: PropTypes.string,\n    id: PropTypes.string.isRequired,\n    onSelected: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const labelClass = this.props.labelClass ? this.props.labelClass : '';\n    return (\n      <label\n        className={'wrapperLabel radioLabel ' + labelClass}\n        htmlFor={this.props.id}\n      >\n        <input\n          type=\"radio\"\n          id={this.props.id}\n          className=\"radioInput\"\n          value={this.props.value}\n          onChange={this.onSelected}\n        />\n        <span className=\"wrapperText\">{this.props.label}</span>\n      </label>\n    );\n  }\n\n  onSelected = evt => {\n    this.props.onSelected(evt, this.props.itemData);\n  };\n}\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from './../../elements/Icon';\n\nexport default class SelectTreeBreadcrumb extends Component {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onSelected: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div className=\"selectTreeBreadcrumb\">\n        <label\n          className=\"wrapperLabel radioLabel\"\n          htmlFor=\"selectTreeBreadcrumb\"\n        >\n          <input\n            type=\"radio\"\n            id=\"selectTreeBreadcrumb\"\n            className=\"treeNode radioInput\"\n            value={this.props.value}\n            onChange={this.props.onSelected}\n          />\n          <span className=\"wrapperText\">\n            <span className=\"backIcon\">\n              <Icon name=\"fast-backward\" />\n            </span>\n            {this.props.label}\n          </span>\n        </label>\n      </div>\n    );\n  }\n}\n","import './SelectTree.styl';\n\nimport React, { Component } from 'react';\n\nimport { Icon } from './../../elements/Icon';\nimport InputRadio from './InputRadio.js';\nimport PropTypes from 'prop-types';\nimport SelectTreeBreadcrumb from './SelectTreeBreadcrumb.js';\nimport cloneDeep from 'lodash.clonedeep';\n\nexport class SelectTree extends Component {\n  static propTypes = {\n    autoFocus: PropTypes.bool,\n    searchEnabled: PropTypes.bool,\n    selectTreeFirstTitle: PropTypes.string,\n    selectTreeSecondTitle: PropTypes.string,\n    /** Called when 'componentDidUpdate' is triggered */\n    onComponentChange: PropTypes.func,\n    /** [{ label, value, items[]}] - An array of items than can be expanded to show child items */\n    items: PropTypes.array.isRequired,\n    /** fn(evt, item) - Called when a child item is selected; receives event and selected item */\n    onSelected: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    searchEnabled: true,\n    autoFocus: true,\n    selectTreeFirstTitle: 'First Level itens',\n    items: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchTerm: null,\n      currentNode: null,\n      value: null,\n    };\n  }\n\n  render() {\n    const treeItems = this.getTreeItems();\n\n    return (\n      <div className=\"selectTree selectTreeRoot\">\n        <div className=\"treeContent\">\n          {this.headerItem()}\n          <div className=\"treeOptions\">\n            {this.state.currentNode && (\n              <SelectTreeBreadcrumb\n                onSelected={this.onBreadcrumbSelected}\n                label={this.state.currentNode.label}\n                value={this.state.currentNode.value}\n              />\n            )}\n            <div className=\"treeInputsWrapper\">\n              <div className=\"treeInputs\">{treeItems}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidUpdate = () => {\n    if (this.props.onComponentChange) {\n      this.props.onComponentChange();\n    }\n  };\n\n  isLeafSelected = item => item && !Array.isArray(item.items);\n\n  getLabelClass = item => {\n    let labelClass = 'treeLeaf';\n    if (this.state.searchTerm || Array.isArray(item.items)) {\n      labelClass = 'treeNode';\n    }\n    return labelClass;\n  };\n\n  filterItems() {\n    const filteredItems = [];\n    const rawItems = cloneDeep(this.props.items);\n    rawItems.forEach(item => {\n      if (Array.isArray(item.items)) {\n        item.items.forEach(item => {\n          const label = item.label.toLowerCase();\n          const searchTerm = this.state.searchTerm.toLowerCase();\n          if (label.indexOf(searchTerm) !== -1) {\n            filteredItems.push(item);\n          }\n        });\n      } else {\n        const label = item.label.toLowerCase();\n        const searchTerm = this.state.searchTerm.toLowerCase();\n        if (label.indexOf(searchTerm) !== -1) {\n          filteredItems.push(item);\n        }\n      }\n    });\n    return filteredItems;\n  }\n\n  getTreeItems() {\n    const storageKey = 'SelectTree';\n    let treeItems;\n\n    if (this.state.searchTerm) {\n      treeItems = this.filterItems();\n    } else if (this.state.currentNode) {\n      treeItems = cloneDeep(this.state.currentNode.items);\n    } else {\n      treeItems = cloneDeep(this.props.items);\n    }\n\n    return treeItems.map((item, index) => {\n      let itemKey = index;\n      if (this.state.currentNode) {\n        itemKey += `_${this.state.currentNode.value}`;\n      }\n      return (\n        <InputRadio\n          key={itemKey}\n          id={`${storageKey}_${item.value}`}\n          name={index}\n          itemData={item}\n          value={item.value}\n          label={item.label}\n          labelClass={this.getLabelClass(item)}\n          onSelected={this.onSelected}\n        />\n      );\n    });\n  }\n\n  headerItem = () => {\n    let title = this.props.selectTreeFirstTitle;\n    if (this.state.currentNode && this.props.selectTreeSecondTitle) {\n      title = this.props.selectTreeSecondTitle;\n    }\n\n    return (\n      <div className=\"wrapperLabel treeHeader\">\n        <div className=\"wrapperText\">{title}</div>\n        {this.props.searchEnabled && (\n          <div className=\"wrapperSearch\">\n            <div className=\"searchIcon\">\n              <Icon name=\"search\" />\n            </div>\n            <input\n              type=\"text\"\n              className=\"searchInput\"\n              placeholder=\"Search labels\"\n              autoFocus={this.props.autoFocus}\n              onChange={this.searchLocations}\n              value={this.state.searchTerm ? this.state.searchTerm : ''}\n            />\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  searchLocations = evt => {\n    this.setState({\n      currentNode: null,\n      searchTerm: evt.currentTarget.value,\n    });\n  };\n\n  onSelected = (event, item) => {\n    if (this.isLeafSelected(item)) {\n      this.setState({\n        searchTerm: null,\n        currentNode: null,\n        value: null,\n      });\n    } else {\n      this.setState({\n        currentNode: item,\n      });\n    }\n    return this.props.onSelected(event, item);\n  };\n\n  onBreadcrumbSelected = () => {\n    this.setState({\n      currentNode: null,\n    });\n  };\n}\n","import React, { Component, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@ohif/ui';\n\nimport './SimpleDialog.styl';\n\nclass SimpleDialog extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    componentRef: PropTypes.any,\n    componentStyle: PropTypes.object,\n    rootClass: PropTypes.string,\n    isOpen: PropTypes.bool,\n    headerTitle: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    isOpen: true,\n    componentStyle: {},\n    rootClass: '',\n  };\n\n  static InputDialog = ({ onSubmit, defaultValue, title, label, onClose }) => {\n    const [value, setValue] = useState(defaultValue);\n\n    const onSubmitHandler = () => {\n      onSubmit(value);\n      onClose();\n    };\n\n    return (\n      <div className=\"InputDialog\">\n        <SimpleDialog\n          headerTitle={title}\n          onClose={onClose}\n          onConfirm={onSubmitHandler}\n        >\n          <TextInput\n            type=\"text\"\n            value={value}\n            onChange={event => setValue(event.target.value)}\n            label={label}\n          />\n        </SimpleDialog>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.isOpen && (\n          <div\n            className={`simpleDialog ${this.props.rootClass} `}\n            ref={this.props.componentRef}\n            style={this.props.componentStyle}\n          >\n            <form>\n              <div className=\"header\">\n                <span className=\"closeBtn\" onClick={this.onClose}>\n                  <span className=\"closeIcon\">x</span>\n                </span>\n                <h4 className=\"title\">{this.props.headerTitle}</h4>\n              </div>\n              <div className=\"content\">{this.props.children}</div>\n              <div className=\"foot\" style={{ width: '100%' }}>\n                <button className=\"btn btn-default\" onClick={this.onClose}>\n                  Cancel\n                </button>\n                <button\n                  className=\"btn btn-default\"\n                  style={{ float: 'right' }}\n                  onClick={this.onConfirm}\n                >\n                  Submit\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  onClose = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.onClose();\n  };\n\n  onConfirm = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.onConfirm();\n  };\n}\n\nexport { SimpleDialog };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-modal';\nimport classNames from 'classnames';\n\nimport './OHIFModal.styl';\n\nconst customStyle = {\n  overlay: {\n    zIndex: 1071,\n    backgroundColor: 'rgb(0, 0, 0, 0.5)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n};\n\nModal.setAppElement(document.getElementById('root'));\n\nconst OHIFModal = ({\n  className,\n  closeButton,\n  shouldCloseOnEsc,\n  isOpen,\n  fullscreen,\n  title,\n  onClose,\n  children,\n}) => {\n  const renderHeader = () => {\n    return (\n      title && (\n        <div className=\"OHIFModal__header\" data-cy=\"modal-header\">\n          <h4>{title}</h4>\n          {closeButton && (\n            <button data-cy=\"close-button\" onClick={onClose}>\n              ×\n            </button>\n          )}\n        </div>\n      )\n    );\n  };\n\n  const classes = fullscreen\n    ? classNames('OHIFModal', className, 'OHIFModal-fullscreen')\n    : classNames('OHIFModal', className);\n\n  return (\n    <Modal\n      className={classes}\n      data-cy=\"modal\"\n      shouldCloseOnEsc={shouldCloseOnEsc}\n      isOpen={isOpen}\n      title={title}\n      style={customStyle}\n    >\n      <>\n        {renderHeader()}\n        <div className=\"OHIFModal__content\" data-cy=\"modal-content\">\n          {children}\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nOHIFModal.propTypes = {\n  className: PropTypes.string,\n  closeButton: PropTypes.bool,\n  shouldCloseOnEsc: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  onClose: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default OHIFModal;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport './ContextMenu.css';\n\nconst ContextMenu = ({ items, onClick }) => {\n  return (\n    <div className=\"ContextMenu\" onContextMenu={e => e.preventDefault()}>\n      <ul>\n        {items.map((item, index) => (\n          <li key={index}>\n            <button className=\"form-action\" onClick={() => onClick(item)}>\n              <span key={index}>{item.label}</span>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContextMenu.propTypes = {\n  items: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContextMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@ohif/ui';\n\nimport './ErrorPage.css';\n\nconst ErrorPage = ({ error, title, description, onRetry }) => {\n  return (\n    <div className=\"ErrorPage\">\n      {title && <h3>{title}</h3>}\n      <p>{description}</p>\n      <Icon\n        className=\"retry-icon\"\n        name=\"rotate-right\"\n        width=\"25px\"\n        height=\"25px\"\n        onClick={onRetry}\n      />\n      {error && (\n        <div className=\"error-container\">\n          <pre>{error.message}</pre>\n          <pre>{error.stack}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nErrorPage.propTypes = {\n  error: PropTypes.object,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  onRetry: PropTypes.func\n};\n\nErrorPage.defaultProps = {\n  description: 'Oh snap, something went wrong, please try reloading',\n  onRetry: () => window.location.reload()\n};\n\nexport default ErrorPage;\n","import ErrorPage from './ErrorPage';\nexport default ErrorPage;\n","//  If you want to continue using CSS stylesheets and classes...\n//  https://github.com/airbnb/react-dates#initialize\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport './CustomDateRangePicker.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DateRangePicker } from 'react-dates';\nimport moment from 'moment';\n\nfunction CustomDateRangePicker(props) {\n  const {\n    onDatesChange,\n    startDate,\n    endDate,\n    presets,\n    ...dateRangePickerProps\n  } = props;\n\n  const renderDatePresets = () => {\n    const { presets } = props;\n\n    return (\n      <div className=\"PresetDateRangePicker_panel\">\n        {presets.map(({ text, start, end }) => {\n          const isSelected = startDate === start && endDate === end;\n\n          return (\n            <button\n              key={text}\n              type=\"button\"\n              className={`PresetDateRangePicker_button ${\n                isSelected ? 'PresetDateRangePicker_button__selected' : ''\n              }`}\n              onClick={() =>\n                onDatesChange({\n                  startDate: start,\n                  endDate: end,\n                  preset: true,\n                })\n              }\n            >\n              {text}\n            </button>\n          );\n        })}\n      </div>\n    );\n  };\n  const renderMonthElement = ({ month, onMonthSelect, onYearSelect }) => {\n    const containerStyle = {\n      margin: '0 5px',\n    };\n\n    const renderYearsOptions = () => {\n      const yearsRange = 20;\n      const options = [];\n\n      for (let i = 0; i < yearsRange; i++) {\n        const year = moment().year() - i;\n        options.push(<option value={year}>{year}</option>);\n      }\n\n      return options;\n    };\n\n    renderMonthElement.propTypes = {\n      onMonthSelect: PropTypes.func,\n      onYearSelect: PropTypes.func,\n    };\n\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <div style={containerStyle}>\n          <select\n            className=\"DateRangePicker_select\"\n            value={month.month()}\n            onChange={e => onMonthSelect(month, e.target.value)}\n          >\n            {moment.months().map((label, value) => (\n              <option key={value} value={value}>\n                {label}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div style={containerStyle}>\n          {}\n          <select\n            className=\"DateRangePicker_select\"\n            value={month.year()}\n            onChange={e => onYearSelect(month, e.target.value)}\n          >\n            {renderYearsOptions()}\n          </select>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <DateRangePicker\n      {...dateRangePickerProps}\n      startDate={startDate}\n      endDate={endDate}\n      renderCalendarInfo={renderDatePresets}\n      onDatesChange={onDatesChange}\n      renderMonthElement={renderMonthElement}\n      startDatePlaceholderText={'Start Date'}\n      endDatePlaceholderText={'End Date'}\n      phrases={{\n        closeDatePicker: 'Common:Close',\n        clearDates: 'Clear dates',\n      }}\n    />\n  );\n}\n\nCustomDateRangePicker.propTypes = {\n  presets: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      start: PropTypes.required,\n      end: PropTypes.required,\n    })\n  ),\n  onDatesChange: PropTypes.func.isRequired,\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date),\n  month: PropTypes.instanceOf(Date),\n};\n\nexport default CustomDateRangePicker;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport CustomDateRangePicker from './CustomDateRangePicker.js';\nimport { Icon } from './../../elements/Icon';\n\nconst getDateEntry = (datePicked, rangeDatePicked) => {\n  return rangeDatePicked || datePicked || null;\n};\n\nconst getDateEntryFromRange = (today, numOfDays, edge = 'start') => {\n  if (typeof numOfDays !== 'number') {\n    return;\n  }\n\n  if (edge === 'end') {\n    return today;\n  } else {\n    today.subtract(numOfDays, 'days');\n  }\n};\n\nfunction TableSearchFilter(props) {\n  const {\n    meta,\n    values,\n    onSort,\n    onValueChange,\n    sortFieldName,\n    sortDirection,\n    // TODO: Rename\n    studyListDateFilterNumDays,\n  } = props;\n\n  const { studyDateTo, studyDateFrom } = values || {};\n  const [focusedInput, setFocusedInput] = useState(null);\n\n  const sortIcons = ['sort', 'sort-up', 'sort-down'];\n  const sortIconForSortField =\n    sortDirection === 'asc' ? sortIcons[1] : sortIcons[2];\n\n  const today = moment();\n  const lastWeek = moment().subtract(7, 'day');\n  const lastMonth = moment().subtract(1, 'month');\n\n  const defaultStartDate = getDateEntryFromRange(\n    today,\n    studyListDateFilterNumDays,\n    'start'\n  );\n  const defaultEndDate = getDateEntryFromRange(\n    today,\n    studyListDateFilterNumDays,\n    'end'\n  );\n\n  const studyDatePresets = [\n    {\n      text: 'Today',\n      start: today,\n      end: today,\n    },\n    {\n      text: 'Last 7 days',\n      start: lastWeek,\n      end: today,\n    },\n    {\n      text: 'Last 30 days',\n      start: lastMonth,\n      end: today,\n    },\n  ];\n\n  return meta.map((field, i) => {\n    const { displayText, fieldName, inputType } = field;\n    const isSortField = sortFieldName === fieldName;\n    const sortIcon = isSortField ? sortIconForSortField : sortIcons[0];\n\n    return (\n      <th key={`${fieldName}-${i}`}>\n        <label\n          htmlFor={`filter-${fieldName}`}\n          onClick={() => onSort(fieldName)}\n        >\n          {`${displayText}`}\n          <Icon name={sortIcon} style={{ fontSize: '12px' }} />\n        </label>\n        {inputType === 'text' && (\n          <input\n            type=\"text\"\n            id={`filter-${fieldName}`}\n            className=\"form-control studylist-search\"\n            value={values[fieldName]}\n            onChange={e => onValueChange(fieldName, e.target.value)}\n          />\n        )}\n        {inputType === 'date-range' && (\n          // https://github.com/airbnb/react-dates\n          <CustomDateRangePicker\n            // Required\n            startDate={getDateEntry(studyDateFrom, defaultStartDate)}\n            startDateId=\"start-date\"\n            endDate={getDateEntry(studyDateTo, defaultEndDate)}\n            endDateId=\"end-date\"\n            // TODO: We need a dynamic way to determine which fields values to update\n            onDatesChange={({ startDate, endDate, preset = false }) => {\n              onValueChange('studyDateFrom', startDate);\n              onValueChange('studyDateTo', endDate);\n            }}\n            focusedInput={focusedInput}\n            onFocusChange={updatedVal => setFocusedInput(updatedVal)}\n            // Optional\n            numberOfMonths={1} // For med and small screens? 2 for large?\n            showClearDates={true}\n            anchorDirection=\"left\"\n            presets={studyDatePresets}\n            hideKeyboardShortcutsPanel={true}\n            isOutsideRange={day => !isInclusivelyBeforeDay(day, moment())}\n          />\n        )}\n      </th>\n    );\n  });\n}\n\nTableSearchFilter.propTypes = {\n  meta: PropTypes.arrayOf(\n    PropTypes.shape({\n      displayText: PropTypes.string.isRequired,\n      fieldName: PropTypes.string.isRequired,\n      inputType: PropTypes.oneOf(['text', 'date-range']).isRequired,\n      size: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  values: PropTypes.object.isRequired,\n  onSort: PropTypes.func.isRequired,\n  sortFieldName: PropTypes.string,\n  sortDirection: PropTypes.oneOf([null, 'asc', 'desc']),\n};\n\nTableSearchFilter.defaultProps = {};\n\nexport { TableSearchFilter };\nexport default TableSearchFilter;\n","import './StudyList.styl';\nimport React from 'react';\nimport classNames from 'classnames';\nimport TableSearchFilter from './TableSearchFilter.js';\nimport PropTypes from 'prop-types';\nimport { StudyListLoadingText } from './StudyListLoadingText.js';\n\nconst getContentFromUseMediaValue = (\n  displaySize,\n  contentArrayMap,\n  defaultContent\n) => {\n  const content =\n    displaySize in contentArrayMap\n      ? contentArrayMap[displaySize]\n      : defaultContent;\n\n  return content;\n};\n\nfunction StudyList(props) {\n  const {\n    isLoading,\n    hasError,\n    studies,\n    sort,\n    onSort: handleSort,\n    filterValues,\n    onFilterChange: handleFilterChange,\n    onSelectItem: handleSelectItem,\n    studyListDateFilterNumDays,\n    displaySize,\n  } = props;\n\n  const largeTableMeta = [\n    {\n      displayText: 'PatientName',\n      fieldName: 'PatientName',\n      inputType: 'text',\n      size: 330,\n    },\n    {\n      displayText: 'MRN',\n      fieldName: 'PatientID',\n      inputType: 'text',\n      size: 378,\n    },\n    {\n      displayText: 'AccessionNumber',\n      fieldName: 'AccessionNumber',\n      inputType: 'text',\n      size: 180,\n    },\n    {\n      displayText: 'StudyDate',\n      fieldName: 'StudyDate',\n      inputType: 'date-range',\n      size: 300,\n    },\n    {\n      displayText: 'Modality',\n      fieldName: 'modalities',\n      inputType: 'text',\n      size: 114,\n    },\n    {\n      displayText: 'StudyDescription',\n      fieldName: 'StudyDescription',\n      inputType: 'text',\n      size: 335,\n    },\n  ];\n\n  const mediumTableMeta = [\n    {\n      displayText: 'PatientName/Id',\n      fieldName: 'patientNameOrId',\n      inputType: 'text',\n      size: 250,\n    },\n    {\n      displayText: 'Modality',\n      fieldName: 'modalities',\n      inputType: 'text',\n      size: 114,\n    },\n    {\n      displayText: 'StudyDate',\n      fieldName: 'StudyDate',\n      inputType: 'date-range',\n      size: 300,\n    },\n  ];\n\n  const smallTableMeta = [\n    {\n      displayText: 'Search',\n      fieldName: 'allFields',\n      inputType: 'text',\n      size: 100,\n    },\n  ];\n\n  const tableMeta = getContentFromUseMediaValue(\n    displaySize,\n    { large: largeTableMeta, medium: mediumTableMeta, small: smallTableMeta },\n    smallTableMeta\n  );\n\n  const totalSize = tableMeta\n    .map(field => field.size)\n    .reduce((prev, next) => prev + next);\n\n  return (\n    <table className=\"table table--striped table--hoverable\">\n      <colgroup>\n        {tableMeta.map((field, i) => {\n          const size = field.size;\n          const percentWidth = (size / totalSize) * 100.0;\n\n          return <col key={i} style={{ width: `${percentWidth}%` }} />;\n        })}\n      </colgroup>\n      <thead className=\"table-head\">\n        <tr className=\"filters\">\n          <TableSearchFilter\n            meta={tableMeta}\n            values={filterValues}\n            onSort={handleSort}\n            onValueChange={handleFilterChange}\n            sortFieldName={sort.fieldName}\n            sortDirection={sort.direction}\n            studyListDateFilterNumDays={studyListDateFilterNumDays}\n          />\n        </tr>\n      </thead>\n      <tbody className=\"table-body\" data-cy=\"study-list-results\">\n        {/* LOADING */}\n        {isLoading && (\n          <tr className=\"no-hover\">\n            <td colSpan={tableMeta.length}>\n              <StudyListLoadingText />\n            </td>\n          </tr>\n        )}\n        {!isLoading && hasError && (\n          <tr className=\"no-hover\">\n            <td colSpan={tableMeta.length}>\n              <div className=\"notFound\">\n                {'There was an error fetching studies'}\n              </div>\n            </td>\n          </tr>\n        )}\n        {/* EMPTY */}\n        {!isLoading && !studies.length && (\n          <tr className=\"no-hover\">\n            <td colSpan={tableMeta.length}>\n              <div className=\"notFound\">{'No matching results'}</div>\n            </td>\n          </tr>\n        )}\n        {!isLoading &&\n          studies.map((study, index) => (\n            <TableRow\n              key={`${study.StudyInstanceUID}-${index}`}\n              onClick={StudyInstanceUID => handleSelectItem(StudyInstanceUID)}\n              AccessionNumber={study.AccessionNumber || ''}\n              modalities={study.modalities}\n              PatientID={study.PatientID || ''}\n              PatientName={study.PatientName || ''}\n              StudyDate={study.StudyDate}\n              StudyDescription={study.StudyDescription || ''}\n              StudyInstanceUID={study.StudyInstanceUID}\n              displaySize={displaySize}\n            />\n          ))}\n      </tbody>\n    </table>\n  );\n}\n\nStudyList.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n  studies: PropTypes.array.isRequired,\n  onSelectItem: PropTypes.func.isRequired,\n  // ~~ SORT\n  sort: PropTypes.shape({\n    fieldName: PropTypes.string,\n    direction: PropTypes.oneOf(['desc', 'asc', null]),\n  }).isRequired,\n  onSort: PropTypes.func.isRequired,\n  // ~~ FILTERS\n  filterValues: PropTypes.shape({\n    PatientName: PropTypes.string.isRequired,\n    PatientID: PropTypes.string.isRequired,\n    AccessionNumber: PropTypes.string.isRequired,\n    StudyDate: PropTypes.string.isRequired,\n    modalities: PropTypes.string.isRequired,\n    StudyDescription: PropTypes.string.isRequired,\n    patientNameOrId: PropTypes.string.isRequired,\n    accessionOrModalityOrDescription: PropTypes.string.isRequired,\n    allFields: PropTypes.string.isRequired,\n    studyDateTo: PropTypes.any,\n    studyDateFrom: PropTypes.any,\n  }).isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n  studyListDateFilterNumDays: PropTypes.number,\n  displaySize: PropTypes.string,\n};\n\nStudyList.defaultProps = {};\n\nfunction TableRow(props) {\n  const {\n    AccessionNumber,\n    isHighlighted,\n    modalities,\n    PatientID,\n    PatientName,\n    StudyDate,\n    StudyDescription,\n    StudyInstanceUID,\n    onClick: handleClick,\n    displaySize,\n  } = props;\n\n  const largeRowTemplate = (\n    <tr\n      onClick={() => handleClick(StudyInstanceUID)}\n      className={classNames({ active: isHighlighted })}\n    >\n      <td className={classNames({ 'empty-value': !PatientName })}>\n        {PatientName || `Empty`}\n      </td>\n      <td>{PatientID}</td>\n      <td>{AccessionNumber}</td>\n      <td>{StudyDate}</td>\n      <td className={classNames({ 'empty-value': !modalities })}>\n        {modalities || `Empty`}\n      </td>\n      <td>{StudyDescription}</td>\n    </tr>\n  );\n\n  const mediumRowTemplate = (\n    <tr\n      onClick={() => handleClick(StudyInstanceUID)}\n      className={classNames({ active: isHighlighted })}\n    >\n      <td\n        style={{ textAlign: 'center' }}\n        className={classNames({ 'empty-value': !PatientName })}\n      >\n        {PatientName || `Empty`}\n        <div style={{ textAlign: 'center', color: '#60656f' }}>{PatientID}</div>\n      </td>\n      <td>\n        {/* MODALITY*/}\n        <div\n          style={{ textAlign: 'center' }}\n          className={classNames({\n            modalities: modalities,\n            'empty-value': !modalities,\n          })}\n          aria-label={modalities}\n          title={modalities}\n        >\n          {modalities || `Empty`}\n        </div>\n      </td>\n      {/* DATE */}\n      <td style={{ textAlign: 'center' }}>{StudyDate}</td>\n    </tr>\n  );\n\n  const smallRowTemplate = (\n    <tr\n      onClick={() => handleClick(StudyInstanceUID)}\n      className={classNames({ active: isHighlighted })}\n    >\n      <td style={{ position: 'relative', overflow: 'hidden' }}>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          {/* NAME AND ID */}\n          <div\n            className={classNames({ 'empty-value': !PatientName })}\n            style={{ width: '150px', minWidth: '150px' }}\n          >\n            <div style={{ fontWeight: 500, paddingTop: '3px' }}>\n              {PatientName || `Empty`}\n            </div>\n            <div style={{ color: '#60656f' }}>{PatientID}</div>\n          </div>\n\n          {/* DESCRIPTION */}\n          <div\n            className=\"hide-xs\"\n            style={{\n              whiteSpace: 'pre-wrap',\n              flexGrow: 1,\n              paddingLeft: '35px',\n            }}\n          >\n            {StudyDescription}\n          </div>\n\n          {/* MODALITY & DATE */}\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              maxWidth: '80px',\n              width: '80px',\n            }}\n          >\n            <div\n              className={classNames({\n                modalities: modalities,\n                'empty-value': !modalities,\n              })}\n              aria-label={modalities}\n              title={modalities}\n            >\n              {modalities || `Empty`}\n            </div>\n            <div>{StudyDate}</div>\n          </div>\n        </div>\n      </td>\n    </tr>\n  );\n\n  const rowTemplate = getContentFromUseMediaValue(\n    displaySize,\n    {\n      large: largeRowTemplate,\n      medium: mediumRowTemplate,\n      small: smallRowTemplate,\n    },\n    smallRowTemplate\n  );\n\n  return rowTemplate;\n}\n\nTableRow.propTypes = {\n  AccessionNumber: PropTypes.string.isRequired,\n  isHighlighted: PropTypes.bool,\n  modalities: PropTypes.string,\n  PatientID: PropTypes.string.isRequired,\n  PatientName: PropTypes.string.isRequired,\n  StudyDate: PropTypes.string.isRequired,\n  StudyDescription: PropTypes.string.isRequired,\n  StudyInstanceUID: PropTypes.string.isRequired,\n  displaySize: PropTypes.string,\n};\n\nTableRow.defaultProps = {\n  isHighlighted: false,\n};\n\nexport { StudyList };\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './PaginationArea.styl';\n\nclass TablePagination extends PureComponent {\n  static defaultProps = {\n    pageOptions: [5, 10, 25, 50, 100],\n    rowsPerPage: 25,\n    currentPage: 0,\n  };\n\n  static propTypes = {\n    /* Values to show in \"Rows per page\" select dropdown */\n    pageOptions: PropTypes.array,\n    rowsPerPage: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    nextPageFunc: PropTypes.func,\n    prevPageFunc: PropTypes.func,\n    onRowsPerPageChange: PropTypes.func,\n    recordCount: PropTypes.number.isRequired,\n  };\n\n  nextPage = () => {\n    this.props.nextPageFunc(this.props.currentPage);\n  };\n\n  prevPage = () => {\n    this.props.prevPageFunc(this.props.currentPage);\n  };\n\n  onRowsPerPageChange = event => {\n    this.props.onRowsPerPageChange(parseInt(event.target.value));\n  };\n\n  renderPaginationButtons() {\n    return (\n      <div className=\"col-xs-8 col-sm-9 col-md-9\">\n        <div className=\"form-inline form-group page-buttons noselect\">\n          <React.Fragment>\n            <ul className=\"pagination-control no-margins\">\n              <li className=\"page-item prev\">\n                <button\n                  onClick={this.prevPage}\n                  disabled={this.props.currentPage === 0}\n                  className=\"btn page-link\"\n                >\n                  {'Previous'}\n                </button>\n              </li>\n              <li className=\"page-item next\">\n                <button\n                  onClick={this.nextPage}\n                  disabled={\n                    this.props.recordCount === 0 ||\n                    this.props.rowsPerPage > this.props.recordCount\n                  }\n                  className=\"btn page-link\"\n                >\n                  Next\n                </button>\n              </li>\n            </ul>\n          </React.Fragment>\n        </div>\n      </div>\n    );\n  }\n\n  renderRowsPerPageDropdown() {\n    return (\n      <div className=\"form-inline form-group rows-per-page\">\n        <span>{'Show'}</span>\n        <select\n          onChange={this.onRowsPerPageChange}\n          defaultValue={this.props.rowsPerPage}\n        >\n          {this.props.pageOptions.map(pageNumber => {\n            return (\n              <option key={pageNumber} value={pageNumber}>\n                {pageNumber}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"pagination-area\">\n        <div className=\"rows-dropdown\">{this.renderRowsPerPageDropdown()}</div>\n        <div className=\"pagination-buttons\">\n          <div className=\"form-inline form-group page-number pull-right\">\n            {this.renderPaginationButtons()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst connectedComponent = TablePagination;\nexport { connectedComponent as TablePagination };\n","import React, { PureComponent } from 'react';\n\nimport { Icon } from './../../elements/Icon';\nimport PropTypes from 'prop-types';\n\nclass PageToolbar extends PureComponent {\n  static propTypes = {\n    onImport: PropTypes.func,\n  };\n\n  onImport = event => {\n    if (this.props.onImport) {\n      this.props.onImport(event);\n    }\n  };\n\n  getImportTool() {\n    if (this.props.onImport) {\n      return (\n        <div className=\"addNewStudy btn-file\">\n          <label\n            htmlFor=\"btnImport\"\n            style={{ width: '18px' }}\n            onClick={this.onImport}\n          >\n            <Icon name=\"plus\" />\n          </label>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return <div className=\"studylistToolbar\">{this.getImportTool()}</div>;\n  }\n}\n\nexport { PageToolbar };\n","import './ExpandableToolMenu.styl';\n\nimport { OverlayTrigger } from '../components/overlayTrigger';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ToolbarButton from './ToolbarButton.js';\nimport { Tooltip } from '../components/tooltip';\n\nclass ExpandableToolMenu extends React.Component {\n  static propTypes = {\n    /** Button label */\n    label: PropTypes.string.isRequired,\n    /** Array of buttons to render when expanded */\n    buttons: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        label: PropTypes.string.isRequired,\n        icon: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n          }),\n        ]),\n      })\n    ).isRequired,\n    icon: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }),\n    ]),\n    onGroupMenuClick: PropTypes.func,\n    activeCommand: PropTypes.string,\n  };\n\n  static defaultProps = {\n    buttons: [],\n    icon: 'ellipse-circle',\n    label: 'More',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  toolbarMenuOverlay = () => (\n    <Tooltip\n      placement=\"bottom\"\n      className=\"tooltip-toolbar-overlay\"\n      id={`${Math.random()}_tooltip-toolbar-overlay}`}\n    >\n      {this.getButtons()}\n    </Tooltip>\n  );\n\n  getButtons = () => {\n    return this.props.buttons.map((button, index) => {\n      return (\n        <ToolbarButton\n          key={index}\n          {...button}\n          isActive={button.id === this.props.activeCommand}\n        />\n      );\n    });\n  };\n\n  isActive = () => {\n    let isActive = false;\n    if (this.props.activeCommand) {\n      this.props.buttons.forEach(button => {\n        if (this.props.activeCommand === button.id) {\n          isActive = true;\n        }\n      });\n    }\n\n    return isActive;\n  };\n\n  activeIcon = () => {\n    if (this.props.activeCommand) {\n      return (\n        this.props.buttons.find(btn => this.props.activeCommand === btn.id)\n          .icon || this.props.icon\n      );\n    }\n\n    return this.props.icon;\n  };\n\n  onExpandableToolClick = () => {\n    if (this.props.onGroupMenuClick) {\n      this.props.onGroupMenuClick();\n    }\n    this.setState({\n      isExpanded: !this.state.isExpanded,\n    });\n  };\n\n  onOverlayHide = () => {\n    this.setState({\n      isExpanded: false,\n    });\n  };\n\n  render() {\n    const getToolBarButtonComponent = () => {\n      return (\n        <ToolbarButton\n          key=\"menu-button\"\n          type=\"tool\"\n          label={this.props.label}\n          icon={this.activeIcon()}\n          className={'toolbar-button expandableToolMenu'}\n          isActive={this.isActive()}\n          isExpandable={true}\n          isExpanded={this.state.isExpanded}\n        />\n      );\n    };\n\n    const toolbarComponent = getToolBarButtonComponent();\n\n    return (\n      <OverlayTrigger\n        key=\"menu-button\"\n        trigger=\"click\"\n        placement=\"bottom\"\n        rootClose={true}\n        handleHide={this.onOverlayHide}\n        onClick={this.onExpandableToolClick}\n        overlay={this.toolbarMenuOverlay()}\n      >\n        {toolbarComponent}\n      </OverlayTrigger>\n    );\n  }\n}\n\nexport default ExpandableToolMenu;\n","import './ToolbarSection.styl';\n\nimport React, { PureComponent } from 'react';\n\nimport ExpandableToolMenu from '../../viewer/ExpandableToolMenu';\nimport PropTypes from 'prop-types';\nimport ToolbarButton from '../../viewer/ToolbarButton';\nimport classnames from 'classnames';\n\nclass ToolbarSection extends PureComponent {\n  static defaultProps = {\n    className: '',\n  };\n\n  static propTypes = {\n    buttons: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        label: PropTypes.string.isRequired,\n        icon: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n          }),\n        ]),\n        /** Optional: Expandable Tool Menu */\n        buttons: PropTypes.arrayOf(PropTypes.shape({})),\n      })\n    ).isRequired,\n    /** Array of string button ids that should show as active */\n    activeButtons: PropTypes.arrayOf(PropTypes.string).isRequired,\n    /** Class for toolbar section container */\n    className: PropTypes.string,\n  };\n\n  render() {\n    const items = this.props.buttons.map((button, index) => {\n      if (button.buttons && Array.isArray(button.buttons)) {\n        return (\n          <ExpandableToolMenu\n            key={`expandable-${index}`}\n            {...button}\n            activeCommand={button.activeButton}\n          />\n        );\n      } else {\n        return (\n          <ToolbarButton\n            key={index}\n            {...button}\n            isActive={this.props.activeButtons.includes(button.id)}\n          />\n        );\n      }\n    });\n\n    return (\n      <div className={classnames('ToolbarSection', this.props.className)}>\n        {items}\n      </div>\n    );\n  }\n}\n\nexport { ToolbarSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport './ErrorFallback.css';\n\nconst ErrorFallback = ({ error, componentStack, resetErrorBoundary }) => {\n  return (\n    <div className=\"ErrorFallback\" role=\"alert\">\n      <p>Something went wrong.</p>\n      <pre>{error.message}</pre>\n      <pre>{componentStack}</pre>\n    </div>\n  );\n};\n\nconst OHIFErrorBoundary = ({\n  context = 'OHIF',\n  onReset = () => { },\n  onError = () => { },\n  fallbackComponent,\n  children,\n}) => {\n  const onErrorHandler = (error, componentStack) => {\n    console.error(`${context} Error Boundary`, error, componentStack);\n    onError(error, componentStack);\n  };\n\n  const onResetHandler = () => {\n    onReset();\n  };\n\n  return (\n    <ErrorBoundary\n      FallbackComponent={fallbackComponent || ErrorFallback}\n      onReset={onResetHandler}\n      onError={onErrorHandler}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n};\n\nOHIFErrorBoundary.propTypes = {\n  context: PropTypes.string,\n  onReset: PropTypes.func,\n  onError: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  fallbackComponent: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.element]),\n};\n\nexport default OHIFErrorBoundary;\n","import { useState, useEffect, useRef, useCallback } from 'react';\nimport isEqual from 'lodash.isequal';\n/**\n * Get display size value for matched mediaQueryList\n * @param {MediaQueryList[]} mediaQueryMap - Array of mappings, containing MediaQueryLists\n * @param {Array} mediaTypesAliases - Array of strings representing each mediaQueryAlias.\n * @param {string} defaultDisplaySize - default display size value. Fallback value.\n */\nconst getDisplaySize = (\n  mediaQueryMap,\n  mediaTypesAliases,\n  defaultDisplaySize\n) => {\n  if ((!mediaTypesAliases && !defaultDisplaySize) || !mediaQueryMap) {\n    return;\n  }\n\n  // Get index of first media query that matches\n  const index = mediaQueryMap.findIndex(mql => mql.matches);\n\n  // Return related value or defaultDisplaySize if none\n  return index >= 0 && typeof mediaTypesAliases[index] !== 'undefined'\n    ? mediaTypesAliases[index]\n    : defaultDisplaySize;\n};\n/**\n * Map each window MediaQueryLists\n * @param {Array} mediaQueriesStringList - array of string media queries to be parsed\n */\nconst getMediaQueryMap = mediaQueriesStringList => {\n  return (\n    mediaQueriesStringList &&\n    mediaQueriesStringList.map(q => window.matchMedia(q))\n  );\n};\n\nconst getMediaTypeAlias = (mediaQuery, state) => {\n  const { media } = mediaQuery;\n  const { mediaQueriesStringList, mediaTypesAliases } = state;\n\n  const index = mediaQueriesStringList.findIndex(originalMediaQuery => {\n    const { media: toCompareMedia } = window.matchMedia(originalMediaQuery);\n    return toCompareMedia === media;\n  });\n\n  return mediaTypesAliases[index];\n};\n\n/**\n * Hook to get current displaySize value.\n *\n * Its state changes and also displaySize value changes in case viewport is resized.\n * Its state changes in case mediaQueriesStringList or mediaTypesAliases changes.\n *\n * Current hook only offers displayMedia size, it wont expose method to change its state.\n * @param {Array} mediaQueriesStringList - array of string media queries to be parsed\n * @param {Array} mediaTypesAliases - array of aliases. Each value represents one mediaQueryList from array mediaQueriesStringList\n * @param {String} defaultMediaType - default mediaTypeAlias\n * @returns {String} current displayMedia size based on viewport size.\n *\n * @example <caption>Example to getDisplayMedia Size based on viewport size</caption>\n *\n *    const displaySize = useMedia(\n *    ['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'],\n *    // Value to return for matched media query\n *    ['large', 'medium', 'small'],\n *      // Default value\n *    'medium');\n *\n *  const currentDisplaySize = useMedia();\n *\n */\nconst useMedia = (\n  mediaQueriesStringList,\n  mediaTypesAliases,\n  defaultMediaType\n) => {\n  // MediaQuery.state is the source of truth. This hook will be dependent on it.\n  const [state, setState] = useState(() => {\n    const _mediaQueryMap = getMediaQueryMap(mediaQueriesStringList);\n    const _displaySize = getDisplaySize(\n      _mediaQueryMap,\n      mediaTypesAliases,\n      defaultMediaType\n    );\n\n    return {\n      mediaQueryMap: _mediaQueryMap,\n      displaySize: _displaySize,\n      mediaQueriesStringList,\n      mediaTypesAliases,\n      defaultMediaType,\n    };\n  });\n  let mount = useRef(false);\n\n  const updateDisplaySize = displaySize => {\n    if (mount.current) {\n      setState({ ...state, displaySize });\n    }\n  };\n\n  const updateState = value => {\n    const {\n      mediaQueriesStringList,\n      mediaTypesAliases,\n      defaultMediaType,\n    } = value;\n\n    const mediaQueryMap = getMediaQueryMap(mediaQueriesStringList);\n    const displaySize = getDisplaySize(\n      mediaQueryMap,\n      mediaTypesAliases,\n      defaultMediaType\n    );\n    // immutable state\n    // last chance to avoid setState of unmount component\n    if (mount.current) {\n      setState({\n        ...state,\n        mediaQueriesStringList,\n        mediaTypesAliases,\n        displaySize,\n        mediaQueryMap,\n      });\n    }\n  };\n\n  const onMediaQueryChange = useCallback(mediaQuery => {\n    if (mediaQuery.matches) {\n      const nextDisplaySize = getMediaTypeAlias(mediaQuery, state);\n      updateDisplaySize(nextDisplaySize);\n    }\n  }, []);\n\n  // update state of MediaQuery in case mediaQueriesStringList or mediaTypesAliases has changed\n  useEffect(() => {\n    const {\n      mediaQueriesStringList: _mediaQueriesStringList,\n      mediaTypesAliases: _mediaTypesAliases,\n    } = state;\n    if (\n      (mediaQueriesStringList &&\n        !isEqual(mediaQueriesStringList, _mediaQueriesStringList)) ||\n      (mediaTypesAliases && !isEqual(mediaTypesAliases, _mediaTypesAliases))\n    ) {\n      updateState({\n        mediaQueriesStringList,\n        mediaTypesAliases,\n      });\n    }\n  }, [mediaQueriesStringList, mediaTypesAliases]);\n\n  // re-assign window resizing listeners\n  useEffect(() => {\n    const { mediaQueryMap } = state;\n    mediaQueryMap.forEach(mql => {\n      mql.removeListener(onMediaQueryChange);\n      mql.addListener(onMediaQueryChange);\n    });\n  }, [state.mediaQueryMap]);\n\n  useEffect(() => {\n    mount.current = true;\n\n    return () => {\n      mount.current = false;\n      const { mediaQueryMap } = state;\n      mediaQueryMap.forEach(mql => {\n        mql.removeListener(onMediaQueryChange);\n      });\n    };\n  }, []);\n\n  return state.displaySize;\n};\n\nexport { useMedia };\n","import React, { useState, useEffect } from 'react';\n\n/**\n * A hook to set a value\n *\n * @param {*} value - A value to \"set\"\n * @param {number} delay - The debounce delay for setting the value\n * @returns\n */\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Return a cleanup function that will be called every time useEffect is\n      // re-called. useEffect will only be re-called if value changes (see the\n      // inputs array below).\n      //\n      // This is how we prevent debouncedValue from changing if value is changed\n      // within the delay period. Timeout gets cleared and restarted.\n      //\n      // To put it in context, if the user is typing within our app's search\n      // box, we don't want the debouncedValue to update until they've stopped\n      // typing for more than 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you need to be\n    // able to change that dynamically.\n    [value]\n  );\n\n  return debouncedValue;\n}\n","import './Select.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value,\n    };\n  }\n\n  handleChange = event => {\n    const value = event.target.value;\n    this.setState({ value });\n    if (this.props.onChange) this.props.onChange(value);\n  };\n\n  render() {\n    return (\n      <select\n        className=\"select-ohif\"\n        value={this.state.selected}\n        onChange={this.handleChange}\n      >\n        {this.props.options.map(({ key, value }) => {\n          return (\n            <option key={key} value={value}>\n              {key}\n            </option>\n          );\n        })}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    })\n  ),\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Select;\n","import './Select.css';\n\nimport React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nclass Select extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static propTypes = {\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired,\n      })\n    ),\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n  };\n\n  handleChange = event => {\n    const value = event.target.value;\n    this.setState({ value });\n    if (this.props.onChange) this.props.onChange(value);\n  };\n\n  render() {\n    return (\n      <div className=\"select-ohif-container\">\n        {this.props.label && (\n          <label className=\"select-ohif-label\" htmlFor={this.id}>{this.props.label}</label>\n        )}\n        <select className=\"form-control select-ohif\" {...this.props}>\n          {this.props.options.map(({ key, value }) => {\n            return (\n              <option key={key} value={value}>\n                {key}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport { Select };\n","import './Label.css';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nclass Label extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: this.props.text };\n  }\n\n  render() {\n    return (\n      <label className=\"label-ohif\" htmlFor={this.props.for}>\n        {this.props.text}\n      </label>\n    );\n  }\n}\n\nLabel.propTypes = {\n  text: PropTypes.string.isRequired,\n  for: PropTypes.string,\n};\n\nexport { Label };\n","import './Range.css';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Range extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: props.value || 0 };\n  }\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n    if (this.props.onChange) this.props.onChange(event);\n  };\n\n  render() {\n    return (\n      <>\n        <input\n          type=\"range\"\n          value={this.state.value}\n          min={this.props.min}\n          max={this.props.max}\n          step={this.props.step || 1}\n          onChange={this.handleChange}\n          id={this.props.id}\n          className=\"range\"\n        />\n        {this.props.showPercentage && <span>{`${this.state.value}%`}</span>}\n        {this.props.showValue && (\n          <span>\n            {this.props.valueRenderer\n              ? this.props.valueRenderer(this.state.value)\n              : this.state.value}\n          </span>\n        )}\n      </>\n    );\n  }\n}\n\nRange.propTypes = {\n  value: PropTypes.number,\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  step: PropTypes.number,\n  id: PropTypes.string,\n  valueRenderer: PropTypes.func,\n  onChange: PropTypes.func,\n  showPercentage: PropTypes.bool,\n  showValue: PropTypes.bool,\n};\n\nRange.defaultProps = {\n  showPercentage: false,\n  showValue: false,\n};\n\nexport { Range };\n","import './TextArea.css';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TextArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: this.props.value };\n  }\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n    if (this.props.onChange) this.props.onChange();\n  };\n\n  render() {\n    return (\n      <textarea\n        className=\"textarea-ohif\"\n        value={this.state.value}\n        Rows={this.props.Rows}\n        cols={this.props.cols}\n        onChange={this.handleChange}\n        id={this.props.id}\n      />\n    );\n  }\n}\n\nTextArea.propTypes = {\n  value: PropTypes.string,\n  Rows: PropTypes.number,\n  cols: PropTypes.number,\n  id: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport { TextArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TextInput.css';\n\nclass TextInput extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static propTypes = {\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    id: PropTypes.string,\n    label: PropTypes.string,\n    type: PropTypes.string,\n  };\n\n  static defaultProps = {\n    value: '',\n    id: `TextInput-${new Date().toTimeString()}`,\n    label: undefined,\n    type: 'text',\n  };\n\n  render() {\n    return (\n      <div className=\"input-ohif-container\">\n        {this.props.label && (\n          <label className=\"input-ohif-label\" htmlFor={this.props.id}>{this.props.label}</label>\n        )}\n        <input\n          type={this.props.type}\n          id={this.props.id}\n          className=\"form-control input-ohif\"\n          {...this.props}\n        />\n      </div>\n    );\n  }\n}\n\nexport { TextInput };\n","import './DropdownMenu.css';\n\nimport React, { Component } from 'react';\n\nimport { Icon } from '../Icon';\nimport PropTypes from 'prop-types';\n\nclass DropdownMenu extends Component {\n  state = {\n    open: false,\n  };\n\n  static propTypes = {\n    titleElement: PropTypes.node,\n    title: PropTypes.string,\n    align: PropTypes.oneOf(['left', 'center', 'right']),\n    /** Items to render in the select's drop down */\n    list: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        icon: PropTypes.object,\n        onClick: PropTypes.func,\n        link: PropTypes.string,\n      })\n    ),\n  };\n\n  getListItems = () => {\n    const { list, align } = this.props;\n\n    return list.map(({ icon, title, link, onClick }, key) => {\n      if (link) {\n        return (\n          <a\n            href={link || '#'}\n            key={key}\n            className=\"dd-item\"\n            onClick={() => this.handleOnClick(onClick)}\n          >\n            {icon && <Icon {...icon} className=\"dd-item-icon\" />}\n            <span>{title}</span>\n          </a>\n        );\n      } else {\n        return (\n          <button\n            key={key}\n            className=\"dd-item\"\n            data-cy=\"dd-item-menu\"\n            onClick={() => this.handleOnClick(onClick)}\n          >\n            {icon && <Icon {...icon} className=\"dd-item-icon\" />}\n            <span>{title}</span>\n          </button>\n        );\n      }\n    });\n  };\n\n  renderList = () => {\n    const { align } = this.props;\n\n    if (!this.state.open) {\n      return null;\n    }\n\n    return (\n      <div className={`dd-menu-list ${align || 'left'}`}>\n        {this.getListItems()}\n      </div>\n    );\n  };\n\n  handleOnClick = onClick => {\n    this.toggleList();\n\n    if (onClick) {\n      onClick();\n    }\n  };\n\n  handleMouseClick = e => {\n    if (this.node.contains(e.target)) {\n      return;\n    }\n\n    this.toggleList();\n  };\n\n  renderTitleElement = () => {\n    const { titleElement, title } = this.props;\n\n    if (titleElement) {\n      return titleElement;\n    }\n\n    return (\n      <React.Fragment>\n        <span className=\"dd-title\">{title}</span>\n        <span className=\"dd-caret-down\" />\n      </React.Fragment>\n    );\n  };\n\n  toggleList = () => {\n    const { open } = this.state;\n    let state = true;\n\n    document.addEventListener('mousedown', this.handleMouseClick, false);\n\n    if (open) {\n      document.removeEventListener('mousedown', this.handleMouseClick, false);\n      state = false;\n    }\n\n    this.setState({\n      open: state,\n    });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"dd-menu\"\n        data-cy=\"options-menu\"\n        ref={node => (this.node = node)}\n      >\n        <div className=\"dd-menu-toggle\" onClick={this.toggleList}>\n          {this.renderTitleElement()}\n        </div>\n\n        {this.renderList()}\n      </div>\n    );\n  }\n}\n\nexport { DropdownMenu };\n","import React, { Component } from 'react';\n\nimport { Icon } from './../elements/Icon';\nimport PropTypes from 'prop-types';\n\nexport default class PlayClipButton extends Component {\n  static propTypes = {\n    isPlaying: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    isPlaying: false,\n  };\n\n  render() {\n    const iconName = this.props.isPlaying ? 'stop' : 'play';\n\n    return (\n      <div className=\"btn-group\">\n        <button\n          id=\"playClip\"\n          type=\"button\"\n          className=\"imageViewerCommand btn btn-sm btn-default\"\n          data-container=\"body\"\n          data-toggle=\"tooltip\"\n          data-placement=\"bottom\"\n          title=\"Play/Stop Clip\"\n        >\n          <Icon name={iconName} />\n        </button>\n        <button\n          id=\"toggleCineDialog\"\n          type=\"button\"\n          className=\"imageViewerCommand btn btn-sm btn-default\"\n          data-container=\"body\"\n          data-toggle=\"tooltip\"\n          data-placement=\"bottom\"\n          title=\"Toggle CINE Dialog\"\n        >\n          <Icon name=\"youtube\" />\n        </button>\n      </div>\n    );\n  }\n}\n","import { Icon } from './../elements/Icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classnames from 'classnames';\n\nexport function SimpleToolbarButton(props) {\n  const className = classnames(props.className, 'btn btn-sm btn-default');\n\n  return (\n    <button\n      id={props.id}\n      type=\"button\"\n      className={className}\n      data-container=\"body\"\n      data-toggle=\"tooltip\"\n      data-placement=\"bottom\"\n      title={props.title}\n    >\n      {props.icon && <Icon name={props.icon} />}\n    </button>\n  );\n}\n\nSimpleToolbarButton.propTypes = {\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  onClick: PropTypes.func,\n};\nexport default SimpleToolbarButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleToolbarButton from './SimpleToolbarButton';\nimport PlayClipButton from './PlayClipButton';\nimport { LayoutButton } from './../components/layoutButton';\n\nfunction getDefaultButtonData() {\n  var buttonData = [\n    {\n      id: 'wwwc',\n      title: 'WW/WC',\n      className: 'imageViewerTool',\n      icon: 'sun',\n    },\n    {\n      id: 'wwwcRegion',\n      title: 'Window by Region',\n      className: 'imageViewerTool',\n      icon: 'stop',\n    },\n    {\n      id: 'magnify',\n      title: 'Magnify',\n      className: 'imageViewerTool',\n      icon: 'circle',\n    },\n    {\n      id: 'annotate',\n      title: 'Annotation',\n      className: 'imageViewerTool',\n      icon: 'arrows-alt-h',\n    },\n    {\n      id: 'invert',\n      title: 'Invert',\n      className: 'imageViewerCommand',\n      icon: 'adjust',\n    },\n    {\n      id: 'zoom',\n      title: 'Zoom',\n      className: 'imageViewerTool',\n      icon: 'search-plus',\n    },\n    {\n      id: 'pan',\n      title: 'Pan',\n      className: 'imageViewerTool',\n      icon: 'arrows',\n    },\n    {\n      id: 'stackScroll',\n      title: 'Stack Scroll',\n      className: 'imageViewerTool',\n      icon: 'bars',\n    },\n    {\n      id: 'length',\n      title: 'Length Measurement',\n      className: 'imageViewerTool',\n      icon: 'arrows-alt-v',\n    },\n    {\n      id: 'angle',\n      title: 'Angle Measurement',\n      className: 'imageViewerTool',\n      icon: 'fa fa-angle-left',\n    },\n    {\n      id: 'dragProbe',\n      title: 'Pixel Probe',\n      className: 'imageViewerTool',\n      icon: 'fa fa-dot-circle-o',\n    },\n    {\n      id: 'ellipticalRoi',\n      title: 'Elliptical ROI',\n      className: 'imageViewerTool',\n      icon: 'circle-o',\n    },\n    {\n      id: 'rectangleRoi',\n      title: 'Rectangle ROI',\n      className: 'imageViewerTool',\n      icon: 'square-o',\n    },\n    {\n      id: 'resetViewport',\n      title: 'Reset Viewport',\n      className: 'imageViewerCommand',\n      icon: 'reset',\n    },\n    {\n      id: 'clearTools',\n      title: 'Clear tools',\n      className: 'imageViewerCommand',\n      icon: 'trash',\n    },\n  ];\n  return buttonData;\n}\n\nexport default class Toolbar extends Component {\n  static propTypes = {\n    buttons: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        icon: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n          }),\n        ]),\n      })\n    ).isRequired,\n    includeLayoutButton: PropTypes.bool.isRequired,\n    includePlayClipButton: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    buttons: getDefaultButtonData(),\n    includeLayoutButton: true,\n    includePlayClipButton: true,\n  };\n\n  render() {\n    var maybePlayClipButton;\n    if (this.props.includePlayClipButton) {\n      maybePlayClipButton = <PlayClipButton />;\n    }\n\n    var maybeLayoutButton;\n    if (this.props.includeLayoutButton) {\n      maybeLayoutButton = <LayoutButton />;\n    }\n\n    return (\n      <div id=\"toolbar\">\n        <div className=\"btn-group\">\n          {this.props.buttons.map((button, i) => {\n            return <SimpleToolbarButton {...button} key={i} />;\n          })}\n          {maybePlayClipButton}\n          {maybeLayoutButton}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport TouchBackend from 'react-dnd-touch-backend';\n\nconst isTouchDevice = !!('ontouchstart' in window || navigator.maxTouchPoints);\n\n// See https://github.com/react-dnd/react-dnd/issues/186#issuecomment-335429067\n// https://github.com/react-dnd/react-dnd/issues/186#issuecomment-282789420\n//\n// http://react-dnd.github.io/react-dnd/docs/api/drag-drop-context\nexport default function viewerbaseDragDropContext(DecoratedClass) {\n  const backend = isTouchDevice ? TouchBackend : HTML5Backend;\n  const opts = isTouchDevice ? { enableMouseEvents: true } : {};\n\n  return (props) => (\n    <DndProvider backend={backend} opts={opts}>\n      <DecoratedClass {...props}/>\n    </DndProvider>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { ErrorPage } from '@ohif/ui';\n\nexport const retryImport = (fn, retriesLeft = 5, interval = 1000) =>\n  new Promise((resolve, reject) => {\n    fn().then(resolve).catch((error) => {\n      setTimeout(() => {\n        if (retriesLeft === 1) {\n          /* reject('maximum retries exceeded'); */\n          reject(error);\n          return;\n        }\n\n        /* Passing on \"reject\" is the important part */\n        retry(fn, retriesLeft - 1, interval).then(resolve, reject);\n      }, interval);\n    });\n  });\n\nconst onError = (error, setState) => setState({ component: ErrorPage });\n\n/**\n * We use this function to lazy load the import of a component to leverage 'Code Splitting'\n * Link: https://serverless-stack.com/chapters/code-splitting-in-create-react-app.html\n */\nconst asyncComponent = (importComponent, options = { onError }) => props => {\n  const [state, setState] = useState({ component: null });\n\n  const isFunction = item => typeof item === 'function';\n  const isChunkError = error => error.toString().indexOf('ChunkLoadError') > -1;\n\n  useEffect(() => {\n    const addDynamicallyLoadedComponentToState = async () => {\n      try {\n        const { default: component } = await importComponent();\n        setState({ component });\n        if (options.onLoaded && isFunction(options.onLoaded)) {\n          options.onLoaded(component);\n        }\n      } catch (error) {\n        console.error('[AsyncComponent] Failed to import chunk:', error);\n\n        if (options.onError && isFunction(options.onError)) {\n          options.onError(error, setState);\n          return;\n        }\n\n        if (isChunkError(error)) {\n          console.error('[AsyncComponent] Reloading due to chunk error');\n          window.location.reload();\n        }\n      }\n    };\n\n    addDynamicallyLoadedComponentToState();\n  }, []);\n\n  const Component = state.component;\n  return Component ? <Component {...props} /> : null;\n};\n\nexport default asyncComponent;\n","import {\n  ContextMenu,\n  Checkbox,\n  CineDialog,\n  ViewportDownloadForm,\n  LayoutButton,\n  LayoutChooser,\n  Overlay,\n  OverlayTrigger,\n  PageToolbar,\n  QuickSwitch,\n  RoundedButtonGroup,\n  SelectTree,\n  SimpleDialog,\n  StudyBrowser,\n  StudyList,\n  TableList,\n  TableListItem,\n  Thumbnail,\n  TabComponents,\n  TabFooter,\n  HotkeyField,\n  LanguageSwitcher,\n  TableSearchFilter,\n  TablePagination,\n  ToolbarSection,\n  Tooltip,\n  AboutContent,\n  OHIFModal,\n  ErrorBoundary,\n  ErrorPage,\n} from './components';\nimport { useDebounce, useMedia } from './hooks';\n\n// Elements\nimport {\n  ICONS,\n  Icon,\n  DropdownMenu as Dropdown,\n  Select,\n  OldSelect,\n  Label,\n  Range,\n  TextArea,\n  TextInput,\n} from './elements';\n\n// Alias this for now as not all dependents are using strict versioning\nimport ExpandableToolMenu from './viewer/ExpandableToolMenu.js';\nimport PlayClipButton from './viewer/PlayClipButton.js';\nimport { ScrollableArea } from './ScrollableArea/ScrollableArea.js';\nimport Toolbar from './viewer/Toolbar.js';\nimport ToolbarButton from './viewer/ToolbarButton.js';\nimport ViewerbaseDragDropContext from './utils/viewerbaseDragDropContext.js';\nimport { asyncComponent, retryImport } from './utils/asyncComponent';\nimport {\n  SnackbarProvider,\n  useSnackbarContext,\n  withSnackbar,\n  DialogProvider,\n  useDialog,\n  withDialog,\n  ModalProvider,\n  ModalConsumer,\n  useModal,\n  withModal,\n  LoggerProvider,\n  withLogger,\n  useLogger,\n} from './contextProviders';\n\nexport {\n  // Elements\n  ICONS,\n  //\n  Checkbox,\n  Dropdown,\n  Label,\n  TextArea,\n  TextInput,\n  CineDialog,\n  ContextMenu,\n  ViewportDownloadForm,\n  ExpandableToolMenu,\n  Icon,\n  LayoutButton,\n  LayoutChooser,\n  Overlay,\n  OverlayTrigger,\n  PlayClipButton,\n  PageToolbar,\n  QuickSwitch,\n  Range,\n  RoundedButtonGroup,\n  ScrollableArea,\n  Select,\n  OldSelect,\n  SelectTree,\n  SimpleDialog,\n  StudyBrowser,\n  StudyList,\n  TableList,\n  TableListItem,\n  Thumbnail,\n  TabComponents,\n  TabFooter,\n  HotkeyField,\n  LanguageSwitcher,\n  TableSearchFilter,\n  TablePagination,\n  Toolbar,\n  ToolbarButton,\n  ToolbarSection,\n  Tooltip,\n  AboutContent,\n  SnackbarProvider,\n  useSnackbarContext,\n  withSnackbar,\n  ModalProvider,\n  useModal,\n  ModalConsumer,\n  withModal,\n  OHIFModal,\n  DialogProvider,\n  withDialog,\n  useDialog,\n  ErrorBoundary,\n  ErrorPage,\n  LoggerProvider,\n  withLogger,\n  useLogger,\n  // Hooks\n  useDebounce,\n  useMedia,\n  // Utils\n  ViewerbaseDragDropContext,\n  asyncComponent,\n  retryImport,\n};\n","/* eslint-disable react/prop-types */\nimport React, { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getActiveContexts } from '../store/layout/selectors.js';\n\nlet AppContext = React.createContext({});\n\nexport const CONTEXTS = {\n  CORNERSTONE: 'ACTIVE_VIEWPORT::CORNERSTONE',\n};\n\nexport const useAppContext = () => useContext(AppContext);\n\nexport const AppProvider = ({ children, config }) => {\n  const activeContexts = useSelector(state => getActiveContexts(state));\n\n  return (\n    <AppContext.Provider value={{ appConfig: config, activeContexts }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const withAppContext = Component => {\n  return function WrappedComponent(props) {\n    const { appConfig, activeContexts } = useAppContext();\n    return (\n      <Component\n        {...props}\n        appConfig={appConfig}\n        activeContexts={activeContexts}\n      />\n    );\n  };\n};\n\nexport default AppContext;\n","import { api } from 'dicomweb-client';\nimport DICOMWeb from '../../DICOMWeb';\nimport str2ab from '../str2ab';\n\nimport errorHandler from '../../errorHandler';\nimport getXHRRetryRequestHook from '../xhrRetryRequestHook';\n\nexport default async function fetchPaletteColorLookupTableData(\n  instance,\n  server\n) {\n  const {\n    PaletteColorLookupTableUID,\n    RedPaletteColorLookupTableDescriptor,\n    GreenPaletteColorLookupTableDescriptor,\n    BluePaletteColorLookupTableDescriptor,\n    RedPaletteColorLookupTableData,\n    GreenPaletteColorLookupTableData,\n    BluePaletteColorLookupTableData,\n  } = instance;\n\n  return new Promise((resolve, reject) => {\n    let entry;\n    if (_paletteColorCache.isValidUID(PaletteColorLookupTableUID)) {\n      entry = _paletteColorCache.get(PaletteColorLookupTableUID);\n\n      if (entry) {\n        return resolve(entry);\n      }\n    }\n\n    // no entry in cache... Fetch remote data.\n    const promises = [\n      _getPaletteColor(\n        server,\n        RedPaletteColorLookupTableData,\n        RedPaletteColorLookupTableDescriptor\n      ),\n      _getPaletteColor(\n        server,\n        GreenPaletteColorLookupTableData,\n        GreenPaletteColorLookupTableDescriptor\n      ),\n      _getPaletteColor(\n        server,\n        BluePaletteColorLookupTableData,\n        BluePaletteColorLookupTableDescriptor\n      ),\n    ];\n\n    Promise.all(promises).then(\n      ([\n        RedPaletteColorLookupTableData,\n        GreenPaletteColorLookupTableData,\n        BluePaletteColorLookupTableData,\n      ]) => {\n        // when PaletteColorLookupTableUID is present, the entry can be cached...\n        _paletteColorCache.add({\n          RedPaletteColorLookupTableData,\n          GreenPaletteColorLookupTableData,\n          BluePaletteColorLookupTableData,\n          PaletteColorLookupTableUID,\n        });\n\n        instance.RedPaletteColorLookupTableData = RedPaletteColorLookupTableData;\n        instance.GreenPaletteColorLookupTableData = GreenPaletteColorLookupTableData;\n        instance.BluePaletteColorLookupTableData = BluePaletteColorLookupTableData;\n\n        resolve();\n      }\n    );\n  });\n}\n\n/**\n * Simple cache schema for retrieved color palettes.\n */\nconst _paletteColorCache = {\n  count: 0,\n  maxAge: 24 * 60 * 60 * 1000, // 24h cache?\n  entries: {},\n  isValidUID: function(PaletteColorLookupTableUID) {\n    return (\n      typeof PaletteColorLookupTableUID === 'string' &&\n      PaletteColorLookupTableUID.length > 0\n    );\n  },\n  get: function(PaletteColorLookupTableUID) {\n    let entry = null;\n    if (this.entries.hasOwnProperty(PaletteColorLookupTableUID)) {\n      entry = this.entries[PaletteColorLookupTableUID];\n      // check how the entry is...\n      if (Date.now() - entry.time > this.maxAge) {\n        // entry is too old... remove entry.\n        delete this.entries[PaletteColorLookupTableUID];\n        this.count--;\n        entry = null;\n      }\n    }\n    return entry;\n  },\n  add: function(entry) {\n    if (this.isValidUID(entry.uid)) {\n      let PaletteColorLookupTableUID = entry.uid;\n      if (this.entries.hasOwnProperty(PaletteColorLookupTableUID) !== true) {\n        this.count++; // increment cache entry count...\n      }\n      entry.time = Date.now();\n      this.entries[PaletteColorLookupTableUID] = entry;\n      // @TODO: Add logic to get rid of old entries and reduce memory usage...\n    }\n  },\n};\n\nfunction _getPaletteColor(server, paletteColorLookupTableData, lutDescriptor) {\n  const numLutEntries = lutDescriptor[0] ? lutDescriptor[0] : 65536;\n  const bits = lutDescriptor[2];\n\n  const arrayBufferToPaletteColorLUT = arraybuffer => {\n    const byteArray = bits === 16 ?\n      new Uint16Array(arraybuffer) :\n      new Uint8Array(arraybuffer);\n    const lut = [];\n\n    for (let i = 0; i < numLutEntries; i++) {\n      lut[i] = byteArray[i];\n    }\n\n    return lut;\n  };\n\n  if (paletteColorLookupTableData.BulkDataURI) {\n    let uri = paletteColorLookupTableData.BulkDataURI;\n\n    // TODO: Workaround for dcm4chee behind SSL-terminating proxy returning\n    // incorrect bulk data URIs\n    if (server.wadoRoot.indexOf('https') === 0 && !uri.includes('https')) {\n      uri = uri.replace('http', 'https');\n    }\n\n    const config = {\n      url: server.wadoRoot, //BulkDataURI is absolute, so this isn't used\n      headers: DICOMWeb.getAuthorizationHeader(server),\n      errorInterceptor: errorHandler.getHTTPErrorHandler(),\n      requestHooks: [getXHRRetryRequestHook()],\n    };\n    const dicomWeb = new api.DICOMwebClient(config);\n    const options = {\n      BulkDataURI: uri,\n    };\n\n    return dicomWeb\n      .retrieveBulkData(options)\n      .then(result => result[0])\n      .then(arrayBufferToPaletteColorLUT);\n  } else if (paletteColorLookupTableData.InlineBinary) {\n    const inlineBinaryData = atob(paletteColorLookupTableData.InlineBinary);\n    const arraybuffer = str2ab(inlineBinaryData);\n\n    return new Promise(resolve => {\n      resolve(arrayBufferToPaletteColorLUT(arraybuffer));\n    });\n  } else {\n    return Promise.resolve(\n      arrayBufferToPaletteColorLUT(paletteColorLookupTableData)\n    );\n  }\n}\n","export default function unpackOverlay(arrayBuffer) {\n  const bitArray = new Uint8Array(arrayBuffer);\n  const byteArray = new Uint8Array(8 * bitArray.length);\n\n  for (let byteIndex = 0; byteIndex < byteArray.length; byteIndex++) {\n    const bitIndex = byteIndex % 8;\n    const bitByteIndex = Math.floor(byteIndex / 8);\n    byteArray[byteIndex] =\n      1 * ((bitArray[bitByteIndex] & (1 << bitIndex)) >> bitIndex);\n  }\n\n  return byteArray;\n}\n","import { api } from 'dicomweb-client';\nimport DICOMWeb from '../../DICOMWeb';\nimport str2ab from '../str2ab';\nimport unpackOverlay from './unpackOverlay';\n\nimport errorHandler from '../../errorHandler';\nimport getXHRRetryRequestHook from '../xhrRetryRequestHook';\n\nexport default async function fetchOverlayData(instance, server) {\n  const OverlayDataPromises = [];\n  const OverlayDataTags = [];\n\n  return new Promise((resolve, reject) => {\n    for (let overlayGroup = 0x00; overlayGroup <= 0x1e; overlayGroup += 0x02) {\n      let groupStr = `60${overlayGroup.toString(16)}`;\n\n      if (groupStr.length === 3) {\n        groupStr = `600${overlayGroup.toString(16)}`;\n      }\n\n      const OverlayDataTag = `${groupStr}3000`;\n\n      if (instance[OverlayDataTag] && instance[OverlayDataTag].InlineBinary) {\n        const inlineBinaryData = atob(instance[OverlayDataTag].InlineBinary);\n        const arraybuffer = str2ab(inlineBinaryData);\n\n        instance[OverlayDataTag] = unpackOverlay(arraybuffer);\n      } else if (\n        instance[OverlayDataTag] &&\n        instance[OverlayDataTag].BulkDataURI\n      ) {\n        OverlayDataPromises.push(\n          _getOverlayData(instance[OverlayDataTag], server)\n        );\n        OverlayDataTags.push(OverlayDataTag);\n      } else if (\n        instance[OverlayDataTag] &&\n        instance[OverlayDataTag] instanceof ArrayBuffer\n      ) {\n        instance[OverlayDataTag] = unpackOverlay(instance[OverlayDataTag]);\n      }\n    }\n\n    if (OverlayDataPromises.length) {\n      Promise.all(OverlayDataPromises).then(results => {\n        for (let i = 0; i < results.length; i++) {\n          instance[OverlayDataTags[i]] = results[i];\n        }\n\n        resolve();\n      });\n    } else {\n      resolve();\n    }\n  });\n}\n\nasync function _getOverlayData(tag, server) {\n  const { BulkDataURI } = tag;\n\n  let uri = BulkDataURI;\n\n  // TODO: Workaround for dcm4chee behind SSL-terminating proxy returning\n  // incorrect bulk data URIs\n  if (server.wadoRoot.indexOf('https') === 0 && !uri.includes('https')) {\n    uri = uri.replace('http', 'https');\n  }\n\n  const config = {\n    url: server.wadoRoot, //BulkDataURI is absolute, so this isn't used\n    headers: DICOMWeb.getAuthorizationHeader(server),\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\n    requestHooks: [getXHRRetryRequestHook()],\n  };\n  const dicomWeb = new api.DICOMwebClient(config);\n  const options = {\n    BulkDataURI: uri,\n  };\n\n  return dicomWeb\n    .retrieveBulkData(options)\n    .then(result => result[0])\n    .then(unpackOverlay);\n}\n","const validNumber = val => {\n  if (Array.isArray(val)) {\n    return val.map(v => (v !== undefined ? Number(v) : v));\n  } else {\n    return val !== undefined ? Number(val) : val;\n  }\n};\n\nexport default validNumber;\n","import dcmjs from 'dcmjs';\nimport queryString from 'query-string';\nimport dicomParser from 'dicom-parser';\nimport getPixelSpacingInformation from '../utils/metadataProvider/getPixelSpacingInformation';\nimport fetchPaletteColorLookupTableData from '../utils/metadataProvider/fetchPaletteColorLookupTableData';\nimport fetchOverlayData from '../utils/metadataProvider/fetchOverlayData';\nimport validNumber from '../utils/metadataProvider/validNumber';\n\nclass MetadataProvider {\n  constructor() {\n    // Define the main \"metadataLookup\" private property as an immutable property.\n    Object.defineProperty(this, 'studies', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: new Map(),\n    });\n    Object.defineProperty(this, 'imageIdToUIDs', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: new Map(),\n    });\n    this.datasets = {};\n  }\n\n  async addInstance(dicomJSONDatasetOrP10ArrayBuffer, options = {}) {\n    let dicomJSONDataset;\n\n    // If Arraybuffer, parse to DICOMJSON before naturalizing.\n    if (dicomJSONDatasetOrP10ArrayBuffer instanceof ArrayBuffer) {\n      const dicomData = DicomMessage.readFile(dicomJSONDatasetOrP10ArrayBuffer);\n\n      dicomJSONDataset = dicomData.dict;\n    } else {\n      dicomJSONDataset = dicomJSONDatasetOrP10ArrayBuffer;\n    }\n\n    // Check if dataset is already naturalized.\n\n    let naturalizedDataset;\n\n    if (dicomJSONDataset['SeriesInstanceUID'] === undefined) {\n      naturalizedDataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\n        dicomJSONDataset\n      );\n    } else {\n      naturalizedDataset = dicomJSONDataset;\n    }\n\n    const {\n      StudyInstanceUID,\n      SeriesInstanceUID,\n      SOPInstanceUID,\n    } = naturalizedDataset;\n\n    this._getAndCacheStudyDataset(StudyInstanceUID, dicomJSONDataset);\n    const study = this._getAndCacheStudy(StudyInstanceUID);\n    const series = this._getAndCacheSeriesFromStudy(study, SeriesInstanceUID);\n    const instance = this._getAndCacheInstanceFromStudy(series, SOPInstanceUID);\n\n    Object.assign(instance, naturalizedDataset);\n\n    await this._checkBulkDataAndInlineBinaries(instance, options.server);\n\n    return instance;\n  }\n\n  addImageIdToUIDs(imageId, uids) {\n    // This method is a fallback for when you don't have WADO-URI or WADO-RS.\n    // You can add instances fetched by any method by calling addInstance, and hook an imageId to point at it here.\n    // An example would be dicom hosted at some random site.\n\n    this.imageIdToUIDs.set(imageId, uids);\n  }\n\n  _getAndCacheStudyDataset(StudyInstanceUID, dataset) {\n    if (!this.datasets[StudyInstanceUID]) {\n      this.datasets[StudyInstanceUID] = dataset;\n    }\n  }\n\n  getStudyDataset(StudyInstanceUID) {\n    return this.datasets[StudyInstanceUID];\n  }\n\n  _getAndCacheStudy(StudyInstanceUID) {\n    const studies = this.studies;\n\n    let study = studies.get(StudyInstanceUID);\n\n    if (!study) {\n      study = { series: new Map() };\n      studies.set(StudyInstanceUID, study);\n    }\n\n    return study;\n  }\n\n  _getAndCacheSeriesFromStudy(study, SeriesInstanceUID) {\n    let series = study.series.get(SeriesInstanceUID);\n\n    if (!series) {\n      series = { instances: new Map() };\n      study.series.set(SeriesInstanceUID, series);\n    }\n\n    return series;\n  }\n\n  _getAndCacheInstanceFromStudy(series, SOPInstanceUID) {\n    let instance = series.instances.get(SOPInstanceUID);\n\n    if (!instance) {\n      instance = {};\n      series.instances.set(SOPInstanceUID, instance);\n    }\n\n    return instance;\n  }\n\n  async _checkBulkDataAndInlineBinaries(instance, server) {\n    await fetchOverlayData(instance, server);\n\n    if (instance.PhotometricInterpretation === 'PALETTE COLOR') {\n      await fetchPaletteColorLookupTableData(instance, server);\n    }\n  }\n\n  _getInstance(imageId) {\n    const uids = this._getUIDsFromImageID(imageId);\n\n    if (!uids) {\n      return;\n    }\n\n    const { StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID } = uids;\n\n    return this._getInstanceData(\n      StudyInstanceUID,\n      SeriesInstanceUID,\n      SOPInstanceUID\n    );\n  }\n\n  get(query, imageId, options = { fallback: false }) {\n    const instance = this._getInstance(imageId);\n\n    if (query === INSTANCE) {\n      return instance;\n    }\n\n    return this.getTagFromInstance(query, instance, options);\n  }\n\n  getTag(query, imageId, options) {\n    return this.get(query, imageId, options);\n  }\n\n  getInstance(imageId) {\n    return this.get(INSTANCE, imageId);\n  }\n\n  getTagFromInstance(\n    naturalizedTagOrWADOImageLoaderTag,\n    instance,\n    options = { fallback: false }\n  ) {\n    if (!instance) {\n      return;\n    }\n\n    // If its a naturalized dcmjs tag present on the instance, return.\n    if (instance[naturalizedTagOrWADOImageLoaderTag]) {\n      return instance[naturalizedTagOrWADOImageLoaderTag];\n    }\n\n    // Maybe its a legacy CornerstoneWADOImageLoader tag then:\n    return this._getCornerstoneWADOImageLoaderTag(\n      naturalizedTagOrWADOImageLoaderTag,\n      instance\n    );\n  }\n\n  _getCornerstoneWADOImageLoaderTag(wadoImageLoaderTag, instance) {\n    let metadata;\n\n    switch (wadoImageLoaderTag) {\n      case WADO_IMAGE_LOADER_TAGS.GENERAL_SERIES_MODULE:\n        const { SeriesDate, SeriesTime } = instance;\n\n        let seriesDate;\n        let seriesTime;\n\n        if (SeriesDate) {\n          seriesDate = dicomParser.parseDA(SeriesDate);\n        }\n\n        if (SeriesTime) {\n          seriesTime = dicomParser.parseTM(SeriesTime);\n        }\n\n        metadata = {\n          modality: instance.Modality,\n          seriesInstanceUID: instance.SeriesInstanceUID,\n          seriesNumber: instance.SeriesNumber,\n          studyInstanceUID: instance.StudyInstanceUID,\n          seriesDate,\n          seriesTime,\n        };\n        break;\n      case WADO_IMAGE_LOADER_TAGS.PATIENT_STUDY_MODULE:\n        metadata = {\n          patientAge: instance.PatientAge,\n          patientSize: instance.PatientSize,\n          patientWeight: instance.PatientWeight,\n        };\n        break;\n      case WADO_IMAGE_LOADER_TAGS.IMAGE_PLANE_MODULE:\n        const { ImageOrientationPatient } = instance;\n\n        // Fallback for DX images.\n        // TODO: We should use the rest of the results of this function\n        // to update the UI somehow\n        const { PixelSpacing } = getPixelSpacingInformation(instance);\n\n        let rowPixelSpacing;\n        let columnPixelSpacing;\n\n        let rowCosines;\n        let columnCosines;\n\n        if (PixelSpacing) {\n          rowPixelSpacing = validNumber(PixelSpacing[0]);\n          columnPixelSpacing = validNumber(PixelSpacing[1]);\n        }\n\n        if (ImageOrientationPatient) {\n          rowCosines = validNumber(ImageOrientationPatient.slice(0, 3));\n          columnCosines = validNumber(ImageOrientationPatient.slice(3, 6));\n        }\n\n        metadata = {\n          frameOfReferenceUID: instance.FrameOfReferenceUID,\n          rows: instance.Rows,\n          columns: instance.Columns,\n          imageOrientationPatient: validNumber(ImageOrientationPatient),\n          rowCosines,\n          columnCosines,\n          imagePositionPatient: validNumber(instance.ImagePositionPatient),\n          sliceThickness: validNumber(instance.SliceThickness),\n          sliceLocation: validNumber(instance.SliceLocation),\n          pixelSpacing: validNumber(PixelSpacing),\n          rowPixelSpacing,\n          columnPixelSpacing,\n        };\n        break;\n      case WADO_IMAGE_LOADER_TAGS.IMAGE_PIXEL_MODULE:\n        metadata = {\n          samplesPerPixel: instance.SamplesPerPixel,\n          photometricInterpretation: instance.PhotometricInterpretation,\n          rows: instance.Rows,\n          columns: instance.Columns,\n          bitsAllocated: instance.BitsAllocated,\n          bitsStored: instance.BitsStored,\n          highBit: instance.HighBit,\n          pixelRepresentation: instance.PixelRepresentation,\n          planarConfiguration: instance.PlanarConfiguration,\n          pixelAspectRatio: instance.PixelAspectRatio,\n          smallestPixelValue: instance.SmallestPixelValue,\n          largestPixelValue: instance.LargestPixelValue,\n          redPaletteColorLookupTableDescriptor:\n            instance.RedPaletteColorLookupTableDescriptor,\n          greenPaletteColorLookupTableDescriptor:\n            instance.GreenPaletteColorLookupTableDescriptor,\n          bluePaletteColorLookupTableDescriptor:\n            instance.BluePaletteColorLookupTableDescriptor,\n          redPaletteColorLookupTableData:\n            instance.RedPaletteColorLookupTableData,\n          greenPaletteColorLookupTableData:\n            instance.GreenPaletteColorLookupTableData,\n          bluePaletteColorLookupTableData:\n            instance.BluePaletteColorLookupTableData,\n        };\n\n        break;\n      case WADO_IMAGE_LOADER_TAGS.VOI_LUT_MODULE:\n        let { WindowCenter, WindowWidth } = instance;\n\n        const windowCenter = Array.isArray(WindowCenter)\n          ? WindowCenter\n          : [WindowCenter];\n        const windowWidth = Array.isArray(WindowWidth)\n          ? WindowWidth\n          : [WindowWidth];\n\n        metadata = {\n          windowCenter: validNumber(windowCenter),\n          windowWidth: validNumber(windowWidth),\n        };\n\n        break;\n      case WADO_IMAGE_LOADER_TAGS.MODALITY_LUT_MODULE:\n        const rescaleSlope = validNumber(instance.RescaleSlope);\n        const rescaleIntercept = validNumber(instance.RescaleIntercept);\n        metadata = {\n          rescaleIntercept,\n          rescaleSlope,\n          rescaleType: instance.RescaleType,\n        };\n        break;\n      case WADO_IMAGE_LOADER_TAGS.SOP_COMMON_MODULE:\n        metadata = {\n          sopClassUID: instance.SOPClassUID,\n          sopInstanceUID: instance.SOPInstanceUID,\n        };\n        break;\n      case WADO_IMAGE_LOADER_TAGS.PET_ISOTOPE_MODULE:\n        const { RadiopharmaceuticalInformationSequence } = instance;\n\n        if (RadiopharmaceuticalInformationSequence) {\n          const RadiopharmaceuticalInformation = Array.isArray(\n            RadiopharmaceuticalInformationSequence\n          )\n            ? RadiopharmaceuticalInformationSequence[0]\n            : RadiopharmaceuticalInformationSequence;\n\n          const {\n            RadiopharmaceuticalStartTime,\n            RadionuclideTotalDose,\n            RadionuclideHalfLife,\n          } = RadiopharmaceuticalInformation;\n\n          const radiopharmaceuticalInfo = {\n            radiopharmaceuticalStartTime: dicomParser.parseTM(\n              RadiopharmaceuticalStartTime\n            ),\n            radionuclideTotalDose: RadionuclideTotalDose,\n            radionuclideHalfLife: RadionuclideHalfLife,\n          };\n          metadata = {\n            radiopharmaceuticalInfo,\n          };\n        }\n\n        break;\n      case WADO_IMAGE_LOADER_TAGS.OVERLAY_PLANE_MODULE:\n        const overlays = [];\n\n        for (\n          let overlayGroup = 0x00;\n          overlayGroup <= 0x1e;\n          overlayGroup += 0x02\n        ) {\n          let groupStr = `60${overlayGroup.toString(16)}`;\n\n          if (groupStr.length === 3) {\n            groupStr = `600${overlayGroup.toString(16)}`;\n          }\n\n          const OverlayDataTag = `${groupStr}3000`;\n          const OverlayData = instance[OverlayDataTag];\n\n          if (!OverlayData) {\n            continue;\n          }\n\n          const OverlayRowsTag = `${groupStr}0010`;\n          const OverlayColumnsTag = `${groupStr}0011`;\n          const OverlayType = `${groupStr}0040`;\n          const OverlayOriginTag = `${groupStr}0050`;\n          const OverlayDescriptionTag = `${groupStr}0022`;\n          const OverlayLabelTag = `${groupStr}1500`;\n          const ROIAreaTag = `${groupStr}1301`;\n          const ROIMeanTag = `${groupStr}1302`;\n          const ROIStandardDeviationTag = `${groupStr}1303`;\n          const OverlayOrigin = instance[OverlayOriginTag];\n\n          const overlay = {\n            rows: instance[OverlayRowsTag],\n            columns: instance[OverlayColumnsTag],\n            type: instance[OverlayType],\n            x: OverlayOrigin[0],\n            y: OverlayOrigin[1],\n            pixelData: OverlayData,\n            description: instance[OverlayDescriptionTag],\n            label: instance[OverlayLabelTag],\n            roiArea: instance[ROIAreaTag],\n            roiMean: instance[ROIMeanTag],\n            roiStandardDeviation: instance[ROIStandardDeviationTag],\n          };\n\n          overlays.push(overlay);\n        }\n\n        metadata = {\n          overlays,\n        };\n\n        break;\n\n      case WADO_IMAGE_LOADER_TAGS.PATIENT_MODULE:\n        const { PatientName } = instance;\n\n        let patientName;\n        if (PatientName) {\n          patientName = PatientName.Alphabetic;\n        }\n\n        metadata = {\n          patientName,\n          patientId: instance.PatientID,\n        };\n\n        break;\n\n      case WADO_IMAGE_LOADER_TAGS.GENERAL_IMAGE_MODULE:\n        metadata = {\n          sopInstanceUid: instance.SOPInstanceUID,\n          instanceNumber: instance.InstanceNumber,\n          lossyImageCompression: instance.LossyImageCompression,\n          lossyImageCompressionRatio: instance.LossyImageCompressionRatio,\n          lossyImageCompressionMethod: instance.LossyImageCompressionMethod,\n        };\n\n        break;\n      case WADO_IMAGE_LOADER_TAGS.GENERAL_STUDY_MODULE:\n        metadata = {\n          studyDescription: instance.StudyDescription,\n          studyDate: instance.StudyDate,\n          studyTime: instance.StudyTime,\n          accessionNumber: instance.AccessionNumber,\n        };\n\n        break;\n      case WADO_IMAGE_LOADER_TAGS.CINE_MODULE:\n        metadata = {\n          frameTime: instance.FrameTime,\n        };\n\n        break;\n    }\n\n    return metadata;\n  }\n\n  _getInstanceData(StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID) {\n    const study = this.studies.get(StudyInstanceUID);\n\n    if (!study) {\n      return;\n    }\n\n    const series = study.series.get(SeriesInstanceUID);\n\n    if (!series) {\n      return;\n    }\n\n    const instance = series.instances.get(SOPInstanceUID);\n\n    return instance;\n  }\n\n  _getUIDsFromImageID(imageId) {\n    if (imageId.includes('wadors:')) {\n      const strippedImageId = imageId.split('studies/')[1];\n      const splitImageId = strippedImageId.split('/');\n\n      return {\n        StudyInstanceUID: splitImageId[0], // Note: splitImageId[1] === 'series'\n        SeriesInstanceUID: splitImageId[2], // Note: splitImageId[3] === 'instances'\n        SOPInstanceUID: splitImageId[4],\n      };\n    }\n    if (imageId.includes('wado?requestType=WADO')) {\n      const qs = queryString.parse(imageId);\n\n      return {\n        StudyInstanceUID: qs.studyUID,\n        SeriesInstanceUID: qs.seriesUID,\n        SOPInstanceUID: qs.objectUID,\n      };\n    } else {\n      // Maybe its a non-standard imageId\n      return this.imageIdToUIDs.get(imageId);\n    }\n  }\n}\n\nconst metadataProvider = new MetadataProvider();\n\nexport default metadataProvider;\n\nconst WADO_IMAGE_LOADER_TAGS = {\n  // CornerstoneWADOImageLoader specific\n  GENERAL_SERIES_MODULE: 'generalSeriesModule',\n  PATIENT_STUDY_MODULE: 'patientStudyModule',\n  IMAGE_PLANE_MODULE: 'imagePlaneModule',\n  IMAGE_PIXEL_MODULE: 'imagePixelModule',\n  VOI_LUT_MODULE: 'voiLutModule',\n  MODALITY_LUT_MODULE: 'modalityLutModule',\n  SOP_COMMON_MODULE: 'sopCommonModule',\n  PET_ISOTOPE_MODULE: 'petIsotopeModule',\n  OVERLAY_PLANE_MODULE: 'overlayPlaneModule',\n\n  // react-cornerstone-viewport specifc\n  PATIENT_MODULE: 'patientModule',\n  GENERAL_IMAGE_MODULE: 'generalImageModule',\n  GENERAL_STUDY_MODULE: 'generalStudyModule',\n  CINE_MODULE: 'cineModule',\n};\n\nconst INSTANCE = 'instance';\n","import log from '../../log';\n\nexport default function getPixelSpacingInformation(instance) {\n  // See http://gdcm.sourceforge.net/wiki/index.php/Imager_Pixel_Spacing\n\n  // TODO: Add Ultrasound region spacing\n  // TODO: Add manual calibration\n\n  // TODO: Use ENUMS from dcmjs\n  const projectionRadiographSOPClassUIDs = [\n    '1.2.840.10008.5.1.4.1.1.1', //\tCR Image Storage\n    '1.2.840.10008.5.1.4.1.1.1.1', //\tDigital X-Ray Image Storage – for Presentation\n    '1.2.840.10008.5.1.4.1.1.1.1.1', //\tDigital X-Ray Image Storage – for Processing\n    '1.2.840.10008.5.1.4.1.1.1.2', //\tDigital Mammography X-Ray Image Storage – for Presentation\n    '1.2.840.10008.5.1.4.1.1.1.2.1', //\tDigital Mammography X-Ray Image Storage – for Processing\n    '1.2.840.10008.5.1.4.1.1.1.3', //\tDigital Intra – oral X-Ray Image Storage – for Presentation\n    '1.2.840.10008.5.1.4.1.1.1.3.1', //\tDigital Intra – oral X-Ray Image Storage – for Processing\n    '1.2.840.10008.5.1.4.1.1.12.1', //\tX-Ray Angiographic Image Storage\n    '1.2.840.10008.5.1.4.1.1.12.1.1', //\tEnhanced XA Image Storage\n    '1.2.840.10008.5.1.4.1.1.12.2', //\tX-Ray Radiofluoroscopic Image Storage\n    '1.2.840.10008.5.1.4.1.1.12.2.1', //\tEnhanced XRF Image Storage\n    '1.2.840.10008.5.1.4.1.1.12.3', // X-Ray Angiographic Bi-plane Image Storage\tRetired\n  ];\n\n  const {\n    PixelSpacing,\n    ImagerPixelSpacing,\n    SOPClassUID,\n    PixelSpacingCalibrationType,\n    PixelSpacingCalibrationDescription,\n    EstimatedRadiographicMagnificationFactor,\n    SequenceOfUltrasoundRegions,\n  } = instance;\n  const isProjection = projectionRadiographSOPClassUIDs.includes(SOPClassUID);\n\n  const TYPES = {\n    NOT_APPLICABLE: 'NOT_APPLICABLE',\n    UNKNOWN: 'UNKNOWN',\n    CALIBRATED: 'CALIBRATED',\n    DETECTOR: 'DETECTOR',\n  };\n\n  if (isProjection && !ImagerPixelSpacing) {\n    // If only Pixel Spacing is present, and this is a projection radiograph,\n    // PixelSpacing should be used, but the user should be informed that\n    // what it means is unknown\n    return {\n      PixelSpacing,\n      type: TYPES.UNKNOWN,\n      isProjection,\n    };\n  } else if (\n    PixelSpacing &&\n    ImagerPixelSpacing &&\n    PixelSpacing === ImagerPixelSpacing\n  ) {\n    // If Imager Pixel Spacing and Pixel Spacing are present and they have the same values,\n    // then the user should be informed that the measurements are at the detector plane\n    return {\n      PixelSpacing,\n      type: TYPES.DETECTOR,\n      isProjection,\n    };\n  } else if (\n    PixelSpacing &&\n    ImagerPixelSpacing &&\n    PixelSpacing !== ImagerPixelSpacing\n  ) {\n    // If Imager Pixel Spacing and Pixel Spacing are present and they have different values,\n    // then the user should be informed that these are \"calibrated\"\n    // (in some unknown manner if Pixel Spacing Calibration Type and/or\n    // Pixel Spacing Calibration Description are absent)\n    return {\n      PixelSpacing,\n      type: TYPES.CALIBRATED,\n      isProjection,\n      PixelSpacingCalibrationType,\n      PixelSpacingCalibrationDescription,\n    };\n  } else if (!PixelSpacing && ImagerPixelSpacing) {\n    let CorrectedImagerPixelSpacing = ImagerPixelSpacing;\n    if (EstimatedRadiographicMagnificationFactor) {\n      // Note that in IHE Mammo profile compliant displays, the value of Imager Pixel Spacing is required to be corrected by\n      // Estimated Radiographic Magnification Factor and the user informed of that.\n      // TODO: should this correction be done before all of this logic?\n      CorrectedImagerPixelSpacing = ImagerPixelSpacing.map(\n        pixelSpacing => pixelSpacing / EstimatedRadiographicMagnificationFactor\n      );\n    } else {\n      log.info(\n        'EstimatedRadiographicMagnificationFactor was not present. Unable to correct ImagerPixelSpacing.'\n      );\n    }\n\n    return {\n      PixelSpacing: CorrectedImagerPixelSpacing,\n      isProjection,\n    };\n  } else if (\n    SequenceOfUltrasoundRegions &&\n    typeof SequenceOfUltrasoundRegions === 'object'\n  ) {\n    const { PhysicalDeltaX, PhysicalDeltaY } = SequenceOfUltrasoundRegions;\n    const USPixelSpacing = [PhysicalDeltaX * 10, PhysicalDeltaY * 10];\n\n    return {\n      PixelSpacing: USPixelSpacing,\n    };\n  } else if (\n    SequenceOfUltrasoundRegions &&\n    Array.isArray(SequenceOfUltrasoundRegions) &&\n    SequenceOfUltrasoundRegions.length > 1\n  ) {\n    log.warn(\n      'Sequence of Ultrasound Regions > one entry. This is not yet implemented, all measurements will be shown in pixels.'\n    );\n  } else if (isProjection === false && !ImagerPixelSpacing) {\n    // If only Pixel Spacing is present, and this is not a projection radiograph,\n    // we can stop here\n    return {\n      PixelSpacing,\n      type: TYPES.NOT_APPLICABLE,\n      isProjection,\n    };\n  }\n\n    log.info(\n    'Unknown combination of PixelSpacing and ImagerPixelSpacing identified. Unable to determine spacing.'\n  );\n}\n","/**\n * adds a pause and unpause method to Mousetrap\n * this allows you to enable or disable keyboard shortcuts\n * without having to reset Mousetrap and rebind everything\n *\n * https://github.com/ccampbell/mousetrap/blob/master/plugins/pause/mousetrap-pause.js\n */\nexport default function(Mousetrap) {\n  var _originalStopCallback = Mousetrap.prototype.stopCallback;\n\n  Mousetrap.prototype.stopCallback = function(e, element, combo) {\n    var self = this;\n\n    if (self.paused) {\n      return true;\n    }\n\n    return _originalStopCallback.call(self, e, element, combo);\n  };\n\n  Mousetrap.prototype.pause = function() {\n    var self = this;\n    self.paused = true;\n  };\n\n  Mousetrap.prototype.unpause = function() {\n    var self = this;\n    self.paused = false;\n  };\n\n  Mousetrap.init();\n}\n","/**\n * This extension allows you to record a sequence using Mousetrap.\n * {@link https://craig.is/killing/mice}\n *\n * @author Dan Tao <daniel.tao@gmail.com>\n */\nexport default function(Mousetrap) {\n  /**\n   * the sequence currently being recorded\n   *\n   * @type {Array}\n   */\n  var _recordedSequence = [],\n    /**\n     * a callback to invoke after recording a sequence\n     *\n     * @type {Function|null}\n     */\n    _recordedSequenceCallback = null,\n    /**\n     * a list of all of the keys currently held down\n     *\n     * @type {Array}\n     */\n    _currentRecordedKeys = [],\n    /**\n     * temporary state where we remember if we've already captured a\n     * character key in the current combo\n     *\n     * @type {boolean}\n     */\n    _recordedCharacterKey = false,\n    /**\n     * a handle for the timer of the current recording\n     *\n     * @type {null|number}\n     */\n    _recordTimer = null,\n    /**\n     * the original handleKey method to override when Mousetrap.record() is\n     * called\n     *\n     * @type {Function}\n     */\n    _origHandleKey = Mousetrap.prototype.handleKey;\n\n  /**\n   * handles a character key event\n   *\n   * @param {string} character\n   * @param {Array} modifiers\n   * @param {Event} e\n   * @returns void\n   */\n  function _handleKey(character, modifiers, e) {\n    var self = this;\n\n    if (!self.recording) {\n      _origHandleKey.apply(self, arguments);\n      return;\n    }\n\n    // remember this character if we're currently recording a sequence\n    if (e.type == 'keydown') {\n      if (character.length === 1 && _recordedCharacterKey) {\n        _recordCurrentCombo();\n      }\n\n      for (let i = 0; i < modifiers.length; ++i) {\n        _recordKey(modifiers[i]);\n      }\n      _recordKey(character);\n\n      // once a key is released, all keys that were held down at the time\n      // count as a keypress\n    } else if (e.type == 'keyup' && _currentRecordedKeys.length > 0) {\n      _recordCurrentCombo();\n    }\n  }\n\n  /**\n   * marks a character key as held down while recording a sequence\n   *\n   * @param {string} key\n   * @returns void\n   */\n  function _recordKey(key) {\n    // one-off implementation of Array.indexOf, since IE6-9 don't support it\n    for (let i = 0; i < _currentRecordedKeys.length; ++i) {\n      if (_currentRecordedKeys[i] === key) {\n        return;\n      }\n    }\n\n    _currentRecordedKeys.push(key);\n\n    if (key.length === 1) {\n      _recordedCharacterKey = true;\n    }\n  }\n\n  /**\n   * marks whatever key combination that's been recorded so far as finished\n   * and gets ready for the next combo\n   *\n   * @returns void\n   */\n  function _recordCurrentCombo() {\n    _recordedSequence.push(_currentRecordedKeys);\n    _currentRecordedKeys = [];\n    _recordedCharacterKey = false;\n    _finishRecording();\n  }\n\n  /**\n   * ensures each combo in a sequence is in a predictable order and formats\n   * key combos to be '+'-delimited\n   *\n   * modifies the sequence in-place\n   *\n   * @param {Array} sequence\n   * @returns void\n   */\n  function _normalizeSequence(sequence) {\n    for (let i = 0; i < sequence.length; ++i) {\n      sequence[i].sort(function(x, y) {\n        // modifier keys always come first, in alphabetical order\n        if (x.length > 1 && y.length === 1) {\n          return -1;\n        } else if (x.length === 1 && y.length > 1) {\n          return 1;\n        }\n\n        // character keys come next (list should contain no duplicates,\n        // so no need for equality check)\n        return x > y ? 1 : -1;\n      });\n\n      sequence[i] = sequence[i].join('+');\n    }\n  }\n\n  /**\n   * finishes the current recording, passes the recorded sequence to the stored\n   * callback, and sets Mousetrap.handleKey back to its original function\n   *\n   * @returns void\n   */\n  function _finishRecording() {\n    if (_recordedSequenceCallback) {\n      _normalizeSequence(_recordedSequence);\n      _recordedSequenceCallback(_recordedSequence);\n    }\n\n    // reset all recorded state\n    _recordedSequence = [];\n    _recordedSequenceCallback = null;\n    _currentRecordedKeys = [];\n  }\n\n  /**\n   * called to set a 1 second timeout on the current recording\n   *\n   * this is so after each key press in the sequence the recording will wait for\n   * 1 more second before executing the callback\n   *\n   * @returns void\n   */\n  function _restartRecordTimer() {\n    clearTimeout(_recordTimer);\n    _recordTimer = setTimeout(_finishRecording, 1000);\n  }\n\n  /**\n   * records the next sequence and passes it to a callback once it's\n   * completed\n   *\n   * @param {Function} callback\n   * @returns void\n   */\n  Mousetrap.prototype.record = function(callback) {\n    var self = this;\n    self.recording = true;\n    _recordedSequenceCallback = function() {\n      self.recording = false;\n      callback.apply(self, arguments);\n    };\n  };\n\n  /**\n   * stop recording\n   *\n   * @param {Function} callback\n   * @returns void\n   */\n  Mousetrap.prototype.stopRecord = function() {\n    var self = this;\n    self.recording = false;\n  };\n\n  /**\n   * start recording\n   *\n   * @param {Function} callback\n   * @returns void\n   */\n  Mousetrap.prototype.startRecording = function() {\n    var self = this;\n    self.recording = true;\n  };\n\n  Mousetrap.prototype.handleKey = function() {\n    var self = this;\n    _handleKey.apply(self, arguments);\n  };\n\n  Mousetrap.init();\n}\n","import Mousetrap from 'mousetrap';\nimport pausePlugin from './pausePlugin';\nimport recordPlugin from './recordPlugin';\n\nrecordPlugin(Mousetrap);\npausePlugin(Mousetrap);\n\nexport default Mousetrap;\n","const log = {\n  error: console.error,\n  warn: console.warn,\n  info: console.log,\n  trace: console.trace,\n  debug: console.debug,\n  time: console.time,\n  timeEnd: console.timeEnd,\n};\n\nexport default log;\n","const ReconstructionIssues = {\n  DATASET_4D: 'datasetis4D',\n  VARYING_IMAGESDIMENSIONS: 'imagesdimensionsvarying',\n  VARYING_IMAGESCOMPONENTS: 'imagescomponentsvarying',\n  VARYING_IMAGESORIENTATION: 'imagesorientationvarying',\n  MISSING_FRAMES: 'missingframes',\n  IRREGULAR_SPACING: 'irregularspacing',\n  MULTIFFRAMES: 'multiframe',\n};\n\nexport {ReconstructionIssues};\n","import { TypeSafeCollection } from '../classes/TypeSafeCollection';\n\nconst studyMetadataList = new TypeSafeCollection();\n\nfunction add(studyMetadata) {\n  studyMetadataList.insert(studyMetadata);\n}\n\nfunction get(studyInstanceUID) {\n  return studyMetadataList.findBy({ studyInstanceUID });\n}\n\nfunction all(options) {\n  return studyMetadataList.all(options);\n}\n\nfunction remove(studyInstanceUID) {\n  studyMetadataList.remove({ studyInstanceUID });\n}\n\nfunction purge() {\n  studyMetadataList.removeAll();\n}\n\nexport default {\n  add,\n  get,\n  all,\n  remove,\n  purge,\n};\n","import { InstanceMetadata } from './InstanceMetadata';\nimport getImageId from '../../utils/getImageId.js';\n\nexport class OHIFInstanceMetadata extends InstanceMetadata {\n  /**\n   * @param {Object} Instance object.\n   */\n  constructor(data, series, study, uid) {\n    super(data, uid);\n    this.init(series, study);\n  }\n\n  init(series, study) {\n    const instance = this.getData();\n\n    // Initialize Private Properties\n    Object.defineProperties(this, {\n      _sopInstanceUID: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: instance.SOPInstanceUID,\n      },\n      _study: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: study,\n      },\n      _series: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: series,\n      },\n      _instance: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: instance,\n      },\n      _cache: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: Object.create(null),\n      },\n    });\n  }\n\n  // Override\n  getTagValue(tagOrProperty, defaultValue, bypassCache) {\n    // check if this property has been cached...\n    if (tagOrProperty in this._cache && bypassCache !== true) {\n      return this._cache[tagOrProperty];\n    }\n\n    const instanceData = this._instance.metadata;\n\n    // Search property value in the whole study metadata chain...\n    let rawValue;\n    if (tagOrProperty in instanceData) {\n      rawValue = instanceData[tagOrProperty];\n    } else if (tagOrProperty in this._series) {\n      rawValue = this._series[tagOrProperty];\n    } else if (tagOrProperty in this._study) {\n      rawValue = this._study[tagOrProperty];\n    }\n\n    if (rawValue !== void 0) {\n      // if rawValue value is not undefined, cache result...\n      this._cache[tagOrProperty] = rawValue;\n      return rawValue;\n    }\n\n    return defaultValue;\n  }\n\n  // Override\n  tagExists(tagOrProperty) {\n    return (\n      tagOrProperty in this._instance.metadata ||\n      tagOrProperty in this._series ||\n      tagOrProperty in this._study\n    );\n  }\n\n  // Override\n  getImageId(frame, thumbnail) {\n    // If _imageID is not cached, create it\n    if (this._imageId === null) {\n      this._imageId = getImageId(this.getData(), frame, thumbnail);\n    }\n\n    return this._imageId;\n  }\n}\n","import { SeriesMetadata } from './SeriesMetadata';\nimport { OHIFInstanceMetadata } from './OHIFInstanceMetadata';\n\nexport class OHIFSeriesMetadata extends SeriesMetadata {\n  /**\n   * @param {Object} Series object.\n   */\n  constructor(data, study, uid) {\n    super(data, uid);\n    this.init(study);\n  }\n\n  init(study) {\n    const series = this.getData();\n\n    // define \"_seriesInstanceUID\" protected property...\n    Object.defineProperty(this, '_seriesInstanceUID', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: series.SeriesInstanceUID,\n    });\n\n    // populate internal list of instances...\n    series.instances.forEach(instance => {\n      this.addInstance(new OHIFInstanceMetadata(instance, series, study));\n    });\n  }\n}\n","import { StudyMetadata } from './StudyMetadata';\nimport { OHIFSeriesMetadata } from './OHIFSeriesMetadata';\n\nexport class OHIFStudyMetadata extends StudyMetadata {\n  /**\n   * @param {Object} Study object.\n   */\n  constructor(data, uid) {\n    super(data, uid);\n    this.init();\n  }\n\n  init() {\n    const study = this.getData();\n\n    // define \"_studyInstanceUID\" protected property\n    Object.defineProperty(this, '_studyInstanceUID', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: study.StudyInstanceUID,\n    });\n\n    // populate internal list of series\n    study.series.forEach(series => {\n      this.addSeries(new OHIFSeriesMetadata(series, study));\n    });\n  }\n}\n","import { InstanceMetadata } from './InstanceMetadata';\nimport { Metadata } from './Metadata';\nimport { OHIFInstanceMetadata } from './OHIFInstanceMetadata';\nimport { OHIFSeriesMetadata } from './OHIFSeriesMetadata';\nimport { OHIFStudyMetadata } from './OHIFStudyMetadata';\nimport { SeriesMetadata } from './SeriesMetadata';\nimport { StudyMetadata } from './StudyMetadata';\n\nconst metadata = {\n  Metadata,\n  StudyMetadata,\n  SeriesMetadata,\n  InstanceMetadata,\n  OHIFStudyMetadata,\n  OHIFSeriesMetadata,\n  OHIFInstanceMetadata,\n};\n\nexport {\n  Metadata,\n  StudyMetadata,\n  SeriesMetadata,\n  InstanceMetadata,\n  OHIFStudyMetadata,\n  OHIFSeriesMetadata,\n  OHIFInstanceMetadata,\n};\n\nexport default metadata;\n","import { ReconstructionIssues } from './../enums.js';\n\n/**\n * Checks if a series is reconstructable to a 3D volume.\n *\n * @param {Object[]} An array of `OHIFInstanceMetadata` objects.\n *\n * @returns {Object} value, reconstructionIssues.\n */\nfunction isDisplaySetReconstructable(instances) {\n  if (!instances.length) {\n    return { value: false };\n  }\n\n  const firstInstance = instances[0].getData().metadata;\n\n  const Modality = firstInstance.Modality;\n  const isMultiframe = firstInstance.NumberOfFrames > 1;\n\n  if (!constructableModalities.includes(Modality)) {\n    return { value: false };\n  }\n\n  // Can't reconstruct if we only have one image.\n  if (!isMultiframe && instances.length === 1) {\n    return { value: false };\n  }\n\n  if (isMultiframe) {\n    return processMultiframe();\n  } else {\n    return processSingleframe(instances);\n  }\n}\n\n/**\n * Process reconstructable multiframes checks\n * TODO: deal with multriframe checks! return false for now as can't reconstruct.\n * *\n * @returns {Object} value and reconstructionIssues.\n */\nfunction processMultiframe() {\n  const reconstructionIssues = [ReconstructionIssues.MULTIFRAMES];\n  return { value: false, reconstructionIssues };\n}\n\n/**\n * Process reconstructable single frame checks\n *\n * @param {Object[]} An array of `OHIFInstanceMetadata` objects.\n *\n * @returns {Object} value and reconstructionIssues.\n */\nfunction processSingleframe(instances) {\n  const n = instances.length;\n  const firstImage = instances[0].getData().metadata;\n  const firstImageRows = firstImage.Rows;\n  const firstImageColumns = firstImage.Columns;\n  const firstImageSamplesPerPixel = firstImage.SamplesPerPixel;\n  const firstImageOrientationPatient = firstImage.ImageOrientationPatient;\n\n  const reconstructionIssues = [];\n  // Can't reconstruct if we:\n  // -- Have a different dimensions within a displaySet.\n  // -- Have a different number of components within a displaySet.\n  // -- Have different orientations within a displaySet.\n  for (let ii = 1; ii < n; ++ii) {\n    const instance = instances[ii].getData().metadata;\n    const {\n      Rows,\n      Columns,\n      SamplesPerPixel,\n      ImageOrientationPatient,\n    } = instance;\n\n    if (Rows !== firstImageRows || Columns !== firstImageColumns) {\n      reconstructionIssues.push(ReconstructionIssues.VARYING_IMAGESDIMENSIONS);\n    } else if (SamplesPerPixel !== firstImageSamplesPerPixel) {\n      reconstructionIssues.push(ReconstructionIssues.VARYING_IMAGESCOMPONENTS);\n    } else if (\n      !_isSameArray(ImageOrientationPatient, firstImageOrientationPatient)\n    ) {\n      reconstructionIssues.push(ReconstructionIssues.VARYING_IMAGESORIENTATION);\n    }\n\n    if (reconstructionIssues.length !== 0) {\n      break;\n    }\n  }\n\n  // check if dataset is 4D\n  if (_isDataset4D(instances)) {\n    reconstructionIssues.push(ReconstructionIssues.DATASET_4D);\n  }\n\n  return {\n    value: reconstructionIssues.length === 0 ? true : false,\n    reconstructionIssues,\n  };\n}\n\n/**\n *  Check is the spacing is uniform.\n *  The input metadata array has to be ordered by image position.\n *\n * @param {Object[]} An array of `OHIFInstanceMetadata` objects.\n * @param {boolean} is the dataset 4D.\n *\n * @returns {Object} isUniform, reconstructionIssues and missingFrames\n */\nfunction isSpacingUniform(instances, datasetIs4D) {\n  const n = instances.length;\n  const firstImage = instances[0].getData().metadata;\n  const firstImagePositionPatient = firstImage.ImagePositionPatient;\n\n  const reconstructionIssues = [];\n  let missingFrames = 0;\n\n  // Check if frame spacing is approximately equal within a spacingTolerance.\n  // If spacing is on a uniform grid but we are missing frames,\n  // Allow reconstruction, but pass back the number of missing frames.\n  if (n > 2) {\n    const lastIpp = instances[n - 1].getData().metadata.ImagePositionPatient;\n\n    // We can't reconstruct if we are missing ImagePositionPatient values\n    if (firstImagePositionPatient && lastIpp) {\n      const averageSpacingBetweenFrames =\n        _getPerpendicularDistance(firstImagePositionPatient, lastIpp) / (n - 1);\n\n      let previousImagePositionPatient = firstImagePositionPatient;\n\n      for (let ii = 1; ii < n; ++ii) {\n        const instance = instances[ii].getData().metadata;\n        const { ImagePositionPatient } = instance;\n\n        const spacingBetweenFrames = _getPerpendicularDistance(\n          ImagePositionPatient,\n          previousImagePositionPatient\n        );\n\n        if (datasetIs4D && spacingBetweenFrames < 1e-3) {\n          // the dataset is 4D, if the distance is zero, means that we are\n          // checking the 4th dimension. Do not return, since we want still to\n          // check the 3rd dimension spacing.\n          continue;\n        }\n\n        const spacingIssue = _getSpacingIssue(\n          spacingBetweenFrames,\n          averageSpacingBetweenFrames\n        );\n\n        if (spacingIssue) {\n          const issue = spacingIssue.issue;\n\n          if (issue === ReconstructionIssues.MISSING_FRAMES) {\n            missingFrames += spacingIssue.missingFrames;\n          } else if (issue === ReconstructionIssues.IRREGULAR_SPACING) {\n            reconstructionIssues.push(issue);\n            break;\n          }\n        }\n\n        previousImagePositionPatient = ImagePositionPatient;\n      }\n    }\n  }\n\n  return {\n    isUniform: reconstructionIssues.length === 0 ? true : false,\n    missingFrames,\n    reconstructionIssues,\n  };\n}\n\n/**\n *  Check if 4D dataset.\n *\n *  Assuming that slices at different time have the same position, here we just check if\n *  there are multiple slices for the same ImagePositionPatient and disable MPR.\n *\n *  A better heuristic would be checking 4D tags, e.g. the presence of multiple TemporalPositionIdentifier values.\n *  However, some studies (e.g. https://github.com/OHIF/Viewers/issues/2113) do not have such tags.\n *\n * @param {Object[]} instances An array of `OHIFInstanceMetadata` objects.\n *\n * @returns {boolean} dataset4D value.\n */\nfunction _isDataset4D(instances) {\n  const n = instances.length;\n  for (let ii = 0; ii < n; ++ii) {\n    const instanceMetadataControl = instances[ii].getData().metadata;\n    if (\n      !instanceMetadataControl ||\n      instanceMetadataControl === undefined ||\n      !instanceMetadataControl.ImagePositionPatient ||\n      instanceMetadataControl.ImagePositionPatient === undefined\n    ) {\n      continue;\n    }\n    for (let jj = ii + 1; jj < n; ++jj) {\n      const instanceMetadata = instances[jj].getData().metadata;\n      if (\n        !instanceMetadata ||\n        instanceMetadata === undefined ||\n        !instanceMetadata.ImagePositionPatient ||\n        instanceMetadata.ImagePositionPatient === undefined\n      ) {\n        continue;\n      }\n\n      if (\n        _isSameArray(\n          instanceMetadataControl.ImagePositionPatient,\n          instanceMetadata.ImagePositionPatient\n        )\n      ) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction _isSameArray(iop1, iop2) {\n  if (iop1 === undefined || !iop2 === undefined) {\n    return;\n  }\n\n  return (\n    Math.abs(iop1[0] - iop2[0]) < iopTolerance &&\n    Math.abs(iop1[1] - iop2[1]) < iopTolerance &&\n    Math.abs(iop1[2] - iop2[2]) < iopTolerance\n  );\n}\n\n// TODO: Is 10% a reasonable spacingTolerance for spacing?\nconst spacingTolerance = 0.1;\nconst iopTolerance = 0.01;\n\n/**\n * Checks for spacing issues.\n *\n * @param {number} spacing The spacing between two frames.\n * @param {number} averageSpacing The average spacing between all frames.\n *\n * @returns {Object} An object containing the issue and extra information if necessary.\n */\nfunction _getSpacingIssue(spacing, averageSpacing) {\n  const equalWithinTolerance =\n    Math.abs(spacing - averageSpacing) < averageSpacing * spacingTolerance;\n\n  if (equalWithinTolerance) {\n    return;\n  }\n\n  const multipleOfAverageSpacing = spacing / averageSpacing;\n\n  const numberOfSpacings = Math.round(multipleOfAverageSpacing);\n\n  const errorForEachSpacing =\n    Math.abs(spacing - numberOfSpacings * averageSpacing) / numberOfSpacings;\n\n  if (errorForEachSpacing < spacingTolerance * averageSpacing) {\n    return {\n      issue: ReconstructionIssues.MISSING_FRAMES,\n      missingFrames: numberOfSpacings - 1,\n    };\n  }\n\n  return { issue: ReconstructionIssues.IRREGULAR_SPACING };\n}\n\nfunction _getPerpendicularDistance(a, b) {\n  return Math.sqrt(\n    Math.pow(a[0] - b[0], 2) +\n      Math.pow(a[1] - b[1], 2) +\n      Math.pow(a[2] - b[2], 2)\n  );\n}\n\nconst constructableModalities = ['MR', 'CT', 'PT', 'NM'];\n\nexport { isDisplaySetReconstructable, isSpacingUniform };\n","// - createStacks\nimport DICOMWeb from './../../DICOMWeb';\nimport ImageSet from './../ImageSet';\nimport { InstanceMetadata } from './InstanceMetadata';\nimport { Metadata } from './Metadata';\nimport { SeriesMetadata } from './SeriesMetadata';\n// - createStacks\nimport { api } from 'dicomweb-client';\n// - createStacks\nimport { isImage } from '../../utils/isImage';\nimport { naturalizeSOPClassUID } from '../../utils/naturalizeSOPClassUID';\nimport {\n  isDisplaySetReconstructable,\n  isSpacingUniform,\n} from '../../utils/isDisplaySetReconstructable';\nimport errorHandler from '../../errorHandler';\nimport isLowPriorityModality from '../../utils/isLowPriorityModality';\nimport getXHRRetryRequestHook from '../../utils/xhrRetryRequestHook';\n\nclass StudyMetadata extends Metadata {\n  constructor(data, uid) {\n    super(data, uid);\n    // Initialize Private Properties\n    Object.defineProperties(this, {\n      _studyInstanceUID: {\n        configurable: true, // configurable so that it can be redefined in sub-classes...\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n      _series: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: [],\n      },\n      _displaySets: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: [],\n      },\n      _derivedDisplaySets: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: [],\n      },\n      _firstSeries: {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n      _firstInstance: {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n    });\n    // Initialize Public Properties\n    this._definePublicProperties();\n  }\n\n  /**\n   * Private Methods\n   */\n\n  /**\n   * Define Public Properties\n   * This method should only be called during initialization (inside the class constructor)\n   */\n  _definePublicProperties() {\n    /**\n     * Property: this.studyInstanceUID\n     * Same as this.getStudyInstanceUID()\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\n     * studyCollection.findBy({\n     *   studyInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\n     * });\n     */\n    Object.defineProperty(this, 'studyInstanceUID', {\n      configurable: false,\n      enumerable: false,\n      get: function() {\n        return this.getStudyInstanceUID();\n      },\n    });\n  }\n\n  /**\n   * Public Methods\n   */\n\n  /**\n   * Getter for displaySets\n   * @return {Array} Array of display set object\n   */\n  getDisplaySets() {\n    return this._displaySets.slice();\n  }\n\n  /**\n   * Split a series metadata object into display sets\n   * @param {Array} sopClassHandlerModules List of SOP Class Modules\n   * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\n   * @returns {Array} The list of display sets created for the given series object\n   */\n  _createDisplaySetsForSeries(sopClassHandlerModules, series) {\n    const study = this;\n    const displaySets = [];\n\n    const anyInstances = series.getInstanceCount() > 0;\n\n    if (!anyInstances) {\n      const displaySet = new ImageSet([]);\n      const seriesData = series.getData();\n\n      displaySet.setAttributes({\n        displaySetInstanceUID: displaySet.uid,\n        SeriesInstanceUID: seriesData.SeriesInstanceUID,\n        SeriesDescription: seriesData.SeriesDescription,\n        SeriesNumber: seriesData.SeriesNumber,\n        Modality: seriesData.Modality,\n      });\n\n      displaySets.push(displaySet);\n\n      return displaySets;\n    }\n\n    const sopClassUIDs = getSopClassUIDs(series);\n\n    if (sopClassHandlerModules && sopClassHandlerModules.length > 0) {\n      const displaySet = _getDisplaySetFromSopClassModule(\n        sopClassHandlerModules,\n        series,\n        study,\n        sopClassUIDs\n      );\n\n      if (displaySet) {\n        displaySet.sopClassModule = true;\n\n        if (displaySet.isDerived) {\n          this._addDerivedDisplaySet(displaySet);\n        }\n\n        displaySets.push(displaySet);\n\n        return displaySets;\n      }\n    }\n\n    // WE NEED A BETTER WAY TO NOTE THAT THIS IS THE DEFAULT BEHAVIOR FOR LOADING\n    // A DISPLAY SET IF THERE IS NO MATCHING SOP CLASS PLUGIN\n\n    // Search through the instances (InstanceMetadata object) of this series\n    // Split Multi-frame instances and Single-image modalities\n    // into their own specific display sets. Place the rest of each\n    // series into another display set.\n    const stackableInstances = [];\n    series.forEachInstance(instance => {\n      let displaySet;\n\n      // All imaging modalities must have a valid value for SOPClassUID (x00080016) or Rows (x00280010)\n      if (\n        !isImage(instance.getTagValue('SOPClassUID')) &&\n        !instance.getTagValue('Rows')\n      ) {\n        // we set an empty display and we add a isSOPClassUIDSupported variable to\n        // print a warning that the series is not supported in the thumbnail.\n        // SOPClassUIDNaturalized is human readable name, since for non image series,\n        // we could have a mismatch between the SOPClassUID and the Modality.\n        // For example, in the Parametric map IOD Modality is expected to match\n        // the value for the series used to generate Parametric map, and there is no \"PM\" modality.\n        const displaySet = new ImageSet([]);\n        const seriesData = series.getData();\n        displaySet.setAttributes({\n          displaySetInstanceUID: displaySet.uid,\n          SeriesDate: seriesData.SeriesDate,\n          SeriesTime: seriesData.SeriesTime,\n          SeriesInstanceUID: series.getSeriesInstanceUID(),\n          SeriesNumber: instance.getTagValue('SeriesNumber'),\n          SeriesDescription: instance.getTagValue('SeriesDescription'),\n          numImageFrames: instance.getTagValue('NumberOfFrames'),\n          frameRate: instance.getTagValue('FrameTime'),\n          Modality: instance.getTagValue('Modality'),\n          isMultiFrame: false,\n          StudyInstanceUID: study.getStudyInstanceUID(), // Include the study instance UID\n          InstanceNumber: instance.getTagValue('InstanceNumber'), // Include the instance number\n          AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime'), // Include the acquisition datetime\n          isReconstructable: false,\n          isSOPClassUIDSupported: false,\n          SOPClassUIDNaturalized: naturalizeSOPClassUID(\n            instance.getTagValue('SOPClassUID')\n          ),\n          metadata: instance.getData().metadata,\n        });\n\n        displaySets.push(displaySet);\n      } else {\n        if (isMultiFrame(instance)) {\n          displaySet = makeDisplaySet(series, [instance]);\n\n          displaySet.setAttributes({\n            sopClassUIDs,\n            isClip: true,\n            SeriesInstanceUID: series.getSeriesInstanceUID(),\n            StudyInstanceUID: study.getStudyInstanceUID(), // Include the study instance UID for drag/drop purposes\n            numImageFrames: instance.getTagValue('NumberOfFrames'), // Override the default value of instances.length\n            InstanceNumber: instance.getTagValue('InstanceNumber'), // Include the instance number\n            AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime'), // Include the acquisition datetime\n          });\n          displaySets.push(displaySet);\n        } else if (isSingleImageModality(instance.Modality)) {\n          displaySet = makeDisplaySet(series, [instance]);\n          displaySet.setAttributes({\n            sopClassUIDs,\n            StudyInstanceUID: study.getStudyInstanceUID(), // Include the study instance UID\n            SeriesInstanceUID: series.getSeriesInstanceUID(),\n            InstanceNumber: instance.getTagValue('InstanceNumber'), // Include the instance number\n            AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime'), // Include the acquisition datetime\n          });\n          displaySets.push(displaySet);\n        } else {\n          stackableInstances.push(instance);\n        }\n      }\n    });\n\n    if (stackableInstances.length) {\n      const displaySet = makeDisplaySet(series, stackableInstances);\n      displaySet.setAttribute('StudyInstanceUID', study.getStudyInstanceUID());\n      displaySet.setAttributes({\n        sopClassUIDs,\n      });\n      displaySets.push(displaySet);\n    }\n\n    return displaySets;\n  }\n\n  /**\n   * Adds the displaySets to the studies list of derived displaySets.\n   * @param {object} displaySet The displaySet to append to the derived displaysets list.\n   */\n  _addDerivedDisplaySet(displaySet) {\n    this._derivedDisplaySets.push(displaySet);\n    // --> Perhaps that logic should exist in the extension sop class handler and this be a dumb list.\n    // TODO -> Get x Modality by referencedSeriesInstanceUid, FoR, etc.\n  }\n\n  /**\n   * Adds the displaySets to the studies list of derived displaySets.\n   * @param {array} displaySets The displaySets array to append to the derived displaysets list.\n   */\n  _addDerivedDisplaySets(displaySets) {\n    displaySets.map(displaySet => this._derivedDisplaySets.push(displaySet));\n  }\n\n  /**\n   * Returns the source display set of the derivated display set.\n   * @param {object} derivatedDisplaySet\n   * @param {array[StudyMetadata]} studies\n   * @return {object} source display set.\n   */\n  static getReferencedDisplaySet(derivatedDisplaySet, studies) {\n    let allDisplaySets = [];\n\n    studies.forEach(study => {\n      allDisplaySets = allDisplaySets.concat(study.displaySets);\n    });\n\n    let otherDisplaySets = [];\n\n    if (\n      allDisplaySets.length !== 0 &&\n      derivatedDisplaySet !== undefined &&\n      allDisplaySets !== undefined\n    ) {\n      otherDisplaySets = allDisplaySets.filter(function(ds) {\n        if (ds !== undefined)\n          return (\n            ds.displaySetInstanceUID !==\n            derivatedDisplaySet.displaySetInstanceUID\n          );\n      });\n    }\n\n    const { metadata } = derivatedDisplaySet;\n\n    let referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromSourceImageSequence(\n      metadata,\n      otherDisplaySets\n    );\n\n    let noReferencedSeriesAvailable =\n      !referencedSeriesInstanceUIDs ||\n      referencedSeriesInstanceUIDs.length === 0;\n    if (noReferencedSeriesAvailable) {\n      referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromReferencedSeriesSequence(\n        metadata\n      );\n    }\n\n    noReferencedSeriesAvailable =\n      !referencedSeriesInstanceUIDs ||\n      referencedSeriesInstanceUIDs.length === 0;\n    if (noReferencedSeriesAvailable) {\n      referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromReferencedImageSequence(\n        metadata,\n        otherDisplaySets\n      );\n    }\n\n    const referencedSeriesAvailable =\n      referencedSeriesInstanceUIDs && referencedSeriesInstanceUIDs.length !== 0;\n    if (referencedSeriesAvailable) {\n      const referencedDisplaySet = otherDisplaySets.find(ds =>\n        referencedSeriesInstanceUIDs.includes(ds.SeriesInstanceUID)\n      );\n      return referencedDisplaySet;\n    }\n  }\n\n  /**\n   * Returns a list of derived datasets in the study, filtered by the given filter.\n   * @param {object} filter An object containing search filters\n   * @param {object} filter.Modality\n   * @param {object} filter.referencedSeriesInstanceUID\n   * @param {object} filter.referencedFrameOfReferenceUID\n   * @return {Array} filtered derived display sets\n   */\n  getDerivedDatasets(filter) {\n    const {\n      Modality,\n      referencedSeriesInstanceUID,\n      referencedFrameOfReferenceUID,\n    } = filter;\n\n    let filteredDerivedDisplaySets = this._derivedDisplaySets;\n\n    if (Modality) {\n      filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(\n        displaySet => displaySet.Modality === Modality\n      );\n    }\n\n    if (referencedSeriesInstanceUID) {\n      filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(\n        displaySet => {\n          const referencedDisplaySet = StudyMetadata.getReferencedDisplaySet(\n            displaySet,\n            [this]\n          );\n          if (referencedDisplaySet) {\n            return (\n              referencedDisplaySet.SeriesInstanceUID ===\n              referencedSeriesInstanceUID\n            );\n          } else {\n            return false;\n          }\n        }\n      );\n    }\n\n    if (referencedFrameOfReferenceUID) {\n      filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(\n        displaySet =>\n          displaySet.FrameOfReferenceUID === referencedFrameOfReferenceUID\n      );\n    }\n\n    return filteredDerivedDisplaySets;\n  }\n\n  /**\n   * Creates a set of displaySets to be placed in the Study Metadata\n   * The displaySets that appear in the Study Metadata must represent\n   * imaging modalities. A series may be split into one or more displaySets.\n   *\n   * Furthermore, for drag/drop functionality,\n   * it is easiest if the stack objects also contain information about\n   * which study they are linked to.\n   *\n   * @param {StudyMetadata} study The study instance metadata to be used\n   * @returns {Array} An array of series to be placed in the Study Metadata\n   */\n  createDisplaySets(sopClassHandlerModules) {\n    const displaySets = [];\n    const anyDisplaySets = this.getSeriesCount();\n\n    if (!anyDisplaySets) {\n      return displaySets;\n    }\n\n    // Loop through the series (SeriesMetadata)\n    this.forEachSeries(series => {\n      const displaySetsForSeries = this._createDisplaySetsForSeries(\n        sopClassHandlerModules,\n        series\n      );\n\n      displaySetsForSeries.forEach(ds => this._insertDisplaySet(ds));\n    });\n\n    return this._displaySets;\n  }\n\n  /**\n   * Method to append display sets from a given series to the internal list of display sets\n   * @param {Array} sopClassHandlerModules A list of SOP Class Handler Modules\n   * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\n   * @returns {boolean} Returns true on success or false on failure (e.g., the series does not belong to this study)\n   */\n  createAndAddDisplaySetsForSeries(sopClassHandlerModules, series) {\n    if (!this.containsSeries(series)) {\n      return false;\n    }\n\n    const displaySets = this._createDisplaySetsForSeries(\n      sopClassHandlerModules,\n      series\n    );\n\n    // Note: filtering in place because this._displaySets has writable: false\n    for (let i = this._displaySets.length - 1; i >= 0; i--) {\n      const displaySet = this._displaySets[i];\n      if (displaySet.SeriesInstanceUID === series.getSeriesInstanceUID()) {\n        this._displaySets.splice(i, 1);\n      }\n    }\n\n    displaySets.forEach(displaySet => {\n      this.addDisplaySet(displaySet);\n    });\n\n    return true;\n  }\n\n  /**\n   * Add a single display set to the list\n   * @param {Object} displaySet Display set object\n   * @returns {boolean} True on success, false on failure.\n   */\n  addDisplaySet(displaySet) {\n    if (displaySet instanceof ImageSet || displaySet.sopClassModule) {\n      this._insertDisplaySet(displaySet);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Invokes the supplied callback for each display set in the current study passing\n   * two arguments: display set (a ImageSet instance) and index (the integer\n   * index of the display set within the current study)\n   * @param {function} callback The callback function which will be invoked for each display set instance.\n   * @returns {undefined} Nothing is returned.\n   */\n  forEachDisplaySet(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      this._displaySets.forEach((displaySet, index) => {\n        callback.call(null, displaySet, index);\n      });\n    }\n  }\n\n  /**\n   * Insert the displaySet so that the list has an increasing SeriesNumber,\n   * with the most recent series first for displaySets with the same SeriesNumber.\n   *\n   * If the displaySet is low priority, the same logic is applied, but is sorted within a sub list\n   * At the end of the list, where all low priority data is found.\n   */\n  _insertDisplaySet(displaySet) {\n    const { SeriesNumber } = displaySet;\n    const displaySets = this._displaySets;\n    let insertIndex = displaySets.length;\n    let firstIndexWithSameSeriesNumber;\n\n    // If low priority, start search from next low priority.\n    if (isLowPriorityModality(displaySet.Modality)) {\n      let startingIndex;\n\n      // Find where the first low priority displaySet is.\n      for (let i = 0; i < displaySets.length; i++) {\n        if (isLowPriorityModality(displaySets[i].Modality)) {\n          startingIndex = i;\n          break;\n        }\n      }\n\n      if (!startingIndex) {\n        startingIndex = displaySets.length;\n      }\n\n      // Find the correct SeriesNumber location to insert within the low priority\n      // Modality displaySets\n      for (let i = startingIndex; i < displaySets.length; i++) {\n        if (\n          displaySets[i].SeriesNumber === SeriesNumber &&\n          !firstIndexWithSameSeriesNumber\n        ) {\n          firstIndexWithSameSeriesNumber = i;\n        }\n\n        if (displaySets[i].SeriesNumber > SeriesNumber) {\n          insertIndex = i;\n          break;\n        }\n      }\n    } else {\n      // Find correct SeriesNumber to insert or where the low priority modalities start.\n      for (let i = 0; i < displaySets.length; i++) {\n        if (\n          displaySets[i].SeriesNumber === SeriesNumber &&\n          !firstIndexWithSameSeriesNumber\n        ) {\n          firstIndexWithSameSeriesNumber = i;\n        }\n\n        if (\n          displaySets[i].SeriesNumber > SeriesNumber ||\n          isLowPriorityModality(displaySets[i].Modality)\n        ) {\n          insertIndex = i;\n          break;\n        }\n      }\n    }\n\n    // If we have multiple displaySets with the same series number, find the insert position based on\n    // SeriesDate and SeriesTime.\n    if (firstIndexWithSameSeriesNumber !== undefined) {\n      // If no SeriesDate, is just a placeholder displaySet, just insert anywhere, it will be re-added later.\n      if (displaySet.SeriesDate) {\n        const seriesDateTime = `${displaySet.SeriesDate}${displaySet.SeriesTime}`;\n\n        for (let i = firstIndexWithSameSeriesNumber; i < insertIndex; i++) {\n          const displaySetI = displaySets[i];\n\n          if (\n            displaySetI.SeriesDate &&\n            `${displaySetI.SeriesDate}${displaySetI.SeriesTime}` <\n              seriesDateTime\n          ) {\n            insertIndex = i;\n            break;\n          }\n        }\n      }\n    }\n\n    if (\n      this._displaySets.some(\n        ds => ds.displaySetInstanceUID === displaySet.displaySetInstanceUID\n      )\n    ) {\n      return;\n    }\n\n    this._displaySets.splice(insertIndex, 0, displaySet);\n    this.displaySets = this._displaySets;\n  }\n\n  /**\n   * Search the associated display sets using the supplied callback as criteria. The callback is passed\n   * two arguments: display set (an ImageSet instance) and index (the integer\n   * index of the display set within the current study)\n   * @param {function} callback The callback function which will be invoked for each display set instance.\n   * @returns {undefined} Nothing is returned.\n   */\n  findDisplaySet(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      return this._displaySets.find((displaySet, index) => {\n        return callback.call(null, displaySet, index);\n      });\n    }\n  }\n\n  /**\n   * Retrieve the number of display sets within the current study.\n   * @returns {number} The number of display sets in the current study.\n   */\n  getDisplaySetCount() {\n    return this._displaySets.length;\n  }\n\n  /**\n   * Returns the StudyInstanceUID of the current study.\n   */\n  getStudyInstanceUID() {\n    return this._studyInstanceUID;\n  }\n\n  /**\n   * Getter for series\n   * @return {Array} Array of SeriesMetadata object\n   */\n  getSeries() {\n    return this._series.slice();\n  }\n\n  /**\n   * Append a series to the current study.\n   * @param {SeriesMetadata} series The series to be added to the current study.\n   * @returns {boolean} Returns true on success, false otherwise.\n   */\n  addSeries(series) {\n    let result = false;\n    if (\n      series instanceof SeriesMetadata &&\n      this.getSeriesByUID(series.getSeriesInstanceUID()) === void 0\n    ) {\n      this._series.push(series);\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Update a series in the current study by SeriesInstanceUID.\n   * @param {String} SeriesInstanceUID The SeriesInstanceUID to be updated\n   * @param {SeriesMetadata} series The series to be added to the current study.\n   * @returns {boolean} Returns true on success, false otherwise.\n   */\n  updateSeries(SeriesInstanceUID, series) {\n    const index = this._series.findIndex(series => {\n      return series.getSeriesInstanceUID() === SeriesInstanceUID;\n    });\n\n    if (index < 0) {\n      return false;\n    }\n\n    if (!(series instanceof SeriesMetadata)) {\n      throw new Error('Series must be an instance of SeriesMetadata');\n    }\n\n    this._series[index] = series;\n\n    return true;\n  }\n\n  /**\n   * Find a series by index.\n   * @param {number} index An integer representing a list index.\n   * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.\n   */\n  getSeriesByIndex(index) {\n    let found; // undefined by default...\n    if (Metadata.isValidIndex(index)) {\n      found = this._series[index];\n    }\n    return found;\n  }\n\n  /**\n   * Find a series by SeriesInstanceUID.\n   * @param {string} uid An UID string.\n   * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.\n   */\n  getSeriesByUID(uid) {\n    let found; // undefined by default...\n    if (Metadata.isValidUID(uid)) {\n      found = this._series.find(series => {\n        return series.getSeriesInstanceUID() === uid;\n      });\n    }\n    return found;\n  }\n\n  containsSeries(series) {\n    return (\n      series instanceof SeriesMetadata && this._series.indexOf(series) >= 0\n    );\n  }\n\n  /**\n   * Retrieve the number of series within the current study.\n   * @returns {number} The number of series in the current study.\n   */\n  getSeriesCount() {\n    return this._series.length;\n  }\n\n  /**\n   * Retrieve the number of instances within the current study.\n   * @returns {number} The number of instances in the current study.\n   */\n  getInstanceCount() {\n    return this._series.reduce((sum, series) => {\n      return sum + series.getInstanceCount();\n    }, 0);\n  }\n\n  /**\n   * Invokes the supplied callback for each series in the current study passing\n   * two arguments: series (a SeriesMetadata instance) and index (the integer\n   * index of the series within the current study)\n   * @param {function} callback The callback function which will be invoked for each series instance.\n   * @returns {undefined} Nothing is returned.\n   */\n  forEachSeries(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      this._series.forEach((series, index) => {\n        callback.call(null, series, index);\n      });\n    }\n  }\n\n  /**\n   * Find the index of a series inside the study.\n   * @param {SeriesMetadata} series An instance of the SeriesMetadata class.\n   * @returns {number} The index of the series inside the study or -1 if not found.\n   */\n  indexOfSeries(series) {\n    return this._series.indexOf(series);\n  }\n\n  /**\n   * Compares the current study instance with another one.\n   * @param {StudyMetadata} study An instance of the StudyMetadata class.\n   * @returns {boolean} Returns true if both instances refer to the same study.\n   */\n  equals(study) {\n    const self = this;\n    return (\n      study === self ||\n      (study instanceof StudyMetadata &&\n        study.getStudyInstanceUID() === self.getStudyInstanceUID())\n    );\n  }\n\n  /**\n   * Get the first series of the current study retaining a consistent result across multiple calls.\n   * @return {SeriesMetadata} An instance of the SeriesMetadata class or null if it does not exist.\n   */\n  getFirstSeries() {\n    let series = this._firstSeries;\n    if (!(series instanceof SeriesMetadata)) {\n      series = null;\n      const found = this.getSeriesByIndex(0);\n      if (found instanceof SeriesMetadata) {\n        this._firstSeries = found;\n        series = found;\n      }\n    }\n    return series;\n  }\n\n  /**\n   * Get the first image id given display instance uid.\n   * @return {string} The image id.\n   */\n  getFirstImageId(displaySetInstanceUID) {\n    try {\n      const displaySet = this.findDisplaySet(\n        displaySet => displaySet.displaySetInstanceUID === displaySetInstanceUID\n      );\n      return displaySet.images[0].getImageId();\n    } catch (error) {\n      console.error('Failed to retrieve image metadata');\n      return null;\n    }\n  }\n\n  /**\n   * Get the first instance of the current study retaining a consistent result across multiple calls.\n   * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.\n   */\n  getFirstInstance() {\n    let instance = this._firstInstance;\n    if (!(instance instanceof InstanceMetadata)) {\n      instance = null;\n      const firstSeries = this.getFirstSeries();\n      if (firstSeries instanceof SeriesMetadata) {\n        const found = firstSeries.getFirstInstance();\n        if (found instanceof InstanceMetadata) {\n          this._firstInstance = found;\n          instance = found;\n        }\n      }\n    }\n    return instance;\n  }\n\n  /**\n   * Search the associated series to find an specific instance using the supplied callback as criteria.\n   * The callback is passed two arguments: instance (a InstanceMetadata instance) and index (the integer\n   * index of the instance within the current series)\n   * @param {function} callback The callback function which will be invoked for each instance instance.\n   * @returns {Object} Result object containing series (SeriesMetadata) and instance (InstanceMetadata)\n   *                   objects or an empty object if not found.\n   */\n  findSeriesAndInstanceByInstance(callback) {\n    let result;\n\n    if (Metadata.isValidCallback(callback)) {\n      let instance;\n\n      const series = this._series.find(series => {\n        instance = series.findInstance(callback);\n        return instance instanceof InstanceMetadata;\n      });\n\n      // No series found\n      if (series instanceof SeriesMetadata) {\n        result = {\n          series,\n          instance,\n        };\n      }\n    }\n\n    return result || {};\n  }\n\n  /**\n   * Find series by instance using the supplied callback as criteria. The callback is passed\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer index of\n   * the instance within its series)\n   * @param {function} callback The callback function which will be invoked for each instance.\n   * @returns {SeriesMetadata|undefined} If a series is found based on callback criteria it\n   *                                     returns a SeriesMetadata. \"undefined\" is returned otherwise\n   */\n  findSeriesByInstance(callback) {\n    const result = this.findSeriesAndInstanceByInstance(callback);\n\n    return result.series;\n  }\n\n  /**\n   * Find an instance using the supplied callback as criteria. The callback is passed\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer index of\n   * the instance within its series)\n   * @param {function} callback The callback function which will be invoked for each instance.\n   * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it\n   *                                     returns a InstanceMetadata. \"undefined\" is returned otherwise\n   */\n  findInstance(callback) {\n    const result = this.findSeriesAndInstanceByInstance(callback);\n\n    return result.instance;\n  }\n}\n\n/**\n *\n * @typedef StudyMetadata\n * @property {function} getSeriesCount - returns the number of series in the study\n * @property {function} forEachSeries - function that invokes callback with each series and index\n * @property {function} getStudyInstanceUID - returns the study's instance UID\n *\n */\n\n/**\n * @typedef SeriesMetadata\n * @property {function} getSeriesInstanceUID - returns the series's instance UID\n * @property {function} getData - ???\n * @property {function} forEachInstance - ???\n */\n\nconst dwc = api.DICOMwebClient;\n\nconst isMultiFrame = instance => {\n  return instance.getTagValue('NumberOfFrames') > 1;\n};\n\n/**\n * Creates a display set for a series.\n * Checks if a series is reconstructable to a 3D volume.\n * If reconstructable, the frames are sorted.\n *\n * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\n * @param {Object[]} instances An array of `OHIFInstanceMetadata` objects.\n *\n * @returns {Object} imageSet.\n */\nconst makeDisplaySet = (series, instances) => {\n  const instance = instances[0];\n  const imageSet = new ImageSet(instances);\n  const seriesData = series.getData();\n\n  // set appropriate attributes to image set...\n  imageSet.setAttributes({\n    displaySetInstanceUID: imageSet.uid, // create a local alias for the imageSet UID\n    SeriesDate: seriesData.SeriesDate,\n    SeriesTime: seriesData.SeriesTime,\n    SeriesInstanceUID: series.getSeriesInstanceUID(),\n    SeriesNumber: instance.getTagValue('SeriesNumber'),\n    SeriesDescription: instance.getTagValue('SeriesDescription'),\n    numImageFrames: instances.length,\n    frameRate: instance.getTagValue('FrameTime'),\n    Modality: instance.getTagValue('Modality'),\n    isMultiFrame: isMultiFrame(instance),\n  });\n\n  // Sort the images in this series by instanceNumber\n  const shallSort = true; //!OHIF.utils.ObjectPath.get(Meteor, 'settings.public.ui.sortSeriesByIncomingOrder');\n  if (shallSort) {\n    imageSet.sortBy((a, b) => {\n      // Sort by InstanceNumber (0020,0013)\n      return (\n        (parseInt(a.getTagValue('InstanceNumber', 0)) || 0) -\n        (parseInt(b.getTagValue('InstanceNumber', 0)) || 0)\n      );\n    });\n  }\n\n  // Include the first image instance number (after sorted)\n  imageSet.setAttribute(\n    'InstanceNumber',\n    imageSet.getImage(0).getTagValue('InstanceNumber')\n  );\n\n  const displayReconstructableInfo = isDisplaySetReconstructable(instances);\n  imageSet.isReconstructable = displayReconstructableInfo.value;\n\n  let displaySpacingInfo = undefined;\n  if (shallSort && imageSet.isReconstructable) {\n    // sort images by image position\n    imageSet.sortByImagePositionPatient();\n\n    // check if the spacing is uniform and update isReconstructable\n    const datasetIs4D = displayReconstructableInfo.reconstructionIssues.find(\n      issue => issue === ReconstructionIssues.DATASET_4D\n    );\n    displaySpacingInfo = isSpacingUniform(imageSet.images, datasetIs4D);\n    imageSet.isReconstructable = displaySpacingInfo.isUniform;\n\n    if (displaySpacingInfo.missingFrames) {\n      // TODO -> This is currently unused, but may be used for reconstructing\n      // Volumes with gaps later on.\n      imageSet.missingFrames = displaySpacingInfo.missingFrames;\n    }\n  }\n\n  if (!imageSet.displayReconstructableInfo) {\n    // It is not reconstrabale Save type of warning\n    imageSet.reconstructionIssues = displaySpacingInfo\n      ? displayReconstructableInfo.reconstructionIssues.concat(\n          displaySpacingInfo.reconstructionIssues\n        )\n      : displayReconstructableInfo.reconstructionIssues;\n  }\n\n  imageSet.isSOPClassUIDSupported = true;\n\n  return imageSet;\n};\n\nconst isSingleImageModality = Modality => {\n  return Modality === 'CR' || Modality === 'MG' || Modality === 'DX';\n};\n\nfunction getSopClassUIDs(series) {\n  const uniqueSopClassUIDsInSeries = new Set();\n  series.forEachInstance(instance => {\n    const instanceSopClassUID = instance.getTagValue('SOPClassUID');\n\n    uniqueSopClassUIDsInSeries.add(instanceSopClassUID);\n  });\n  const sopClassUIDs = Array.from(uniqueSopClassUIDsInSeries);\n\n  return sopClassUIDs;\n}\n\n/**\n * @private\n * @param {SeriesMetadata} series\n * @param {StudyMetadata} study\n * @param {string[]} sopClassUIDs\n */\nfunction _getDisplaySetFromSopClassModule(\n  sopClassHandlerExtensions, // TODO: Update Usage\n  series,\n  study,\n  sopClassUIDs\n) {\n  // TODO: For now only use the plugins if all instances have the same SOPClassUID\n  if (sopClassUIDs.length !== 1) {\n    console.warn(\n      'getDisplaySetFromSopClassPlugin: More than one SOPClassUID in the same series is not yet supported.'\n    );\n    return;\n  }\n\n  const SOPClassUID = sopClassUIDs[0];\n  const sopClassHandlerModules = sopClassHandlerExtensions.map(extension => {\n    return extension.module;\n  });\n\n  const handlersForSopClassUID = sopClassHandlerModules.filter(module => {\n    return module.sopClassUIDs.includes(SOPClassUID);\n  });\n\n  // TODO: Sort by something, so we can determine which plugin to use\n  if (!handlersForSopClassUID || !handlersForSopClassUID.length) {\n    return;\n  }\n\n  const plugin = handlersForSopClassUID[0];\n  const headers = DICOMWeb.getAuthorizationHeader();\n  const errorInterceptor = errorHandler.getHTTPErrorHandler();\n  const dicomWebClient = new dwc({\n    url: study.getData().wadoRoot,\n    headers,\n    errorInterceptor,\n    requestHooks: [getXHRRetryRequestHook()],\n  });\n\n  let displaySet = plugin.getDisplaySetFromSeries(\n    series,\n    study,\n    dicomWebClient,\n    headers\n  );\n  if (displaySet && !displaySet.Modality) {\n    const instance = series.getFirstInstance();\n    displaySet.Modality = instance.getTagValue('Modality');\n  }\n  return displaySet;\n}\n\n/**\n * Returns the referenced series instance UIDs by searching the information in the\n * ReferencedSeriesSequence.\n * @param {object} derivatedDisplaySet.metadata\n * @return {array[string]} referenced series instance UIDs.\n */\nfunction _findReferencedSeriesInstanceUIDsFromReferencedSeriesSequence(\n  metadata\n) {\n  if (!metadata.ReferencedSeriesSequence) {\n    return;\n  }\n\n  let referencedSeriesInstanceUIDs;\n  const ReferencedSeriesSequence = _toArray(metadata.ReferencedSeriesSequence);\n\n  referencedSeriesInstanceUIDs = ReferencedSeriesSequence.map(\n    ReferencedSeries => ReferencedSeries.SeriesInstanceUID\n  );\n\n  return referencedSeriesInstanceUIDs;\n}\n\n/**\n * Returns the referenced series instance UIDs by searching the information in the\n * ReferencedImageSequence.\n * @param {object} derivatedDisplaySet.metadata\n * @param {array[object]} displaysets\n * @return {array[string]} referenced series instance UIDs.\n */\nfunction _findReferencedSeriesInstanceUIDsFromReferencedImageSequence(\n  metadata,\n  displaySets\n) {\n  if (!metadata.ReferencedImageSequence) {\n    return;\n  }\n\n  let referencedSeriesInstanceUIDs;\n  const referencedImageArray = _toArray(metadata.ReferencedImageSequence);\n  for (let i = 0; i < referencedImageArray.length; i++) {\n    const { ReferencedSOPInstanceUID } = referencedImageArray[i];\n    if (!ReferencedSOPInstanceUID) {\n      continue;\n    }\n\n    referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromSOPInstanceUID(\n      displaySets,\n      ReferencedSOPInstanceUID\n    );\n\n    if (\n      referencedSeriesInstanceUIDs &&\n      referencedSeriesInstanceUIDs.length !== 0\n    ) {\n      break;\n    }\n  }\n\n  return referencedSeriesInstanceUIDs;\n}\n\n/**\n * Returns the referenced series instance UIDs by searching the information in the\n * SourceImageSequence.\n * @param {object} derivatedDisplaySet.metadata\n * @param {array[object]} displaysets\n * @return {array[string]} referenced series instance UIDs.\n */\nfunction _findReferencedSeriesInstanceUIDsFromSourceImageSequence(\n  metadata,\n  displaySets\n) {\n  let SourceImageSequence;\n\n  if (metadata.SourceImageSequence) {\n    SourceImageSequence = metadata.SourceImageSequence;\n  } else {\n    const { PerFrameFunctionalGroupsSequence } = metadata;\n    const firstFunctionalGroups = _toArray(PerFrameFunctionalGroupsSequence)[0];\n    if (firstFunctionalGroups) {\n      const { DerivationImageSequence } = firstFunctionalGroups;\n      SourceImageSequence = DerivationImageSequence;\n    }\n  }\n\n  if (!SourceImageSequence) {\n    return;\n  }\n\n  const sourceImageArray = _toArray(SourceImageSequence);\n\n  let referencedSeriesInstanceUIDs;\n  for (let i = 0; i < sourceImageArray.length; i++) {\n    const { ReferencedSOPInstanceUID } = sourceImageArray[i];\n    referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromSOPInstanceUID(\n      displaySets,\n      ReferencedSOPInstanceUID\n    );\n    if (\n      referencedSeriesInstanceUIDs &&\n      referencedSeriesInstanceUIDs.length !== 0\n    ) {\n      break;\n    }\n  }\n\n  return referencedSeriesInstanceUIDs;\n}\n\n/**\n * Returns the referenced series instance UIDs by searching the information in the\n * SOPInstanceUID of the displaySets.\n * @param {array[object]} displaysets\n * @param {string} SOPInstanceUID\n * @return {array[string]} referenced series instance UIDs.\n */\nfunction _findReferencedSeriesInstanceUIDsFromSOPInstanceUID(\n  displaySets,\n  SOPInstanceUID\n) {\n  const imageSets = displaySets.filter(ds => ds instanceof ImageSet);\n\n  for (let i = 0; i < imageSets.length; i++) {\n    const { images } = imageSets[i];\n    if (!images) {\n      continue;\n    }\n    for (let j = 0; j < images.length; j++) {\n      const image = images[j];\n      if (!image) {\n        continue;\n      }\n      if (image.SOPInstanceUID === SOPInstanceUID) {\n        return [image.getData().metadata.SeriesInstanceUID];\n      }\n    }\n  }\n}\n\nfunction _toArray(arrayOrObject) {\n  return Array.isArray(arrayOrObject) ? arrayOrObject : [arrayOrObject];\n}\n\nexport { StudyMetadata };\n","import { sopClassDictionary } from './sopClassDictionary';\nimport { isImage } from './isImage';\n\n/**\n * Naturalize SOP Class UID which do not have image data\n * @param {string} SOPClassUID - SOP Class UID to be converted\n * @returns {string} - human readable name\n */\nexport const naturalizeSOPClassUID = SOPClassUID => {\n  let naturalizedName = '';\n  if (!SOPClassUID) return naturalizedName;\n  if (!isImage) return naturalizedName;\n\n  if (sopClassDictionary.MRSpectroscopyStorage === SOPClassUID) {\n    naturalizedName = 'MRSpectroscopy';\n  } else if (sopClassDictionary.EnhancedUSVolumeStorage === SOPClassUID) {\n    naturalizedName = 'EnhancedUSVolume';\n  } else if (sopClassDictionary.Sop12LeadECGWaveformStorage === SOPClassUID) {\n    naturalizedName = 'Sop12LeadECGWaveform';\n  } else if (sopClassDictionary.GeneralECGWaveformStorage === SOPClassUID) {\n    naturalizedName = 'GeneralECGWaveform';\n  } else if (sopClassDictionary.AmbulatoryECGWaveformStorage === SOPClassUID) {\n    naturalizedName = 'AECAmbulatoryECGWaveformGW';\n  } else if (sopClassDictionary.HemodynamicWaveformStorage === SOPClassUID) {\n    naturalizedName = 'HemodynamicWaveform';\n  } else if (\n    sopClassDictionary.CardiacElectrophysiologyWaveformStorage === SOPClassUID\n  ) {\n    naturalizedName = 'CardiacElectrophysiologyWaveform';\n  } else if (\n    sopClassDictionary.BasicVoiceAudioWaveformStorage === SOPClassUID\n  ) {\n    naturalizedName = 'BasicVoiceAudioWaveform';\n  } else if (sopClassDictionary.GeneralAudioWaveformStorage === SOPClassUID) {\n    naturalizedName = 'GGeneralAudioWaveformAW';\n  } else if (sopClassDictionary.ArterialPulseWaveformStorage === SOPClassUID) {\n    naturalizedName = 'APArterialPulseWaveformW';\n  } else if (sopClassDictionary.RespiratoryWaveformStorage === SOPClassUID) {\n    naturalizedName = 'RespiratoryWaveform';\n  } else if (\n    sopClassDictionary.GrayscaleSoftcopyPresentationStateStorage === SOPClassUID\n  ) {\n    naturalizedName = 'GrayscaleSoftcopyPresentationState';\n  } else if (\n    sopClassDictionary.ColorSoftcopyPresentationStateStorage === SOPClassUID\n  ) {\n    naturalizedName = 'ColorSoftcopyPresentationState';\n  } else if (\n    sopClassDictionary.PseudoColorSoftcopyPresentationStateStorage ===\n    SOPClassUID\n  ) {\n    naturalizedName = 'PseudoColorSoftcopyPresentationState';\n  } else if (\n    sopClassDictionary.BlendingSoftcopyPresentationStateStorage === SOPClassUID\n  ) {\n    naturalizedName = 'BlendingSoftcopyPresentationState';\n  } else if (\n    sopClassDictionary.XAXRFGrayscaleSoftcopyPresentationStateStorage ===\n    SOPClassUID\n  ) {\n    naturalizedName = 'XAXRFGrayscaleSoftcopyPresentationState';\n  } else if (sopClassDictionary.RawDataStorage === SOPClassUID) {\n    naturalizedName = 'RawData';\n  } else if (sopClassDictionary.SpatialRegistrationStorage === SOPClassUID) {\n    naturalizedName = 'SpatialRegistration';\n  } else if (sopClassDictionary.SpatialFiducialsStorage === SOPClassUID) {\n    naturalizedName = 'SpatialFiducials';\n  } else if (\n    sopClassDictionary.DeformableSpatialRegistrationStorage === SOPClassUID\n  ) {\n    naturalizedName = 'DeformableSpatialRegistration';\n  } else if (sopClassDictionary.SegmentationStorage === SOPClassUID) {\n    naturalizedName = 'SEG';\n  } else if (sopClassDictionary.SurfaceSegmentationStorage === SOPClassUID) {\n    naturalizedName = 'SurfaceSEG';\n  } else if (sopClassDictionary.RealWorldValueMappingStorage === SOPClassUID) {\n    naturalizedName = 'RealWorldValueMapping';\n  } else if (sopClassDictionary.SurfaceScanMeshStorage === SOPClassUID) {\n    naturalizedName = 'SurfaceScanMesh';\n  } else if (sopClassDictionary.SurfaceScanPointCloudStorage === SOPClassUID) {\n    naturalizedName = 'SurfaceScanPointCloud';\n  } else if (\n    sopClassDictionary.StereometricRelationshipStorage === SOPClassUID\n  ) {\n    naturalizedName = 'StereometricRelationship';\n  } else if (sopClassDictionary.LensometryMeasurementsStorage === SOPClassUID) {\n    naturalizedName = 'LensometryMeasurements';\n  } else if (\n    sopClassDictionary.AutorefractionMeasurementsStorage === SOPClassUID\n  ) {\n    naturalizedName = 'AutorefractionMeasurements';\n  } else if (\n    sopClassDictionary.KeratometryMeasurementsStorage === SOPClassUID\n  ) {\n    naturalizedName = 'KeratometryMeasurements';\n  } else if (\n    sopClassDictionary.SubjectiveRefractionMeasurementsStorage === SOPClassUID\n  ) {\n    naturalizedName = 'SubjectiveRefractionMeasurements';\n  } else if (\n    sopClassDictionary.VisualAcuityMeasurementsStorage === SOPClassUID\n  ) {\n    naturalizedName = 'VisualAcuityMeasurements';\n  } else if (\n    sopClassDictionary.SpectaclePrescriptionReportStorage === SOPClassUID\n  ) {\n    naturalizedName = 'SpectaclePrescriptionReport';\n  } else if (\n    sopClassDictionary.OphthalmicAxialMeasurementsStorage === SOPClassUID\n  ) {\n    naturalizedName = 'OphthalmicAxialMeasurements';\n  } else if (\n    sopClassDictionary.IntraocularLensCalculationsStorage === SOPClassUID\n  ) {\n    naturalizedName = 'IntraocularLensCalculations';\n  } else if (\n    sopClassDictionary.MacularGridThicknessandVolumeReport === SOPClassUID\n  ) {\n    naturalizedName = 'MacularGridThicknessandVolume';\n  } else if (\n    sopClassDictionary.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage ===\n    SOPClassUID\n  ) {\n    naturalizedName = 'OphthalmicVisualFieldStaticPerimetryMeasurements';\n  } else if (sopClassDictionary.OphthalmicThicknessMapStorage === SOPClassUID) {\n    naturalizedName = 'OphthalmicThicknessMap';\n  } else if (sopClassDictionary.CornealTopographyMapStorage === SOPClassUID) {\n    naturalizedName = 'CornealTopographyMap';\n  } else if (sopClassDictionary.BasicTextSR === SOPClassUID) {\n    naturalizedName = 'BasicTextSR';\n  } else if (sopClassDictionary.EnhancedSR === SOPClassUID) {\n    naturalizedName = 'EnhancedSR';\n  } else if (sopClassDictionary.ComprehensiveSR === SOPClassUID) {\n    naturalizedName = 'ComprehensiveSR';\n  } else if (sopClassDictionary.Comprehensive3DSR === SOPClassUID) {\n    naturalizedName = 'Comprehensive3DSR';\n  } else if (sopClassDictionary.ProcedureLog === SOPClassUID) {\n    naturalizedName = 'ProcedureLog';\n  } else if (sopClassDictionary.MammographyCADSR === SOPClassUID) {\n    naturalizedName = 'MammographyCADSR';\n  } else if (sopClassDictionary.KeyObjectSelection === SOPClassUID) {\n    naturalizedName = 'KeyObject';\n  } else if (sopClassDictionary.ChestCADSR === SOPClassUID) {\n    naturalizedName = 'ChestCADSR';\n  } else if (sopClassDictionary.XRayRadiationDoseSR === SOPClassUID) {\n    naturalizedName = 'XRayRadiationDoseSR';\n  } else if (\n    sopClassDictionary.RadiopharmaceuticalRadiationDoseSR === SOPClassUID\n  ) {\n    naturalizedName = 'RadiopharmaceuticalRadiationDoseSR';\n  } else if (sopClassDictionary.ColonCADSR === SOPClassUID) {\n    naturalizedName = 'ColonCADSR';\n  } else if (\n    sopClassDictionary.ImplantationPlanSRDocumentStorage === SOPClassUID\n  ) {\n    naturalizedName = 'ImplantationPlanSRDocument';\n  } else if (sopClassDictionary.EncapsulatedPDFStorage === SOPClassUID) {\n    naturalizedName = 'EncapsulatedPDF';\n  } else if (sopClassDictionary.EncapsulatedCDAStorage === SOPClassUID) {\n    naturalizedName = 'EncapsulatedCDA';\n  } else if (sopClassDictionary.BasicStructuredDisplayStorage === SOPClassUID) {\n    naturalizedName = 'BasicStructuredDisplay';\n  } else if (sopClassDictionary.RTDoseStorage === SOPClassUID) {\n    naturalizedName = 'RTDose';\n  } else if (sopClassDictionary.RTStructureSetStorage === SOPClassUID) {\n    naturalizedName = 'RTStructureSet';\n  } else if (sopClassDictionary.RTBeamsTreatmentRecordStorage === SOPClassUID) {\n    naturalizedName = 'RTBeamsTreatmentRecord';\n  } else if (sopClassDictionary.RTPlanStorage === SOPClassUID) {\n    naturalizedName = 'RTPlan';\n  } else if (\n    sopClassDictionary.RTBrachyTreatmentRecordStorage === SOPClassUID\n  ) {\n    naturalizedName = 'RTBrachyTreatmentRecord';\n  } else if (\n    sopClassDictionary.RTTreatmentSummaryRecordStorage === SOPClassUID\n  ) {\n    naturalizedName = 'RTTreatmentSummaryRecord';\n  } else if (sopClassDictionary.RTIonPlanStorage === SOPClassUID) {\n    naturalizedName = 'RTIonPlan';\n  } else if (\n    sopClassDictionary.RTIonBeamsTreatmentRecordStorage === SOPClassUID\n  ) {\n    naturalizedName = 'RTIonBeamsTreatmentRecord';\n  } else if (\n    sopClassDictionary.RTBeamsDeliveryInstructionStorage === SOPClassUID\n  ) {\n    naturalizedName = 'RTBeamsDeliveryInstruction';\n  } else if (sopClassDictionary.GenericImplantTemplateStorage === SOPClassUID) {\n    naturalizedName = 'GenericImplantTemplate';\n  } else if (\n    sopClassDictionary.ImplantAssemblyTemplateStorage === SOPClassUID\n  ) {\n    naturalizedName = 'ImplantAssemblyTemplate';\n  } else if (sopClassDictionary.ImplantTemplateGroupStorage === SOPClassUID) {\n    naturalizedName = 'ImplantTemplateGroup';\n  }\n\n  return naturalizedName;\n};\n","import cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\n\nconst { importInternal } = cornerstoneTools;\nconst draw = importInternal('drawing/draw');\nconst drawLine = importInternal('drawing/drawLine');\nconst getNewContext = importInternal('drawing/getNewContext');\n\nexport default function _drawCanvasCrosshairs(eventData, center, options) {\n  const context = getNewContext(eventData.canvasContext.canvas);\n  const { element } = eventData;\n\n  const centerCanvas = cornerstone.pixelToCanvas(element, center);\n\n  const { clientWidth: width, clientHeight: height } = element;\n\n  const offset = 10;\n\n  draw(context, context => {\n    drawLine(\n      context,\n      element,\n      { x: centerCanvas.x + offset, y: centerCanvas.y },\n      { x: width, y: centerCanvas.y },\n      options,\n      'canvas'\n    );\n\n    drawLine(\n      context,\n      element,\n      { x: centerCanvas.x - offset, y: centerCanvas.y },\n      { x: 0, y: centerCanvas.y },\n      options,\n      'canvas'\n    );\n\n    drawLine(\n      context,\n      element,\n      { x: centerCanvas.x, y: centerCanvas.y + offset },\n      { x: centerCanvas.x, y: height },\n      options,\n      'canvas'\n    );\n\n    drawLine(\n      context,\n      element,\n      { x: centerCanvas.x, y: centerCanvas.y - offset },\n      { x: centerCanvas.x, y: 0 },\n      options,\n      'canvas'\n    );\n  });\n}\n","import cornerstoneTools, {\n  importInternal,\n  getToolState,\n  toolColors,\n  getModule,\n  globalImageIdSpecificToolStateManager,\n} from 'cornerstone-tools';\nimport cornerstone from 'cornerstone-core';\nimport drawCanvasCrosshairs from '../utils/drawCanvasCrosshairs';\nimport TOOL_NAMES from './TOOL_NAMES';\n\nconst { DICOM_SEG_TEMP_CROSSHAIRS_TOOL } = TOOL_NAMES;\nconst { getters } = getModule('segmentation');\n\n// Cornerstone 3rd party dev kit imports\nconst BaseTool = importInternal('base/BaseTool');\n\n/**\n * @class RTStructDisplayTool - Renders RTSTRUCT data in a read only manner (i.e. as an overlay).\n * @extends cornerstoneTools.BaseTool\n */\nexport default class DICOMSegTempCrosshairsTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      mixins: ['enabledOrDisabledBinaryTool'],\n      name: DICOM_SEG_TEMP_CROSSHAIRS_TOOL,\n    };\n\n    const initialProps = Object.assign(defaultProps, props);\n\n    super(initialProps);\n\n    this._rtStructModule = cornerstoneTools.getModule('rtstruct');\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const { element } = eventData;\n    const toolState = getToolState(evt.currentTarget, this.name);\n\n    if (!toolState) {\n      return;\n    }\n\n    // We have tool data for this element - iterate over each one and draw it\n\n    for (let i = 0; i < toolState.data.length; i++) {\n      const data = toolState.data[i];\n      const crossHairCenter = data.center;\n\n      drawCanvasCrosshairs(eventData, crossHairCenter, {\n        color: toolColors.getActiveColor(),\n        lineWidth: 1,\n      });\n\n      // Remove the crosshairs, we only render them for one redraw.\n      toolState.data.pop();\n    }\n  }\n}\n\nDICOMSegTempCrosshairsTool.addCrosshair = (element, imageId, segmentNumber) => {\n  const labelmap3D = getters.labelmap3D(element);\n  const stackToolState = cornerstoneTools.getToolState(element, 'stack');\n  const enabledElement = cornerstone.getEnabledElement(element);\n\n  const { rows, columns } = enabledElement.image;\n\n  if (!stackToolState) {\n    return;\n  }\n\n  const imageIds = stackToolState.data[0].imageIds;\n  const imageIdIndex = imageIds.findIndex(imgId => imgId === imageId);\n\n  const labelmap2D = labelmap3D.labelmaps2D[imageIdIndex];\n  const { pixelData } = labelmap2D;\n\n  let xCenter = 0;\n  let yCenter = 0;\n\n  let count = 0;\n\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < columns; x++) {\n      if (pixelData[y * columns + x] === segmentNumber) {\n        count++;\n        xCenter += x + 0.5;\n        yCenter += y + 0.5;\n      }\n    }\n  }\n\n  xCenter /= count;\n  yCenter /= count;\n\n  const globalToolState = globalImageIdSpecificToolStateManager.saveToolState();\n\n  if (!globalToolState[imageId]) {\n    globalToolState[imageId] = {};\n  }\n\n  const imageIdSpecificToolState = globalToolState[imageId];\n\n  if (!imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL]) {\n    imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL] = { data: [] };\n  } else if (!imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL].data) {\n    imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL].data = [];\n  }\n\n  const toolSpecificData =\n    imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL].data;\n\n  toolSpecificData.push({ center: { x: xCenter, y: yCenter }, segmentNumber });\n\n  // Enable the tool if not enabled for the element.\n\n  const tool = cornerstoneTools.getToolForElement(\n    element,\n    DICOM_SEG_TEMP_CROSSHAIRS_TOOL\n  );\n\n  if (tool.mode !== 'enabled') {\n    // If not already active or passive, set passive so contours render.\n    cornerstoneTools.setToolEnabled(DICOM_SEG_TEMP_CROSSHAIRS_TOOL);\n  }\n};\n","const TOOL_NAMES = {\n  DICOM_SEG_TEMP_CROSSHAIRS_TOOL: 'DICOMSegTempCrosshairsTool',\n};\n\nexport default TOOL_NAMES;\n","/* TODO: Creation tools (future release).\n\nconst TOOLBAR_BUTTON_TYPES = {\n  COMMAND: 'command',\n  SET_TOOL_ACTIVE: 'setToolActive',\n  BUILT_IN: 'builtIn',\n};\n\n*/\n\nconst definitions = []; /* TODO: Creation tools (future release). [\n  {\n    id: 'SegDropdown',\n    label: 'Segmentation',\n    icon: 'ellipse-circle',\n    buttons: [\n      {\n        id: 'Brush',\n        label: 'Brush',\n        icon: 'brush',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'Brush' },\n      },\n      {\n        id: 'SphericalBrush',\n        label: 'Spherical',\n        icon: 'sphere',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'SphericalBrush' },\n      },\n      {\n        id: 'CorrectionScissors',\n        label: 'Correction Scissors',\n        icon: 'scissors',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'CorrectionScissors' },\n      },\n      {\n        id: 'BrushEraser',\n        label: 'Eraser',\n        icon: 'trash',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'BrushEraser' },\n      },\n    ],\n  },\n]; */\n\nexport default {\n  definitions,\n  defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\n};\n","import dcmjs from 'dcmjs';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\n\nexport default async function loadSegmentation(\n  imageIds,\n  segDisplaySet,\n  labelmapBuffer,\n  segMetadata,\n  segmentsOnFrame,\n  labelmapSegments\n) {\n  const { setters } = cornerstoneTools.getModule('segmentation');\n\n  // TODO: Could define a color LUT based on colors in the SEG.\n  const labelmapIndex = _getNextLabelmapIndex(imageIds[0]);\n  const colorLUTIndex = _makeColorLUTAndGetIndex(segMetadata);\n\n  setters.labelmap3DByFirstImageId(\n    imageIds[0],\n    labelmapBuffer,\n    labelmapIndex,\n    segMetadata,\n    imageIds.length,\n    segmentsOnFrame,\n    colorLUTIndex\n  );\n\n  if (!segDisplaySet.labelmapSegments) {\n    segDisplaySet.labelmapSegments = {};\n  }\n\n  /**\n   * Cache each labelmap segments.\n   * This data is used to determine the active label map when a given segment is activated/clicked.\n   */\n  segDisplaySet.labelmapSegments[labelmapIndex] = labelmapSegments.length\n    ? Array.from(\n        new Set(labelmapSegments.filter(a => !!a).reduce((a, b) => a.concat(b)))\n      )\n    : [];\n  segDisplaySet.labelmapIndex = labelmapIndex;\n\n  /*\n   * TODO: Improve the way we notify parts of the app that depends on segs to be loaded.\n   *\n   * Currently we are using a non-ideal implementation through a custom event to notify the segmentation panel\n   * or other components that could rely on loaded segmentations that\n   * the segments were loaded so that e.g. when the user opens the panel\n   * before the segments are fully loaded, the panel can subscribe to this custom event\n   * and update itself with the new segments.\n   *\n   * This limitation is due to the fact that the cs segmentation module is an object (which will be\n   * updated after the segments are loaded) that React its not aware of its changes\n   * because the module object its not passed in to the panel component as prop but accessed externally.\n   *\n   * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\n   * allows us to easily watch the module or the segmentations loading process in any other component\n   * without subscribing to external events.\n   */\n  console.log('Segmentation loaded.');\n  const event = new CustomEvent('extensiondicomsegmentationsegloaded', {\n    detail: {\n      imageIds,\n      segDisplaySet,\n      labelmapBuffer,\n      segMetadata,\n      segmentsOnFrame,\n      labelmapSegments,\n    },\n  });\n  document.dispatchEvent(event);\n\n  return labelmapIndex;\n}\n\nfunction _getNextLabelmapIndex(firstImageId) {\n  const { state } = cornerstoneTools.getModule('segmentation');\n  const brushStackState = state.series[firstImageId];\n\n  let labelmapIndex = 0;\n\n  if (brushStackState) {\n    const { labelmaps3D } = brushStackState;\n    labelmapIndex = labelmaps3D.length;\n\n    for (let i = 0; i < labelmaps3D.length; i++) {\n      if (!labelmaps3D[i]) {\n        labelmapIndex = i;\n        break;\n      }\n    }\n  }\n\n  return labelmapIndex;\n}\n\nfunction _makeColorLUTAndGetIndex(segMetadata) {\n  const { setters, state } = cornerstoneTools.getModule('segmentation');\n  const { colorLutTables } = state;\n  const colorLUTIndex = _getNextColorLUTIndex();\n\n  const { data } = segMetadata;\n\n  if (\n    !data.some(\n      segment =>\n        segment &&\n        (segment.ROIDisplayColor || segment.RecommendedDisplayCIELabValue)\n    )\n  ) {\n    // Use default cornerstoneTools colorLUT.\n    return 0;\n  }\n\n  const colorLUT = [];\n\n  for (let i = 0; i < data.length; i++) {\n    const segment = data[i];\n    if (!segment) {\n      continue;\n    }\n\n    const { ROIDisplayColor, RecommendedDisplayCIELabValue } = segment;\n\n    if (RecommendedDisplayCIELabValue) {\n      const rgb = dcmjs.data.Colors.dicomlab2RGB(\n        RecommendedDisplayCIELabValue\n      ).map(x => Math.round(x * 255));\n\n      colorLUT[i] = [...rgb, 255];\n    } else if (ROIDisplayColor) {\n      colorLUT[i] = [...ROIDisplayColor, 255];\n    } else {\n      colorLUT[i] = [...colorLutTables[0][i]];\n    }\n  }\n\n  colorLUT.shift();\n  setters.colorLUT(colorLUTIndex, colorLUT);\n\n  return colorLUTIndex;\n}\n\nfunction _getNextColorLUTIndex() {\n  const { state } = cornerstoneTools.getModule('segmentation');\n  const { colorLutTables } = state;\n\n  let colorLUTIndex = colorLutTables.length;\n\n  for (let i = 0; i < colorLutTables.length; i++) {\n    if (!colorLutTables[i]) {\n      colorLUTIndex = i;\n      break;\n    }\n  }\n\n  return colorLUTIndex;\n}\n","export default function refreshViewports() {\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    cornerstone.updateImage(enabledElement.element);\n  });\n}\n","import { utils, log } from '@ohif/core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport refreshViewports from './refreshViewports';\n\nconst { studyMetadataManager } = utils;\n\n/**\n *\n *\n * @param {*} viewportSpecificData\n * @param {*} studies\n * @param {*} displaySet\n * @param {*} firstImageId\n * @param {*} activeLabelmapIndex\n * @returns\n */\nexport default async function setActiveLabelmap(\n  referencedDisplaySet,\n  studies,\n  displaySet,\n  callback = () => {},\n  onDisplaySetLoadFailure = err => {\n    console.error(err.message);\n  }\n) {\n  const studyMetadata = studyMetadataManager.get(\n    referencedDisplaySet.StudyInstanceUID\n  );\n  const firstImageId = studyMetadata.getFirstImageId(\n    referencedDisplaySet.displaySetInstanceUID\n  );\n\n  let { state } = cornerstoneTools.getModule('segmentation');\n\n  let brushStackState = state.series[firstImageId];\n  const activeLabelmapIndex = brushStackState\n    ? brushStackState.activeLabelmapIndex\n    : undefined;\n\n  let labelmapIndex =\n    displaySet.hasOverlapping === true\n      ? displaySet.originLabelMapIndex\n      : displaySet.labelmapIndex;\n\n  if (labelmapIndex === activeLabelmapIndex) {\n    log.warn(`${activeLabelmapIndex} is already the active labelmap`);\n    return labelmapIndex;\n  }\n\n  if (!displaySet.isLoaded && !displaySet.loadError) {\n    try {\n      await displaySet.load(referencedDisplaySet, studies);\n    } catch (error) {\n      displaySet.isLoaded = false;\n      displaySet.loadError = true;\n      displaySet.segLoadErrorMessagge = error.message;\n      onDisplaySetLoadFailure(error);\n\n      /*\n       * TODO: Improve the way we notify parts of the app\n       * that depends on derived display sets to be loaded.\n       * (Implement pubsub for better tracking of derived display sets)\n       */\n      const event = new CustomEvent('segmentationLoadingError');\n      document.dispatchEvent(event);\n\n      return -1;\n    }\n  }\n\n  labelmapIndex =\n    displaySet.hasOverlapping === true\n      ? displaySet.originLabelMapIndex\n      : displaySet.labelmapIndex;\n\n  // This might have just been created, so need to use the non-cached value.\n  state = cornerstoneTools.getModule('segmentation').state;\n\n  brushStackState = state.series[firstImageId];\n  if (brushStackState) {\n    brushStackState.activeLabelmapIndex = labelmapIndex;\n  }\n\n  refreshViewports();\n  callback();\n\n  return labelmapIndex;\n}\n","import setActiveLabelmap from './utils/setActiveLabelMap';\nimport { metadata } from '@ohif/core';\n\nexport default function getSourceDisplaySet(studies, segDisplaySet, activateLabelMap = true, onDisplaySetLoadFailureHandler) {\n  const referencedDisplaySet = metadata.StudyMetadata.getReferencedDisplaySet(segDisplaySet, studies);\n\n  let activatedLabelmapPromise;\n  if (activateLabelMap) {\n    activatedLabelmapPromise = setActiveLabelmap(referencedDisplaySet, studies, segDisplaySet, undefined, onDisplaySetLoadFailureHandler);\n  }\n\n  return {\n    referencedDisplaySet : referencedDisplaySet,\n    activatedLabelmapPromise : activatedLabelmapPromise\n  }\n}\n","import { MODULE_TYPES, utils } from '@ohif/core';\nimport loadSegmentation from './loadSegmentation';\nimport getSourceDisplaySet from './getSourceDisplaySet';\nimport OHIF from '@ohif/core';\nimport dcmjs from 'dcmjs';\n\nconst { DicomLoaderService } = OHIF.utils;\nconst { DicomMessage, DicomMetaDictionary } = dcmjs.data;\n\n// TODO: Should probably use dcmjs for this\nconst SOP_CLASS_UIDS = {\n  DICOM_SEG: '1.2.840.10008.5.1.4.1.1.66.4',\n};\n\nconst sopClassUIDs = Object.values(SOP_CLASS_UIDS);\n\nexport default function getSopClassHandlerModule({ servicesManager }) {\n  // TODO: Handle the case where there is more than one SOP Class Handler for the\n  // same SOP Class.\n  return {\n    id: 'OHIFDicomSegSopClassHandler',\n    type: MODULE_TYPES.SOP_CLASS_HANDLER,\n    sopClassUIDs,\n    getDisplaySetFromSeries: function(\n      series,\n      study,\n      dicomWebClient,\n      authorizationHeaders\n    ) {\n      const instance = series.getFirstInstance();\n      const metadata = instance.getData().metadata;\n\n      const {\n        SeriesDate,\n        SeriesTime,\n        SeriesDescription,\n        FrameOfReferenceUID,\n        SOPInstanceUID,\n        SeriesInstanceUID,\n        StudyInstanceUID,\n        SeriesNumber,\n      } = metadata;\n\n      const segDisplaySet = {\n        Modality: 'SEG',\n        displaySetInstanceUID: utils.guid(),\n        wadoRoot: study.getData().wadoRoot,\n        wadoUri: instance.getData().wadouri,\n        SOPInstanceUID,\n        SeriesInstanceUID,\n        StudyInstanceUID,\n        FrameOfReferenceUID,\n        authorizationHeaders,\n        isDerived: true,\n        referencedDisplaySetUID: null, // Assigned when loaded.\n        labelmapIndex: null, // Assigned when loaded.\n        isLoaded: false,\n        loadError: false,\n        hasOverlapping: false,\n        SeriesDate,\n        SeriesTime,\n        SeriesNumber,\n        SeriesDescription,\n        metadata,\n      };\n\n      segDisplaySet.getSourceDisplaySet = function(\n        studies,\n        activateLabelMap = true,\n        onDisplaySetLoadFailureHandler\n      ) {\n        return getSourceDisplaySet(\n          studies,\n          segDisplaySet,\n          activateLabelMap,\n          onDisplaySetLoadFailureHandler\n        );\n      };\n\n      segDisplaySet.load = async function(referencedDisplaySet, studies) {\n        segDisplaySet.isLoaded = true;\n        const { StudyInstanceUID } = referencedDisplaySet;\n        const segArrayBuffer = await DicomLoaderService.findDicomDataPromise(\n          segDisplaySet,\n          studies\n        );\n        const dicomData = DicomMessage.readFile(segArrayBuffer);\n        const dataset = DicomMetaDictionary.naturalizeDataset(dicomData.dict);\n        dataset._meta = DicomMetaDictionary.namifyDataset(dicomData.meta);\n        const imageIds = _getImageIdsForDisplaySet(\n          studies,\n          StudyInstanceUID,\n          referencedDisplaySet.SeriesInstanceUID\n        );\n\n        const results = await _parseSeg(segArrayBuffer, imageIds);\n        if (results === undefined) {\n          return;\n        }\n        const {\n          labelmapBufferArray,\n          segMetadata,\n          segmentsOnFrame,\n          segmentsOnFrameArray,\n        } = results;\n        let labelmapIndex;\n        if (labelmapBufferArray.length > 1) {\n          let labelmapIndexes = [];\n          for (let i = 0; i < labelmapBufferArray.length; ++i) {\n            segMetadata.segmentationSeriesInstanceUID =\n              segDisplaySet.SeriesInstanceUID;\n            segMetadata.hasOverlapping = true;\n            labelmapIndexes.push(\n              await loadSegmentation(\n                imageIds,\n                segDisplaySet,\n                labelmapBufferArray[i],\n                segMetadata,\n                segmentsOnFrame,\n                segmentsOnFrameArray[i]\n              )\n            );\n          }\n          /**\n           * Since overlapping segments have virtual labelmaps,\n           * originLabelMapIndex is used in the panel to select the correct dropdown value.\n           */\n          segDisplaySet.hasOverlapping = true;\n          segDisplaySet.originLabelMapIndex = labelmapIndexes[0];\n          labelmapIndex = labelmapIndexes[0];\n          console.warn('Overlapping segments!');\n        } else {\n          segMetadata.segmentationSeriesInstanceUID =\n            segDisplaySet.SeriesInstanceUID;\n          segMetadata.hasOverlapping = false;\n          labelmapIndex = await loadSegmentation(\n            imageIds,\n            segDisplaySet,\n            labelmapBufferArray[0],\n            segMetadata,\n            segmentsOnFrame,\n            []\n          );\n        }\n      };\n\n      return segDisplaySet;\n    },\n  };\n}\n\nfunction _parseSeg(arrayBuffer, imageIds) {\n  const skipOverlapping = false;\n  const tolerance = 1e-2;\n  const cornerstoneToolsVersion = 4;\n  return dcmjs.adapters.Cornerstone.Segmentation.generateToolState(\n    imageIds,\n    arrayBuffer,\n    cornerstone.metaData,\n    skipOverlapping,\n    tolerance,\n    cornerstoneToolsVersion\n  );\n}\n\nfunction _getImageIdsForDisplaySet(\n  studies,\n  StudyInstanceUID,\n  SeriesInstanceUID\n) {\n  const study = studies.find(\n    study => study.StudyInstanceUID === StudyInstanceUID\n  );\n\n  const displaySets = study.displaySets.filter(displaySet => {\n    return displaySet.SeriesInstanceUID === SeriesInstanceUID;\n  });\n\n  if (displaySets.length > 1) {\n    console.warn(\n      'More than one display set with the same SeriesInstanceUID. This is not supported yet...'\n    );\n    // TODO -> We could make check the instance list and see if any match?\n    // Do we split the segmentation into two cornerstoneTools segmentations if there are images in both series?\n    // ^ Will that even happen?\n  }\n\n  const referencedDisplaySet = displaySets[0];\n\n  return referencedDisplaySet.images.map(image => image.getImageId());\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './BrushColorSelector.css';\n\nconst BrushColorSelector = ({ defaultColor, index, onNext, onPrev }) => (\n  <div className=\"dcmseg-brush-color-selector\">\n    <div\n      className=\"selector-active-segment\"\n      style={{ backgroundColor: defaultColor }}\n    >\n      {index}\n    </div>\n    <div className=\"selector-buttons\">\n      <button onClick={onPrev}>\n        Previous\n      </button>\n      <button onClick={onNext}>\n        Next\n      </button>\n    </div>\n  </div>\n);\n\nBrushColorSelector.propTypes = {\n  defaultColor: PropTypes.string.isRequired,\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  onNext: PropTypes.func.isRequired,\n  onPrev: PropTypes.func.isRequired,\n};\n\nexport default BrushColorSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Range } from '@ohif/ui';\n\nimport './BrushRadius.css';\n\nconst BrushRadius = ({ value, onChange, min, max, step }) => (\n  <div className=\"dcmseg-brush-radius\">\n    <label htmlFor=\"dcmseg-brush-radius\">Brush Radius</label>\n    <Range\n      value={value}\n      min={min}\n      max={max}\n      step={step}\n      onChange={onChange}\n      id=\"dcmseg-brush-radius\"\n    />\n  </div>\n);\n\nBrushRadius.propTypes = {\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n};\n\nBrushRadius.defaultProps = {\n  onChange: () => { },\n  min: 1,\n  max: 50,\n  step: 1,\n};\n\nexport default BrushRadius;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SegmentationItem.css';\n\nconst SegmentationItem = ({ onClick, title, description }) => {\n  return (\n    <li className=\"dcmseg-segmentation-item\" onClick={onClick}>\n      <div className=\"segmentation-meta\">\n        <div className=\"segmentation-meta-title\">{title}</div>\n        <div className=\"segmentation-meta-description\">{description}</div>\n      </div>\n    </li>\n  );\n};\n\nSegmentationItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nSegmentationItem.defaultProps = {\n  description: '',\n};\n\nexport default SegmentationItem;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Range } from '@ohif/ui';\nimport { ScrollableArea } from '@ohif/ui';\n\nimport './SegmentationSettings.css';\n\nconst SegmentationSettings = ({\n  configuration,\n  onBack,\n  onChange,\n  disabledFields = [],\n}) => {\n  const [state, setState] = useState({\n    renderFill: configuration.renderFill,\n    renderOutline: configuration.renderOutline,\n    shouldRenderInactiveLabelmaps: configuration.shouldRenderInactiveLabelmaps,\n    fillAlpha: configuration.fillAlpha,\n    outlineAlpha: configuration.outlineAlpha,\n    outlineWidth: configuration.outlineWidth,\n    fillAlphaInactive: configuration.fillAlphaInactive,\n    outlineAlphaInactive: configuration.outlineAlphaInactive,\n  });\n\n  useEffect(() => {\n    onChange(state);\n  }, [onChange, state]);\n\n  const check = field => {\n    setState(state => ({ ...state, [field]: !state[field] }));\n  };\n\n  const save = (field, value) => {\n    setState(state => ({ ...state, [field]: value }));\n  };\n\n  const toFloat = value => parseFloat(value / 100).toFixed(2);\n\n  return (\n    <div className=\"dcmseg-segmentation-settings\">\n      <div className=\"settings-title\">\n        <h4>Settings</h4>\n        <button className=\"return-button\" onClick={onBack}>\n          Back\n        </button>\n      </div>\n\n      <div\n        className=\"settings-group\"\n        style={{ marginBottom: state.renderFill ? 15 : 0 }}\n      >\n        <CustomCheck\n          label=\"Segment Fill\"\n          checked={state.renderFill}\n          onChange={() => check('renderFill')}\n        />\n        {state.renderFill && (\n          <CustomRange\n            label=\"Opacity\"\n            step={1}\n            min={0}\n            max={100}\n            value={state.fillAlpha * 100}\n            onChange={event => save('fillAlpha', toFloat(event.target.value))}\n            showPercentage\n          />\n        )}\n      </div>\n      <div\n        className=\"settings-group\"\n        style={{ marginBottom: state.renderOutline ? 15 : 0 }}\n      >\n        <CustomCheck\n          label=\"Segment Outline\"\n          checked={state.renderOutline}\n          onChange={() => check('renderOutline')}\n        />\n        {state.renderOutline && (\n          <>\n            {!disabledFields.includes('outlineAlpha') && (\n              <CustomRange\n                value={state.outlineAlpha * 100}\n                label=\"Opacity\"\n                showPercentage\n                step={1}\n                min={0}\n                max={100}\n                onChange={event =>\n                  save('outlineAlpha', toFloat(event.target.value))\n                }\n              />\n            )}\n            {!disabledFields.includes('outlineWidth') && (\n              <CustomRange\n                value={state.outlineWidth}\n                label=\"Width\"\n                showValue\n                step={1}\n                min={0}\n                max={5}\n                onChange={event =>\n                  save('outlineWidth', parseInt(event.target.value))\n                }\n              />\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst CustomCheck = ({ label, checked, onChange }) => {\n  return (\n    <div className=\"custom-check\">\n      <label>\n        <span>{label}</span>\n        <input type=\"checkbox\" checked={checked} onChange={onChange} />\n      </label>\n    </div>\n  );\n};\n\nconst CustomRange = props => {\n  const { label, onChange } = props;\n  return (\n    <div className=\"range\">\n      <label htmlFor=\"range\">{label}</label>\n      <Range\n        {...props}\n        onChange={event => {\n          event.persist();\n          onChange(event);\n        }}\n      />\n    </div>\n  );\n};\n\nSegmentationSettings.propTypes = {\n  configuration: PropTypes.shape({\n    renderFill: PropTypes.bool.isRequired,\n    renderOutline: PropTypes.bool.isRequired,\n    shouldRenderInactiveLabelmaps: PropTypes.bool.isRequired,\n    fillAlpha: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      .isRequired /* TODO: why fillAlpha is string? */,\n    outlineAlpha: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      .isRequired /* TODO: why fillAlpha is string? */,\n    outlineWidth: PropTypes.number.isRequired,\n    fillAlphaInactive: PropTypes.number.isRequired,\n    outlineAlphaInactive: PropTypes.number.isRequired,\n  }).isRequired,\n  onBack: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SegmentationSettings;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableListItem, Icon } from '@ohif/ui';\nimport ReactTooltip from 'react-tooltip';\n\nimport './SegmentItem.css';\n\nconst ColoredCircle = ({ color }) => {\n  return (\n    <div\n      className=\"segment-color\"\n      style={{ backgroundColor: `rgba(${color.join(',')})` }}\n    ></div>\n  );\n};\n\nColoredCircle.propTypes = {\n  color: PropTypes.array.isRequired,\n};\n\nconst SegmentItem = ({\n  index,\n  label,\n  onClick,\n  itemClass,\n  color,\n  labelmap3D,\n  visible,\n  onVisibilityChange,\n}) => {\n  const [isVisible, setIsVisible] = useState(visible);\n\n  useEffect(() => {\n    setIsVisible(visible);\n  }, [visible]);\n\n  const onClickHandler = () => onClick(index);\n\n  const onVisibilityChangeHandler = event => {\n    event.stopPropagation();\n    const newVisibility = !isVisible;\n    setIsVisible(newVisibility);\n    onVisibilityChange(newVisibility, index, labelmap3D);\n  };\n\n  return (\n    <div className=\"dcmseg-segment-item\">\n      <TableListItem\n        key={index}\n        itemKey={index}\n        itemIndex={index}\n        itemClass={itemClass}\n        itemMeta={<ColoredCircle color={color} />}\n        itemMetaClass=\"segment-color-section\"\n        onItemClick={onClickHandler}\n      >\n        <div>\n          <div className=\"segment-label\" style={{ marginBottom: 4 }}>\n            <a data-tip data-for={`SegmentHover${index}`}>\n              <span>{label}</span>\n            </a>\n            <ReactTooltip\n              id={`SegmentHover${index}`}\n              delayShow={250}\n              place=\"right\"\n              border={true}\n              type=\"light\"\n            >\n              <span>{label}</span>\n            </ReactTooltip>\n            <Icon\n              className={`eye-icon ${isVisible && '--visible'}`}\n              name={isVisible ? 'eye' : 'eye-closed'}\n              width=\"20px\"\n              height=\"20px\"\n              onClick={onVisibilityChangeHandler}\n            />\n          </div>\n          {false && <div className=\"segment-info\">{'...'}</div>}\n          {false && (\n            <div className=\"segment-actions\">\n              <button\n                className=\"btnAction\"\n                onClick={() => console.log('Relabelling...')}\n              >\n                <span style={{ marginRight: '4px' }}>\n                  <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\n                </span>\n                Relabel\n              </button>\n              <button\n                className=\"btnAction\"\n                onClick={() => console.log('Editing description...')}\n              >\n                <span style={{ marginRight: '4px' }}>\n                  <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\n                </span>\n                Description\n              </button>\n            </div>\n          )}\n        </div>\n      </TableListItem>\n    </div>\n  );\n};\n\nSegmentItem.propTypes = {\n  index: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  itemClass: PropTypes.string,\n  color: PropTypes.array.isRequired,\n};\n\nSegmentItem.defaultProps = {\n  itemClass: '',\n  onClick: () => {},\n};\n\nexport default SegmentItem;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst SegmentationSelect = ({ value, formatOptionLabel, options }) => (\n  <Select\n    value={value === undefined ? null : value}\n    formatOptionLabel={formatOptionLabel}\n    styles={segmentationSelectStyles}\n    options={options}\n  />\n);\n\nconst computedstyle = getComputedStyle(document.body);\nconst uiGrayDarker = computedstyle.getPropertyValue('--ui-gray-darker');\nconst activeColor = computedstyle.getPropertyValue('--active-color');\nconst defaultColor = computedstyle.getPropertyValue('--default-color');\nconst uiGrayDark = computedstyle.getPropertyValue('--ui-gray-dark');\n\nconst segmentationSelectStyles = {\n  singleValue: (base, state) => ({\n    ...base,\n    width: '100%'\n  }),\n  control: (base, state) => ({\n    ...base,\n    cursor: 'pointer',\n    background: uiGrayDarker,\n    borderRadius: state.isFocused ? '5px 5px 5px 5px' : 5,\n    borderColor: state.isFocused ? activeColor : defaultColor,\n    boxShadow: state.isFocused ? null : null,\n    minHeight: '50px',\n    '&:hover': {\n      borderColor: activeColor,\n    },\n  }),\n  menu: base => ({\n    ...base,\n    borderRadius: 5,\n    background: uiGrayDarker,\n  }),\n  option: (base, state) => ({\n    ...base,\n    cursor: 'pointer',\n    '&:first-of-type': {\n      borderTopLeftRadius: 5,\n      borderTopRightRadius: 5,\n    },\n    '&:last-of-type': {\n      borderBottomLeftRadius: 5,\n      borderBottomRightRadius: 5,\n    },\n    background: state.isSelected ? uiGrayDark : uiGrayDarker,\n    '&:hover': {\n      background: uiGrayDark,\n    },\n  }),\n};\n\nexport default SegmentationSelect;\n","import cornerstoneTools from 'cornerstone-tools';\nimport cornerstone from 'cornerstone-core';\n\nconst { setters, getters } = cornerstoneTools.getModule('segmentation');\n\nfunction getImageIdsForDisplaySet(\n  studies,\n  StudyInstanceUID,\n  SeriesInstanceUID\n) {\n  const study = studies.find(\n    study => study.StudyInstanceUID === StudyInstanceUID\n  );\n\n  const displaySets = study.displaySets.filter(displaySet => {\n    return displaySet.SeriesInstanceUID === SeriesInstanceUID;\n  });\n\n  if (displaySets.length > 1) {\n    console.warn(\n      'More than one display set with the same SeriesInstanceUID. This is not supported yet...'\n    );\n    // TODO -> We could make check the instance list and see if any match?\n    // Do we split the segmentation into two cornerstoneTools segmentations if there are images in both series?\n    // ^ Will that even happen?\n  }\n\n  const referencedDisplaySet = displaySets[0];\n  return referencedDisplaySet.images.map(image => image.getImageId());\n}\n\n/**\n * Gets an array of LabelMap.\n * Each LabelMap is an array of segments.\n *\n * Note that this LabelMap we have here is different from cornerstone's.\n *\n * @param element\n */\nfunction getLabelMaps(element) {\n  let labelmaps = [];\n  if (!element) {\n    console.warn('element is empty... weird...');\n    return labelmaps;\n  }\n\n  const segmentationModule = cornerstoneTools.getModule('segmentation');\n  const { labelmaps3D } = getters.labelmaps3D(element);\n  if (!labelmaps3D) {\n    console.debug('LabelMap3D is empty.. so zero segments');\n    return labelmaps;\n  }\n  console.debug(labelmaps3D);\n\n  for (let i = 0; i < labelmaps3D.length; i++) {\n    let segments = [];\n    const labelmap3D = labelmaps3D[i];\n\n    // TODO:: which one is standard metadata.data[] or metadata[] ???\n    const metadata =\n      labelmap3D && labelmap3D.metadata && labelmap3D.metadata.data\n        ? labelmap3D.metadata.data\n        : null;\n    const colorLutTable =\n      segmentationModule.state.colorLutTables[labelmap3D.colorLUTIndex];\n    console.debug('Labelmap3D Index = ' + i);\n    console.debug('labelmap3D.colorLUTIndex = ' + labelmap3D.colorLUTIndex);\n    console.debug(labelmap3D);\n    console.debug(colorLutTable);\n\n    if (!metadata) {\n      console.warn('Missing Meta Data for Label; so ignore');\n    } else {\n      for (let j = 1; j < metadata.length; j++) {\n        const meta = metadata[j];\n        if (!meta) {\n          continue;\n        }\n\n        console.debug('SegmentNumber = ' + meta.SegmentNumber);\n        console.debug(meta);\n\n        const id = i + '+' + meta.SegmentNumber;\n        const color = colorLutTable[meta.SegmentNumber];\n        const segmentItem = {\n          id: id,\n          labelmapIndex: i,\n          segmentIndex: meta.SegmentNumber,\n          color: color,\n          meta: meta,\n          name: meta.SegmentLabel,\n          description: meta.SegmentDescription,\n        };\n        segments.push(segmentItem);\n      }\n    }\n    labelmaps.push(segments);\n  }\n\n  return labelmaps;\n}\n\nfunction flattenLabelmaps(labelmaps) {\n  return [].concat.apply([], labelmaps);\n}\n\nfunction getFirstSegmentId(element) {\n  const labelmaps = getLabelMaps(element);\n  const segments = flattenLabelmaps(labelmaps);\n  console.debug(segments);\n  return segments && segments.length ? segments[0].id : null;\n}\n\n/**\n * Creates a segment.\n *\n * @param {Object} element A cornerstone element\n * @param {string} label Name of the segment\n * @param description\n * @param color\n * @param {boolean} newLabelMap Whether to put this segment in a new labelmap3D or not\n * @param labelMeta\n * @returns {{labelmapIndex: *, segmentIndex: number}}\n */\nfunction createSegment(\n  element,\n  label,\n  description = '',\n  color = null,\n  newLabelMap = false,\n  labelMeta = null\n) {\n  labelMeta = labelMeta\n    ? labelMeta\n    : {\n        SegmentedPropertyCategoryCodeSequence: {\n          CodeValue: 'T-D0050',\n          CodingSchemeDesignator: 'SRT',\n          CodeMeaning: 'Tissue',\n        },\n        SegmentNumber: 1,\n        SegmentLabel: label ? label : 'label-0-1',\n        SegmentDescription: description,\n        SegmentAlgorithmType: 'SEMIAUTOMATIC',\n        SegmentAlgorithmName: 'MONAI',\n        SegmentedPropertyTypeCodeSequence: {\n          CodeValue: 'T-D0050',\n          CodingSchemeDesignator: 'SRT',\n          CodeMeaning: 'Tissue',\n        },\n      };\n\n  if (newLabelMap) {\n    const labelmaps = getLabelMaps(element);\n    let nextLabelmapIndex = labelmaps ? labelmaps.length : 0; // Reuse First Empty LabelMap\n    for (let i = 0; i < labelmaps.length; i++) {\n      if (!labelmaps[i] || !labelmaps[i].length) {\n        nextLabelmapIndex = i;\n        break;\n      }\n    }\n\n    console.debug('Next LabelmapIndex: ' + nextLabelmapIndex);\n    setters.activeLabelmapIndex(element, nextLabelmapIndex);\n  }\n\n  // this labelmap2D function will create a labelmap3D if a labelmap does\n  // not yet exist. it will also generate a labelmap2D for the currentImageIndex\n  // if it does not yet exist.\n  // refer to: https://github.com/cornerstonejs/cornerstoneTools/blob/master/src/store/modules/segmentationModule/getLabelmap2D.js\n  const { labelmap3D, activeLabelmapIndex } = getters.labelmap2D(element);\n  console.debug('activeLabelmapIndex: ' + activeLabelmapIndex);\n\n  // Add new colorLUT if required for new labelmapIndex\n  const { state } = cornerstoneTools.getModule('segmentation');\n  console.debug(state.colorLutTables);\n  if (state.colorLutTables.length <= activeLabelmapIndex) {\n    console.debug('Adding new Color LUT Table for: ' + activeLabelmapIndex);\n    setters.colorLUT(activeLabelmapIndex);\n    console.debug(state.colorLutTables);\n    labelmap3D.colorLUTIndex = activeLabelmapIndex;\n  }\n\n  console.debug('labelmap3D.colorLUTIndex = ' + labelmap3D.colorLUTIndex);\n\n  // TODO:: which one is standard metadata.data[] or metadata[] ???\n  if (!labelmap3D.metadata || !labelmap3D.metadata.data) {\n    labelmap3D.metadata = { data: [undefined] };\n  }\n\n  const { metadata } = labelmap3D;\n  let nextSegmentId = 1;\n  for (let i = 1; i < metadata.data.length; i++) {\n    if (nextSegmentId === metadata.data[i].SegmentNumber) {\n      nextSegmentId++;\n    } else {\n      break;\n    }\n  }\n  console.debug(\n    'Next Segment: ' + nextSegmentId + '; LabelMap: ' + activeLabelmapIndex\n  );\n\n  labelMeta.SegmentNumber = nextSegmentId;\n  labelMeta.SegmentLabel = label\n    ? label\n    : 'label_' + activeLabelmapIndex + '-' + nextSegmentId;\n\n  if (nextSegmentId === metadata.data.length) {\n    metadata.data.push(labelMeta);\n  } else {\n    metadata.data.splice(nextSegmentId, 0, labelMeta);\n  }\n  setters.activeSegmentIndex(element, nextSegmentId);\n\n  if (color) {\n    const segmentationModule = cornerstoneTools.getModule('segmentation');\n    const colorLutTable =\n      segmentationModule.state.colorLutTables[labelmap3D.colorLUTIndex];\n\n    colorLutTable[nextSegmentId][0] = color.r;\n    colorLutTable[nextSegmentId][1] = color.g;\n    colorLutTable[nextSegmentId][2] = color.b;\n  }\n\n  return {\n    id: activeLabelmapIndex + '+' + nextSegmentId,\n    labelmapIndex: activeLabelmapIndex,\n    segmentIndex: nextSegmentId,\n  };\n}\n\nfunction getSegmentInfo(element, labelmapIndex, segmentIndex) {\n  var name = '';\n  var description = '';\n  var color = '';\n\n  const labelmap3D = getters.labelmap3D(element, labelmapIndex);\n  if (!labelmap3D) {\n    console.warn('Missing Label; so ignore');\n    return { name, description, color };\n  }\n\n  const metadata = labelmap3D.metadata.data\n    ? labelmap3D.metadata.data\n    : labelmap3D.metadata;\n  if (!metadata) {\n    console.warn('Missing Meta; so ignore');\n    return { name, description, color };\n  }\n\n  name = metadata[segmentIndex].SegmentLabel;\n  description = metadata[segmentIndex].SegmentDescription;\n\n  const segmentationModule = cornerstoneTools.getModule('segmentation');\n  const colorLutTable =\n    segmentationModule.state.colorLutTables[labelmap3D.colorLUTIndex];\n  color = colorLutTable[segmentIndex];\n\n  return { name, description, color };\n}\n\nfunction updateSegment(\n  element,\n  labelmapIndex,\n  segmentIndex,\n  buffer,\n  numberOfFrames,\n  operation,\n  slice = -1\n) {\n  const labelmap3D = getters.labelmap3D(element, labelmapIndex);\n  if (!labelmap3D) {\n    console.warn('Missing Label; so ignore');\n    return;\n  }\n\n  const metadata = labelmap3D.metadata.data\n    ? labelmap3D.metadata.data\n    : labelmap3D.metadata;\n  if (!metadata) {\n    console.warn('Missing Meta; so ignore');\n    return;\n  }\n\n  // Segments on LabelMap\n  const segmentsOnLabelmap = metadata\n    .filter(x => x && x.SegmentNumber)\n    .map(x => x.SegmentNumber);\n  segmentsOnLabelmap.unshift(0);\n  console.debug(segmentsOnLabelmap);\n\n  const segmentOffset = segmentIndex - 1;\n  console.debug('labelmapIndex: ' + labelmapIndex);\n  console.debug('segmentIndex: ' + segmentIndex);\n  console.debug('segmentOffset: ' + segmentOffset);\n\n  const labelmaps2D = labelmap3D.labelmaps2D;\n\n  const slicelengthInBytes = buffer.byteLength / numberOfFrames;\n\n  console.debug('labelmap2d length:' + labelmaps2D.length);\n  if (!labelmaps2D.length || labelmaps2D.length < 1) {\n    console.debug('First time update...');\n    operation = undefined;\n  }\n\n  // Update Buffer (2D/3D)\n  let srcBuffer = labelmap3D.buffer;\n  let useSourceBuffer = false;\n  for (let i = 0; i < numberOfFrames; i++) {\n    if (slice >= 0 && i !== slice) {\n      // do only one slice (in case of 3D Volume but 2D result e.g. Deeprow2D)\n      continue;\n    }\n\n    // no segments in this slice\n    if (\n      !labelmaps2D[i] ||\n      !labelmaps2D[i].segmentsOnLabelmap ||\n      !labelmaps2D[i].segmentsOnLabelmap.length\n    ) {\n      operation = 'override';\n    }\n\n    const sliceOffset = slicelengthInBytes * i;\n    const sliceLength = slicelengthInBytes / 2;\n\n    let pixelData = new Uint16Array(buffer, sliceOffset, sliceLength);\n    let srcPixelData = new Uint16Array(srcBuffer, sliceOffset, sliceLength);\n\n    if (operation === 'overlap' || operation === 'override') {\n      useSourceBuffer = true;\n    }\n\n    for (let j = 0; j < pixelData.length; j++) {\n      if (operation === 'overlap') {\n        if (pixelData[j] > 0) {\n          srcPixelData[j] = pixelData[j] + segmentOffset;\n        }\n      } else if (operation === 'override') {\n        if (srcPixelData[j] === segmentIndex) {\n          srcPixelData[j] = 0;\n        }\n        if (pixelData[j] > 0) {\n          srcPixelData[j] = pixelData[j] + segmentOffset;\n        }\n      } else {\n        if (pixelData[j] > 0) {\n          pixelData[j] = pixelData[j] + segmentOffset;\n        }\n      }\n    }\n\n    pixelData = useSourceBuffer ? srcPixelData : pixelData;\n    labelmaps2D[i] = { pixelData, segmentsOnLabelmap };\n  }\n\n  labelmap3D.buffer = useSourceBuffer ? srcBuffer : buffer;\n  cornerstone.updateImage(element);\n}\n\nfunction updateSegmentMeta(\n  element,\n  labelmapIndex,\n  segmentIndex,\n  label = undefined,\n  desc = undefined,\n  color = undefined\n) {\n  const labelmap3D = getters.labelmap3D(element, labelmapIndex);\n  if (!labelmap3D) {\n    console.warn('Missing Label; so ignore');\n    return;\n  }\n\n  const metadata = labelmap3D.metadata.data\n    ? labelmap3D.metadata.data\n    : labelmap3D.metadata;\n  if (!metadata) {\n    console.warn('Missing Meta; so ignore');\n    return;\n  }\n\n  if (label) {\n    metadata[segmentIndex].SegmentLabel = label;\n  }\n  if (desc) {\n    metadata[segmentIndex].SegmentDescription = desc;\n  }\n\n  if (color) {\n    const segmentationModule = cornerstoneTools.getModule('segmentation');\n    const colorLutTable =\n      segmentationModule.state.colorLutTables[labelmap3D.colorLUTIndex];\n\n    colorLutTable[segmentIndex][0] = color.r;\n    colorLutTable[segmentIndex][1] = color.g;\n    colorLutTable[segmentIndex][2] = color.b;\n  }\n}\n\nfunction deleteSegment(element, labelmapIndex, segmentIndex) {\n  console.debug(\n    'calling delete segment with ' + labelmapIndex + ' and ' + segmentIndex\n  );\n  if (!element || !segmentIndex) {\n    return;\n  }\n\n  const labelmap3D = getters.labelmap3D(element, labelmapIndex);\n  if (!labelmap3D) {\n    console.warn('Missing Label; so ignore');\n    return;\n  }\n\n  // TODO:: which one is standard metadata.data[] or metadata[] ???\n  if (labelmap3D.metadata && labelmap3D.metadata.data) {\n    let newData = [undefined];\n    for (let i = 1; i < labelmap3D.metadata.data.length; i++) {\n      const meta = labelmap3D.metadata.data[i];\n      if (segmentIndex !== meta.SegmentNumber) {\n        newData.push(meta);\n      }\n    }\n    labelmap3D.metadata.data = newData;\n  }\n\n  // remove segments mapping\n  const labelmaps2D = labelmap3D.labelmaps2D;\n  for (let i = 0; i < labelmaps2D.length; i++) {\n    const labelmap2D = labelmaps2D[i];\n    if (labelmap2D && labelmap2D.segmentsOnLabelmap.includes(segmentIndex)) {\n      const indexOfSegment = labelmap2D.segmentsOnLabelmap.indexOf(\n        segmentIndex\n      );\n      labelmap2D.segmentsOnLabelmap.splice(indexOfSegment, 1);\n    }\n  }\n\n  // cleanup buffer\n  let z = new Uint16Array(labelmap3D.buffer);\n  for (let i = 0; i < z.length; i++) {\n    if (z[i] === segmentIndex) {\n      z[i] = 0;\n    }\n  }\n  cornerstone.updateImage(element);\n}\n\nexport {\n  getImageIdsForDisplaySet,\n  getLabelMaps,\n  flattenLabelmaps,\n  createSegment,\n  getSegmentInfo,\n  updateSegment,\n  deleteSegment,\n  updateSegmentMeta,\n  getFirstSegmentId,\n};\n","function componentToHex(c) {\n  const hex = c.toString(16);\n  return hex.length === 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport const GenericNames = [\n  'james',\n  'robert',\n  'john',\n  'michael',\n  'william',\n  'david',\n  'richard',\n  'joseph',\n  'thomas',\n  'charles',\n  'christopher',\n  'daniel',\n  'matthew',\n  'anthony',\n  'mark',\n  'donald',\n  'steven',\n  'paul',\n  'andrew',\n  'joshua',\n  'kenneth',\n  'kevin',\n  'brian',\n  'george',\n  'edward',\n  'ronald',\n  'timothy',\n  'jason',\n  'jeffrey',\n  'ryan',\n  'jacob',\n  'gary',\n  'nicholas',\n  'eric',\n  'jonathan',\n  'stephen',\n  'larry',\n  'justin',\n  'scott',\n  'brandon',\n  'benjamin',\n  'samuel',\n  'gregory',\n  'frank',\n  'alexander',\n  'raymond',\n  'patrick',\n  'jack',\n  'dennis',\n  'jerry',\n  'tyler',\n  'aaron',\n  'jose',\n  'adam',\n  'henry',\n  'nathan',\n  'douglas',\n  'zachary',\n  'peter',\n  'kyle',\n  'walter',\n  'ethan',\n  'jeremy',\n  'harold',\n  'keith',\n  'christian',\n  'roger',\n  'noah',\n  'gerald',\n  'carl',\n  'terry',\n  'sean',\n  'austin',\n  'arthur',\n  'lawrence',\n  'jesse',\n  'dylan',\n  'bryan',\n  'joe',\n  'jordan',\n  'billy',\n  'bruce',\n  'albert',\n  'willie',\n  'gabriel',\n  'logan',\n  'alan',\n  'juan',\n  'wayne',\n  'roy',\n  'ralph',\n  'randy',\n  'eugene',\n  'vincent',\n  'russell',\n  'elijah',\n  'louis',\n  'bobby',\n  'philip',\n  'johnny',\n  'mary',\n  'patricia',\n  'jennifer',\n  'linda',\n  'elizabeth',\n  'barbara',\n  'susan',\n  'jessica',\n  'sarah',\n  'karen',\n  'nancy',\n  'lisa',\n  'betty',\n  'margaret',\n  'sandra',\n  'ashley',\n  'kimberly',\n  'emily',\n  'donna',\n  'michelle',\n  'dorothy',\n  'carol',\n  'amanda',\n  'melissa',\n  'deborah',\n  'stephanie',\n  'rebecca',\n  'sharon',\n  'laura',\n  'cynthia',\n  'kathleen',\n  'amy',\n  'shirley',\n  'angela',\n  'helen',\n  'anna',\n  'brenda',\n  'pamela',\n  'nicole',\n  'emma',\n  'samantha',\n  'katherine',\n  'christine',\n  'debra',\n  'rachel',\n  'catherine',\n  'carolyn',\n  'janet',\n  'ruth',\n  'maria',\n  'heather',\n  'diane',\n  'virginia',\n  'julie',\n  'joyce',\n  'victoria',\n  'olivia',\n  'kelly',\n  'christina',\n  'lauren',\n  'joan',\n  'evelyn',\n  'judith',\n  'megan',\n  'cheryl',\n  'andrea',\n  'hannah',\n  'martha',\n  'jacqueline',\n  'frances',\n  'gloria',\n  'ann',\n  'teresa',\n  'kathryn',\n  'sara',\n  'janice',\n  'jean',\n  'alice',\n  'madison',\n  'doris',\n  'abigail',\n  'julia',\n  'judy',\n  'grace',\n  'denise',\n  'amber',\n  'marilyn',\n  'beverly',\n  'danielle',\n  'theresa',\n  'sophia',\n  'marie',\n  'diana',\n  'brittany',\n  'natalie',\n  'isabella',\n  'charlotte',\n  'rose',\n  'alexis',\n  'kayla',\n];\n\nexport const GenericAnatomyColors = [\n  { label: 'background', value: rgbToHex(0, 0, 0) },\n  { label: 'tissue', value: rgbToHex(128, 174, 128) },\n  { label: 'bone', value: rgbToHex(241, 214, 145) },\n  { label: 'skin', value: rgbToHex(177, 122, 101) },\n  { label: 'connective tissue', value: rgbToHex(111, 184, 210) },\n  { label: 'blood', value: rgbToHex(216, 101, 79) },\n  { label: 'organ', value: rgbToHex(221, 130, 101) },\n  { label: 'mass', value: rgbToHex(144, 238, 144) },\n  { label: 'muscle', value: rgbToHex(192, 104, 88) },\n  { label: 'foreign object', value: rgbToHex(220, 245, 20) },\n  { label: 'waste', value: rgbToHex(78, 63, 0) },\n  { label: 'teeth', value: rgbToHex(255, 250, 220) },\n  { label: 'fat', value: rgbToHex(230, 220, 70) },\n  { label: 'gray matter', value: rgbToHex(200, 200, 235) },\n  { label: 'white matter', value: rgbToHex(250, 250, 210) },\n  { label: 'nerve', value: rgbToHex(244, 214, 49) },\n  { label: 'vein', value: rgbToHex(0, 151, 206) },\n  { label: 'artery', value: rgbToHex(216, 101, 79) },\n  { label: 'capillary', value: rgbToHex(183, 156, 220) },\n  { label: 'ligament', value: rgbToHex(183, 214, 211) },\n  { label: 'tendon', value: rgbToHex(152, 189, 207) },\n  { label: 'cartilage', value: rgbToHex(111, 184, 210) },\n  { label: 'meniscus', value: rgbToHex(178, 212, 242) },\n  { label: 'lymph node', value: rgbToHex(68, 172, 100) },\n  { label: 'lymphatic vessel', value: rgbToHex(111, 197, 131) },\n  { label: 'cerebro-spinal fluid', value: rgbToHex(85, 188, 255) },\n  { label: 'bile', value: rgbToHex(0, 145, 30) },\n  { label: 'urine', value: rgbToHex(214, 230, 130) },\n  { label: 'feces', value: rgbToHex(78, 63, 0) },\n  { label: 'gas', value: rgbToHex(218, 255, 255) },\n  { label: 'fluid', value: rgbToHex(170, 250, 250) },\n  { label: 'edema', value: rgbToHex(140, 224, 228) },\n  { label: 'bleeding', value: rgbToHex(188, 65, 28) },\n  { label: 'necrosis', value: rgbToHex(216, 191, 216) },\n  { label: 'clot', value: rgbToHex(145, 60, 66) },\n  { label: 'embolism', value: rgbToHex(150, 98, 83) },\n  { label: 'head', value: rgbToHex(177, 122, 101) },\n  { label: 'central nervous system', value: rgbToHex(244, 214, 49) },\n  { label: 'brain', value: rgbToHex(250, 250, 225) },\n  { label: 'gray matter of brain', value: rgbToHex(200, 200, 215) },\n  { label: 'telencephalon', value: rgbToHex(68, 131, 98) },\n  { label: 'cerebral cortex', value: rgbToHex(128, 174, 128) },\n  { label: 'right frontal lobe', value: rgbToHex(83, 146, 164) },\n  { label: 'left frontal lobe', value: rgbToHex(83, 146, 164) },\n  { label: 'right temporal lobe', value: rgbToHex(162, 115, 105) },\n  { label: 'left temporal lobe', value: rgbToHex(162, 115, 105) },\n  { label: 'right parietal lobe', value: rgbToHex(141, 93, 137) },\n  { label: 'left parietal lobe', value: rgbToHex(141, 93, 137) },\n  { label: 'right occipital lobe', value: rgbToHex(182, 166, 110) },\n  { label: 'left occipital lobe', value: rgbToHex(182, 166, 110) },\n  { label: 'right insular lobe', value: rgbToHex(188, 135, 166) },\n  { label: 'left insular lobe', value: rgbToHex(188, 135, 166) },\n  { label: 'right limbic lobe', value: rgbToHex(154, 150, 201) },\n  { label: 'left limbic lobe', value: rgbToHex(154, 150, 201) },\n  { label: 'right striatum', value: rgbToHex(177, 140, 190) },\n  { label: 'left striatum', value: rgbToHex(177, 140, 190) },\n  { label: 'right caudate nucleus', value: rgbToHex(30, 111, 85) },\n  { label: 'left caudate nucleus', value: rgbToHex(30, 111, 85) },\n  { label: 'right putamen', value: rgbToHex(210, 157, 166) },\n  { label: 'left putamen', value: rgbToHex(210, 157, 166) },\n  { label: 'right pallidum', value: rgbToHex(48, 129, 126) },\n  { label: 'left pallidum', value: rgbToHex(48, 129, 126) },\n  { label: 'right amygdaloid complex', value: rgbToHex(98, 153, 112) },\n  { label: 'left amygdaloid complex', value: rgbToHex(98, 153, 112) },\n  { label: 'diencephalon', value: rgbToHex(69, 110, 53) },\n  { label: 'thalamus', value: rgbToHex(166, 113, 137) },\n  { label: 'right thalamus', value: rgbToHex(122, 101, 38) },\n  { label: 'left thalamus', value: rgbToHex(122, 101, 38) },\n  { label: 'pineal gland', value: rgbToHex(253, 135, 192) },\n  { label: 'midbrain', value: rgbToHex(145, 92, 109) },\n  { label: 'substantia nigra', value: rgbToHex(46, 101, 131) },\n  { label: 'right substantia nigra', value: rgbToHex(0, 108, 112) },\n  { label: 'left substantia nigra', value: rgbToHex(0, 108, 112) },\n  { label: 'cerebral white matter', value: rgbToHex(250, 250, 225) },\n  {\n    label: 'right superior longitudinal fasciculus',\n    value: rgbToHex(127, 150, 88),\n  },\n  {\n    label: 'left superior longitudinal fasciculus',\n    value: rgbToHex(127, 150, 88),\n  },\n  {\n    label: 'right inferior longitudinal fasciculus',\n    value: rgbToHex(159, 116, 163),\n  },\n  {\n    label: 'left inferior longitudinal fasciculus',\n    value: rgbToHex(159, 116, 163),\n  },\n  { label: 'right arcuate fasciculus', value: rgbToHex(125, 102, 154) },\n  { label: 'left arcuate fasciculus', value: rgbToHex(125, 102, 154) },\n  { label: 'right uncinate fasciculus', value: rgbToHex(106, 174, 155) },\n  { label: 'left uncinate fasciculus', value: rgbToHex(106, 174, 155) },\n  { label: 'right cingulum bundle', value: rgbToHex(154, 146, 83) },\n  { label: 'left cingulum bundle', value: rgbToHex(154, 146, 83) },\n  { label: 'projection fibers', value: rgbToHex(126, 126, 55) },\n  { label: 'right corticospinal tract', value: rgbToHex(201, 160, 133) },\n  { label: 'left corticospinal tract', value: rgbToHex(201, 160, 133) },\n  { label: 'right optic radiation', value: rgbToHex(78, 152, 141) },\n  { label: 'left optic radiation', value: rgbToHex(78, 152, 141) },\n  { label: 'right medial lemniscus', value: rgbToHex(174, 140, 103) },\n  { label: 'left medial lemniscus', value: rgbToHex(174, 140, 103) },\n  {\n    label: 'right superior cerebellar peduncle',\n    value: rgbToHex(139, 126, 177),\n  },\n  {\n    label: 'left superior cerebellar peduncle',\n    value: rgbToHex(139, 126, 177),\n  },\n  { label: 'right middle cerebellar peduncle', value: rgbToHex(148, 120, 72) },\n  { label: 'left middle cerebellar peduncle', value: rgbToHex(148, 120, 72) },\n  {\n    label: 'right inferior cerebellar peduncle',\n    value: rgbToHex(186, 135, 135),\n  },\n  {\n    label: 'left inferior cerebellar peduncle',\n    value: rgbToHex(186, 135, 135),\n  },\n  { label: 'optic chiasm', value: rgbToHex(99, 106, 24) },\n  { label: 'right optic tract', value: rgbToHex(156, 171, 108) },\n  { label: 'left optic tract', value: rgbToHex(156, 171, 108) },\n  { label: 'right fornix', value: rgbToHex(64, 123, 147) },\n  { label: 'left fornix', value: rgbToHex(64, 123, 147) },\n  { label: 'commissural fibers', value: rgbToHex(138, 95, 74) },\n  { label: 'corpus callosum', value: rgbToHex(97, 113, 158) },\n  { label: 'posterior commissure', value: rgbToHex(126, 161, 197) },\n  { label: 'cerebellar white matter', value: rgbToHex(194, 195, 164) },\n  { label: 'CSF space', value: rgbToHex(85, 188, 255) },\n  { label: 'ventricles of brain', value: rgbToHex(88, 106, 215) },\n  { label: 'right lateral ventricle', value: rgbToHex(88, 106, 215) },\n  { label: 'left lateral ventricle', value: rgbToHex(88, 106, 215) },\n  { label: 'right third ventricle', value: rgbToHex(88, 106, 215) },\n  { label: 'left third ventricle', value: rgbToHex(88, 106, 215) },\n  { label: 'cerebral aqueduct', value: rgbToHex(88, 106, 215) },\n  { label: 'fourth ventricle', value: rgbToHex(88, 106, 215) },\n  { label: 'subarachnoid space', value: rgbToHex(88, 106, 215) },\n  { label: 'spinal cord', value: rgbToHex(244, 214, 49) },\n  { label: 'gray matter of spinal cord', value: rgbToHex(200, 200, 215) },\n  { label: 'white matter of spinal cord', value: rgbToHex(250, 250, 225) },\n  { label: 'endocrine system of brain', value: rgbToHex(82, 174, 128) },\n  { label: 'pituitary gland', value: rgbToHex(57, 157, 110) },\n  { label: 'adenohypophysis', value: rgbToHex(60, 143, 83) },\n  { label: 'neurohypophysis', value: rgbToHex(92, 162, 109) },\n  { label: 'meninges', value: rgbToHex(255, 244, 209) },\n  { label: 'dura mater', value: rgbToHex(255, 244, 209) },\n  { label: 'arachnoid', value: rgbToHex(255, 244, 209) },\n  { label: 'pia mater', value: rgbToHex(255, 244, 209) },\n  { label: 'muscles of head', value: rgbToHex(201, 121, 77) },\n  { label: 'salivary glands', value: rgbToHex(70, 163, 117) },\n  { label: 'lips', value: rgbToHex(188, 91, 95) },\n  { label: 'nose', value: rgbToHex(177, 122, 101) },\n  { label: 'tongue', value: rgbToHex(166, 84, 94) },\n  { label: 'soft palate', value: rgbToHex(182, 105, 107) },\n  { label: 'right inner ear', value: rgbToHex(229, 147, 118) },\n  { label: 'left inner ear', value: rgbToHex(229, 147, 118) },\n  { label: 'right external ear', value: rgbToHex(174, 122, 90) },\n  { label: 'left external ear', value: rgbToHex(174, 122, 90) },\n  { label: 'right middle ear', value: rgbToHex(201, 112, 73) },\n  { label: 'left middle ear', value: rgbToHex(201, 112, 73) },\n  { label: 'right eyeball', value: rgbToHex(194, 142, 0) },\n  { label: 'left eyeball', value: rgbToHex(194, 142, 0) },\n  { label: 'skull', value: rgbToHex(241, 213, 144) },\n  { label: 'right frontal bone', value: rgbToHex(203, 179, 77) },\n  { label: 'left frontal bone', value: rgbToHex(203, 179, 77) },\n  { label: 'right parietal bone', value: rgbToHex(229, 204, 109) },\n  { label: 'left parietal bone', value: rgbToHex(229, 204, 109) },\n  { label: 'right temporal bone', value: rgbToHex(255, 243, 152) },\n  { label: 'left temporal bone', value: rgbToHex(255, 243, 152) },\n  { label: 'right sphenoid bone', value: rgbToHex(209, 185, 85) },\n  { label: 'left sphenoid bone', value: rgbToHex(209, 185, 85) },\n  { label: 'right ethmoid bone', value: rgbToHex(248, 223, 131) },\n  { label: 'left ethmoid bone', value: rgbToHex(248, 223, 131) },\n  { label: 'occipital bone', value: rgbToHex(255, 230, 138) },\n  { label: 'maxilla', value: rgbToHex(196, 172, 68) },\n  { label: 'right zygomatic bone', value: rgbToHex(255, 255, 167) },\n  { label: 'right lacrimal bone', value: rgbToHex(255, 250, 160) },\n  { label: 'vomer bone', value: rgbToHex(255, 237, 145) },\n  { label: 'right palatine bone', value: rgbToHex(242, 217, 123) },\n  { label: 'left palatine bone', value: rgbToHex(242, 217, 123) },\n  { label: 'mandible', value: rgbToHex(222, 198, 101) },\n  { label: 'neck', value: rgbToHex(177, 122, 101) },\n  { label: 'muscles of neck', value: rgbToHex(213, 124, 109) },\n  { label: 'pharynx', value: rgbToHex(184, 105, 108) },\n  { label: 'larynx', value: rgbToHex(150, 208, 243) },\n  { label: 'thyroid gland', value: rgbToHex(62, 162, 114) },\n  { label: 'right parathyroid glands', value: rgbToHex(62, 162, 114) },\n  { label: 'left parathyroid glands', value: rgbToHex(62, 162, 114) },\n  { label: 'skeleton of neck', value: rgbToHex(242, 206, 142) },\n  { label: 'hyoid bone', value: rgbToHex(250, 210, 139) },\n  { label: 'cervical vertebral column', value: rgbToHex(255, 255, 207) },\n  { label: 'thorax', value: rgbToHex(177, 122, 101) },\n  { label: 'trachea', value: rgbToHex(182, 228, 255) },\n  { label: 'bronchi', value: rgbToHex(175, 216, 244) },\n  { label: 'right lung', value: rgbToHex(197, 165, 145) },\n  { label: 'left lung', value: rgbToHex(197, 165, 145) },\n  { label: 'superior lobe of right lung', value: rgbToHex(172, 138, 115) },\n  { label: 'superior lobe of left lung', value: rgbToHex(172, 138, 115) },\n  { label: 'middle lobe of right lung', value: rgbToHex(202, 164, 140) },\n  { label: 'inferior lobe of right lung', value: rgbToHex(224, 186, 162) },\n  { label: 'inferior lobe of left lung', value: rgbToHex(224, 186, 162) },\n  { label: 'pleura', value: rgbToHex(255, 245, 217) },\n  { label: 'heart', value: rgbToHex(206, 110, 84) },\n  { label: 'right atrium', value: rgbToHex(210, 115, 89) },\n  { label: 'left atrium', value: rgbToHex(203, 108, 81) },\n  { label: 'atrial septum', value: rgbToHex(233, 138, 112) },\n  { label: 'ventricular septum', value: rgbToHex(195, 100, 73) },\n  { label: 'right ventricle of heart', value: rgbToHex(181, 85, 57) },\n  { label: 'left ventricle of heart', value: rgbToHex(152, 55, 13) },\n  { label: 'mitral valve', value: rgbToHex(159, 63, 27) },\n  { label: 'tricuspid valve', value: rgbToHex(166, 70, 38) },\n  { label: 'aortic valve', value: rgbToHex(218, 123, 97) },\n  { label: 'pulmonary valve', value: rgbToHex(225, 130, 104) },\n  { label: 'aorta', value: rgbToHex(224, 97, 76) },\n  { label: 'pericardium', value: rgbToHex(255, 244, 209) },\n  { label: 'pericardial cavity', value: rgbToHex(184, 122, 154) },\n  { label: 'esophagus', value: rgbToHex(211, 171, 143) },\n  { label: 'thymus', value: rgbToHex(47, 150, 103) },\n  { label: 'mediastinum', value: rgbToHex(255, 244, 209) },\n  { label: 'skin of thoracic wall', value: rgbToHex(173, 121, 88) },\n  { label: 'muscles of thoracic wall', value: rgbToHex(188, 95, 76) },\n  { label: 'skeleton of thorax', value: rgbToHex(255, 239, 172) },\n  { label: 'thoracic vertebral column', value: rgbToHex(226, 202, 134) },\n  { label: 'ribs', value: rgbToHex(253, 232, 158) },\n  { label: 'sternum', value: rgbToHex(244, 217, 154) },\n  { label: 'right clavicle', value: rgbToHex(205, 179, 108) },\n  { label: 'left clavicle', value: rgbToHex(205, 179, 108) },\n  { label: 'abdominal cavity', value: rgbToHex(186, 124, 161) },\n  { label: 'abdomen', value: rgbToHex(177, 122, 101) },\n  { label: 'peritoneum', value: rgbToHex(255, 255, 220) },\n  { label: 'omentum', value: rgbToHex(234, 234, 194) },\n  { label: 'peritoneal cavity', value: rgbToHex(204, 142, 178) },\n  { label: 'retroperitoneal space', value: rgbToHex(180, 119, 153) },\n  { label: 'stomach', value: rgbToHex(216, 132, 105) },\n  { label: 'duodenum', value: rgbToHex(255, 253, 229) },\n  { label: 'small bowel', value: rgbToHex(205, 167, 142) },\n  { label: 'colon', value: rgbToHex(204, 168, 143) },\n  { label: 'anus', value: rgbToHex(255, 224, 199) },\n  { label: 'liver', value: rgbToHex(221, 130, 101) },\n  { label: 'biliary tree', value: rgbToHex(0, 145, 30) },\n  { label: 'gallbladder', value: rgbToHex(139, 150, 98) },\n  { label: 'pancreas', value: rgbToHex(249, 180, 111) },\n  { label: 'spleen', value: rgbToHex(157, 108, 162) },\n  { label: 'urinary system', value: rgbToHex(203, 136, 116) },\n  { label: 'right kidney', value: rgbToHex(185, 102, 83) },\n  { label: 'left kidney', value: rgbToHex(185, 102, 83) },\n  { label: 'right ureter', value: rgbToHex(247, 182, 164) },\n  { label: 'left ureter', value: rgbToHex(247, 182, 164) },\n  { label: 'urinary bladder', value: rgbToHex(222, 154, 132) },\n  { label: 'urethra', value: rgbToHex(124, 186, 223) },\n  { label: 'right adrenal gland', value: rgbToHex(249, 186, 150) },\n  { label: 'left adrenal gland', value: rgbToHex(249, 186, 150) },\n  { label: 'female internal genitalia', value: rgbToHex(244, 170, 147) },\n  { label: 'uterus', value: rgbToHex(255, 181, 158) },\n  { label: 'right fallopian tube', value: rgbToHex(255, 190, 165) },\n  { label: 'left fallopian tube', value: rgbToHex(227, 153, 130) },\n  { label: 'right ovary', value: rgbToHex(213, 141, 113) },\n  { label: 'left ovary', value: rgbToHex(213, 141, 113) },\n  { label: 'vagina', value: rgbToHex(193, 123, 103) },\n  { label: 'male internal genitalia', value: rgbToHex(216, 146, 127) },\n  { label: 'prostate', value: rgbToHex(230, 158, 140) },\n  { label: 'right seminal vesicle', value: rgbToHex(245, 172, 147) },\n  { label: 'left seminal vesicle', value: rgbToHex(245, 172, 147) },\n  { label: 'right deferent duct', value: rgbToHex(241, 172, 151) },\n  { label: 'left deferent duct', value: rgbToHex(241, 172, 151) },\n  { label: 'skin of abdominal wall', value: rgbToHex(177, 124, 92) },\n  { label: 'muscles of abdominal wall', value: rgbToHex(171, 85, 68) },\n  { label: 'skeleton of abdomen', value: rgbToHex(217, 198, 131) },\n  { label: 'lumbar vertebral column', value: rgbToHex(212, 188, 102) },\n  { label: 'female external genitalia', value: rgbToHex(185, 135, 134) },\n  { label: 'male external genitalia', value: rgbToHex(185, 135, 134) },\n  { label: 'skeleton of upper limb', value: rgbToHex(198, 175, 125) },\n  { label: 'muscles of upper limb', value: rgbToHex(194, 98, 79) },\n  { label: 'right upper limb', value: rgbToHex(177, 122, 101) },\n  { label: 'left upper limb', value: rgbToHex(177, 122, 101) },\n  { label: 'right shoulder', value: rgbToHex(177, 122, 101) },\n  { label: 'left shoulder', value: rgbToHex(177, 122, 101) },\n  { label: 'right arm', value: rgbToHex(177, 122, 101) },\n  { label: 'left arm', value: rgbToHex(177, 122, 101) },\n  { label: 'right elbow', value: rgbToHex(177, 122, 101) },\n  { label: 'left elbow', value: rgbToHex(177, 122, 101) },\n  { label: 'right forearm', value: rgbToHex(177, 122, 101) },\n  { label: 'left forearm', value: rgbToHex(177, 122, 101) },\n  { label: 'right wrist', value: rgbToHex(177, 122, 101) },\n  { label: 'left wrist', value: rgbToHex(177, 122, 101) },\n  { label: 'right hand', value: rgbToHex(177, 122, 101) },\n  { label: 'left hand', value: rgbToHex(177, 122, 101) },\n  { label: 'skeleton of lower limb', value: rgbToHex(255, 238, 170) },\n  { label: 'muscles of lower limb', value: rgbToHex(206, 111, 93) },\n  { label: 'right lower limb', value: rgbToHex(177, 122, 101) },\n  { label: 'left lower limb', value: rgbToHex(177, 122, 101) },\n  { label: 'right hip', value: rgbToHex(177, 122, 101) },\n  { label: 'left hip', value: rgbToHex(177, 122, 101) },\n  { label: 'right thigh', value: rgbToHex(177, 122, 101) },\n  { label: 'left thigh', value: rgbToHex(177, 122, 101) },\n  { label: 'right knee', value: rgbToHex(177, 122, 101) },\n  { label: 'left knee', value: rgbToHex(177, 122, 101) },\n  { label: 'right leg', value: rgbToHex(177, 122, 101) },\n  { label: 'left leg', value: rgbToHex(177, 122, 101) },\n  { label: 'right foot', value: rgbToHex(177, 122, 101) },\n  { label: 'left foot', value: rgbToHex(177, 122, 101) },\n  { label: 'peripheral nervous system', value: rgbToHex(216, 186, 0) },\n  { label: 'autonomic nerve', value: rgbToHex(255, 226, 77) },\n  { label: 'sympathetic trunk', value: rgbToHex(255, 243, 106) },\n  { label: 'cranial nerves', value: rgbToHex(255, 234, 92) },\n  { label: 'vagus nerve', value: rgbToHex(240, 210, 35) },\n  { label: 'peripheral nerve', value: rgbToHex(224, 194, 0) },\n  { label: 'circulatory system', value: rgbToHex(213, 99, 79) },\n  { label: 'systemic arterial system', value: rgbToHex(217, 102, 81) },\n  { label: 'systemic venous system', value: rgbToHex(0, 147, 202) },\n  { label: 'pulmonary arterial system', value: rgbToHex(0, 122, 171) },\n  { label: 'pulmonary venous system', value: rgbToHex(186, 77, 64) },\n  { label: 'lymphatic system', value: rgbToHex(111, 197, 131) },\n  { label: 'needle', value: rgbToHex(240, 255, 30) },\n  { label: 'region 0', value: rgbToHex(185, 232, 61) },\n  { label: 'region 1', value: rgbToHex(0, 226, 255) },\n  { label: 'region 2', value: rgbToHex(251, 159, 255) },\n  { label: 'region 3', value: rgbToHex(230, 169, 29) },\n  { label: 'region 4', value: rgbToHex(0, 194, 113) },\n  { label: 'region 5', value: rgbToHex(104, 160, 249) },\n  { label: 'region 6', value: rgbToHex(221, 108, 158) },\n  { label: 'region 7', value: rgbToHex(137, 142, 0) },\n  { label: 'region 8', value: rgbToHex(230, 70, 0) },\n  { label: 'region 9', value: rgbToHex(0, 147, 0) },\n  { label: 'region 10', value: rgbToHex(0, 147, 248) },\n  { label: 'region 11', value: rgbToHex(231, 0, 206) },\n  { label: 'region 12', value: rgbToHex(129, 78, 0) },\n  { label: 'region 13', value: rgbToHex(0, 116, 0) },\n  { label: 'region 14', value: rgbToHex(0, 0, 255) },\n  { label: 'region 15', value: rgbToHex(157, 0, 0) },\n  { label: 'unknown', value: rgbToHex(100, 100, 130) },\n  { label: 'cyst', value: rgbToHex(205, 205, 100) },\n];\n","import React, { Component } from 'react';\nimport './SegmentationLabelForm.styl';\nimport PropTypes from 'prop-types';\nimport { SketchPicker } from 'react-color';\nimport CreatableSelect from 'react-select/creatable';\nimport { GenericAnatomyColors } from '../utils/GenericAnatomyColors';\nimport chroma from 'chroma-js';\n\nexport default class SegmentationLabelForm extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    description: PropTypes.string,\n    color: PropTypes.string,\n    onSubmit: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    var options = GenericAnatomyColors;\n    var item = null;\n    for (const i of options) {\n      if (i.label === props.name) {\n        if (i.color !== props.color) {\n          item = { label: props.name, value: props.color };\n          options = [...options, item];\n        } else {\n          item = i;\n        }\n        break;\n      }\n    }\n\n    if (!item) {\n      item = { label: props.name, value: props.color };\n      options = [...options, item];\n    }\n\n    this.state = {\n      name: props.name,\n      description: props.description,\n      color: props.color,\n      isLoading: false,\n      options: options,\n      value: item,\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  setColor = color => {\n    this.setState({ color: color.hex });\n  };\n\n  onSubmit = () => {\n    this.props.onSubmit(\n      this.state.name,\n      this.state.description,\n      this.state.color\n    );\n  };\n\n  createOption = label => ({\n    label,\n    value: this.state.color,\n  });\n\n  handleChange = item => {\n    if (!item) return;\n\n    var color = this.state.color;\n    for (const i of this.state.options) {\n      if (i.label === item.label) {\n        color = item.value;\n        break;\n      }\n    }\n    this.setState({ name: item.label, color: color, value: item });\n  };\n\n  handleCreate = inputValue => {\n    this.setState({ isLoading: true });\n    setTimeout(() => {\n      const { options } = this.state;\n      const newOption = this.createOption(inputValue);\n      this.setState({\n        isLoading: false,\n        options: [...options, newOption],\n        value: newOption,\n        name: newOption.label,\n      });\n    }, 1000);\n  };\n\n  render() {\n    const dot = (color = '#ccc') => ({\n      alignItems: 'center',\n      display: 'flex',\n\n      ':before': {\n        backgroundColor: color,\n        borderRadius: 10,\n        content: '\" \"',\n        display: 'block',\n        marginRight: 8,\n        height: 10,\n        width: 10,\n      },\n    });\n\n    const colourStyles = {\n      control: styles => ({ ...styles, backgroundColor: 'white' }),\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        const value =\n          data.value && data.value[0] === '#' ? data.value : this.state.color;\n        const color = chroma(value);\n        return {\n          ...styles,\n          backgroundColor: isDisabled\n            ? null\n            : isSelected\n            ? value\n            : isFocused\n            ? color.alpha(0.1).css()\n            : null,\n          color: isDisabled\n            ? '#ccc'\n            : isSelected\n            ? chroma.contrast(color, 'white') > 2\n              ? 'white'\n              : 'black'\n            : value,\n          cursor: isDisabled ? 'not-allowed' : 'default',\n\n          ':active': {\n            ...styles[':active'],\n            backgroundColor:\n              !isDisabled && (isSelected ? value : color.alpha(0.3).css()),\n          },\n        };\n      },\n      input: styles => ({ ...styles, ...dot() }),\n      placeholder: styles => ({ ...styles, ...dot() }),\n      singleValue: (styles, { data }) => ({ ...styles, ...dot(data.value) }),\n    };\n\n    return (\n      <div>\n        <div className=\"mb-3\">\n          <label\n            htmlFor=\"name\"\n            className=\"form-label\"\n            style={{ color: 'white' }}\n          >\n            Name\n          </label>\n          <CreatableSelect\n            isClearable\n            isDisabled={this.state.isLoading}\n            isLoading={this.state.isLoading}\n            onChange={this.handleChange}\n            onInputChange={this.handleChange}\n            onCreateOption={this.handleCreate}\n            options={this.state.options}\n            styles={colourStyles}\n            value={this.state.value}\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <label\n            htmlFor=\"color\"\n            className=\"form-label\"\n            style={{ color: 'white' }}\n          >\n            Color\n          </label>\n          <SketchPicker\n            color={this.state.color}\n            onChangeComplete={this.setColor}\n            disableAlpha={true}\n          />\n        </div>\n        <br />\n        <div className=\"mb-3 text-right\">\n          <button\n            className=\"actionButton\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n          >\n            OK\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import { GenericAnatomyColors, GenericNames } from './GenericAnatomyColors';\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction randomRGB() {\n  const o = Math.round,\n    r = Math.random,\n    s = 255;\n  return rgbToHex(o(r() * s), o(r() * s), o(r() * s));\n}\n\nfunction randomName() {\n  return GenericNames[getRandomInt(0, GenericNames.length)];\n}\n\nfunction componentToHex(c) {\n  const hex = c.toString(16);\n  return hex.length === 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nfunction hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null;\n}\n\nfunction getLabelColor(label, rgb = true) {\n  const name = label.toLowerCase();\n  for (const i of GenericAnatomyColors) {\n    if (i.label === name) {\n      return rgb ? hexToRgb(i.value) : i.value;\n    }\n  }\n  return null;\n}\n\nexport class CookieUtils {\n  static setCookie(name, value, exp_y, exp_m, exp_d, path, domain, secure) {\n    let cookie_string = name + '=' + escape(value);\n    if (exp_y) {\n      let expires = new Date(exp_y, exp_m, exp_d);\n      cookie_string += '; expires=' + expires.toGMTString();\n    }\n    if (path) cookie_string += '; path=' + escape(path);\n    if (domain) cookie_string += '; domain=' + escape(domain);\n    if (secure) cookie_string += '; secure';\n    document.cookie = cookie_string;\n  }\n\n  static getCookie(cookie_name) {\n    let results = document.cookie.match(\n      '(^|;) ?' + cookie_name + '=([^;]*)(;|$)'\n    );\n    if (results) return unescape(results[2]);\n    else return null;\n  }\n\n  static getCookieString(name, defaultVal = '') {\n    const val = CookieUtils.getCookie(name);\n\n    if (!val) {\n      CookieUtils.setCookie(name, defaultVal);\n      return defaultVal;\n    }\n    return val;\n  }\n\n  static getCookieBool(name, defaultVal = false) {\n    const val = CookieUtils.getCookie(name, defaultVal);\n    return !!JSON.parse(String(val).toLowerCase());\n  }\n\n  static getCookieNumber(name, defaultVal = 0) {\n    const val = CookieUtils.getCookie(name, defaultVal);\n    return Number(val);\n  }\n}\n\nexport {\n  getRandomInt,\n  randomRGB,\n  randomName,\n  rgbToHex,\n  hexToRgb,\n  getLabelColor,\n};\n","import nrrd from 'nrrd-js';\nimport pako from 'pako';\nimport readImageArrayBuffer from 'itk/readImageArrayBuffer';\nimport writeArrayBuffer from 'itk/writeArrayBuffer';\nimport config from 'itk/itkConfig';\n\nconst pkgJSON = require('../../package.json');\nconst itkVersion = pkgJSON.dependencies.itk.substring(1);\nconfig.itkModulesPath = 'https://unpkg.com/itk@' + itkVersion; // HACK to use ITK from CDN\n\nexport default class SegmentationReader {\n  static parseNrrdData(data) {\n    let nrrdfile = nrrd.parse(data);\n\n    // Currently gzip is not supported in nrrd.js\n    if (nrrdfile.encoding === 'gzip') {\n      const buffer = pako.inflate(nrrdfile.buffer).buffer;\n\n      nrrdfile.encoding = 'raw';\n      nrrdfile.data = new Uint16Array(buffer);\n      nrrdfile.buffer = buffer;\n    }\n\n    const image = nrrdfile.buffer;\n    const header = nrrdfile;\n    delete header.data;\n    delete header.buffer;\n\n    return {\n      header,\n      image,\n    };\n  }\n\n  static saveFile(blob, filename) {\n    if (window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      const a = document.createElement('a');\n      document.body.appendChild(a);\n\n      const url = window.URL.createObjectURL(blob);\n      a.href = url;\n      a.download = filename;\n      a.click();\n\n      setTimeout(() => {\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      }, 0);\n    }\n  }\n\n  // GZIP write not supported by nrrd-js (so use ITK save with compressed = true)\n  static serializeNrrdCompressed(header, image, filename) {\n    const nrrdBuffer = SegmentationReader.serializeNrrd(header, image);\n\n    const reader = readImageArrayBuffer(null, nrrdBuffer, 'temp.nrrd');\n    reader.then(function(response) {\n      const writer = writeArrayBuffer(\n        response.webWorker,\n        true,\n        response.image,\n        filename\n      );\n      writer.then(function(response) {\n        SegmentationReader.saveFile(new Blob([response.arrayBuffer]), filename);\n      });\n    });\n  }\n\n  static serializeNrrd(header, image, filename) {\n    let nrrdOrg = Object.assign({}, header);\n    nrrdOrg.buffer = image;\n    nrrdOrg.data = new Uint16Array(image);\n\n    const nrrdBuffer = nrrd.serialize(nrrdOrg);\n    if (filename) {\n      SegmentationReader.saveFile(new Blob([nrrdBuffer]), filename);\n    }\n    return nrrdBuffer;\n  }\n}\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, SimpleDialog } from '@ohif/ui';\nimport {\n  UIModalService,\n  UINotificationService,\n  UIDialogService,\n} from '@ohif/core';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport './SegmentationList.styl';\n\nimport {\n  createSegment,\n  deleteSegment,\n  flattenLabelmaps,\n  getFirstSegmentId,\n  getLabelMaps,\n  getSegmentInfo,\n  updateSegment,\n  updateSegmentMeta,\n} from '../utils/SegmentationUtils';\nimport SegmentationLabelForm from './SegmentationLabelForm';\nimport {\n  hexToRgb,\n  randomName,\n  randomRGB,\n  rgbToHex,\n  getLabelColor,\n} from '../utils/GenericUtils';\nimport SegmentationReader from '../utils/SegmentationReader';\n\nconst ColoredCircle = ({ color }) => {\n  return (\n    <span\n      className=\"segColor\"\n      style={{ backgroundColor: `rgba(${color.join(',')})` }}\n    />\n  );\n};\n\nColoredCircle.propTypes = {\n  color: PropTypes.array.isRequired,\n};\n\nexport default class SegmentationList extends Component {\n  static propTypes = {\n    viewConstants: PropTypes.any,\n    onSegmentCreated: PropTypes.func,\n    onSegmentUpdated: PropTypes.func,\n    onSegmentDeleted: PropTypes.func,\n    onSegmentSelected: PropTypes.func,\n    client: PropTypes.func,\n    canEditStudy: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.notification = UINotificationService.create({});\n    this.uiModelService = UIModalService.create({});\n    this.uiDialogService = UIDialogService.create({});\n    const { element } = this.props.viewConstants;\n    const labelmaps = getLabelMaps(element);\n    const segments = flattenLabelmaps(labelmaps);\n\n    this.state = {\n      element: element,\n      segments: segments,\n      selectedSegmentId: segments && segments.length ? segments[0].id : null,\n      header: null,\n      addedSegmentName: '',\n      addedSegmentColor: null,\n    };\n  }\n\n  getSelectedActiveIndex = () => {\n    const id = this.state.selectedSegmentId;\n    if (id) {\n      let index = id.split('+').map(Number);\n      return { id, labelmapIndex: index[0], segmentIndex: index[1] };\n    }\n    return null;\n  };\n\n  onAddSegment = (name, description, color) => {\n    this.uiModelService.hide();\n\n    const { element } = this.props.viewConstants;\n    const { id } = createSegment(element, name, description, hexToRgb(color));\n    this.refreshSegTable(id);\n\n    this.setState({\n      addedSegmentName: name,\n      addedSegmentColor: color,\n    });\n\n    if (this.props.onSegmentCreated) {\n      this.props.onSegmentCreated(id);\n    }\n  };\n\n  onUpdateSegment = (name, description, color) => {\n    this.uiModelService.hide();\n\n    const { element } = this.props.viewConstants;\n    const activeIndex = this.getSelectedActiveIndex();\n    updateSegmentMeta(\n      element,\n      activeIndex.labelmapIndex,\n      activeIndex.segmentIndex,\n      name,\n      description,\n      hexToRgb(color)\n    );\n    this.refreshSegTable(activeIndex.id);\n\n    if (this.props.onSegmentUpdated) {\n      this.props.onSegmentUpdated(activeIndex.id);\n    }\n  };\n\n  onSelectSegment = evt => {\n    let id = evt.currentTarget.value;\n    this.setState({ selectedSegmentId: id });\n  };\n\n  onClickAddSegment = () => {\n    this.uiModelService.show({\n      content: SegmentationLabelForm,\n      title: 'Add New Segment',\n      contentProps: {\n        name: randomName(),\n        description: '',\n        color: randomRGB(),\n        onSubmit: this.onAddSegment,\n      },\n      customClassName: 'segmentationLabelForm',\n      shouldCloseOnEsc: true,\n    });\n  };\n\n  onClickEditSegment = () => {\n    const { element } = this.props.viewConstants;\n    const activeIndex = this.getSelectedActiveIndex();\n    const { name, description, color } = getSegmentInfo(\n      element,\n      activeIndex.labelmapIndex,\n      activeIndex.segmentIndex\n    );\n\n    this.uiModelService.show({\n      content: SegmentationLabelForm,\n      title: 'Edit Label',\n      contentProps: {\n        name: name,\n        description: description,\n        color: rgbToHex(\n          Math.floor(color[0]),\n          Math.floor(color[1]),\n          Math.floor(color[2])\n        ),\n        onSubmit: this.onUpdateSegment,\n      },\n      customClassName: 'segmentationLabelForm',\n      shouldCloseOnEsc: true,\n    });\n  };\n\n  onUpdateLabelOrDesc = (id, evt, label) => {\n    const { element } = this.props.viewConstants;\n    let index = id.split('+').map(Number);\n    const labelmapIndex = index[0];\n    const segmentIndex = index[1];\n\n    updateSegmentMeta(\n      element,\n      labelmapIndex,\n      segmentIndex,\n      label ? evt.currentTarget.textContent : undefined,\n      label ? undefined : evt.currentTarget.textContent\n    );\n  };\n\n  onClickDeleteSegment = () => {\n    const { element } = this.props.viewConstants;\n    const activeIndex = this.getSelectedActiveIndex();\n\n    deleteSegment(element, activeIndex.labelmapIndex, activeIndex.segmentIndex);\n    this.setState({ selectedSegmentId: null });\n    this.refreshSegTable(null);\n\n    if (this.props.onSegmentDeleted) {\n      this.props.onSegmentDeleted(activeIndex.id);\n    }\n  };\n\n  onClickExportSegments = () => {\n    const { getters } = cornerstoneTools.getModule('segmentation');\n    const { labelmaps3D } = getters.labelmaps3D(\n      this.props.viewConstants.element\n    );\n    if (!labelmaps3D) {\n      console.info('LabelMap3D is empty.. so zero segments');\n      return;\n    }\n\n    this.notification.show({\n      title: 'AI Tools',\n      message: 'Preparing the label to download as .nrrd',\n      type: 'info',\n      duration: 5000,\n    });\n\n    for (let i = 0; i < labelmaps3D.length; i++) {\n      const labelmap3D = labelmaps3D[i];\n      if (!labelmap3D) {\n        console.warn('Missing Label; so ignore');\n        continue;\n      }\n\n      const metadata = labelmap3D.metadata.data\n        ? labelmap3D.metadata.data\n        : labelmap3D.metadata;\n      if (!metadata || !metadata.length) {\n        console.warn('Missing Meta; so ignore');\n        continue;\n      }\n\n      SegmentationReader.serializeNrrd(\n        this.state.header,\n        labelmap3D.buffer,\n        'segment-' + i + '.nrrd'\n      );\n    }\n  };\n\n  refreshSegTable = id => {\n    const { element } = this.props.viewConstants;\n\n    const labelmaps = getLabelMaps(element);\n    const segments = flattenLabelmaps(labelmaps);\n    if (!segments.length) {\n      id = undefined;\n    } else if (!id) {\n      id = segments[segments.length - 1].id;\n    }\n\n    if (id) {\n      this.setState({ segments: segments, selectedSegmentId: id });\n    } else {\n      this.setState({ segments: segments });\n    }\n  };\n\n  setActiveSegment = () => {\n    const { element } = this.props.viewConstants;\n    const activeIndex = this.getSelectedActiveIndex();\n\n    const { setters } = cornerstoneTools.getModule('segmentation');\n    const { labelmapIndex, segmentIndex } = activeIndex;\n\n    setters.activeLabelmapIndex(element, labelmapIndex);\n    setters.activeSegmentIndex(element, segmentIndex);\n\n    // Refresh\n    cornerstone.updateImage(element);\n\n    if (this.props.onSegmentSelected) {\n      this.props.onSegmentSelected(activeIndex.id);\n    }\n  };\n\n  updateView = async (response, labels, operation, slice, overlap) => {\n    const { element, numberOfFrames } = this.props.viewConstants;\n\n    let activeIndex = this.getSelectedActiveIndex();\n    const { header, image } = SegmentationReader.parseNrrdData(response.data);\n    SegmentationReader.serializeNrrd(header, image, 'result' + '.nrrd');\n    this.setState({ header: header });\n    if (labels) {\n      let i = 0;\n      for (var label in labels) {\n        if (Array.isArray(labels)) {\n          label = labels[label] + '#1';\n          this.state.segments.forEach(function(seg) {\n            if (seg.meta.SegmentLabel === label) {\n              let index = parseInt(seg.meta.SegmentLabel.split('#')[1]);\n              label = label.replace(`#${index}`, `#${index + 1}`);\n            }\n          });\n        }\n\n        if (label === 'background') {\n          continue;\n        }\n\n        //console.log(getLabelColor('spleen'));\n\n        const resp = createSegment(\n          element,\n          label,\n          '',\n          getLabelColor(label),\n          i === 0 ? !overlap : false\n        );\n        if (i === 0) {\n          activeIndex = resp;\n        }\n        i++;\n\n        if (this.state.selectedSegmentId) {\n          this.refreshSegTable();\n        } else {\n          this.refreshSegTable(activeIndex.id);\n        }\n      }\n    }\n    if (!operation && overlap) {\n      operation = 'overlap';\n    }\n\n    updateSegment(\n      element,\n      activeIndex.labelmapIndex,\n      activeIndex.segmentIndex,\n      image,\n      numberOfFrames,\n      operation,\n      slice\n    );\n  };\n\n  onClickSubmit = () => {\n    this.uiDialogService.create({\n      content: SimpleDialog.InputDialog,\n      contentProps: {\n        defaultValue: 'Segmentation 1',\n        title: 'Submission Description',\n        onClose: this.onClose,\n        onSubmit: this.onClickSubmitLabel,\n      },\n    });\n  };\n\n  onClose = () => {\n    this.uiDialogService.dismissAll();\n  };\n\n  onClickSubmitLabel = async description => {\n    const { getters } = cornerstoneTools.getModule('segmentation');\n    const { labelmaps3D } = getters.labelmaps3D(\n      this.props.viewConstants.element\n    );\n    if (!labelmaps3D) {\n      console.info('LabelMap3D is empty.. so zero segments');\n      return;\n    }\n\n    this.notification.show({\n      title: `AI Tools - ${description}`,\n      message: 'Preparing to submit. This can take a few seconds...',\n      type: 'info',\n      duration: 10000,\n    });\n\n    for (let i = 0; i < labelmaps3D.length; i++) {\n      const labelmap3D = labelmaps3D[i];\n\n      if (!labelmap3D) {\n        console.warn('Missing Label; so ignore');\n        continue;\n      }\n\n      const metadata = labelmap3D.metadata.data\n        ? labelmap3D.metadata.data\n        : labelmap3D.metadata;\n      if (!metadata || !metadata.length) {\n        console.warn('Missing Meta; so ignore');\n        continue;\n      }\n\n      let segments = flattenLabelmaps(\n        getLabelMaps(this.props.viewConstants.element)\n      );\n\n      if (metadata.length !== segments.length + 1) {\n        console.warn('Segments and Metadata NOT matching; So Ignore');\n        continue;\n      }\n\n      const image = this.props.viewConstants.SeriesInstanceUID;\n      const label = new Blob([labelmap3D.buffer], {\n        type: 'application/octet-stream',\n      });\n\n      const params = { label_info: segments, submission_name: description };\n\n      const response = await this.props\n        .client()\n        .save_label(image, label, params);\n\n      if (response.status !== 201) {\n        this.notification.show({\n          title: 'AI Tools',\n          message: 'Failed to save label',\n          type: 'error',\n          duration: 10000,\n        });\n      } else {\n        this.notification.show({\n          title: 'AI Tools',\n          message: 'Segmentation series submitted to server',\n          type: 'success',\n          duration: 10000,\n        });\n      }\n      this.refreshSegTable();\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.selectedSegmentId !== this.state.selectedSegmentId) {\n      if (this.state.selectedSegmentId) {\n        this.setActiveSegment();\n      }\n    }\n  }\n\n  render() {\n    const segmentId = this.state.selectedSegmentId\n      ? this.state.selectedSegmentId\n      : getFirstSegmentId(this.props.viewConstants.element);\n    console.log('render seg list: ' + segmentId);\n\n    return (\n      <div className=\"segmentationList\">\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <button\n                  className=\"segButton\"\n                  onClick={this.onClickAddSegment}\n                  title=\"Add Segment\"\n                >\n                  <Icon name=\"plus\" width=\"12px\" height=\"12px\" />\n                </button>\n                &nbsp;\n                <button\n                  className=\"segButton\"\n                  onClick={this.onClickEditSegment}\n                  title=\"Edit Selected Segment\"\n                  disabled={!segmentId}\n                >\n                  <Icon name=\"edit\" width=\"12px\" height=\"12px\" />\n                </button>\n                &nbsp;\n                <button\n                  className=\"segButton\"\n                  onClick={this.onClickDeleteSegment}\n                  title=\"Clear Selected Segment\"\n                  disabled={!segmentId}\n                >\n                  <Icon name=\"trash\" width=\"12px\" height=\"12px\" />\n                </button>\n              </td>\n\n              <td align=\"right\">\n                {this.state.header ? (\n                  <button\n                    className=\"segButton\"\n                    onClick={this.onClickExportSegments}\n                    title={'Download Segment'}\n                  >\n                    <Icon name=\"save\" width=\"12px\" height=\"12px\" />\n                  </button>\n                ) : null}\n                &nbsp;\n                {localStorage.getItem('HealthProfessional_Authenticated') &&\n                this.props.canEditStudy ? (\n                  <button\n                    className=\"segButton\"\n                    onClick={this.onClickSubmit}\n                    title={'Submit Segment to Database'}\n                    disabled={!segmentId}\n                  >\n                    <Icon name=\"database\" width=\"12px\" height=\"12px\" />\n                  </button>\n                ) : null}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div className=\"segSection\">\n          <table className=\"segTable\">\n            <thead>\n              <tr>\n                <th width=\"2%\">#</th>\n                <th width=\"18%\">Color</th>\n                <th width=\"80%\">Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.segments.map(seg => (\n                <tr key={seg.id}>\n                  <td>\n                    <input\n                      type=\"radio\"\n                      name=\"segitem\"\n                      value={seg.id}\n                      checked={seg.id === this.state.selectedSegmentId}\n                      onChange={this.onSelectSegment}\n                    />\n                  </td>\n                  <td>\n                    <ColoredCircle color={seg.color} />\n                  </td>\n                  <td\n                    className=\"segEdit\"\n                    contentEditable=\"true\"\n                    suppressContentEditableWarning=\"true\"\n                    onKeyUp={evt => this.onUpdateLabelOrDesc(seg.id, evt, true)}\n                  >\n                    {seg.meta.SegmentLabel}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        {this.state.addedSegmentName && this.state.addedSegmentColor ? (\n          <p\n            style={{\n              color: this.state.addedSegmentColor,\n              marginTop: '10px',\n            }}\n          >\n            <b>*</b> Now, you can draw the segment{' '}\n            <b>{this.state.addedSegmentName}</b> using the Segmentation tools\n            available in the Toolbar.\n          </p>\n        ) : null}\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport axios from 'axios';\n\nexport default class Client {\n  constructor() {\n    this.server_url = new URL('http://localhost/'); //http://localhost/(nome do modelo)/\n  }\n\n  async info() {\n    let url = new URL(`/api/model/`, this.server_url);\n\n    return await Client.api_get(url.toString());\n  }\n\n  async segmentation(model, image, params = {}, label = null) {\n    console.log(params);\n    return this.infer(model, image, params, label, 'arraybuffer');\n  }\n\n  async classification(model, image, params = {}, label = null) {\n    return this.infer(model, image, params, label, 'json');\n  }\n\n  async registration(model, image, params = {}, label = null) {\n    return this.infer(model, image, params, label, 'arraybuffer');\n  }\n\n  async infer(\n    model,\n    image,\n    params,\n    label = null,\n    responseType,\n    result_extension = '.nrrd'\n  ) {\n    //http://localhost/(nome do modelo)/container_api/infer\n    let port = params['port'];\n    let url = new URL(\n      `ml/${model}/${port}/` + // api\n      encodeURIComponent(model) +\n        '/' +\n        encodeURIComponent(image),\n      `http://localhost/` // this.server_url\n    );\n\n    url = url.toString();\n\n    console.log(url);\n\n    if (result_extension) {\n      params.result_extension = result_extension;\n      params.result_dtype = 'uint16';\n      params.result_compress = false;\n    }\n\n    return await Client.api_post(url, params, label, true, responseType);\n  }\n\n  async save_label(image, label, params) {\n    let url = new URL(`/api/label/`, this.server_url);\n    url.searchParams.append('image', image);\n    url = url.toString();\n\n    const data = Client.constructFormDataFromArray(\n      params,\n      label,\n      'label',\n      'label.bin'\n    );\n\n    return await Client.api_put_data(url, data, 'json');\n  }\n\n  static constructFormDataFromArray(params, data, name, fileName) {\n    let formData = new FormData();\n    formData.append('params', JSON.stringify(params));\n    formData.append(name, data, fileName);\n    return formData;\n  }\n\n  static constructFormData(params, files) {\n    let formData = new FormData();\n    formData.append('params', JSON.stringify(params));\n\n    if (files) {\n      if (!Array.isArray(files)) {\n        files = [files];\n      }\n      for (let i = 0; i < files.length; i++) {\n        formData.append(files[i].name, files[i].data, files[i].fileName);\n      }\n    }\n    return formData;\n  }\n\n  static constructFormOrJsonData(params, files) {\n    return files ? Client.constructFormData(params, files) : params;\n  }\n\n  static api_get(url) {\n    const config = {\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n      },\n    };\n    return axios\n      .get(url, config)\n      .then(function(response) {\n        return response;\n      })\n      .catch(function(error) {\n        return error;\n      })\n      .finally(function() {});\n  }\n\n  static api_delete(url) {\n    console.debug('DELETE:: ' + url);\n    return axios\n      .delete(url)\n      .then(function(response) {\n        console.debug(response);\n        return response;\n      })\n      .catch(function(error) {\n        return error;\n      })\n      .finally(function() {});\n  }\n\n  static api_post(\n    url,\n    params,\n    files,\n    form = true,\n    responseType = 'arraybuffer'\n  ) {\n    const data = form\n      ? Client.constructFormData(params, files)\n      : Client.constructFormOrJsonData(params, files);\n\n    return Client.api_post_data(url, data, responseType);\n  }\n\n  static api_post_data(url, data, responseType) {\n    console.debug('POST:: ' + url);\n\n    return axios\n      .post(url, data, {\n        responseType: responseType,\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          accept: ['application/json', 'multipart/form-data'],\n        },\n      })\n      .then(function(response) {\n        console.debug(response);\n        return response;\n      })\n      .catch(function(error) {\n        return error;\n      })\n      .finally(function() {});\n  }\n\n  static api_put(url, params, files, form = false, responseType = 'json') {\n    const data = form\n      ? Client.constructFormData(params, files)\n      : Client.constructFormOrJsonData(params, files);\n    return Client.api_put_data(url, data, responseType);\n  }\n\n  static api_put_data(url, data, responseType = 'json') {\n    console.debug('PUT:: ' + url);\n    return axios\n      .put(url, data, {\n        responseType: responseType,\n        headers: {\n          accept: ['application/json', 'multipart/form-data'],\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n        },\n      })\n      .then(function(response) {\n        console.debug(response);\n        return response;\n      })\n      .catch(function(error) {\n        return error;\n      });\n  }\n}\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport cornerstoneTools from 'cornerstone-tools';\nimport cornerstone from 'cornerstone-core';\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport { utils, log } from '@ohif/core';\nimport { ScrollableArea, TableList, Icon } from '@ohif/ui';\nimport DICOMSegTempCrosshairsTool from '../../tools/DICOMSegTempCrosshairsTool';\n\nimport setActiveLabelmap from '../../utils/setActiveLabelMap';\nimport refreshViewports from '../../utils/refreshViewports';\nimport axiosInstance from 'axios';\nimport { UINotificationService } from '@ohif/core';\n\nimport {\n  BrushColorSelector,\n  BrushRadius,\n  SegmentationItem,\n  SegmentItem,\n  SegmentationSelect,\n} from '../index';\n\nimport './SegmentationPanel.css';\nimport SegmentationSettings from '../SegmentationSettings/SegmentationSettings';\nimport SegmentationList from '../../../../monai-label/src/components/SegmentationList';\nimport { getImageIdsForDisplaySet } from '../../../../monai-label/src/utils/SegmentationUtils';\nimport Client from '../../../../monai-label/src/services/Client';\nimport MD5 from 'md5.js';\n\nconst { studyMetadataManager } = utils;\n\n/**\n * SegmentationPanel component\n *\n * @param {Array} props.studies - Studies data\n * @param {Array} props.viewports - Viewports data (viewportSpecificData)\n * @param {number} props.activeIndex - Active viewport index\n * @param {boolean} props.isOpen - Boolean that indicates if the panel is expanded\n * @param {Function} props.onSegmentItemClick - Segment click handler\n * @param {Function} props.onSegmentVisibilityChange - Segment visibiliy change handler\n * @param {Function} props.onConfigurationChange - Configuration change handler\n * @param {Function} props.activeContexts - List of active application contexts\n * @param {Function} props.contexts - List of available application contexts\n * @returns component\n */\nconst SegmentationPanel = ({\n  studies,\n  viewports,\n  activeIndex,\n  isOpen,\n  onSegmentItemClick,\n  onSegmentVisibilityChange,\n  onConfigurationChange,\n  onDisplaySetLoadFailure,\n  onSelectedSegmentationChange,\n  activeContexts = [],\n  contexts = {},\n}) => {\n  const isVTK = useCallback(() => activeContexts.includes(contexts.VTK), [\n    activeContexts,\n    contexts.VTK,\n  ]);\n  const isCornerstone = useCallback(\n    () => activeContexts.includes(contexts.CORNERSTONE),\n    [activeContexts, contexts.CORNERSTONE]\n  );\n\n  /*\n   * TODO: wrap get/set interactions with the cornerstoneTools\n   * store with context to make these kind of things less blurry.\n   */\n  const { configuration } = cornerstoneTools.getModule('segmentation');\n  const DEFAULT_BRUSH_RADIUS = configuration.radius || 10;\n\n  /*\n   * TODO: We shouldn't hardcode brushColor color, in the future\n   * the SEG may set the colorLUT to whatever it wants.\n   */\n  const [state, setState] = useState({\n    brushRadius: DEFAULT_BRUSH_RADIUS,\n    brushColor: 'rgba(221, 85, 85, 1)',\n    selectedSegment: 0,\n    selectedSegmentation: 0,\n    showSettings: false,\n    showList: false,\n    labelMapList: [],\n    segmentList: [],\n    segmentsHidden: [],\n    segmentNumbers: [],\n    isLoading: false,\n    isDisabled: true,\n    viewConstants: null,\n  });\n  const [canEditStudy, setCanEditStudy] = useState(false);\n\n  const getActiveViewport = useCallback(() => viewports[activeIndex], [\n    activeIndex,\n    viewports,\n  ]);\n\n  const getFirstImageId = useCallback(() => {\n    const { StudyInstanceUID, displaySetInstanceUID } = getActiveViewport();\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n    return studyMetadata.getFirstImageId(displaySetInstanceUID);\n  }, [getActiveViewport]);\n\n  const getViewConstants = useCallback(() => {\n    const viewport = viewports[activeIndex];\n\n    const { PatientID } = studies[activeIndex];\n\n    const {\n      StudyInstanceUID,\n      SeriesInstanceUID,\n      displaySetInstanceUID,\n    } = viewport;\n\n    const imageIds = getImageIdsForDisplaySet(\n      studies,\n      StudyInstanceUID,\n      SeriesInstanceUID\n    );\n    const imageIdsToIndex = new Map();\n    for (let i = 0; i < imageIds.length; i++) {\n      imageIdsToIndex.set(imageIds[i], i);\n    }\n\n    const element = cornerstone.getEnabledElements()[activeIndex].element;\n    const cookiePostfix = new MD5()\n      .update(PatientID + StudyInstanceUID + SeriesInstanceUID)\n      .digest('hex');\n\n    setState(state => ({\n      ...state,\n      viewConstants: {\n        PatientID: PatientID,\n        StudyInstanceUID: StudyInstanceUID,\n        SeriesInstanceUID: SeriesInstanceUID,\n        displaySetInstanceUID: displaySetInstanceUID,\n        imageIdsToIndex: imageIdsToIndex,\n        element: element,\n        numberOfFrames: imageIds.length,\n        cookiePostfix: cookiePostfix,\n        viewports: viewports,\n      },\n    }));\n  }, [activeIndex, studies, viewports]);\n\n  const getActiveLabelMaps3D = useCallback(() => {\n    const { labelmaps3D, activeLabelmapIndex } = getBrushStackState();\n    return labelmaps3D[activeLabelmapIndex];\n  }, [getBrushStackState]);\n\n  const getActiveLabelMapIndex = useCallback(() => {\n    const { activeLabelmapIndex } = getBrushStackState();\n    return activeLabelmapIndex;\n  }, [getBrushStackState]);\n\n  const getActiveSegmentIndex = useCallback(() => {\n    const { activeSegmentIndex } = getActiveLabelMaps3D();\n    return activeSegmentIndex;\n  }, [getActiveLabelMaps3D]);\n\n  const getActiveLabelMaps2D = useCallback(() => {\n    const { labelmaps2D } = getActiveLabelMaps3D();\n    return labelmaps2D;\n  }, [getActiveLabelMaps3D]);\n\n  const getCurrentDisplaySet = useCallback(() => {\n    const { StudyInstanceUID, displaySetInstanceUID } = getActiveViewport();\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n    const allDisplaySets = studyMetadata.getDisplaySets();\n    return allDisplaySets.find(\n      ds => ds.displaySetInstanceUID === displaySetInstanceUID\n    );\n  }, [getActiveViewport]);\n\n  const setActiveSegment = useCallback(\n    segmentIndex => {\n      const activeSegmentIndex = getActiveSegmentIndex();\n      const activeViewport = getActiveViewport();\n\n      if (segmentIndex === activeSegmentIndex) {\n        log.info(`${activeSegmentIndex} is already the active segment`);\n        return;\n      }\n\n      const labelmap3D = getActiveLabelMaps3D();\n      labelmap3D.activeSegmentIndex = segmentIndex;\n\n      /**\n       * Activates the correct label map if clicked segment\n       * does not belong to the active labelmap\n       */\n      const { StudyInstanceUID } = activeViewport;\n      const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n      const allDisplaySets = studyMetadata.getDisplaySets();\n      let selectedSegmentation;\n      let newLabelmapIndex = getActiveLabelMapIndex();\n      allDisplaySets.forEach(displaySet => {\n        if (displaySet.labelmapSegments) {\n          Object.keys(displaySet.labelmapSegments).forEach(labelmapIndex => {\n            if (\n              displaySet.labelmapSegments[labelmapIndex].includes(segmentIndex)\n            ) {\n              newLabelmapIndex = labelmapIndex;\n              selectedSegmentation =\n                displaySet.hasOverlapping === true\n                  ? displaySet.originLabelMapIndex\n                  : labelmapIndex;\n            }\n          });\n        }\n      });\n\n      const brushStackState = getBrushStackState();\n      brushStackState.activeLabelmapIndex = newLabelmapIndex;\n      if (selectedSegmentation) {\n        setState(state => ({ ...state, selectedSegmentation }));\n      }\n\n      refreshViewports();\n\n      return segmentIndex;\n    },\n    [\n      getActiveLabelMapIndex,\n      getActiveLabelMaps3D,\n      getActiveSegmentIndex,\n      getActiveViewport,\n      getBrushStackState,\n    ]\n  );\n\n  useEffect(() => {\n    const labelmapModifiedHandler = event => {\n      log.warn('Segmentation Panel: labelmap modified', event);\n      getViewConstants();\n      const studiesEditControl = localStorage.getItem('studyEditControl');\n      let studiesMap = JSON.parse(studiesEditControl);\n      if (studiesMap[studies[0].StudyInstanceUID] === 0) {\n        setCanEditStudy(true);\n      }\n      refreshSegmentations();\n    };\n\n    /*\n     * TODO: Improve the way we notify parts of the app that depends on segs to be loaded.\n     *\n     * Currently we are using a non-ideal implementation through a custom event to notify the segmentation panel\n     * or other components that could rely on loaded segmentations that\n     * the segments were loaded so that e.g. when the user opens the panel\n     * before the segments are fully loaded, the panel can subscribe to this custom event\n     * and update itself with the new segments.\n     *\n     * This limitation is due to the fact that the cs segmentation module is an object (which will be\n     * updated after the segments are loaded) that React its not aware of its changes\n     * because the module object its not passed in to the panel component as prop but accessed externally.\n     *\n     * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\n     * allows us to easily watch the module or the segmentations loading process in any other component\n     * without subscribing to external events.\n     */\n    document.addEventListener(\n      'extensiondicomsegmentationsegloaded',\n      refreshSegmentations\n    );\n    document.addEventListener(\n      'extensiondicomsegmentationsegselected',\n      updateSegmentationComboBox\n    );\n\n    /*\n     * These are specific to each element;\n     * Need to iterate cornerstone-tools tracked enabled elements?\n     * Then only care about the one tied to active viewport?\n     */\n    cornerstoneTools.store.state.enabledElements.forEach(enabledElement =>\n      enabledElement.addEventListener(\n        'cornerstonetoolslabelmapmodified',\n        labelmapModifiedHandler\n      )\n    );\n\n    return () => {\n      document.removeEventListener(\n        'extensiondicomsegmentationsegloaded',\n        refreshSegmentations\n      );\n      document.removeEventListener(\n        'extensiondicomsegmentationsegselected',\n        updateSegmentationComboBox\n      );\n      cornerstoneTools.store.state.enabledElements.forEach(enabledElement =>\n        enabledElement.removeEventListener(\n          'cornerstonetoolslabelmapmodified',\n          labelmapModifiedHandler\n        )\n      );\n    };\n  }, [activeIndex, getViewConstants, refreshSegmentations, studies, viewports]);\n\n  const updateSegmentationComboBox = e => {\n    const index = e.detail.activatedLabelmapIndex;\n    if (index !== -1) {\n      setState(state => ({ ...state, selectedSegmentation: index }));\n    }\n  };\n\n  const refreshSegmentations = useCallback(() => {\n    const activeViewport = getActiveViewport();\n    const isDisabled = !activeViewport || !activeViewport.StudyInstanceUID;\n    if (!isDisabled) {\n      const brushStackState = getBrushStackState();\n      if (brushStackState) {\n        const labelMapList = getLabelMapList();\n        const {\n          items: segmentList,\n          numbers: segmentNumbers,\n          segmentsHidden,\n        } = getSegmentList();\n        setState(state => ({\n          ...state,\n          segmentsHidden,\n          segmentNumbers,\n          labelMapList,\n          segmentList,\n          isDisabled,\n        }));\n      } else {\n        setState(state => ({\n          ...state,\n          segmentsHidden: [],\n          segmentNumbers: [],\n          labelMapList: [],\n          segmentList: [],\n          isDisabled,\n        }));\n      }\n    }\n  }, [getActiveViewport, getBrushStackState, getLabelMapList, getSegmentList]);\n\n  useEffect(() => {\n    getViewConstants();\n    const studiesEditControl = localStorage.getItem('studyEditControl');\n    let studiesMap = JSON.parse(studiesEditControl);\n    if (studiesMap[studies[0].StudyInstanceUID] === 0) {\n      setCanEditStudy(true);\n    }\n    refreshSegmentations();\n  }, [\n    viewports,\n    activeIndex,\n    isOpen,\n    state.selectedSegmentation,\n    activeContexts,\n    state.isLoading,\n    refreshSegmentations,\n    getViewConstants,\n    studies,\n  ]);\n\n  /* Handle open/closed panel behaviour */\n  useEffect(() => {\n    getViewConstants();\n    const studiesEditControl = localStorage.getItem('studyEditControl');\n    let studiesMap = JSON.parse(studiesEditControl);\n    if (studiesMap[studies[0].StudyInstanceUID] === 0) {\n      setCanEditStudy(true);\n    }\n    setState(state => ({\n      ...state,\n      showSettings: state.showSettings && !isOpen,\n    }));\n  }, [getViewConstants, isOpen, studies]);\n\n  const getLabelMapList = useCallback(() => {\n    const activeViewport = getActiveViewport();\n\n    /* Get list of SEG labelmaps specific to active viewport (reference series) */\n    const referencedSegDisplaysets = _getReferencedSegDisplaysets(\n      activeViewport.StudyInstanceUID,\n      activeViewport.SeriesInstanceUID\n    );\n\n    const filteredReferencedSegDisplaysets = referencedSegDisplaysets.filter(\n      segDisplay => segDisplay.loadError !== true\n    );\n\n    return filteredReferencedSegDisplaysets.map((displaySet, index) => {\n      const {\n        labelmapIndex,\n        originLabelMapIndex,\n        hasOverlapping,\n        SeriesDate,\n        SeriesTime,\n      } = displaySet;\n\n      /* Map to display representation */\n      const dateStr = `${SeriesDate}:${SeriesTime}`.split('.')[0];\n      const date = moment(dateStr, 'YYYYMMDD:HHmmss');\n      const displayDate = date.format('ddd, MMM Do YYYY, h:mm:ss a');\n\n      const displayDescription = displaySet.SeriesDescription;\n\n      return {\n        value: hasOverlapping === true ? originLabelMapIndex : labelmapIndex,\n        title: displayDescription,\n        description: displayDate,\n        onClick: async () => {\n          const activatedLabelmapIndex = await setActiveLabelmap(\n            activeViewport,\n            studies,\n            displaySet,\n            onSelectedSegmentationChange,\n            onDisplaySetLoadFailure\n          );\n          setState(state => ({\n            ...state,\n            selectedSegmentation: activatedLabelmapIndex,\n          }));\n        },\n      };\n    });\n  }, [\n    getActiveViewport,\n    onDisplaySetLoadFailure,\n    onSelectedSegmentationChange,\n    studies,\n  ]);\n\n  const setCurrentSelectedSegment = useCallback(\n    segmentNumber => {\n      setActiveSegment(segmentNumber);\n\n      const sameSegment = state.selectedSegment === segmentNumber;\n      if (!sameSegment) {\n        setState(state => ({ ...state, selectedSegment: segmentNumber }));\n      }\n\n      const validIndexList = [];\n      getActiveLabelMaps2D().forEach((labelMap2D, index) => {\n        if (labelMap2D.segmentsOnLabelmap.includes(segmentNumber)) {\n          validIndexList.push(index);\n        }\n      });\n\n      const avg = array => array.reduce((a, b) => a + b) / array.length;\n      const average = avg(validIndexList);\n      const closest = validIndexList.reduce((prev, curr) => {\n        return Math.abs(curr - average) < Math.abs(prev - average)\n          ? curr\n          : prev;\n      });\n\n      if (isCornerstone()) {\n        const element = getEnabledElement();\n        const toolState = cornerstoneTools.getToolState(element, 'stack');\n\n        if (!toolState) return;\n\n        const imageIds = toolState.data[0].imageIds;\n        const imageId = imageIds[closest];\n        const frameIndex = imageIds.indexOf(imageId);\n\n        const SOPInstanceUID = cornerstone.metaData.get(\n          'SOPInstanceUID',\n          imageId\n        );\n        const StudyInstanceUID = cornerstone.metaData.get(\n          'StudyInstanceUID',\n          imageId\n        );\n\n        DICOMSegTempCrosshairsTool.addCrosshair(\n          element,\n          imageId,\n          segmentNumber\n        );\n\n        onSegmentItemClick({\n          StudyInstanceUID,\n          SOPInstanceUID,\n          frameIndex,\n          activeViewportIndex: activeIndex,\n        });\n      }\n\n      if (isVTK()) {\n        const labelMaps3D = getActiveLabelMaps3D();\n        const currentDisplaySet = getCurrentDisplaySet();\n        const frame = labelMaps3D.labelmaps2D[closest];\n\n        onSegmentItemClick({\n          studies,\n          StudyInstanceUID: currentDisplaySet.StudyInstanceUID,\n          displaySetInstanceUID: currentDisplaySet.displaySetInstanceUID,\n          SOPClassUID: getActiveViewport().sopClassUIDs[0],\n          SOPInstanceUID: currentDisplaySet.SOPInstanceUID,\n          segmentNumber,\n          frameIndex: closest,\n          frame,\n        });\n      }\n    },\n    [\n      activeIndex,\n      getActiveLabelMaps2D,\n      getActiveLabelMaps3D,\n      getActiveViewport,\n      getCurrentDisplaySet,\n      getEnabledElement,\n      isCornerstone,\n      isVTK,\n      onSegmentItemClick,\n      setActiveSegment,\n      state.selectedSegment,\n      studies,\n    ]\n  );\n\n  const getColorLUTTable = useCallback(() => {\n    const { state } = cornerstoneTools.getModule('segmentation');\n    const { colorLUTIndex } = getActiveLabelMaps3D();\n    return state.colorLutTables[colorLUTIndex];\n  }, [getActiveLabelMaps3D]);\n\n  const getEnabledElement = useCallback(() => {\n    const enabledElements = cornerstone.getEnabledElements();\n    return enabledElements[activeIndex].element;\n  }, [activeIndex]);\n\n  const onSegmentVisibilityChangeHandler = useCallback(\n    (isVisible, segmentNumber, labelmap3D) => {\n      let segmentsHidden = [];\n      if (labelmap3D.metadata.hasOverlapping) {\n        /** Get all labelmaps with this segmentNumber and that\n         * are from the same series (overlapping segments) */\n        const { labelmaps3D } = getBrushStackState();\n\n        const sameSeriesLabelMaps3D = labelmaps3D.filter(({ metadata }) => {\n          return (\n            labelmap3D.metadata.segmentationSeriesInstanceUID ===\n            metadata.segmentationSeriesInstanceUID\n          );\n        });\n\n        const possibleLabelMaps3D = sameSeriesLabelMaps3D.filter(\n          ({ labelmaps2D }) => {\n            return labelmaps2D.some(({ segmentsOnLabelmap }) =>\n              segmentsOnLabelmap.includes(segmentNumber)\n            );\n          }\n        );\n\n        possibleLabelMaps3D.forEach(labelmap3D => {\n          labelmap3D.segmentsHidden[segmentNumber] = !isVisible;\n\n          segmentsHidden = [\n            ...new Set([...segmentsHidden, ...labelmap3D.segmentsHidden]),\n          ];\n        });\n      } else {\n        labelmap3D.segmentsHidden[segmentNumber] = !isVisible;\n        segmentsHidden = [...labelmap3D.segmentsHidden];\n      }\n\n      setState(state => ({ ...state, segmentsHidden }));\n\n      refreshSegmentations();\n      refreshViewports();\n\n      if (isVTK()) {\n        onSegmentVisibilityChange(segmentNumber, isVisible);\n      }\n    },\n    [getBrushStackState, isVTK, onSegmentVisibilityChange, refreshSegmentations]\n  );\n\n  const getSegmentList = useCallback(() => {\n    /*\n     * Newly created segments have no `meta`\n     * So we instead build a list of all segment indexes in use\n     * Then find any associated metadata\n     */\n    const uniqueSegmentIndexes = getActiveLabelMaps2D()\n      .reduce((acc, labelmap2D) => {\n        if (labelmap2D) {\n          const segmentIndexes = labelmap2D.segmentsOnLabelmap;\n\n          for (let i = 0; i < segmentIndexes.length; i++) {\n            if (!acc.includes(segmentIndexes[i]) && segmentIndexes[i] !== 0) {\n              acc.push(segmentIndexes[i]);\n            }\n          }\n        }\n\n        return acc;\n      }, [])\n      .sort((a, b) => a - b);\n\n    const labelmap3D = getActiveLabelMaps3D();\n    const colorLutTable = getColorLUTTable();\n    const hasLabelmapMeta = labelmap3D.metadata && labelmap3D.metadata.data;\n\n    const segmentList = [];\n    const segmentNumbers = [];\n    for (let i = 0; i < uniqueSegmentIndexes.length; i++) {\n      const segmentIndex = uniqueSegmentIndexes[i];\n\n      const color = colorLutTable[segmentIndex];\n      let segmentLabel = '(unlabeled)';\n      let segmentNumber = segmentIndex;\n\n      /* Meta */\n      if (hasLabelmapMeta) {\n        const segmentMeta = labelmap3D.metadata.data[segmentIndex];\n        if (segmentMeta) {\n          segmentNumber = segmentMeta.SegmentNumber;\n          segmentLabel = segmentMeta.SegmentLabel;\n        }\n      }\n\n      const sameSegment = state.selectedSegment === segmentNumber;\n\n      segmentNumbers.push(segmentNumber);\n      segmentList.push(\n        <SegmentItem\n          key={segmentNumber}\n          itemClass={`segment-item ${sameSegment && 'selected'}`}\n          onClick={setCurrentSelectedSegment}\n          label={segmentLabel}\n          index={segmentNumber}\n          color={color}\n          labelmap3D={labelmap3D}\n          visible={!labelmap3D.segmentsHidden[segmentIndex]}\n          onVisibilityChange={onSegmentVisibilityChangeHandler}\n        />\n      );\n    }\n\n    return {\n      items: segmentList,\n      numbers: segmentNumbers,\n      segmentsHidden: labelmap3D.segmentsHidden,\n    };\n\n    /*\n     * Let's iterate over segmentIndexes ^ above\n     * If meta has a match, use it to show info\n     * If now, add \"no-meta\" class\n     * Show default name\n     */\n  }, [\n    getActiveLabelMaps2D,\n    getActiveLabelMaps3D,\n    getColorLUTTable,\n    onSegmentVisibilityChangeHandler,\n    setCurrentSelectedSegment,\n    state.selectedSegment,\n  ]);\n\n  const updateBrushSize = evt => {\n    const updatedRadius = Number(evt.target.value);\n\n    if (updatedRadius !== state.brushRadius) {\n      setState(state => ({ ...state, brushRadius: updatedRadius }));\n      const module = cornerstoneTools.getModule('segmentation');\n      module.setters.radius(updatedRadius);\n    }\n  };\n\n  const decrementSegment = event => {\n    let activeSegmentIndex = getActiveSegmentIndex();\n    event.preventDefault();\n    if (activeSegmentIndex > 1) {\n      activeSegmentIndex--;\n    }\n    setState(state => ({ ...state, selectedSegment: activeSegmentIndex }));\n    updateActiveSegmentColor();\n  };\n\n  const incrementSegment = event => {\n    let activeSegmentIndex = getActiveSegmentIndex();\n    event.preventDefault();\n    activeSegmentIndex++;\n    setState(state => ({ ...state, selectedSegment: activeSegmentIndex }));\n    updateActiveSegmentColor();\n  };\n\n  const updateActiveSegmentColor = () => {\n    const color = getActiveSegmentColor();\n    setState(state => ({ ...state, brushColor: color }));\n  };\n\n  const getBrushStackState = useCallback(() => {\n    const module = cornerstoneTools.getModule('segmentation');\n    const firstImageId = getFirstImageId();\n    const brushStackState = module.state.series[firstImageId];\n    return brushStackState;\n  }, [getFirstImageId]);\n\n  const getActiveSegmentColor = () => {\n    const brushStackState = getBrushStackState();\n    if (!brushStackState) {\n      return 'rgba(255, 255, 255, 1)';\n    }\n\n    const colorLutTable = getColorLUTTable();\n    const labelmap3D = getActiveLabelMaps3D();\n    const color = colorLutTable[labelmap3D.activeSegmentIndex];\n    return `rgba(${color.join(',')})`;\n  };\n\n  const updateConfiguration = newConfiguration => {\n    configuration.renderFill = newConfiguration.renderFill;\n    configuration.renderOutline = newConfiguration.renderOutline;\n    configuration.shouldRenderInactiveLabelmaps =\n      newConfiguration.shouldRenderInactiveLabelmaps;\n    configuration.fillAlpha = newConfiguration.fillAlpha;\n    configuration.outlineAlpha = newConfiguration.outlineAlpha;\n    configuration.outlineWidth = newConfiguration.outlineWidth;\n    configuration.fillAlphaInactive = newConfiguration.fillAlphaInactive;\n    configuration.outlineAlphaInactive = newConfiguration.outlineAlphaInactive;\n    onConfigurationChange(newConfiguration);\n    refreshViewports();\n  };\n\n  const onVisibilityChangeHandler = isVisible => {\n    let segmentsHidden = [];\n    state.segmentNumbers.forEach(segmentNumber => {\n      if (isVTK()) {\n        onSegmentVisibilityChange(segmentNumber, isVisible);\n      }\n\n      /** Get all labelmaps with this segmentNumber (overlapping segments) */\n      const { labelmaps3D } = getBrushStackState();\n      const possibleLabelMaps3D = labelmaps3D.filter(({ labelmaps2D }) => {\n        return labelmaps2D.some(({ segmentsOnLabelmap }) =>\n          segmentsOnLabelmap.includes(segmentNumber)\n        );\n      });\n\n      possibleLabelMaps3D.forEach(labelmap3D => {\n        labelmap3D.segmentsHidden[segmentNumber] = !isVisible;\n        segmentsHidden = [\n          ...new Set([...segmentsHidden, ...labelmap3D.segmentsHidden]),\n        ];\n      });\n    });\n\n    setState(state => ({ ...state, segmentsHidden }));\n\n    refreshSegmentations();\n    refreshViewports();\n  };\n\n  const deleteSegmentation = async selected => {\n    const activeViewport = getActiveViewport();\n    const referencedSegDisplaysets = _getReferencedSegDisplaysets(\n      activeViewport.StudyInstanceUID,\n      activeViewport.SeriesInstanceUID\n    );\n\n    const filteredReferencedSegDisplaysets = referencedSegDisplaysets.filter(\n      segDisplay => segDisplay.loadError !== true\n    );\n    let chosen;\n    let wadoURI;\n    let patientID;\n    for (var i = 0; i < filteredReferencedSegDisplaysets.length; i++) {\n      let displaySet = filteredReferencedSegDisplaysets[i];\n      const { SeriesDescription, SeriesDate, SeriesTime, wadoUri } = displaySet;\n\n      const dateStr = `${SeriesDate}:${SeriesTime}`.split('.')[0];\n      const date = moment(dateStr, 'YYYYMMDD:HHmmss');\n      const displayDate = date.format('ddd, MMM Do YYYY, h:mm:ss a');\n\n      if (\n        displayDate === selected.description &&\n        SeriesDescription === selected.title\n      ) {\n        chosen = displaySet;\n        wadoURI = wadoUri;\n        patientID = chosen.metadata.PatientID;\n\n        break;\n      }\n    }\n    let form_data = new FormData();\n    let notification = UINotificationService.create({});\n    form_data.append('wadoURI', wadoURI);\n    form_data.append('patientID', patientID);\n\n    const deleteInstance = await axiosInstance\n      .post(`/api/segmentation_delete/`, form_data, {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then(res => {\n        return res;\n      })\n      .catch(error => {\n        return error.response;\n      });\n\n    if (deleteInstance.status === 200) {\n      notification.show({\n        title: 'Delete Segmentation',\n        message: 'Segmentation deleted - Success',\n        type: 'success',\n        duration: 8000,\n      });\n    } else {\n      notification.show({\n        title: 'Delete Segmentation',\n        message: 'Failed to delete segmentation - Failure',\n        type: 'error',\n        duration: 10000,\n      });\n    }\n  };\n\n  const disabledConfigurationFields = [\n    'outlineAlpha',\n    'shouldRenderInactiveLabelmaps',\n  ];\n\n  const selectedSegmentationOption = state.labelMapList.find(\n    i => i.value === state.selectedSegmentation\n  );\n\n  const client = () => {\n    return new Client();\n  };\n\n  if (state.showSettings) {\n    return (\n      <SegmentationSettings\n        disabledFields={isVTK() ? disabledConfigurationFields : []}\n        configuration={configuration}\n        onBack={() => setState(state => ({ ...state, showSettings: false }))}\n        onChange={updateConfiguration}\n      />\n    );\n  } else if (state.showList) {\n    return (\n      <div className={'dcmseg-segmentation-panel-list'}>\n        <div className=\"settings-title\">\n          <h4>Segmentation Panel</h4>\n          <button\n            style={{ float: 'right' }}\n            className=\"return-button\"\n            onClick={() => setState(state => ({ ...state, showList: false }))}\n          >\n            Back\n          </button>\n        </div>\n\n        {state.viewConstants !== null ? (\n          <SegmentationList\n            ref={React.createRef()}\n            viewConstants={state.viewConstants}\n            client={client}\n            canEditStudy={canEditStudy}\n          />\n        ) : null}\n      </div>\n    );\n  } else {\n    return (\n      <div\n        className={classNames('dcmseg-segmentation-panel', {\n          disabled: state.isDisabled,\n        })}\n      >\n        <div className=\"panel-button-div\" style={{ display: 'inline-block' }}>\n          <button\n            title=\"Go to Segmentation Panel\"\n            onClick={() => setState(state => ({ ...state, showList: true }))}\n            style={{ padding: '4px 12px' }}\n            className=\"panel-button\"\n          >\n            Panel\n          </button>\n\n          <Icon\n            className=\"cog-icon\"\n            title=\"Settings\"\n            name=\"cog\"\n            width=\"25px\"\n            height=\"25px\"\n            onClick={() =>\n              setState(state => ({ ...state, showSettings: true }))\n            }\n          />\n        </div>\n\n        {false && (\n          <form className=\"selector-form\">\n            <BrushColorSelector\n              defaultColor={state.brushColor}\n              index={state.selectedSegment}\n              onNext={incrementSegment}\n              onPrev={decrementSegment}\n            />\n            <BrushRadius\n              value={state.brushRadius}\n              onChange={updateBrushSize}\n              min={configuration.minRadius}\n              max={configuration.maxRadius}\n            />\n          </form>\n        )}\n\n        <div className=\"segmentations\">\n          <p style={{ color: 'white', marginTop: '20px', marginBottom: '5px' }}>\n            Series Saved in Orthanc:\n            <button\n              className=\"btn btn-danger\"\n              title=\"Delete Segmentation\"\n              onClick={() => deleteSegmentation(selectedSegmentationOption)}\n              style={{\n                float: 'right',\n                borderRadius: '6px',\n                fontSize: '11px',\n                marginBottom: '5px',\n                marginLeft: '5px',\n              }}\n              disabled={\n                !selectedSegmentationOption ||\n                !localStorage.getItem('HealthProfessional_Authenticated') ||\n                !canEditStudy\n              }\n            >\n              {'x'}\n            </button>\n          </p>\n\n          <SegmentationSelect\n            value={selectedSegmentationOption}\n            formatOptionLabel={SegmentationItem}\n            options={state.labelMapList}\n          />\n        </div>\n        <SegmentsSection\n          count={state.segmentList.length}\n          isVisible={\n            state.segmentsHidden.filter(isHidden => isHidden === true).length <\n              state.segmentNumbers.length && state.segmentNumbers.length > 0\n          }\n          onVisibilityChange={onVisibilityChangeHandler}\n        >\n          <ScrollableArea>\n            <TableList headless>{state.segmentList}</TableList>\n          </ScrollableArea>\n        </SegmentsSection>\n      </div>\n    );\n  }\n};\n\nSegmentationPanel.propTypes = {\n  /*\n   * An object, with int index keys?\n   * Maps to: state.viewports.viewportSpecificData, in `viewer`\n   * Passed in MODULE_TYPES.PANEL when specifying component in viewer\n   */\n  viewports: PropTypes.shape({\n    displaySetInstanceUID: PropTypes.string,\n    frameRate: PropTypes.any,\n    InstanceNumber: PropTypes.number,\n    isMultiFrame: PropTypes.bool,\n    isReconstructable: PropTypes.bool,\n    Modality: PropTypes.string,\n    plugin: PropTypes.string,\n    SeriesDate: PropTypes.string,\n    SeriesDescription: PropTypes.string,\n    SeriesInstanceUID: PropTypes.string,\n    SeriesNumber: PropTypes.any,\n    SeriesTime: PropTypes.string,\n    sopClassUIDs: PropTypes.arrayOf(PropTypes.string),\n    StudyInstanceUID: PropTypes.string,\n  }),\n  activeIndex: PropTypes.number.isRequired,\n  studies: PropTypes.array.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n};\nSegmentationPanel.defaultProps = {};\n\n/**\n * Returns SEG DisplaySets that reference the target series, sorted by dateTime\n *\n * @param {string} StudyInstanceUID\n * @param {string} SeriesInstanceUID\n * @returns Array\n */\nconst _getReferencedSegDisplaysets = (StudyInstanceUID, SeriesInstanceUID) => {\n  /* Referenced DisplaySets */\n  const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n  const referencedDisplaysets = studyMetadata.getDerivedDatasets({\n    referencedSeriesInstanceUID: SeriesInstanceUID,\n    Modality: 'SEG',\n  });\n\n  /* Sort */\n  referencedDisplaysets.sort((a, b) => {\n    const aNumber = Number(`${a.SeriesDate}${a.SeriesTime}`);\n    const bNumber = Number(`${b.SeriesDate}${b.SeriesTime}`);\n    return bNumber - aNumber;\n  });\n\n  return referencedDisplaysets;\n};\n\nconst SegmentsSection = ({\n  count,\n  children,\n  isVisible: defaultVisibility,\n  onVisibilityChange,\n}) => {\n  const [isVisible, setIsVisible] = useState(defaultVisibility);\n\n  const onVisibilityChangeHandler = () => {\n    const newVisibility = !isVisible;\n    setIsVisible(newVisibility);\n    onVisibilityChange(newVisibility);\n  };\n\n  useEffect(() => {\n    setIsVisible(defaultVisibility);\n  }, [defaultVisibility]);\n\n  return (\n    <div className=\"SegmentsSection\">\n      <div className=\"header\">\n        <div>Segments</div>\n        <div className=\"icons\">\n          <Icon\n            className={`eye-icon ${isVisible && 'expanded'}`}\n            name={isVisible ? 'eye' : 'eye-closed'}\n            width=\"20px\"\n            height=\"20px\"\n            onClick={onVisibilityChangeHandler}\n          />\n          <div className=\"count\">{count}</div>\n        </div>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nconst noop = () => {};\n\nSegmentsSection.defaultProps = {\n  onVisibilityChange: noop,\n};\n\nexport default SegmentationPanel;\n","import React from 'react';\nimport OHIF from '@ohif/core';\n\nimport init from './init.js';\nimport toolbarModule from './toolbarModule.js';\nimport getSopClassHandlerModule from './getOHIFDicomSegSopClassHandler.js';\nimport SegmentationPanel from './components/SegmentationPanel/SegmentationPanel.js';\nimport { version } from '../package.json';\nconst { studyMetadataManager } = OHIF.utils;\n\nexport default {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'com.ohif.dicom-segmentation',\n  version,\n\n  /**\n   *\n   *\n   * @param {object} [configuration={}]\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\n   */\n  preRegistration({ servicesManager, configuration = {} }) {\n    init({ servicesManager, configuration });\n  },\n  getToolbarModule() {\n    return toolbarModule;\n  },\n  getPanelModule({ commandsManager, api, servicesManager }) {\n    const { UINotificationService, LoggerService } = servicesManager.services;\n\n    const ExtendedSegmentationPanel = props => {\n      const { activeContexts } = api.hooks.useAppContext();\n\n      const onDisplaySetLoadFailureHandler = error => {\n        LoggerService.error({ error, message: error.message });\n        UINotificationService.show({\n          title: 'DICOM Segmentation Loader',\n          message: error.message,\n          type: 'error',\n          autoClose: false,\n        });\n      };\n\n      const segmentItemClickHandler = data => {\n        commandsManager.runCommand('jumpToImage', data);\n        commandsManager.runCommand('jumpToSlice', data);\n      };\n\n      const onSegmentVisibilityChangeHandler = (segmentNumber, visible) => {\n        commandsManager.runCommand('setSegmentConfiguration', {\n          segmentNumber,\n          visible,\n        });\n      };\n\n      const onConfigurationChangeHandler = configuration => {\n        commandsManager.runCommand('setSegmentationConfiguration', {\n          globalOpacity: configuration.fillAlpha,\n          outlineThickness: configuration.outlineWidth,\n          renderOutline: configuration.renderOutline,\n          visible: configuration.renderFill,\n        });\n      };\n\n      const onSelectedSegmentationChangeHandler = () => {\n        commandsManager.runCommand('requestNewSegmentation');\n      };\n\n      return (\n        <SegmentationPanel\n          {...props}\n          activeContexts={activeContexts}\n          contexts={api.contexts}\n          onSegmentItemClick={segmentItemClickHandler}\n          onSegmentVisibilityChange={onSegmentVisibilityChangeHandler}\n          onConfigurationChange={onConfigurationChangeHandler}\n          onSelectedSegmentationChange={onSelectedSegmentationChangeHandler}\n          onDisplaySetLoadFailure={onDisplaySetLoadFailureHandler}\n        />\n      );\n    };\n\n    const SegmentationPanelTabUpdatedEvent = 'segmentation-panel-tab-updated';\n\n    /**\n     * Trigger's an event to update the state of the panel's RoundedButtonGroup.\n     *\n     * This is required to avoid extension state\n     * coupling with the viewer's ToolbarRow component.\n     *\n     * @param {object} data\n     */\n    const triggerSegmentationPanelTabUpdatedEvent = data => {\n      const event = new CustomEvent(SegmentationPanelTabUpdatedEvent, {\n        detail: data,\n      });\n      document.dispatchEvent(event);\n    };\n\n    const onSegmentationsLoaded = ({ detail }) => {\n      const { segDisplaySet, segMetadata } = detail;\n      const studyMetadata = studyMetadataManager.get(\n        segDisplaySet.StudyInstanceUID\n      );\n      const referencedDisplaysets = studyMetadata.getDerivedDatasets({\n        referencedSeriesInstanceUID: segMetadata.seriesInstanceUid,\n        Modality: 'SEG',\n      });\n      triggerSegmentationPanelTabUpdatedEvent({\n        badgeNumber: referencedDisplaysets.length,\n        target: 'segmentation-panel',\n      });\n    };\n\n    document.addEventListener(\n      'extensiondicomsegmentationsegloaded',\n      onSegmentationsLoaded\n    );\n\n    return {\n      menuOptions: [\n        {\n          icon: 'inline-edit',\n          label: 'Segmentation',\n          target: 'segmentation-panel',\n          stateEvent: SegmentationPanelTabUpdatedEvent,\n          isDisabled: (studies, activeViewport) => {\n            if (!studies) {\n              return true;\n            }\n\n            for (let i = 0; i < studies.length; i++) {\n              const study = studies[i];\n\n              if (study && study.series) {\n                for (let j = 0; j < study.series.length; j++) {\n                  const series = study.series[j];\n\n                  if (series.Modality === 'SEG') {\n                    if (activeViewport) {\n                      const studyMetadata = studyMetadataManager.get(\n                        activeViewport.StudyInstanceUID\n                      );\n                      if (!studyMetadata) {\n                        return;\n                      }\n                      const referencedDS = studyMetadata.getDerivedDatasets({\n                        referencedSeriesInstanceUID:\n                          activeViewport.SeriesInstanceUID,\n                        Modality: 'SEG',\n                      });\n                      triggerSegmentationPanelTabUpdatedEvent({\n                        badgeNumber: referencedDS.length,\n                        target: 'segmentation-panel',\n                      });\n                    }\n                    return false;\n                  }\n                }\n              }\n            }\n\n            return false;\n          },\n        },\n      ],\n      components: [\n        {\n          id: 'segmentation-panel',\n          component: ExtendedSegmentationPanel,\n        },\n      ],\n      defaultContext: ['VIEWER'],\n    };\n  },\n  getSopClassHandlerModule,\n};\n","import csTools from 'cornerstone-tools';\nimport DICOMSegTempCrosshairsTool from './tools/DICOMSegTempCrosshairsTool';\n\n/**\n *\n * @param {object} configuration\n * @param {Object|Array} configuration.csToolsConfig\n */\nexport default function init({ servicesManager, configuration = {} }) {\n  const { BrushTool, SphericalBrushTool, CorrectionScissorsTool } = csTools;\n  const tools = [BrushTool, SphericalBrushTool, CorrectionScissorsTool];\n\n  tools.forEach(tool => csTools.addTool(tool));\n\n  csTools.addTool(BrushTool, {\n    name: 'BrushEraser',\n    configuration: {\n      alwaysEraseOnClick: true,\n    },\n  });\n\n  csTools.addTool(DICOMSegTempCrosshairsTool);\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nconst DicomBrowserSelect = ({ value, formatOptionLabel, options }) => (\n  <Select\n    value={value}\n    formatOptionLabel={formatOptionLabel}\n    styles={dicomBrowserSelectStyles}\n    options={options}\n  />\n);\n\nconst computedstyle = getComputedStyle(document.body);\nconst uiGrayDarker = computedstyle.getPropertyValue('--ui-gray-darker');\nconst activeColor = computedstyle.getPropertyValue('--active-color');\nconst defaultColor = computedstyle.getPropertyValue('--default-color');\nconst uiGrayDark = computedstyle.getPropertyValue('--ui-gray-dark');\n\nconst dicomBrowserSelectStyles = {\n  singleValue: (base, state) => ({\n    ...base,\n    width: '100%',\n  }),\n  control: (base, state) => ({\n    ...base,\n    cursor: 'pointer',\n    background: uiGrayDarker,\n    borderRadius: state.isFocused ? '5px 5px 5px 5px' : 5,\n    borderColor: state.isFocused ? activeColor : defaultColor,\n    minHeight: '50px',\n    '&:hover': {\n      borderColor: activeColor,\n    },\n  }),\n  menu: base => ({\n    ...base,\n    borderRadius: 5,\n    background: uiGrayDarker,\n  }),\n  option: (base, state) => ({\n    ...base,\n    width: '100%',\n    cursor: 'pointer',\n    '&:first-of-type': {\n      borderTopLeftRadius: 5,\n      borderTopRightRadius: 5,\n    },\n    '&:last-of-type': {\n      borderBottomLeftRadius: 5,\n      borderBottomRightRadius: 5,\n    },\n    background: state.isSelected ? uiGrayDark : uiGrayDarker,\n    '&:hover': {\n      background: uiGrayDark,\n    },\n  }),\n};\n\nexport default DicomBrowserSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './DicomBrowserSelectItem.css';\n\nconst DicomBrowserSelectItem = ({ onClick, title, description }) => {\n  return (\n    <li className=\"dcmseg-segmentation-item\" onClick={onClick}>\n      <div className=\"segmentation-meta\">\n        <div className=\"segmentation-meta-title\">{title}</div>\n        <div className=\"segmentation-meta-description\">{description}</div>\n      </div>\n    </li>\n  );\n};\n\nDicomBrowserSelectItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nDicomBrowserSelectItem.defaultProps = {\n  description: '',\n};\n\nexport default DicomBrowserSelectItem;\n","import React, { useState, useEffect } from 'react';\nimport { classes, cornerstone as OHIFCornerstone } from '@ohif/core';\nimport { Range } from '@ohif/ui';\nimport dcmjs from 'dcmjs';\nimport DicomBrowserSelect from './DicomBrowserSelect';\nimport moment from 'moment';\nimport './DicomTagBrowser.css';\nimport DicomBrowserSelectItem from './DicomBrowserSelectItem';\n\nconst { ImageSet } = classes;\nconst { DicomMetaDictionary } = dcmjs.data;\nconst { nameMap } = DicomMetaDictionary;\n\nconst { metadataProvider } = OHIFCornerstone;\n\nconst DicomTagBrowser = ({ displaySets, displaySetInstanceUID }) => {\n  const [\n    activeDisplaySetInstanceUID,\n    setActiveDisplaySetInstanceUID,\n  ] = useState(displaySetInstanceUID);\n  const [activeInstance, setActiveInstance] = useState(1);\n  const [tags, setTags] = useState([]);\n  const [meta, setMeta] = useState('');\n  const [instanceList, setInstanceList] = useState([]);\n  const [displaySetList, setDisplaySetList] = useState([]);\n  const [isImageStack, setIsImageStack] = useState(false);\n\n  useEffect(() => {\n    const activeDisplaySet = displaySets.find(\n      ds => ds.displaySetInstanceUID === activeDisplaySetInstanceUID\n    );\n\n    const newDisplaySetList = displaySets.map(displaySet => {\n      const {\n        displaySetInstanceUID,\n        SeriesDate,\n        SeriesTime,\n        SeriesNumber,\n        SeriesDescription,\n        Modality,\n      } = displaySet;\n\n      /* Map to display representation */\n      const dateStr = `${SeriesDate}:${SeriesTime}`.split('.')[0];\n      const date = moment(dateStr, 'YYYYMMDD:HHmmss');\n      const displayDate = date.format('ddd, MMM Do YYYY');\n\n      return {\n        value: displaySetInstanceUID,\n        title: `${SeriesNumber} (${Modality}): ${SeriesDescription}`,\n        description: displayDate,\n        onClick: () => {\n          setActiveDisplaySetInstanceUID(displaySetInstanceUID);\n          setActiveInstance(1);\n        },\n      };\n    });\n\n    let metadata;\n    const isImageStack =\n      activeDisplaySet instanceof ImageSet &&\n      activeDisplaySet.isSOPClassUIDSupported === true;\n\n    let instanceList;\n\n    if (isImageStack) {\n      const { images } = activeDisplaySet;\n      const image = images[activeInstance - 1];\n\n      instanceList = images.map((image, index) => {\n        const metadata = image.getData().metadata;\n\n        const { InstanceNumber } = metadata;\n\n        return {\n          value: index,\n          title: `Instance Number: ${InstanceNumber}`,\n          description: '',\n          onClick: () => {\n            setActiveInstance(index);\n          },\n        };\n      });\n\n      metadata = image.getData().metadata;\n    } else {\n      metadata = activeDisplaySet.metadata;\n    }\n\n    setTags(getSortedTags(metadata));\n    setMeta(metadata);\n    setInstanceList(instanceList);\n    setDisplaySetList(newDisplaySetList);\n    setIsImageStack(isImageStack);\n  }, [activeDisplaySetInstanceUID, activeInstance, displaySets]);\n\n  const selectedDisplaySetValue = displaySetList.find(\n    ds => ds.value === activeDisplaySetInstanceUID\n  );\n\n  let instanceSelectList = null;\n\n  if (isImageStack) {\n    instanceSelectList = (\n      <div className=\"dicom-tag-browser-instance-range\">\n        <Range\n          showValue\n          step={1}\n          min={1}\n          max={instanceList.length}\n          value={activeInstance}\n          valueRenderer={value => <p>Instance Number: {value}</p>}\n          onChange={({ target }) => {\n            const instanceIndex = parseInt(target.value);\n            setActiveInstance(instanceIndex);\n          }}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dicom-tag-browser-content\">\n      <DicomBrowserSelect\n        value={selectedDisplaySetValue}\n        formatOptionLabel={DicomBrowserSelectItem}\n        options={displaySetList}\n      />\n      {instanceSelectList}\n      <div className=\"dicom-tag-browser-table-wrapper\">\n        <DicomTagTable tags={tags} meta={meta}></DicomTagTable>\n      </div>\n    </div>\n  );\n};\n\nfunction DicomTagTable({ tags, meta }) {\n  const rows = getFormattedRowsFromTags(tags, meta);\n\n  return (\n    <table className=\"dicom-tag-browser-table\">\n      <tbody>\n        <tr>\n          <th className=\"dicom-tag-browser-table-left\">Tag</th>\n          <th className=\"dicom-tag-browser-table-left\">Value Representation</th>\n          <th className=\"dicom-tag-browser-table-left\">Keyword</th>\n          <th className=\"dicom-tag-browser-table-left\">Value</th>\n        </tr>\n        {rows.map((row, index) => {\n          const className = row.className ? row.className : null;\n\n          return (\n            <tr className={className} key={`DICOMTagRow-${index}`}>\n              <td>{row[0]}</td>\n              <td className=\"dicom-tag-browser-table-center\">{row[1]}</td>\n              <td>{row[2]}</td>\n              <td>{row[3]}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction getFormattedRowsFromTags(tags, meta) {\n  const rows = [];\n\n  tags.forEach(tagInfo => {\n    if (tagInfo.vr === 'SQ') {\n      rows.push([\n        `${tagInfo.tagIndent}${tagInfo.tag}`,\n        tagInfo.vr,\n        tagInfo.keyword,\n        '',\n      ]);\n\n      const { values } = tagInfo;\n\n      values.forEach((item, index) => {\n        const formatedRowsFromTags = getFormattedRowsFromTags(item);\n\n        rows.push([\n          `${item[0].tagIndent}(FFFE,E000)`,\n          '',\n          `Item #${index}`,\n          '',\n        ]);\n\n        rows.push(...formatedRowsFromTags);\n      });\n    } else {\n      if (tagInfo.vr === 'xs') {\n        try {\n          const dataset = metadataProvider.getStudyDataset(\n            meta.StudyInstanceUID\n          );\n          const tag = dcmjs.data.Tag.fromPString(tagInfo.tag).toCleanString();\n          const originalTagInfo = dataset[tag];\n          tagInfo.vr = originalTagInfo.vr;\n        } catch (error) {\n          console.error(\n            `Failed to parse value representation for tag '${tagInfo.keyword}'`\n          );\n        }\n      }\n\n      rows.push([\n        `${tagInfo.tagIndent}${tagInfo.tag}`,\n        tagInfo.vr,\n        tagInfo.keyword,\n        tagInfo.value,\n      ]);\n    }\n  });\n\n  return rows;\n}\n\nfunction getSortedTags(metadata) {\n  const tagList = getRows(metadata);\n\n  // Sort top level tags, sequence groups are sorted when created.\n  _sortTagList(tagList);\n\n  return tagList;\n}\n\nfunction getRows(metadata, depth = 0) {\n  // Tag, Type, Value, Keyword\n\n  const keywords = Object.keys(metadata);\n\n  let tagIndent = '';\n\n  for (let i = 0; i < depth; i++) {\n    tagIndent += '>';\n  }\n\n  if (depth > 0) {\n    tagIndent += ' '; // If indented, add a space after the indents.\n  }\n\n  const rows = [];\n\n  for (let i = 0; i < keywords.length; i++) {\n    let keyword = keywords[i];\n\n    if (keyword === '_vrMap') {\n      continue;\n    }\n\n    const tagInfo = nameMap[keyword];\n\n    let value = metadata[keyword];\n\n    if (tagInfo && tagInfo.vr === 'SQ') {\n      const sequenceAsArray = toArray(value);\n\n      // Push line defining the sequence\n\n      const sequence = {\n        tag: tagInfo.tag,\n        tagIndent,\n        vr: tagInfo.vr,\n        keyword,\n        values: [],\n      };\n\n      rows.push(sequence);\n\n      if (value === null) {\n        // Type 2 Sequence\n        continue;\n      }\n\n      sequenceAsArray.forEach(item => {\n        const sequenceRows = getRows(item, depth + 1);\n\n        if (sequenceRows.length) {\n          // Sort the sequence group.\n          _sortTagList(sequenceRows);\n          sequence.values.push(sequenceRows);\n        }\n      });\n\n      continue;\n    }\n\n    if (Array.isArray(value)) {\n      value = value.join('\\\\');\n    }\n\n    if (typeof value === 'number') {\n      value = value.toString();\n    }\n\n    if (typeof value !== 'string') {\n      if (value === null) {\n        value = ' ';\n      } else {\n        if (typeof value === 'object') {\n          if (value.InlineBinary) {\n            value = 'Inline Binary';\n          } else if (value.BulkDataURI) {\n            value = `Bulk Data URI`; //: ${value.BulkDataURI}`;\n          } else if (value.Alphabetic) {\n            value = value.Alphabetic;\n          } else {\n            console.warn(`Unrecognised Value: ${value} for ${keyword}:`);\n            console.warn(value);\n            value = ' ';\n          }\n        } else {\n          console.warn(`Unrecognised Value: ${value} for ${keyword}:`);\n          value = ' ';\n        }\n      }\n    }\n\n    // tag / vr/ keyword/ value\n\n    // Remove retired tags\n    keyword = keyword.replace('RETIRED_', '');\n\n    if (tagInfo) {\n      rows.push({\n        tag: tagInfo.tag,\n        tagIndent,\n        vr: tagInfo.vr,\n        keyword,\n        value,\n      });\n    } else {\n      // Private tag\n      const tag = `(${keyword.substring(0, 4)},${keyword.substring(4, 8)})`;\n\n      rows.push({\n        tag,\n        tagIndent,\n        vr: '',\n        keyword: 'Private Tag',\n        value,\n      });\n    }\n  }\n\n  return rows;\n}\n\nfunction toArray(objectOrArray) {\n  return Array.isArray(objectOrArray) ? objectOrArray : [objectOrArray];\n}\n\nfunction _sortTagList(tagList) {\n  tagList.sort((a, b) => {\n    if (a.tag < b.tag) {\n      return -1;\n    }\n\n    return 1;\n  });\n}\n\nexport default DicomTagBrowser;\n","import { utils } from '@ohif/core';\nimport React from 'react';\nimport DicomTagBrowser from './components/DicomTagBrowser';\n\nconst { studyMetadataManager } = utils;\n\nexport default function getCommandsModule(servicesManager) {\n  const actions = {\n    openDICOMTagViewer({ viewports }) {\n      const { activeViewportIndex, viewportSpecificData } = viewports;\n      const activeViewportSpecificData =\n        viewportSpecificData[activeViewportIndex];\n\n      const {\n        StudyInstanceUID,\n        displaySetInstanceUID,\n      } = activeViewportSpecificData;\n\n      const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n      const displaySets = studyMetadata.getDisplaySets();\n\n      const { UIModalService } = servicesManager.services;\n\n      const WrappedDicomTagBrowser = function() {\n        return (\n          <DicomTagBrowser\n            displaySets={displaySets}\n            displaySetInstanceUID={displaySetInstanceUID}\n          />\n        );\n      };\n\n      UIModalService.show({\n        content: WrappedDicomTagBrowser,\n        title: `DICOM Tag Browser`,\n        fullscreen: true,\n        noScroll: true,\n      });\n    },\n  };\n\n  const definitions = {\n    openDICOMTagViewer: {\n      commandFn: actions.openDICOMTagViewer,\n      storeContexts: ['servers', 'viewports'],\n    },\n  };\n\n  return {\n    actions,\n    definitions,\n  };\n}\n","const TOOLBAR_BUTTON_TYPES = {\n  COMMAND: 'command',\n};\n\nconst definitions = [\n  {\n    id: 'TagBrowser',\n    label: 'Tag Browser',\n    icon: 'list',\n    //\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\n    commandName: 'openDICOMTagViewer',\n    context: 'VIEWER',\n  },\n];\n\nexport default {\n  definitions,\n  defaultContext: 'VIEWER',\n};\n","import getCommandsModule from './getCommandsModule';\nimport toolbarModule from './toolbarModule';\n\n/**\n * Constants\n */\n\n/**\n * Extension\n */\nexport default {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'dicom-tag-browser',\n\n  /**\n   * MODULE GETTERS\n   */\n  getCommandsModule({ servicesManager }) {\n    return getCommandsModule(servicesManager);\n  },\n  getToolbarModule() {\n    return toolbarModule;\n  },\n};\n","const TOOLBAR_BUTTON_TYPES = {\n  COMMAND: 'command',\n  SET_TOOL_ACTIVE: 'setToolActive',\n  BUILT_IN: 'builtIn',\n};\n\nconst definitions = [\n  {\n    id: 'SegTools',\n    label: 'Segmentation',\n    icon: 'ellipse-circle',\n    buttons: [\n      {\n        id: 'Brush',\n        label: 'Brush',\n        icon: 'brush',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'Brush' },\n      },\n      {\n        id: 'SphericalBrush',\n        label: 'Spherical',\n        icon: 'sphere',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'SphericalBrush' },\n      },\n      {\n        id: 'CircleScissors',\n        label: 'Circle',\n        icon: 'circle',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'CircleScissors' },\n      },\n      {\n        id: 'CircleScissorsEraser',\n        label: 'Circle',\n        icon: 'circle-o',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'CircleScissorsEraser' },\n      },\n      {\n        id: 'FreehandScissors',\n        label: 'Freehand',\n        icon: 'inline-edit',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'FreehandScissors' },\n      },\n      {\n        id: 'FreehandScissorsEraser',\n        label: 'Freehand',\n        icon: 'liver',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'FreehandScissorsEraser' },\n      },\n      {\n        id: 'RectangleScissors',\n        label: 'Rectangle',\n        icon: 'stop',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'RectangleScissors' },\n      },\n      {\n        id: 'RectangleScissorsEraser',\n        label: 'Rectangle',\n        icon: 'square-o',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'RectangleScissorsEraser' },\n      },\n      {\n        id: 'CorrectionScissors',\n        label: 'Correction Scissors',\n        icon: 'scissors',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'CorrectionScissors' },\n      },\n      {\n        id: 'BrushEraser',\n        label: 'Eraser',\n        icon: 'trash',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'BrushEraser' },\n      },\n    ],\n  },\n];\n\nexport default {\n  definitions,\n  defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-useless-escape */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ModelSelector.styl';\n\nclass ModelSelector extends Component {\n  static propTypes = {\n    info: PropTypes.array,\n    models: PropTypes.array,\n    currentModel: PropTypes.string,\n    onClick: PropTypes.func,\n    onSelectModel: PropTypes.func,\n    user: PropTypes.object,\n    useFilter: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const currentModel = props.currentModel\n      ? props.currentModel\n      : props.models.length > 0\n      ? props.models[0]\n      : '';\n\n    let currentModelInfo = null;\n\n    props.info.forEach(function(model) {\n      if (model['name'] === currentModel) {\n        currentModelInfo = model;\n      }\n    });\n\n    this.state = {\n      models: props.models,\n      currentModel: currentModel,\n      buttonDisabled: false,\n      currentModelInfo: currentModelInfo,\n      filterBodyPart: '',\n    };\n  }\n\n  static getDerivedStateFromProps(props, current_state) {\n    if (current_state.models !== props.models) {\n      return {\n        models: props.models,\n        currentModel: props.models.length > 0 ? props.models[0] : '',\n      };\n    }\n    return null;\n  }\n\n  onChangeModel = evt => {\n    let currentModelInfo = null;\n    this.props.info.forEach(function(model) {\n      if (model['name'] === evt.target.value) {\n        currentModelInfo = model;\n      }\n    });\n    this.setState({\n      currentModel: evt.target.value,\n      currentModelInfo: currentModelInfo,\n    });\n\n    if (this.props.onSelectModel) this.props.onSelectModel(evt.target.value);\n  };\n\n  handleFilterChange = value => {\n    if (this.props.handleFilterChange) {\n      this.setState({ filterBodyPart: value });\n      this.props.handleFilterChange(value);\n    }\n  };\n\n  currentModel = () => {\n    return this.props.currentModel\n      ? this.props.currentModel\n      : this.state.currentModel;\n  };\n\n  onClickBtn = async () => {\n    if (this.state.buttonDisabled) {\n      return;\n    }\n\n    let model = this.state.currentModel;\n    if (!model) {\n      model = this.props.models.length > 0 ? this.props.models[0] : '';\n    }\n\n    this.setState({ buttonDisabled: true });\n    await this.props.onClick(model);\n    this.setState({ buttonDisabled: false });\n  };\n\n  onClickApply = async () => {\n    if (this.props.onClickApply) {\n      this.props.onClickApply();\n    }\n  };\n\n  render() {\n    const { user, useFilter } = this.props;\n    const currentModel = this.currentModel();\n    const modelInfo = this.state.currentModelInfo;\n\n    let hasPerm = false;\n    let references = '';\n    let res = [];\n\n    if (modelInfo !== null) {\n      let modelOwner = modelInfo['user'];\n      let userPermissionsOnModel = modelInfo['user_permissions'];\n      if (\n        modelOwner === user.email ||\n        userPermissionsOnModel.includes('Test Models') ||\n        localStorage.getItem('HealthProfessional_Authenticated')\n      ) {\n        hasPerm = true;\n      }\n      references = modelInfo.references;\n      const matchingString = new RegExp(\n        `(http|https)://((\\.)|[a-z]|[0-9]|/|_)*`,\n        'gmi'\n      );\n\n      if (matchingString.test(references)) {\n        let matches = references.match(matchingString);\n\n        for (let i = 0; i < matches.length; i++) {\n          if (matches[i].lastIndexOf('.') === matches[i].length - 1) {\n            matches[i] = matches[i].substring(0, matches[i].length - 1);\n          }\n          res.push(matches[i]);\n        }\n      }\n    }\n\n    return (\n      <div\n        className=\"modelSelector\"\n        style={{ marginLeft: 'auto', marginRight: '5px' }}\n      >\n        <table>\n          <tbody>\n            <tr>\n              <td colSpan=\"3\">\n                Available Models <b>({this.props.models.length})</b>:\n              </td>\n            </tr>\n            <tr>\n              <td width=\"80%\">\n                <select\n                  className=\"selectBox\"\n                  onChange={this.onChangeModel}\n                  value={currentModel}\n                  style={{\n                    borderRadius: '5px',\n                    marginBottom: '10px',\n                    marginTop: '10px',\n                  }}\n                >\n                  {this.props.models.map(model => (\n                    <option key={model} name={model} value={model}>\n                      {`${model} `}\n                    </option>\n                  ))}\n                </select>\n              </td>\n              <td width=\"2%\">&nbsp;</td>\n              {hasPerm ? (\n                <td width=\"18%\">\n                  <button\n                    className=\"actionButton\"\n                    onClick={this.onClickBtn}\n                    title={'Run Algorithm'}\n                    disabled={\n                      this.state.isButtonDisabled || !this.props.models.length\n                    }\n                    style={{\n                      display: this.props.onClick ? 'block' : 'none',\n                      marginLeft: '10px',\n                    }}\n                  >\n                    Run\n                  </button>\n                </td>\n              ) : null}\n            </tr>\n\n            {useFilter ? (\n              <>\n                <td>&nbsp;</td>\n                <tr>\n                  <td colSpan=\"3\">Body Part Examined:</td>\n                </tr>\n\n                <tr>\n                  <td width=\"80%\">\n                    <input\n                      type=\"text\"\n                      id={`filter-bodyPart`}\n                      className=\"selectBox\"\n                      value={this.state.filterBodyPart}\n                      placeholder={'Filter...'}\n                      onChange={e => this.handleFilterChange(e.target.value)}\n                    />\n                  </td>\n\n                  <td width=\"2%\">&nbsp;</td>\n\n                  <td width=\"18%\">\n                    <button\n                      className=\"actionButton\"\n                      onClick={this.onClickApply}\n                      title={'Run Algorithm'}\n                      disabled={!this.props.models.length}\n                      style={{\n                        display: this.props.onClick ? 'block' : 'none',\n                        marginLeft: '10px',\n                      }}\n                    >\n                      Apply\n                    </button>\n                  </td>\n\n                  <td>&nbsp;</td>\n                </tr>\n              </>\n            ) : null}\n          </tbody>\n        </table>\n        <p></p>\n\n        {this.props.models.length > 0 ? <h5>Model Information</h5> : null}\n        <p></p>\n        {modelInfo ? (\n          <table>\n            <tbody>\n              <tr>\n                <th>Algorithm Name</th>\n                <th>{modelInfo.name}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>Task</th>\n                <th>{modelInfo.task}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>Body Part Examined</th>\n                <th>{modelInfo.bodyPart}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>Version</th>\n                <th>{modelInfo.version}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>Algorithm Overview</th>\n                <th>{modelInfo.algorithm_overview}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>Model Architecture</th>\n                <th>{modelInfo.model_architecture}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>References</th>\n                <div className=\"refs\">\n                  {res.map(ref => (\n                    <>\n                      <th key={ref}>\n                        <a\n                          key={ref}\n                          className=\"newbutton\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={ref}\n                          style={{ overflow: 'hidden', wordBreak: 'break-all' }}\n                        >\n                          {ref}\n                        </a>\n                      </th>\n                      <br></br>\n                    </>\n                  ))}\n                </div>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>Model Performance</th>\n                <th>{modelInfo.model_performance}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>Data Description</th>\n                <th>{modelInfo.data_description}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>Input</th>\n                <th>{modelInfo.input}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>Input Modality</th>\n                <th>{modelInfo.inputModality}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>Output</th>\n                <th>{modelInfo.output}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>Additional Info</th>\n                <th>{modelInfo.additional_info}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n\n              <tr>\n                <th>Created at</th>\n                <th>{modelInfo.created_at}</th>\n              </tr>\n              <tr>&nbsp;</tr>\n            </tbody>\n          </table>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default ModelSelector;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './BaseTab.styl';\nimport { UIModalService, UINotificationService } from '@ohif/core';\n\nexport default class BaseTab extends Component {\n  static propTypes = {\n    tabIndex: PropTypes.number,\n    info: PropTypes.any,\n    segmentId: PropTypes.string,\n    viewConstants: PropTypes.any,\n    client: PropTypes.func,\n    updateView: PropTypes.func,\n    onSelectActionTab: PropTypes.func,\n    onOptionsConfig: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.notification = UINotificationService.create({});\n    this.uiModelService = UIModalService.create({});\n    this.tabId = 'tab-' + this.props.tabIndex;\n  }\n\n  onSelectActionTab = evt => {\n    this.props.onSelectActionTab(evt.currentTarget.value);\n  };\n\n  onEnterActionTab = () => {};\n  onLeaveActionTab = () => {};\n\n  onSegmentCreated = id => {};\n  onSegmentUpdated = id => {};\n  onSegmentDeleted = id => {};\n  onSegmentSelected = id => {};\n  onSelectModel = model => {};\n}\n","import React from 'react';\nimport './Inference.styl';\nimport ModelSelector from '../ModelSelector';\nimport BaseTab from './BaseTab';\nimport { connect } from 'react-redux';\nimport { utils } from '@ohif/core';\nimport bodyParts from '../../../../../platform/viewer/src/components/bodyParts';\nconst { studyMetadataManager } = utils;\n\nclass Inference extends BaseTab {\n  constructor(props) {\n    super(props);\n\n    this.server_url = new URL('http://localhost/');\n    this.modelSelector = React.createRef();\n    this.state = {\n      currentModel: null,\n    };\n  }\n\n  onSelectModel = model => {\n    this.setState({ currentModel: model });\n  };\n\n  onInference = async () => {\n    const nid = this.notification.show({\n      title: 'AI Tools',\n      message: 'Running Inference...',\n      type: 'info',\n      duration: 100000,\n    });\n    const { viewConstants } = this.props;\n\n    const model = this.modelSelector.current.currentModel();\n\n    let task = '';\n    let port = '';\n    let inputExtension = '';\n\n    this.props.info.forEach(function(algo) {\n      if (algo['name'] == model) {\n        task = algo['task'];\n        port = algo['port'];\n        inputExtension = algo['inputExtension'];\n      }\n    });\n\n    const image = viewConstants.SeriesInstanceUID;\n\n    let response = null;\n\n    if (task == 'Segmentation') {\n      response = await this.props.client().segmentation(model, image, {\n        port: port,\n        inputExtension: inputExtension,\n        task: task,\n      });\n    } else if (task == 'Classification') {\n      response = await this.props.client().classification(model, image, {\n        port: port,\n        inputExtension: inputExtension,\n        task: task,\n      });\n    } else if (task == 'Image Registration') {\n      let layoutViewports = viewConstants.viewports;\n      if (Object.keys(layoutViewports).length === 2) {\n        let seriesIds = '';\n        Object.keys(layoutViewports).forEach(key => {\n          seriesIds = seriesIds + 'S' + layoutViewports[key].SeriesInstanceUID;\n        });\n        seriesIds = seriesIds.substr(1);\n\n        response = await this.props.client().registration(model, seriesIds, {\n          port: port,\n          inputExtension: inputExtension,\n          task: task,\n        });\n      } else {\n        alert(\n          'Failed to Run Image Registration. You must select 2 series in the Layout!'\n        );\n      }\n    } else {\n      response = await this.props.client().segmentation(model, image, {\n        port: port,\n        inputExtension: inputExtension,\n        task: task,\n      });\n    }\n\n    if (!nid) {\n      window.snackbar.hideAll();\n    } else {\n      this.notification.hide(nid);\n    }\n\n    if (response) {\n      if (response.status !== 200) {\n        this.notification.show({\n          title: 'AI Tools',\n          message: 'Failed to Run Inference',\n          type: 'error',\n          duration: 8000,\n        });\n      } else {\n        this.notification.show({\n          title: 'AI Tools',\n          message: 'Run Inference - Successful',\n          type: 'success',\n          duration: 8000,\n        });\n      }\n      await this.props.updateView(response, [`${model}_result`], task);\n    }\n  };\n\n  render() {\n    const { user, viewConstants } = this.props;\n    let modality;\n    let useFilter = true;\n\n    const studyMetadata = studyMetadataManager.get(\n      viewConstants.StudyInstanceUID\n    );\n    const displaySets = studyMetadata.getDisplaySets();\n    const activeDisplaySet = displaySets.find(\n      ds => ds.displaySetInstanceUID === viewConstants.displaySetInstanceUID\n    );\n\n    const { images } = activeDisplaySet;\n    const image = images[0];\n    let metadata = image.getData().metadata;\n    let bodyPart;\n    let bodyPartDescription = '';\n    if (Object.keys(metadata).includes('BodyPartExamined')) {\n      bodyPart = metadata['BodyPartExamined'];\n      bodyPartDescription = Object.keys(bodyParts).find(\n        key => bodyParts[key] === bodyPart\n      );\n    }\n\n    console.log('Body Part:', bodyPartDescription);\n\n    Object.keys(viewConstants.viewports).forEach(key => {\n      modality = viewConstants.viewports[key].Modality;\n    });\n    let models = [];\n    if (this.props.info) {\n      if (user && localStorage.getItem('HealthProfessional_Authenticated')) {\n        let modelsAvailableHealthProfessionals = [\n          'clara-pt-spleen-ct-segmentation',\n          'left-atrium-segmentation',\n          'mr-classification',\n        ];\n        this.props.info.forEach(function(model) {\n          let modelInputModality = model['inputModality'].split('-')[0];\n          modelInputModality = modelInputModality.replace(' ', '');\n          if (\n            modelsAvailableHealthProfessionals.includes(model['name']) &&\n            modelInputModality === modality\n          ) {\n            if (\n              bodyPartDescription !== '' &&\n              model['bodyPart'] === bodyPartDescription\n            ) {\n              useFilter = false;\n              models.push(model['name']);\n            } else if (bodyPartDescription === '') {\n              models.push(model['name']);\n            }\n          }\n        });\n      } else if (user && localStorage.getItem('Investigator_Authenticated')) {\n        this.props.info.forEach(function(model) {\n          let modelInputModality = model['inputModality'].split('-')[0];\n          modelInputModality = modelInputModality.replace(' ', '');\n          if (modelInputModality === modality) {\n            if (\n              bodyPartDescription !== '' &&\n              model['bodyPart'] === bodyPartDescription\n            ) {\n              models.push(model['name']);\n            } else if (bodyPartDescription === '') {\n              models.push(model['name']);\n            }\n          }\n        });\n      }\n    }\n\n    return (\n      <div className=\"tab-content\">\n        <ModelSelector\n          ref={this.modelSelector}\n          info={this.props.info}\n          models={models}\n          currentModel={this.state.currentModel}\n          onClick={this.onInference}\n          onSelectModel={this.onSelectModel}\n          user={user}\n          useFilter={useFilter}\n          handleFilterChange={this.props.handleFilterChange}\n          onClickApply={this.props.onClickApply}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nconst ConnectedInference = connect(\n  mapStateToProps,\n  null\n)(Inference);\n\nexport default ConnectedInference;\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@ohif/ui';\nimport {\n  UIModalService,\n  UINotificationService,\n  UIDialogService,\n} from '@ohif/core';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport './SegmentationList.styl';\nimport SegmentationReader from '../utils/SegmentationReader';\n\nconst larvitar = require('D:/tese/Bia_final/frontend_bia/node_modules/larvitar/index.js');\n\nexport default class NrrdResult extends Component {\n  static propTypes = {\n    viewConstants: PropTypes.any,\n    client: PropTypes.func,\n    disableResultsButton: PropTypes.func,\n    resetImage: PropTypes.func,\n    canEditStudy: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.notification = UINotificationService.create({});\n    this.uiModelService = UIModalService.create({});\n    this.uiDialogService = UIDialogService.create({});\n\n    const { element } = this.props.viewConstants;\n\n    const mainImage = cornerstone.getEnabledElement(element).image;\n\n    this.state = {\n      element: element,\n      results: null,\n      selectedResultId: null,\n      header: null,\n      image: null,\n      mainImage: mainImage,\n      resultImage: null,\n      nrrdSeries: null,\n      scale: null,\n      wwwc: null,\n      size: null,\n      slice: null,\n      stackSize: null,\n      activeColorMap: null,\n    };\n\n    this.state.element.addEventListener('mouseup', this.logMouseButton);\n    this.state.element.addEventListener('wheel', this.logScrollButton);\n    document.addEventListener('keypress', this.logKeyButton);\n    this.color_counter = 0;\n  }\n\n  componentWillUnmount() {\n    this.state.element.removeEventListener('mouseup', this.logMouseButton);\n    this.state.element.removeEventListener('wheel', this.logScrollButton);\n    document.removeEventListener('keypress', this.logKeyButton);\n  }\n\n  logMouseButton = e => {\n    if (typeof e === 'object') {\n      if (e.button === 0) {\n        let viewport = cornerstone.getViewport(\n          this.props.viewConstants.element\n        );\n\n        let image = cornerstone.getImage(this.props.viewConstants.element);\n\n        const imageDimensions = `${image.width} x ${image.height}`;\n\n        let windowWidth = viewport.voi.windowWidth;\n        let windowCenter = viewport.voi.windowCenter;\n\n        const wwwc = `W: ${\n          windowWidth.toFixed ? windowWidth.toFixed(0) : windowWidth\n        } L: ${windowWidth.toFixed ? windowCenter.toFixed(0) : windowCenter}`;\n\n        const stackState = cornerstoneTools.getToolState(\n          this.props.viewConstants.element,\n          'stack'\n        );\n        const stackData = stackState.data[0];\n\n        this.setState({\n          scale: viewport.scale,\n          wwwc: wwwc,\n          size: imageDimensions,\n          slice: stackData.currentImageIdIndex + 1,\n          stackSize: stackData.imageIds.length,\n        });\n      }\n    }\n  };\n\n  logScrollButton = () => {\n    const stackState = cornerstoneTools.getToolState(\n      this.props.viewConstants.element,\n      'stack'\n    );\n    const stackData = stackState.data[0];\n\n    this.setState({\n      slice: stackData.currentImageIdIndex + 1,\n      stackSize: stackData.imageIds.length,\n    });\n  };\n\n  logKeyButton = e => {\n    e = e || window.event;\n    let color_maps = larvitar.getColormapsList();\n    this.color_counter =\n      this.color_counter === color_maps.length - 1 ? 0 : this.color_counter + 1;\n    let color_map = color_maps[this.color_counter];\n\n    if (e.keyCode === 109) {\n      let colormap = cornerstone.colors.getColormap(color_map.id);\n\n      const viewport = cornerstone.getViewport(\n        this.props.viewConstants.element\n      );\n      if (viewport) {\n        viewport.colormap = colormap;\n        cornerstone.setViewport(this.props.viewConstants.element, viewport);\n        cornerstone.updateImage(this.props.viewConstants.element, true);\n      }\n\n      this.setState({ activeColorMap: color_map.name });\n    }\n  };\n\n  onSelect = evt => {\n    let checked = evt.currentTarget.checked;\n\n    if (!checked) {\n      if (this.props.resetImage) {\n        this.props.resetImage();\n      }\n\n      this.setState({ selectedResultId: null, activeColorMap: 'Gray' });\n    } else {\n      const { element } = this.props.viewConstants;\n\n      this.updateTheImage(this.state.resultImage);\n\n      this.csToolsUpdateImageIds(element, this.state.nrrdSeries.imageIds, 0);\n\n      let id = this.state.results[0].id;\n\n      this.setState({\n        selectedResultId: id,\n        slice: 1,\n        stackSize: this.state.nrrdSeries.imageIds.length,\n      });\n    }\n  };\n\n  onClickDelete = () => {\n    this.refreshTable();\n\n    if (this.props.disableResultsButton) {\n      this.props.disableResultsButton();\n    }\n  };\n\n  onClickExport = () => {\n    this.notification.show({\n      title: 'AI Tools',\n      message: 'Preparing the result to download as .nrrd',\n      type: 'info',\n      duration: 5000,\n    });\n\n    SegmentationReader.serializeNrrd(\n      this.state.header,\n      this.state.image,\n      'result' + '.nrrd'\n    );\n  };\n\n  refreshTable = result => {\n    if (result) {\n      let resultImage = [];\n      resultImage.push(result);\n      this.setState({ results: resultImage, selectedResultId: result.id });\n    } else {\n      this.setState({\n        results: null,\n        selectedResultId: null,\n        header: null,\n        image: null,\n        resultImage: null,\n        nrrdSeries: null,\n        scale: null,\n        wwwc: null,\n        size: null,\n        slice: null,\n        stackSize: null,\n      });\n    }\n  };\n\n  updateView = async (response, labels) => {\n    const element = this.props.viewConstants.element;\n\n    const { header, image } = SegmentationReader.parseNrrdData(response.data);\n    SegmentationReader.serializeNrrd(header, image, 'result' + '.nrrd');\n    this.setState({ header: header, image: image });\n    if (labels) {\n      for (let label in labels) {\n        if (Array.isArray(labels)) {\n          label = labels[label] + '#1';\n\n          if (this.state.results !== null && this.state.results.length > 0) {\n            this.state.results.forEach(function(result) {\n              if (result.label === label) {\n                let index = parseInt(result.label.split('#')[1]);\n                label = label.replace(`#${index}`, `#${index + 1}`);\n              }\n            });\n          }\n        }\n\n        if (this.state.selectedResultId !== null) {\n          let result = {\n            color: 'Gray',\n            id: this.state.selectedResultId + 1,\n            label: label,\n          };\n          this.refreshTable(result);\n        } else {\n          let result = { color: 'Gray', id: 0, label: label };\n          this.refreshTable(result);\n        }\n      }\n    }\n\n    let data = await response.data;\n    let file = new File([data], 'example.nrrd');\n\n    let reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    const scope = this;\n\n    reader.onload = function() {\n      let volume = larvitar.importNRRDImage(reader.result);\n\n      let serie = larvitar.buildNrrdImage(volume, '1234', {});\n\n      scope.renderImage(serie, element);\n\n      scope.setState({\n        nrrdSeries: serie,\n      });\n    };\n  };\n\n  getSeriesData = series => {\n    let data = {};\n    if (series.isMultiframe) {\n      data.isMultiframe = true;\n      data.numberOfSlices = series.imageIds.length;\n      data.imageIndex = 0;\n      data.imageId = series.imageIds[data.imageIndex];\n    } else {\n      data.isMultiframe = false;\n      data.numberOfSlices = series.imageIds.length;\n\n      data.imageIndex = Math.floor(data.numberOfSlices / 2);\n\n      data.imageId = series.imageIds[data.imageIndex];\n    }\n    data.isColor = series.color;\n    data.isTimeserie = false; // TODO 4D\n\n    // rows, cols and x y z spacing\n    data.rows = series.instances[series.imageIds[0]].metadata['x00280010'];\n    data.cols = series.instances[series.imageIds[0]].metadata['x00280011'];\n    data.thickness = series.instances[series.imageIds[0]].metadata['x00180050'];\n    data.spacing_x = series.instances[series.imageIds[0]].metadata['x00280030']\n      ? series.instances[series.imageIds[0]].metadata['x00280030'][0]\n      : null;\n    data.spacing_y = series.instances[series.imageIds[0]].metadata['x00280030']\n      ? series.instances[series.imageIds[0]].metadata['x00280030'][1]\n      : null;\n\n    // window center and window width\n    data.wc = series.instances[series.imageIds[0]].metadata['x00281050'];\n\n    data.ww = series.instances[series.imageIds[0]].metadata['x00281051'];\n\n    // default values for reset\n    data.defaultWW = data.ww;\n    data.defaultWC = data.wc;\n\n    if (data.rows == null || data.cols == null) {\n      alert('invalid image metadata');\n\n      return;\n    }\n    return data;\n  };\n\n  csToolsUpdateImageIds = (element, imageIds, imageIdIndex) => {\n    const stackState = cornerstoneTools.getToolState(element, 'stack');\n    const stackData = stackState.data[0];\n    stackData.imageIds = imageIds;\n\n    stackData.currentImageIdIndex =\n      stackData.currentImageIdIndex < imageIdIndex\n        ? stackData.currentImageIdIndex\n        : (stackData.currentImageIdIndex += 1);\n  };\n\n  updateTheImage = data => {\n    const element = this.state.element;\n\n    this.setState({ activeColorMap: 'Gray' });\n\n    let scope = this;\n\n    cornerstone.loadImage(data.imageId).then(function(image) {\n      cornerstone.displayImage(element, image);\n\n      let viewport = cornerstone.getViewport(element);\n      let colormap = cornerstone.colors.getColormap('gray');\n\n      element.style.width = image.width;\n      element.style.height = image.height;\n      cornerstone.resize(element, true);\n\n      viewport.voi.windowWidth = image.windowWidth;\n      viewport.voi.windowCenter = image.windowCenter;\n      viewport.invert = image.invert;\n      viewport.colormap = colormap;\n      cornerstone.setViewport(element, viewport);\n\n      cornerstone.fitToWindow(element);\n\n      const imageDimensions = `${image.width} x ${image.height}`;\n\n      let windowWidth = viewport.voi.windowWidth;\n      let windowCenter = viewport.voi.windowCenter;\n\n      const wwwc = `W: ${\n        windowWidth.toFixed ? windowWidth.toFixed(0) : windowWidth\n      } L: ${windowWidth.toFixed ? windowCenter.toFixed(0) : windowCenter}`;\n\n      scope.setState({\n        scale: viewport.scale,\n        wwwc: wwwc,\n        size: imageDimensions,\n      });\n    });\n  };\n\n  renderImage = (seriesStack, element) => {\n    let series = { ...seriesStack };\n    let data;\n\n    data = this.getSeriesData(series);\n    if (!data.imageId) {\n      alert('Error during renderImage: imageId has not been loaded yet.');\n      return;\n    }\n\n    this.setState({\n      resultImage: data,\n      slice: 1,\n      stackSize: series.imageIds.length,\n    });\n\n    this.updateTheImage(data);\n\n    this.csToolsUpdateImageIds(element, series.imageIds, data.imageIndex - 1);\n  };\n\n  render() {\n    const resultId = this.state.selectedResultId;\n\n    const zoomPercentage = parseFloat(this.state.scale * 100).toFixed(0);\n\n    return (\n      <div className=\"segmentationList\">\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <button\n                  className=\"segButton\"\n                  onClick={this.onClickDelete}\n                  title=\"Clear Result Image\"\n                  disabled={resultId === null}\n                >\n                  <Icon name=\"trash\" width=\"12px\" height=\"12px\" />\n                </button>\n              </td>\n\n              <td align=\"right\">\n                <button\n                  className=\"segButton\"\n                  onClick={this.onClickExport}\n                  title={'Download Result Image as .nrrd'}\n                  disabled={resultId === null}\n                >\n                  <Icon name=\"save\" width=\"12px\" height=\"12px\" />\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div className=\"segSection\">\n          <table className=\"segTable\">\n            <thead>\n              <tr>\n                <th width=\"2%\">#</th>\n                <th width=\"80%\">Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.results !== null &&\n                this.state.results.map(result => (\n                  <tr key={result.id}>\n                    <td>\n                      <input\n                        className=\"selectSegment\"\n                        name=\"selectSegment\"\n                        id=\"selectSegment\"\n                        type=\"checkbox\"\n                        checked={result.id === resultId}\n                        onChange={e => {\n                          this.onSelect(e);\n                        }}\n                      />\n                    </td>\n\n                    <td\n                      className=\"segEdit\"\n                      contentEditable=\"true\"\n                      suppressContentEditableWarning=\"true\"\n                    >\n                      {result.label}\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n        {this.state.selectedResultId !== null &&\n        this.state.nrrdSeries !== null ? (\n          <p\n            style={{\n              marginTop: '10px',\n              marginLeft: '10px',\n            }}\n          >\n            <b>Zoom</b>: {zoomPercentage} %<br></br>\n            <b>Window Width/Level</b>: {this.state.wwwc}\n            <br></br>\n            <b>Image Dimensions</b>: {this.state.size}\n            <br></br>\n            <b>Slice Number</b>: {this.state.slice}/{this.state.stackSize}\n            <br></br>\n          </p>\n        ) : null}\n        <p\n          style={{\n            marginTop: '10px',\n            marginLeft: '10px',\n          }}\n        >\n          <b>Active Color Map</b>: {this.state.activeColorMap}\n          <br></br>\n          Press <b>\"M\"</b> to cycle through color maps\n        </p>\n      </div>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-has-content */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Panel.styl';\nimport SegmentationList from './SegmentationList';\nimport Client from '../services/Client';\nimport { UINotificationService } from '@ohif/core';\nimport { getImageIdsForDisplaySet } from '../utils/SegmentationUtils';\nimport cornerstone from 'cornerstone-core';\nimport MD5 from 'md5.js';\nimport Inference from './actions/Inference';\nimport axiosInstance from 'axios';\nimport { connect } from 'react-redux';\nimport NrrdResult from './NrrdResult.js';\nimport cornerstoneTools from 'cornerstone-tools';\n\nclass Panel extends Component {\n  static propTypes = {\n    studies: PropTypes.any,\n    viewports: PropTypes.any,\n    activeIndex: PropTypes.any,\n    user: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { viewports, studies, activeIndex } = props;\n\n    this.viewConstants = this.getViewConstants(viewports, studies, activeIndex);\n\n    const { element } = this.viewConstants;\n    const mainImage = cornerstone.getEnabledElement(element).image;\n\n    this.notification = UINotificationService.create({});\n    this.segmentationList = React.createRef();\n    this.nrrdImageList = React.createRef();\n    this.actions = {\n      inference: React.createRef(),\n    };\n\n    this.state = {\n      children: null,\n      results: null,\n      info: [],\n      action: {},\n      isResultsButtonDisabled: true,\n      mainImage: mainImage,\n      renderNrrd: false,\n      filterBodyPart: '',\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ info: await this.onInfo() });\n    this.setState({\n      children: (\n        <div>\n          <Inference\n            ref={this.actions['inference']}\n            tabIndex={3}\n            info={this.state.info}\n            viewConstants={this.viewConstants}\n            client={this.client}\n            notification={this.notification}\n            updateView={this.updateView}\n            onSelectActionTab={this.onSelectActionTab}\n            onOptionsConfig={this.onOptionsConfig}\n            handleFilterChange={this.handleFilterChange}\n            onClickApply={this.onClickApply}\n          />\n        </div>\n      ),\n    });\n  }\n\n  client = () => {\n    return new Client();\n  };\n\n  getViewConstants = (viewports, studies, activeIndex) => {\n    const viewport = viewports[activeIndex];\n\n    const { PatientID } = studies[activeIndex];\n\n    const {\n      StudyInstanceUID,\n      SeriesInstanceUID,\n      displaySetInstanceUID,\n    } = viewport;\n\n    const imageIds = getImageIdsForDisplaySet(\n      studies,\n      StudyInstanceUID,\n      SeriesInstanceUID\n    );\n    const imageIdsToIndex = new Map();\n    for (let i = 0; i < imageIds.length; i++) {\n      imageIdsToIndex.set(imageIds[i], i);\n    }\n\n    const element = cornerstone.getEnabledElements()[this.props.activeIndex]\n      .element;\n    const cookiePostfix = new MD5()\n      .update(PatientID + StudyInstanceUID + SeriesInstanceUID)\n      .digest('hex');\n\n    return {\n      PatientID: PatientID,\n      StudyInstanceUID: StudyInstanceUID,\n      SeriesInstanceUID: SeriesInstanceUID,\n      displaySetInstanceUID: displaySetInstanceUID,\n      imageIdsToIndex: imageIdsToIndex,\n      element: element,\n      numberOfFrames: imageIds.length,\n      cookiePostfix: cookiePostfix,\n      viewports: viewports,\n    };\n  };\n\n  handleFilterChange = value => {\n    this.setState({\n      filterBodyPart: value,\n    });\n  };\n\n  onClickApply = async () => {\n    this.setState({ info: await this.onInfo() });\n    this.setState({\n      children: (\n        <div>\n          <Inference\n            ref={this.actions['inference']}\n            tabIndex={3}\n            info={this.state.info}\n            viewConstants={this.viewConstants}\n            client={this.client}\n            notification={this.notification}\n            updateView={this.updateView}\n            onSelectActionTab={this.onSelectActionTab}\n            onOptionsConfig={this.onOptionsConfig}\n            handleFilterChange={this.handleFilterChange}\n            onClickApply={this.onClickApply}\n          />\n        </div>\n      ),\n    });\n  };\n\n  onInfo = async () => {\n    let url = `/api/model/?user=${this.props.user.email}`;\n    let filterBodyPart = this.state.filterBodyPart;\n\n    if (\n      filterBodyPart !== null &&\n      filterBodyPart !== '' &&\n      filterBodyPart !== undefined\n    ) {\n      let param = filterBodyPart;\n\n      url = url + `&bodyPart=${param}`;\n    }\n\n    const response = await axiosInstance\n      .get(url, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n        },\n      })\n      .then(res => {\n        return res;\n      })\n      .catch(error => {\n        return error.response;\n      });\n\n    if (response.status !== 200) {\n      this.notification.show({\n        title: 'AI Tools',\n        message: 'Failed to Connect to Server',\n        type: 'error',\n        duration: 6000,\n      });\n    } else {\n      return response.data;\n    }\n  };\n\n  disableResults = () => {\n    this.setState({ isResultsButtonDisabled: true });\n    this.onModelsClick();\n  };\n\n  csToolsUpdateImageIds = (element, imageIds, imageIdIndex) => {\n    const stackState = cornerstoneTools.getToolState(element, 'stack');\n    const stackData = stackState.data[0];\n    stackData.imageIds = imageIds;\n\n    stackData.currentImageIdIndex =\n      stackData.currentImageIdIndex < imageIdIndex\n        ? stackData.currentImageIdIndex\n        : (stackData.currentImageIdIndex += 1);\n  };\n\n  updateTheImage = () => {\n    const data = this.state.mainImage;\n\n    const element = this.viewConstants.element;\n\n    cornerstone.loadImage(data.imageId).then(function(image) {\n      cornerstone.displayImage(element, image);\n\n      let viewport = cornerstone.getViewport(element);\n      let colormap = cornerstone.colors.getColormap('gray');\n\n      element.style.width = image.width;\n      element.style.height = image.height;\n      cornerstone.resize(element, true);\n\n      viewport.voi.windowWidth = image.windowWidth;\n      viewport.voi.windowCenter = image.windowCenter;\n      viewport.invert = image.invert;\n      viewport.colormap = colormap;\n      cornerstone.setViewport(element, viewport);\n\n      cornerstone.fitToWindow(element);\n    });\n\n    cornerstone.updateImage(element);\n  };\n\n  resetImage = () => {\n    if (this.state.renderNrrd) {\n      const { element, imageIdsToIndex } = this.viewConstants;\n      this.updateTheImage();\n\n      this.csToolsUpdateImageIds(\n        element,\n        Array.from(imageIdsToIndex.keys()),\n        0\n      );\n    }\n  };\n\n  onModelsClick = async () => {\n    this.resetImage();\n\n    this.setState({\n      children: (\n        <div>\n          <Inference\n            ref={this.actions['inference']}\n            tabIndex={3}\n            info={this.state.info}\n            viewConstants={this.viewConstants}\n            client={this.client}\n            notification={this.notification}\n            updateView={this.updateView}\n            onSelectActionTab={this.onSelectActionTab}\n            onOptionsConfig={this.onOptionsConfig}\n            handleFilterChange={this.handleFilterChange}\n            onClickApply={this.onClickApply}\n          />\n        </div>\n      ),\n    });\n  };\n\n  onResultsClick = () => {\n    let results = this.state.results;\n    this.setState({\n      children: results,\n    });\n  };\n\n  onSegmentCreated = id => {\n    for (const action of Object.keys(this.actions)) {\n      if (this.actions[action].current)\n        this.actions[action].current.onSegmentCreated(id);\n    }\n  };\n  onSegmentUpdated = id => {\n    for (const action of Object.keys(this.actions)) {\n      if (this.actions[action].current)\n        this.actions[action].current.onSegmentUpdated(id);\n    }\n  };\n  onSegmentDeleted = id => {\n    for (const action of Object.keys(this.actions)) {\n      if (this.actions[action].current)\n        this.actions[action].current.onSegmentDeleted(id);\n    }\n  };\n  onSegmentSelected = id => {\n    for (const action of Object.keys(this.actions)) {\n      if (this.actions[action].current)\n        this.actions[action].current.onSegmentSelected(id);\n    }\n  };\n\n  onSelectActionTab = name => {\n    // Leave Event\n    for (const action of Object.keys(this.actions)) {\n      if (this.state.action === action) {\n        if (this.actions[action].current)\n          this.actions[action].current.onLeaveActionTab();\n      }\n    }\n\n    // Enter Event\n    for (const action of Object.keys(this.actions)) {\n      if (name === action) {\n        if (this.actions[action].current)\n          this.actions[action].current.onEnterActionTab();\n      }\n    }\n\n    this.setState({ action: name });\n  };\n\n  onOptionsConfig = () => {\n    return this.actions['options'].current &&\n      this.actions['options'].current.state\n      ? this.actions['options'].current.state.config\n      : {};\n  };\n\n  updateView = async (response, labels, task, operation, slice, overlap) => {\n    if (task === 'Classification') {\n      let result = response.data['prediction'];\n      if (typeof result !== 'object') {\n        this.notification.show({\n          title: 'AI Tools',\n          message: 'Prediction result is not a JSON object!',\n          type: 'error',\n          duration: 6000,\n        });\n      } else {\n        const elements = [];\n        Object.keys(result).forEach(label => {\n          elements.push(label);\n        });\n        this.setState({\n          children: (\n            <div>\n              <h4 style={{ marginLeft: '10px' }}>Prediction Result</h4>\n              <br></br>\n              <ul>\n                {elements.map((value, index) => {\n                  return (\n                    <li key={index}>\n                      {value}: {result[value]}\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          ),\n          isResultsButtonDisabled: false,\n          renderNrrd: false,\n          results: (\n            <div>\n              <h4 style={{ marginLeft: '10px' }}>Prediction Result</h4>\n              <br></br>\n              <ul>\n                {elements.map((value, index) => {\n                  return (\n                    <li key={index}>\n                      {value}: {result[value]}\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          ),\n        });\n      }\n    } else if (task === 'Segmentation') {\n      this.setState({\n        children: (\n          <div>\n            <SegmentationList\n              ref={this.segmentationList}\n              viewConstants={this.viewConstants}\n              onSegmentCreated={this.onSegmentCreated}\n              onSegmentUpdated={this.onSegmentUpdated}\n              onSegmentDeleted={this.onSegmentDeleted}\n              onSegmentSelected={this.onSegmentSelected}\n              client={this.client}\n            />\n          </div>\n        ),\n        isResultsButtonDisabled: false,\n        renderNrrd: false,\n        results: (\n          <div>\n            <SegmentationList\n              ref={this.segmentationList}\n              viewConstants={this.viewConstants}\n              onSegmentCreated={this.onSegmentCreated}\n              onSegmentUpdated={this.onSegmentUpdated}\n              onSegmentDeleted={this.onSegmentDeleted}\n              onSegmentSelected={this.onSegmentSelected}\n              client={this.client}\n            />\n          </div>\n        ),\n      });\n      this.segmentationList.current.updateView(\n        response,\n        labels,\n        operation,\n        slice,\n        overlap\n      );\n    } else {\n      this.setState({\n        children: (\n          <div>\n            <NrrdResult\n              ref={this.nrrdImageList}\n              viewConstants={this.viewConstants}\n              client={this.client}\n              disableResultsButton={this.disableResults}\n              resetImage={this.resetImage}\n            />\n          </div>\n        ),\n        isResultsButtonDisabled: false,\n        renderNrrd: true,\n        results: (\n          <div>\n            <NrrdResult\n              ref={this.nrrdImageList}\n              viewConstants={this.viewConstants}\n              client={this.client}\n              disableResultsButton={this.disableResults}\n              resetImage={this.resetImage}\n            />\n          </div>\n        ),\n      });\n      this.nrrdImageList.current.updateView(response, labels);\n    }\n  };\n\n  render() {\n    let children = this.state.children;\n    return (\n      <div className=\"monaiLabelPanel\">\n        <div\n          className=\"btn-group rounded-pill\"\n          role=\"group\"\n          aria-label=\"Outline example\"\n          style={{\n            width: '100%',\n            borderRadius: '5px',\n            marginBottom: '5px',\n            marginTop: '10px',\n          }}\n        >\n          <button\n            type=\"button\"\n            onClick={this.onModelsClick}\n            className=\"btn btn-outline-primary\"\n          >\n            Models\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.onResultsClick}\n            className=\"btn btn-outline-primary\"\n            disabled={this.state.isResultsButtonDisabled}\n          >\n            Results\n          </button>\n        </div>\n        <hr></hr>\n        {children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nconst ConnectedPanel = connect(\n  mapStateToProps,\n  null\n)(Panel);\n\nexport default ConnectedPanel;\n","import ConnectedPanel from './components/Panel.js';\n\nconst panelModule = () => {\n  return {\n    menuOptions: [\n      {\n        icon: 'brain',\n        label: 'AI',\n        from: 'right',\n        target: 'panel',\n      },\n    ],\n    components: [\n      {\n        id: 'panel',\n        component: ConnectedPanel,\n      },\n    ],\n    defaultContext: ['VIEWER'],\n  };\n};\n\nexport default panelModule;\n","import toolbarModule from './toolbarModule';\nimport panelModule from './panelModule.js';\nimport init from './init';\n\nexport default {\n  id: 'com.ohif.monai-label',\n\n  preRegistration({ servicesManager, configuration = {} }) {\n    init({ servicesManager, configuration });\n  },\n  getToolbarModule() {\n    return toolbarModule;\n  },\n  getPanelModule({ servicesManager, commandsManager }) {\n    return panelModule({ servicesManager, commandsManager });\n  },\n};\n","import csTools from 'cornerstone-tools';\n\n/**\n *\n * @param {Object} servicesManager\n * @param {Object} configuration\n */\nexport default function init() {\n  const {\n    BrushTool,\n    SphericalBrushTool,\n    CorrectionScissorsTool,\n    CircleScissorsTool,\n    FreehandScissorsTool,\n    RectangleScissorsTool,\n  } = csTools;\n\n  const tools = [\n    BrushTool,\n    SphericalBrushTool,\n    CorrectionScissorsTool,\n    CircleScissorsTool,\n    FreehandScissorsTool,\n    RectangleScissorsTool,\n  ];\n\n  tools.forEach(tool => csTools.addTool(tool));\n\n  csTools.addTool(BrushTool, {\n    name: 'BrushEraser',\n    configuration: {\n      alwaysEraseOnClick: true,\n    },\n  });\n  csTools.addTool(CircleScissorsTool, {\n    name: 'CircleScissorsEraser',\n    defaultStrategy: 'ERASE_INSIDE',\n  });\n  csTools.addTool(FreehandScissorsTool, {\n    name: 'FreehandScissorsEraser',\n    defaultStrategy: 'ERASE_INSIDE',\n  });\n  csTools.addTool(RectangleScissorsTool, {\n    name: 'RectangleScissorsEraser',\n    defaultStrategy: 'ERASE_INSIDE',\n  });\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'regenerator-runtime/runtime';\nimport App from './App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/**\n * EXTENSIONS\n * =================\n *\n * Importing and modifying the extensions our app uses HERE allows us to leverage\n * tree shaking and a few other niceties. However, by including them here they become\n * \"baked in\" to the published application.\n *\n * Depending on your use case/needs, you may want to consider not adding any extensions\n * by default HERE, and instead provide them via the extensions configuration key or\n * by using the exported `App` component, and passing in your extensions as props using\n * the defaultExtensions property.\n */\n\nimport OHIFDicomSegmentationExtension from '@ohif/extension-dicom-segmentation';\nimport OHIFDicomTagBrowserExtension from '@ohif/extension-dicom-tag-browser';\nimport OHIFMonaiLabelExtension from '@ohif/extension-monai-label';\nimport { version } from '../package.json';\n\n/*\n * Default Settings\n */\nlet config = {};\n\nif (window) {\n  config = window.config || {};\n  window.version = version;\n}\n\nconst appProps = {\n  config,\n  defaultExtensions: [\n    OHIFDicomSegmentationExtension,\n    OHIFDicomTagBrowserExtension,\n    OHIFMonaiLabelExtension,\n  ],\n};\n\n/** Create App */\nconst app = React.createElement(App, appProps, null);\n\n/** Render */\nReactDOM.render(app, document.getElementById('root'));\n","import guid from '../utils/guid.js';\nimport OHIFError from './OHIFError';\nimport { Vector3 } from 'cornerstone-math';\n\nconst OBJECT = 'object';\n\n/**\n * This class defines an ImageSet object which will be used across the viewer. This object represents\n * a list of images that are associated by any arbitrary criteria being thus content agnostic. Besides the\n * main attributes (images and uid) it allows additional attributes to be appended to it (currently\n * indiscriminately, but this should be changed).\n */\nclass ImageSet {\n  constructor(images) {\n    if (Array.isArray(images) !== true) {\n      throw new OHIFError('ImageSet expects an array of images');\n    }\n\n    // @property \"images\"\n    Object.defineProperty(this, 'images', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: images,\n    });\n\n    // @property \"uid\"\n    Object.defineProperty(this, 'uid', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: guid(), // Unique ID of the instance\n    });\n  }\n\n  getUID() {\n    return this.uid;\n  }\n\n  setAttribute(attribute, value) {\n    this[attribute] = value;\n  }\n\n  getAttribute(attribute) {\n    return this[attribute];\n  }\n\n  setAttributes(attributes) {\n    if (typeof attributes === OBJECT && attributes !== null) {\n      const imageSet = this,\n        hasOwn = Object.prototype.hasOwnProperty;\n      for (let attribute in attributes) {\n        if (hasOwn.call(attributes, attribute)) {\n          imageSet[attribute] = attributes[attribute];\n        }\n      }\n    }\n  }\n\n  getImage(index) {\n    return this.images[index];\n  }\n\n  sortBy(sortingCallback) {\n    return this.images.sort(sortingCallback);\n  }\n\n  sortByImagePositionPatient() {\n    const images = this.images;\n    const referenceImagePositionPatient = _getImagePositionPatient(images[0]);\n\n    const refIppVec = new Vector3(\n      referenceImagePositionPatient[0],\n      referenceImagePositionPatient[1],\n      referenceImagePositionPatient[2]\n    );\n\n    const ImageOrientationPatient = _getImageOrientationPatient(images[0]);\n\n    const scanAxisNormal = new Vector3(\n      ImageOrientationPatient[0],\n      ImageOrientationPatient[1],\n      ImageOrientationPatient[2]\n    ).cross(\n      new Vector3(\n        ImageOrientationPatient[3],\n        ImageOrientationPatient[4],\n        ImageOrientationPatient[5]\n      )\n    );\n\n    const distanceImagePairs = images.map(function(image) {\n      const ippVec = new Vector3(..._getImagePositionPatient(image));\n      const positionVector = refIppVec.clone().sub(ippVec);\n      const distance = positionVector.dot(scanAxisNormal);\n\n      return {\n        distance,\n        image,\n      };\n    });\n\n    distanceImagePairs.sort(function(a, b) {\n      return b.distance - a.distance;\n    });\n\n    const sortedImages = distanceImagePairs.map(a => a.image);\n\n    images.sort(function(a, b) {\n      return sortedImages.indexOf(a) - sortedImages.indexOf(b);\n    });\n  }\n}\n\nfunction _getImagePositionPatient(image) {\n  return image.getData().metadata.ImagePositionPatient;\n}\n\nfunction _getImageOrientationPatient(image) {\n  return image.getData().metadata.ImageOrientationPatient;\n}\n\nexport default ImageSet;\n","// TODO: Deprecate since we have the same thing in dcmjs?\nexport const sopClassDictionary = {\n  ComputedRadiographyImageStorage: '1.2.840.10008.5.1.4.1.1.1',\n  DigitalXRayImageStorageForPresentation: '1.2.840.10008.5.1.4.1.1.1.1',\n  DigitalXRayImageStorageForProcessing: '1.2.840.10008.5.1.4.1.1.1.1.1',\n  DigitalMammographyXRayImageStorageForPresentation:\n    '1.2.840.10008.5.1.4.1.1.1.2',\n  DigitalMammographyXRayImageStorageForProcessing:\n    '1.2.840.10008.5.1.4.1.1.1.2.1',\n  DigitalIntraOralXRayImageStorageForPresentation:\n    '1.2.840.10008.5.1.4.1.1.1.3',\n  DigitalIntraOralXRayImageStorageForProcessing:\n    '1.2.840.10008.5.1.4.1.1.1.3.1',\n  CTImageStorage: '1.2.840.10008.5.1.4.1.1.2',\n  EnhancedCTImageStorage: '1.2.840.10008.5.1.4.1.1.2.1',\n  LegacyConvertedEnhancedCTImageStorage: '1.2.840.10008.5.1.4.1.1.2.2',\n  UltrasoundMultiframeImageStorage: '1.2.840.10008.5.1.4.1.1.3.1',\n  MRImageStorage: '1.2.840.10008.5.1.4.1.1.4',\n  EnhancedMRImageStorage: '1.2.840.10008.5.1.4.1.1.4.1',\n  MRSpectroscopyStorage: '1.2.840.10008.5.1.4.1.1.4.2',\n  EnhancedMRColorImageStorage: '1.2.840.10008.5.1.4.1.1.4.3',\n  LegacyConvertedEnhancedMRImageStorage: '1.2.840.10008.5.1.4.1.1.4.4',\n  UltrasoundImageStorage: '1.2.840.10008.5.1.4.1.1.6.1',\n  EnhancedUSVolumeStorage: '1.2.840.10008.5.1.4.1.1.6.2',\n  SecondaryCaptureImageStorage: '1.2.840.10008.5.1.4.1.1.7',\n  MultiframeSingleBitSecondaryCaptureImageStorage:\n    '1.2.840.10008.5.1.4.1.1.7.1',\n  MultiframeGrayscaleByteSecondaryCaptureImageStorage:\n    '1.2.840.10008.5.1.4.1.1.7.2',\n  MultiframeGrayscaleWordSecondaryCaptureImageStorage:\n    '1.2.840.10008.5.1.4.1.1.7.3',\n  MultiframeTrueColorSecondaryCaptureImageStorage:\n    '1.2.840.10008.5.1.4.1.1.7.4',\n  Sop12LeadECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.1',\n  GeneralECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.2',\n  AmbulatoryECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.3',\n  HemodynamicWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.2.1',\n  CardiacElectrophysiologyWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.3.1',\n  BasicVoiceAudioWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.4.1',\n  GeneralAudioWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.4.2',\n  ArterialPulseWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.5.1',\n  RespiratoryWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.6.1',\n  GrayscaleSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.1',\n  ColorSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.2',\n  PseudoColorSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.3',\n  BlendingSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.4',\n  XAXRFGrayscaleSoftcopyPresentationStateStorage:\n    '1.2.840.10008.5.1.4.1.1.11.5',\n  XRayAngiographicImageStorage: '1.2.840.10008.5.1.4.1.1.12.1',\n  EnhancedXAImageStorage: '1.2.840.10008.5.1.4.1.1.12.1.1',\n  XRayRadiofluoroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.12.2',\n  EnhancedXRFImageStorage: '1.2.840.10008.5.1.4.1.1.12.2.1',\n  XRay3DAngiographicImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.1',\n  XRay3DCraniofacialImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.2',\n  BreastTomosynthesisImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.3',\n  BreastProjectionXRayImageStorageForPresentation:\n    '1.2.840.10008.5.1.4.1.1.13.1.4',\n  BreastProjectionXRayImageStorageForProcessing:\n    '1.2.840.10008.5.1.4.1.1.13.1.5',\n  IntravascularOpticalCoherenceTomographyImageStorageForPresentation:\n    '1.2.840.10008.5.1.4.1.1.14.1',\n  IntravascularOpticalCoherenceTomographyImageStorageForProcessing:\n    '1.2.840.10008.5.1.4.1.1.14.2',\n  NuclearMedicineImageStorage: '1.2.840.10008.5.1.4.1.1.20',\n  RawDataStorage: '1.2.840.10008.5.1.4.1.1.66',\n  SpatialRegistrationStorage: '1.2.840.10008.5.1.4.1.1.66.1',\n  SpatialFiducialsStorage: '1.2.840.10008.5.1.4.1.1.66.2',\n  DeformableSpatialRegistrationStorage: '1.2.840.10008.5.1.4.1.1.66.3',\n  SegmentationStorage: '1.2.840.10008.5.1.4.1.1.66.4',\n  SurfaceSegmentationStorage: '1.2.840.10008.5.1.4.1.1.66.5',\n  RealWorldValueMappingStorage: '1.2.840.10008.5.1.4.1.1.67',\n  SurfaceScanMeshStorage: '1.2.840.10008.5.1.4.1.1.68.1',\n  SurfaceScanPointCloudStorage: '1.2.840.10008.5.1.4.1.1.68.2',\n  VLEndoscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.1',\n  VideoEndoscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.1.1',\n  VLMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.2',\n  VideoMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.2.1',\n  VLSlideCoordinatesMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.3',\n  VLPhotographicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.4',\n  VideoPhotographicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.4.1',\n  OphthalmicPhotography8BitImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.1',\n  OphthalmicPhotography16BitImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.2',\n  StereometricRelationshipStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.3',\n  OphthalmicTomographyImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.4',\n  VLWholeSlideMicroscopyImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.6',\n  LensometryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.1',\n  AutorefractionMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.2',\n  KeratometryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.3',\n  SubjectiveRefractionMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.4',\n  VisualAcuityMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.5',\n  SpectaclePrescriptionReportStorage: '1.2.840.10008.5.1.4.1.1.78.6',\n  OphthalmicAxialMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.7',\n  IntraocularLensCalculationsStorage: '1.2.840.10008.5.1.4.1.1.78.8',\n  MacularGridThicknessandVolumeReport: '1.2.840.10008.5.1.4.1.1.79.1',\n  OphthalmicVisualFieldStaticPerimetryMeasurementsStorage:\n    '1.2.840.10008.5.1.4.1.1.80.1',\n  OphthalmicThicknessMapStorage: '1.2.840.10008.5.1.4.1.1.81.1',\n  CornealTopographyMapStorage: '1.2.840.10008.5.1.4.1.1.82.1',\n  BasicTextSR: '1.2.840.10008.5.1.4.1.1.88.11',\n  EnhancedSR: '1.2.840.10008.5.1.4.1.1.88.22',\n  ComprehensiveSR: '1.2.840.10008.5.1.4.1.1.88.33',\n  Comprehensive3DSR: '1.2.840.10008.5.1.4.1.1.88.34',\n  ProcedureLog: '1.2.840.10008.5.1.4.1.1.88.40',\n  MammographyCADSR: '1.2.840.10008.5.1.4.1.1.88.50',\n  KeyObjectSelection: '1.2.840.10008.5.1.4.1.1.88.59',\n  ChestCADSR: '1.2.840.10008.5.1.4.1.1.88.65',\n  XRayRadiationDoseSR: '1.2.840.10008.5.1.4.1.1.88.67',\n  RadiopharmaceuticalRadiationDoseSR: '1.2.840.10008.5.1.4.1.1.88.68',\n  ColonCADSR: '1.2.840.10008.5.1.4.1.1.88.69',\n  ImplantationPlanSRDocumentStorage: '1.2.840.10008.5.1.4.1.1.88.70',\n  EncapsulatedPDFStorage: '1.2.840.10008.5.1.4.1.1.104.1',\n  EncapsulatedCDAStorage: '1.2.840.10008.5.1.4.1.1.104.2',\n  PositronEmissionTomographyImageStorage: '1.2.840.10008.5.1.4.1.1.128',\n  EnhancedPETImageStorage: '1.2.840.10008.5.1.4.1.1.130',\n  LegacyConvertedEnhancedPETImageStorage: '1.2.840.10008.5.1.4.1.1.128.1',\n  BasicStructuredDisplayStorage: '1.2.840.10008.5.1.4.1.1.131',\n  RTImageStorage: '1.2.840.10008.5.1.4.1.1.481.1',\n  RTDoseStorage: '1.2.840.10008.5.1.4.1.1.481.2',\n  RTStructureSetStorage: '1.2.840.10008.5.1.4.1.1.481.3',\n  RTBeamsTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.4',\n  RTPlanStorage: '1.2.840.10008.5.1.4.1.1.481.5',\n  RTBrachyTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.6',\n  RTTreatmentSummaryRecordStorage: '1.2.840.10008.5.1.4.1.1.481.7',\n  RTIonPlanStorage: '1.2.840.10008.5.1.4.1.1.481.8',\n  RTIonBeamsTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.9',\n  RTBeamsDeliveryInstructionStorage: '1.2.840.10008.5.1.4.34.7',\n  GenericImplantTemplateStorage: '1.2.840.10008.5.1.4.43.1',\n  ImplantAssemblyTemplateStorage: '1.2.840.10008.5.1.4.44.1',\n  ImplantTemplateGroupStorage: '1.2.840.10008.5.1.4.45.1',\n};\n","import MODULE_TYPES from './MODULE_TYPES.js';\nimport log from './../log.js';\n\nexport default class ExtensionManager {\n  constructor({ commandsManager, servicesManager, api, appConfig = {} }) {\n    this.modules = {};\n    this.registeredExtensionIds = [];\n    this.registeredExtensionVesions = {};\n    this.moduleTypeNames = Object.values(MODULE_TYPES);\n    //\n    this._commandsManager = commandsManager;\n    this._servicesManager = servicesManager;\n    this._appConfig = appConfig;\n    this._api = api;\n\n    this.moduleTypeNames.forEach(moduleType => {\n      this.modules[moduleType] = [];\n    });\n  }\n\n  /**\n   * An array of extensions, or an array of arrays that contains extension\n   * configuration pairs.\n   *\n   * @param {Object[]} extensions - Array of extensions\n   */\n  registerExtensions(extensions) {\n    extensions.forEach(extension => {\n      const hasConfiguration = Array.isArray(extension);\n\n      if (hasConfiguration) {\n        const [ohifExtension, configuration] = extension;\n        this.registerExtension(ohifExtension, configuration);\n      } else {\n        this.registerExtension(extension);\n      }\n    });\n  }\n\n  /**\n   *\n   * TODO: Id Management: SopClassHandlers currently refer to viewport module by id; setting the extension id as viewport module id is a workaround for now\n   * @param {Object} extension\n   * @param {Object} configuration\n   */\n  registerExtension(extension, configuration = {}) {\n    if (!extension) {\n      log.warn(\n        'Attempting to register a null/undefined extension. Exiting early.'\n      );\n      return;\n    }\n\n    let extensionId = extension.id;\n    const version = extension.version;\n\n    if (!extensionId) {\n      extensionId = Math.random()\n        .toString(36)\n        .substr(2, 5);\n\n      log.warn(`Extension ID not set. Using random string ID: ${extensionId}`);\n    }\n\n    if (this.registeredExtensionIds.includes(extensionId)) {\n      log.warn(\n        `Extension ID ${extensionId} has already been registered. Exiting before duplicating modules.`\n      );\n      return;\n    }\n\n    // preRegistrationHook\n    if (extension.preRegistration) {\n      extension.preRegistration({\n        servicesManager: this._servicesManager,\n        commandsManager: this._commandsManager,\n        appConfig: this._appConfig,\n        configuration,\n      });\n    }\n\n    // Register Modules\n    this.moduleTypeNames.forEach(moduleType => {\n      const extensionModule = this._getExtensionModule(\n        moduleType,\n        extension,\n        extensionId,\n        configuration\n      );\n\n      if (extensionModule) {\n        this._initSpecialModuleTypes(moduleType, extensionModule);\n\n        this.modules[moduleType].push({\n          extensionId,\n          module: extensionModule,\n        });\n      }\n    });\n\n    // Track extension registration\n    this.registeredExtensionIds.push(extensionId);\n\n    this.registeredExtensionVesions[extensionId] = version;\n  }\n\n  /**\n   * @private\n   * @param {string} moduleType\n   * @param {Object} extension\n   * @param {string} extensionId - Used for logging warnings\n   */\n  _getExtensionModule(moduleType, extension, extensionId, configuration) {\n    const getModuleFnName = 'get' + _capitalizeFirstCharacter(moduleType);\n    const getModuleFn = extension[getModuleFnName];\n\n    if (!getModuleFn) {\n      return;\n    }\n\n    try {\n      const extensionModule = getModuleFn({\n        servicesManager: this._servicesManager,\n        commandsManager: this._commandsManager,\n        appConfig: this._appConfig,\n        configuration,\n        api: this._api,\n        extensionManager: this,\n      });\n\n      if (!extensionModule) {\n        log.warn(\n          `Null or undefined returned when registering the ${getModuleFnName} module for the ${extensionId} extension`\n        );\n      }\n\n      return extensionModule;\n    } catch (ex) {\n      log.error(\n        `Exception thrown while trying to call ${getModuleFnName} for the ${extensionId} extension`\n      );\n    }\n  }\n\n  _initSpecialModuleTypes(moduleType, extensionModule) {\n    switch (moduleType) {\n      case 'commandsModule': {\n        const { definitions, defaultContext } = extensionModule;\n        if (!definitions || Object.keys(definitions).length === 0) {\n          log.warn('Commands Module contains no command definitions');\n          return;\n        }\n        this._initCommandsModule(definitions, defaultContext);\n        break;\n      }\n      default:\n      // code block\n    }\n  }\n\n  /**\n   *\n   * @private\n   * @param {Object[]} commandDefinitions\n   */\n  _initCommandsModule(commandDefinitions, defaultContext = 'VIEWER') {\n    if (!this._commandsManager.getContext(defaultContext)) {\n      this._commandsManager.createContext(defaultContext);\n    }\n\n    Object.keys(commandDefinitions).forEach(commandName => {\n      const commandDefinition = commandDefinitions[commandName];\n      const commandHasContextThatDoesNotExist =\n        commandDefinition.context &&\n        !this._commandsManager.getContext(commandDefinition.context);\n\n      if (commandHasContextThatDoesNotExist) {\n        this._commandsManager.createContext(commandDefinition.context);\n      }\n\n      this._commandsManager.registerCommand(\n        commandDefinition.context || defaultContext,\n        commandName,\n        commandDefinition\n      );\n    });\n  }\n}\n\n/**\n * @private\n * @param {string} lower\n */\nfunction _capitalizeFirstCharacter(lower) {\n  return lower.charAt(0).toUpperCase() + lower.substr(1);\n}\n","import log from './../log.js';\n\nexport default class ServicesManager {\n  constructor() {\n    this.services = {};\n    this.registeredServiceNames = [];\n  }\n\n  /**\n   * Registers a new service.\n   *\n   * @param {Object} service\n   * @param {Object} configuration\n   */\n  registerService(service, configuration = {}) {\n    if (!service) {\n      log.warn(\n        'Attempting to register a null/undefined service. Exiting early.'\n      );\n      return;\n    }\n\n    if (!service.name) {\n      log.warn(`Service name not set. Exiting early.`);\n      return;\n    }\n\n    if (this.registeredServiceNames.includes(service.name)) {\n      log.warn(\n        `Service name ${service.name} has already been registered. Exiting before duplicating services.`\n      );\n      return;\n    }\n\n    if (service.create) {\n      this.services[service.name] = service.create({\n        configuration,\n      });\n    } else {\n      log.warn(`Service create factory function not defined. Exiting early.`);\n      return;\n    }\n\n    /* Track service registration */\n    this.registeredServiceNames.push(service.name);\n  }\n\n  /**\n   * An array of services, or an array of arrays that contains service\n   * configuration pairs.\n   *\n   * @param {Object[]} services - Array of services\n   */\n  registerServices(services) {\n    services.forEach(service => {\n      const hasConfiguration = Array.isArray(service);\n\n      if (hasConfiguration) {\n        const [ohifService, configuration] = service;\n        this.registerService(ohifService, configuration);\n      } else {\n        this.registerService(service);\n      }\n    });\n  }\n}\n","/**\n * A UI Notification\n *\n * @typedef {Object} Notification\n * @property {string} title -\n * @property {string} message -\n * @property {number} [duration=5000] - in ms\n * @property {string} [position=\"bottomRight\"] -\"topLeft\" | \"topCenter | \"topRight\" | \"bottomLeft\" | \"bottomCenter\" | \"bottomRight\"\n * @property {string} [type=\"info\"] - \"info\" | \"error\" | \"warning\" | \"success\"\n * @property {boolean} [autoClose=true]\n * @property {object} [action=null]\n */\n\nconst name = 'UINotificationService';\n\nconst serviceShowRequestQueue = [];\n\nconst publicAPI = {\n  name,\n  hide: _hide,\n  show: _show,\n  setServiceImplementation,\n};\n\nconst serviceImplementation = {\n  _hide: () => console.warn('hide() NOT IMPLEMENTED'),\n  _show: showArguments => {\n    serviceShowRequestQueue.push(showArguments);\n\n    console.warn('show() NOT IMPLEMENTED');\n  },\n};\n\n/**\n * Create and show a new UI notification; returns the\n * ID of the created notification.\n *\n * @param {Notification} notification { title, message, duration, position, type, autoClose, action}\n * @returns {number} id\n */\nfunction _show({\n  title,\n  message,\n  duration = 5000,\n  position = 'bottomRight',\n  type = 'info',\n  autoClose = true,\n  action = null,\n}) {\n  return serviceImplementation._show({\n    title,\n    message,\n    duration,\n    position,\n    type,\n    autoClose,\n    action,\n  });\n}\n\n/**\n * Hides/dismisses the notification, if currently shown\n *\n * @param {number} id - id of the notification to hide/dismiss\n * @returns undefined\n */\nfunction _hide(id) {\n  return serviceImplementation._hide({ id });\n}\n\n/**\n *\n *\n * @param {*} {\n *   hide: hideImplementation,\n *   show: showImplementation,\n * }\n */\nfunction setServiceImplementation({\n  hide: hideImplementation,\n  show: showImplementation,\n}) {\n  if (hideImplementation) {\n    serviceImplementation._hide = hideImplementation;\n  }\n  if (showImplementation) {\n    serviceImplementation._show = showImplementation;\n\n    while (serviceShowRequestQueue.length > 0) {\n      const showArguments = serviceShowRequestQueue.pop();\n      serviceImplementation._show(showArguments);\n    }\n  }\n}\n\nexport default {\n  name,\n  create: ({ configuration = {} }) => {\n    return publicAPI;\n  },\n};\n","/**\n * UI Modal\n *\n * @typedef {Object} ModalProps\n * @property {ReactElement|HTMLElement} [content=null] Modal content.\n * @property {Object} [contentProps=null] Modal content props.\n * @property {boolean} [shouldCloseOnEsc=false] Modal is dismissible via the esc key.\n * @property {boolean} [isOpen=true] Make the Modal visible or hidden.\n * @property {boolean} [closeButton=true] Should the modal body render the close button.\n * @property {string} [title=null] Should the modal render the title independently of the body content.\n * @property {string} [customClassName=null] The custom class to style the modal.\n * @property {boolean} [showScrollbar=false] Show or hide scrollbar.\n * @property {boolean} [noScroll=false] Disable or not the scrollbar.\n */\n\nconst name = 'UIModalService';\n\nconst publicAPI = {\n  name,\n  hide: _hide,\n  show: _show,\n  setServiceImplementation,\n};\n\nconst serviceImplementation = {\n  _hide: () => console.warn('hide() NOT IMPLEMENTED'),\n  _show: () => console.warn('show() NOT IMPLEMENTED'),\n};\n\n/**\n * Show a new UI modal;\n *\n * @param {ModalProps} props { content, contentProps, shouldCloseOnEsc, isOpen, onClose, closeButton, title, customClassName, showScrollbar, noScroll }\n */\nfunction _show({\n  content = null,\n  contentProps = null,\n  shouldCloseOnEsc = false,\n  isOpen = true,\n  onClose = null,\n  closeButton = true,\n  title = null,\n  fullscreen = false,\n  customClassName = null,\n  showScrollbar = false,\n  noScroll = false,\n}) {\n  return serviceImplementation._show({\n    content,\n    contentProps,\n    shouldCloseOnEsc,\n    isOpen,\n    onClose,\n    closeButton,\n    title,\n    fullscreen,\n    customClassName,\n    showScrollbar,\n    noScroll,\n  });\n}\n\n/**\n * Hides/dismisses the modal, if currently shown\n *\n * @returns void\n */\nfunction _hide() {\n  return serviceImplementation._hide();\n}\n\n/**\n *\n *\n * @param {*} {\n *   hide: hideImplementation,\n *   show: showImplementation,\n * }\n */\nfunction setServiceImplementation({\n  hide: hideImplementation,\n  show: showImplementation,\n}) {\n  if (hideImplementation) {\n    serviceImplementation._hide = hideImplementation;\n  }\n  if (showImplementation) {\n    serviceImplementation._show = showImplementation;\n  }\n}\n\nexport default {\n  name,\n  create: ({ configuration = {} }) => {\n    return publicAPI;\n  },\n};\n","/**\n * A UI Element Position\n *\n * @typedef {Object} ElementPosition\n * @property {number} top -\n * @property {number} left -\n * @property {number} right -\n * @property {number} bottom -\n */\n\n/**\n * UI Dialog\n *\n * @typedef {Object} DialogProps\n * @property {string} id The dialog id.\n * @property {ReactElement|HTMLElement} content The dialog content.\n * @property {Object} contentProps The dialog content props.\n * @property {boolean} [isDraggable=true] Controls if dialog content is draggable or not.\n * @property {boolean} [showOverlay=false] Controls dialog overlay.\n * @property {boolean} [centralize=false] Center the dialog on the screen.\n * @property {boolean} [preservePosition=true] Use last position instead of default.\n * @property {ElementPosition} defaultPosition Specifies the `x` and `y` that the dragged item should start at.\n * @property {Function} onStart Called when dragging starts. If `false` is returned any handler, the action will cancel.\n * @property {Function} onStop Called when dragging stops.\n * @property {Function} onDrag Called while dragging.\n */\n\nconst name = 'UIDialogService';\n\nconst publicAPI = {\n  name,\n  dismiss: _dismiss,\n  dismissAll: _dismissAll,\n  create: _create,\n  setServiceImplementation,\n};\n\nconst serviceImplementation = {\n  _dismiss: () => console.warn('dismiss() NOT IMPLEMENTED'),\n  _dismissAll: () => console.warn('dismissAll() NOT IMPLEMENTED'),\n  _create: () => console.warn('create() NOT IMPLEMENTED'),\n};\n\n/**\n * Show a new UI dialog;\n *\n * @param {DialogProps} props { id, content, contentProps, onStart, onDrag, onStop, centralize, isDraggable, showOverlay, preservePosition, defaultPosition }\n */\nfunction _create({\n  id,\n  content,\n  contentProps,\n  onStart,\n  onDrag,\n  onStop,\n  centralize = true,\n  preservePosition = true,\n  isDraggable = false,\n  showOverlay = false,\n  defaultPosition,\n}) {\n  return serviceImplementation._create({\n    id,\n    content,\n    contentProps,\n    onStart,\n    onDrag,\n    onStop,\n    centralize,\n    preservePosition,\n    isDraggable,\n    showOverlay,\n    defaultPosition,\n  });\n}\n\n/**\n * Destroys all dialogs, if any\n *\n * @returns void\n */\nfunction _dismissAll() {\n  return serviceImplementation._dismissAll();\n}\n\n/**\n * Destroy the dialog, if currently created\n *\n * @returns void\n */\nfunction _dismiss({ id }) {\n  return serviceImplementation._dismiss({ id });\n}\n\n/**\n *\n *\n * @param {*} {\n *   dismiss: dismissImplementation,\n *   dismissAll: dismissAllImplementation,\n *   create: createImplementation,\n * }\n */\nfunction setServiceImplementation({\n  dismiss: dismissImplementation,\n  dismissAll: dismissAllImplementation,\n  create: createImplementation,\n}) {\n  if (dismissImplementation) {\n    serviceImplementation._dismiss = dismissImplementation;\n  }\n  if (dismissAllImplementation) {\n    serviceImplementation._dismissAll = dismissAllImplementation;\n  }\n  if (createImplementation) {\n    serviceImplementation._create = createImplementation;\n  }\n}\n\nexport default {\n  name,\n  create: ({ configuration = {} }) => {\n    return publicAPI;\n  },\n};\n","const name = 'LoggerService';\n\nconst publicAPI = {\n  name,\n  info: _info,\n  error: _error,\n  setServiceImplementation,\n};\n\nconst serviceImplementation = {\n  _info: () => console.warn('info() NOT IMPLEMENTED'),\n  _error: () => console.warn('error() NOT IMPLEMENTED'),\n};\n\n/**\n * Logs an info\n *\n * @param {object} props { message, displayOnConsole }\n */\nfunction _info({ message, displayOnConsole }) {\n  return serviceImplementation._info({\n    message,\n    displayOnConsole,\n  });\n}\n\n/**\n * Logs an error\n *\n * @param {object} props { error, stack, message, displayOnConsole }\n * @returns void\n */\nfunction _error({ error, stack, message, displayOnConsole }) {\n  return serviceImplementation._error({\n    error,\n    stack,\n    message,\n    displayOnConsole,\n  });\n}\n\n/**\n *\n *\n * @param {*} {\n *   info: infoImplementation,\n *   error: errorImplementation,\n * }\n */\nfunction setServiceImplementation({\n  info: infoImplementation,\n  error: errorImplementation,\n}) {\n  if (infoImplementation) {\n    serviceImplementation._info = infoImplementation;\n  }\n  if (errorImplementation) {\n    serviceImplementation._error = errorImplementation;\n  }\n}\n\nexport default {\n  name,\n  create: ({ configuration = {} }) => {\n    return publicAPI;\n  },\n};\n","import guid from '../../utils/guid';\n\n/**\n * Consumer must implement:\n * this.listeners = {}\n * this.EVENTS = { \"EVENT_KEY\": \"EVENT_VALUE\" }\n */\nexport default {\n  subscribe,\n  publish,\n  _unsubscribe,\n  _isValidEvent,\n};\n\n/**\n * Subscribe to updates.\n *\n * @param {string} eventName The name of the event\n * @param {Function} callback Events callback\n * @return {Object} Observable object with actions\n */\nfunction subscribe(eventName, callback) {\n  if (this._isValidEvent(eventName)) {\n    const listenerId = guid();\n    const subscription = { id: listenerId, callback };\n\n    console.info(`Subscribing to '${eventName}'.`);\n    if (Array.isArray(this.listeners[eventName])) {\n      this.listeners[eventName].push(subscription);\n    } else {\n      this.listeners[eventName] = [subscription];\n    }\n\n    return {\n      unsubscribe: () => this._unsubscribe(eventName, listenerId),\n    };\n  } else {\n    throw new Error(`Event ${eventName} not supported.`);\n  }\n}\n\n/**\n * Unsubscribe to measurement updates.\n *\n * @param {string} eventName The name of the event\n * @param {string} listenerId The listeners id\n * @return void\n */\nfunction _unsubscribe(eventName, listenerId) {\n  if (!this.listeners[eventName]) {\n    return;\n  }\n\n  const listeners = this.listeners[eventName];\n  if (Array.isArray(listeners)) {\n    this.listeners[eventName] = listeners.filter(({ id }) => id !== listenerId);\n  } else {\n    this.listeners[eventName] = undefined;\n  }\n}\n\n/**\n * Check if a given event is valid.\n *\n * @param {string} eventName The name of the event\n * @return {boolean} Event name validation\n */\nfunction _isValidEvent(eventName) {\n  return Object.values(this.EVENTS).includes(eventName);\n}\n\n/**\n * Broadcasts changes.\n *\n * @param {string} eventName - The event name\n * @param {func} callbackProps - Properties to pass callback\n * @return void\n */\nfunction publish(eventName, callbackProps) {\n  const hasListeners = Object.keys(this.listeners).length > 0;\n  const hasCallbacks = Array.isArray(this.listeners[eventName]);\n\n  if (hasListeners && hasCallbacks) {\n    this.listeners[eventName].forEach(listener => {\n      listener.callback(callbackProps);\n    });\n  }\n}\n","/** Internal imports */\nimport log from '../../log';\nimport guid from '../../utils/guid';\nimport pubSubServiceInterface from '../_shared/pubSubServiceInterface';\n\n/**\n * Measurement source schema\n *\n * @typedef {Object} MeasurementSource\n * @property {number} id -\n * @property {string} name -\n * @property {string} version -\n */\n\n/**\n * Measurement schema\n *\n * @typedef {Object} Measurement\n * @property {number} id -\n * @property {string} SOPInstanceUID -\n * @property {string} FrameOfReferenceUID -\n * @property {string} referenceSeriesUID -\n * @property {string} label -\n * @property {string} description -\n * @property {string} type -\n * @property {string} unit -\n * @property {number} area -\n * @property {Array} points -\n * @property {MeasurementSource} source -\n */\n\n/* Measurement schema keys for object validation. */\nconst MEASUREMENT_SCHEMA_KEYS = [\n  'id',\n  'SOPInstanceUID',\n  'FrameOfReferenceUID',\n  'referenceStudyUID',\n  'referenceSeriesUID',\n  'label',\n  'description',\n  'type',\n  'unit',\n  'area', // TODO: Add concept names instead (descriptor)\n  'mean',\n  'stdDev',\n  'length',\n  'shortestDiameter',\n  'longestDiameter',\n  'text', // NOTE: There is nothing like this in SR.\n  'points',\n  'source',\n];\n\nconst EVENTS = {\n  MEASUREMENT_UPDATED: 'event::measurement_updated',\n  INTERNAL_MEASUREMENT_UPDATED: 'event:internal_measurement_updated',\n  MEASUREMENT_ADDED: 'event::measurement_added',\n  RAW_MEASUREMENT_ADDED: 'event::raw_measurement_added',\n  MEASUREMENT_REMOVED: 'event::measurement_removed',\n  MEASUREMENTS_CLEARED: 'event::measurements_cleared',\n  JUMP_TO_MEASUREMENT: 'event:jump_to_measurement',\n};\n\nconst VALUE_TYPES = {\n  POLYLINE: 'value_type::polyline',\n  POINT: 'value_type::point',\n  BIDIRECTIONAL: 'value_type::shortAxisLongAxis', // TODO -> Discuss with Danny. => just using SCOORD values isn't enough here.\n  ELLIPSE: 'value_type::ellipse',\n  MULTIPOINT: 'value_type::multipoint',\n  CIRCLE: 'value_type::circle',\n};\n\nclass MeasurementService {\n  constructor() {\n    this.sources = {};\n    this.mappings = {};\n    this.measurements = {};\n    this.listeners = {};\n    this._jumpToMeasurementCache = {};\n    Object.defineProperty(this, 'EVENTS', {\n      value: EVENTS,\n      writable: false,\n      enumerable: true,\n      configurable: false,\n    });\n    Object.defineProperty(this, 'VALUE_TYPES', {\n      value: VALUE_TYPES,\n      writable: false,\n      enumerable: true,\n      configurable: false,\n    });\n\n    Object.assign(this, pubSubServiceInterface);\n  }\n\n  /**\n   * Get all measurements.\n   *\n   * @return {Measurement[]} Array of measurements\n   */\n  getMeasurements() {\n    const measurements = this._arrayOfObjects(this.measurements);\n    return (\n      measurements &&\n      measurements.map(m => this.measurements[Object.keys(m)[0]])\n    );\n  }\n\n  /**\n   * Get specific measurement by its id.\n   *\n   * @param {string} id Id of the measurement\n   * @return {Measurement} Measurement instance\n   */\n  getMeasurement(id) {\n    let measurement = null;\n    const measurements = this.measurements[id];\n\n    if (measurements && Object.keys(measurements).length > 0) {\n      measurement = this.measurements[id];\n    }\n\n    return measurement;\n  }\n\n  /**\n   * Create a new source.\n   *\n   * @param {string} name Name of the source\n   * @param {string} version Source name\n   * @return {MeasurementSource} Measurement source instance\n   */\n  createSource(name, version) {\n    if (!name) {\n      throw new Error('Source name not provided.');\n    }\n\n    if (!version) {\n      throw new Error('Source version not provided.');\n    }\n\n    const id = guid();\n    const source = {\n      id,\n      name,\n      version,\n    };\n    source.addOrUpdate = (definition, measurement) => {\n      return this.addOrUpdate(source, definition, measurement);\n    };\n    source.remove = id => {\n      return this.remove(id, source);\n    };\n    source.getAnnotation = (definition, measurementId) => {\n      return this.getAnnotation(source, definition, measurementId);\n    };\n\n    log.info(`New '${name}@${version}' source added.`);\n    this.sources[id] = source;\n\n    return source;\n  }\n\n  getSource(name, version) {\n    const { sources } = this;\n    const id = this._getSourceId(name, version);\n\n    return sources[id];\n  }\n\n  getSourceMappings(name, version) {\n    const { mappings } = this;\n    const id = this._getSourceId(name, version);\n\n    return mappings[id];\n  }\n\n  _getSourceId(name, version) {\n    const { sources } = this;\n\n    const sourceId = Object.keys(sources).find(sourceId => {\n      const source = sources[sourceId];\n\n      return source.name === name && source.version === version;\n    });\n\n    return sourceId;\n  }\n\n  /**\n   * Add a new measurement matching criteria along with mapping functions.\n   *\n   * @param {MeasurementSource} source Measurement source instance\n   * @param {string} definition Definition of the measurement (Annotation Type)\n   * @param {MatchingCriteria} matchingCriteria The matching criteria\n   * @param {Function} toSourceSchema Mapping function to source schema\n   * @param {Function} toMeasurementSchema Mapping function to measurement schema\n   * @return void\n   */\n  addMapping(\n    source,\n    definition,\n    matchingCriteria,\n    toSourceSchema,\n    toMeasurementSchema\n  ) {\n    if (!this._isValidSource(source)) {\n      throw new Error('Invalid source.');\n    }\n\n    if (!matchingCriteria) {\n      throw new Error('Matching criteria not provided.');\n    }\n\n    if (!definition) {\n      throw new Error('Definition not provided.');\n    }\n\n    if (!toSourceSchema) {\n      throw new Error('Mapping function to source schema not provided.');\n    }\n\n    if (!toMeasurementSchema) {\n      throw new Error('Measurement mapping function not provided.');\n    }\n\n    const mapping = {\n      matchingCriteria,\n      definition,\n      toSourceSchema,\n      toMeasurementSchema,\n    };\n\n    if (Array.isArray(this.mappings[source.id])) {\n      this.mappings[source.id].push(mapping);\n    } else {\n      this.mappings[source.id] = [mapping];\n    }\n\n    log.info(\n      `New measurement mapping added to source '${this._getSourceInfo(\n        source\n      )}'.`\n    );\n  }\n\n  /**\n   * Get annotation for specific source.\n   *\n   * @param {MeasurementSource} source Measurement source instance\n   * @param {string} definition The source definition\n   * @param {string} measurementId The measurement service measurement id\n   * @return {Object} Source measurement schema\n   */\n  getAnnotation(source, definition, measurementId) {\n    if (!this._isValidSource(source)) {\n      log.warn('Invalid source. Exiting early.');\n      return;\n    }\n\n    if (!definition) {\n      log.warn('No source definition provided. Exiting early.');\n      return;\n    }\n\n    const mapping = this._getMappingByMeasurementSource(\n      measurementId,\n      definition\n    );\n    const measurement = this.getMeasurement(measurementId);\n    if (mapping) return mapping.toSourceSchema(measurement, definition);\n\n    const matchingMapping = this._getMatchingMapping(\n      source,\n      definition,\n      measurement\n    );\n\n    if (matchingMapping) {\n      log.info('Matching mapping found:', matchingMapping);\n      const { toSourceSchema, definition } = matchingMapping;\n      return toSourceSchema(measurement, definition);\n    }\n  }\n\n  update(id, measurement, notYetUpdatedAtSource = false) {\n    if (this.measurements[id]) {\n      const updatedMeasurement = {\n        ...measurement,\n        modifiedTimestamp: Math.floor(Date.now() / 1000),\n      };\n\n      log.info(\n        `Updating internal measurement representation...`,\n        updatedMeasurement\n      );\n\n      this.measurements[id] = updatedMeasurement;\n\n      this.publish(\n        // Add an internal flag to say the measurement has not yet been updated at source.\n        this.EVENTS.MEASUREMENT_UPDATED,\n        {\n          source: measurement.source,\n          measurement: updatedMeasurement,\n          notYetUpdatedAtSource,\n        }\n      );\n\n      return updatedMeasurement.id;\n    }\n  }\n\n  /**\n   * Add a raw measurement into a source so that it may be\n   * Converted to/from annotation in the same way. E.g. import serialized data\n   * Of the same form as the measurement source.\n   * @param {MeasurementSource} source The measurement source instance.\n   * @param {string} definition The source definition you want to add the measurement to.\n   * @param {object} data The data you wish to add to the source.\n   * @param {function} toMeasurementSchema A function to get the `data` into the same shape as the source definition.\n   */\n  addRawMeasurement(\n    source,\n    definition,\n    data,\n    toMeasurementSchema,\n    dataSource = {}\n  ) {\n    if (!this._isValidSource(source)) {\n      log.warn('Invalid source. Exiting early.');\n      return;\n    }\n\n    const sourceInfo = this._getSourceInfo(source);\n\n    if (!definition) {\n      log.warn('No source definition provided. Exiting early.');\n      return;\n    }\n\n    if (!this._sourceHasMappings(source)) {\n      log.warn(\n        `No measurement mappings found for '${sourceInfo}' source. Exiting early.`\n      );\n      return;\n    }\n\n    let measurement = {};\n    try {\n      /* Convert measurement */\n      measurement = toMeasurementSchema(data);\n      /* Assign measurement source instance */\n      measurement.source = source;\n    } catch (error) {\n      log.warn(\n        `Failed to map '${sourceInfo}' measurement for definition ${definition}:`,\n        error.message\n      );\n      return;\n    }\n\n    if (!this._isValidMeasurement(measurement)) {\n      log.warn(\n        `Attempting to add or update a invalid measurement provided by '${sourceInfo}'. Exiting early.`\n      );\n      return;\n    }\n\n    let internalId = data.id;\n    if (!internalId) {\n      internalId = guid();\n      log.warn(`Measurement ID not found. Generating UID: ${internalId}`);\n    }\n\n    const newMeasurement = {\n      ...measurement,\n      modifiedTimestamp: Math.floor(Date.now() / 1000),\n      id: internalId,\n    };\n\n    if (this.measurements[internalId]) {\n      log.info(\n        `Measurement already defined. Updating measurement.`,\n        newMeasurement\n      );\n      this.measurements[internalId] = newMeasurement;\n      this.publish(this.EVENTS.MEASUREMENT_UPDATED, {\n        source,\n        measurement: newMeasurement,\n      });\n    } else {\n      log.info(`Measurement added.`, newMeasurement);\n      this.measurements[internalId] = newMeasurement;\n      this.publish(this.EVENTS.RAW_MEASUREMENT_ADDED, {\n        source,\n        measurement: newMeasurement,\n        data,\n        dataSource,\n      });\n    }\n\n    return newMeasurement.id;\n  }\n\n  /**\n   * Adds or update persisted measurements.\n   *\n   * @param {MeasurementSource} source The measurement source instance\n   * @param {string} definition The source definition\n   * @param {Measurement} measurement The source measurement\n   * @return {string} A measurement id\n   */\n  addOrUpdate(source, definition, sourceMeasurement) {\n    if (!this._isValidSource(source)) {\n      throw new Error('Invalid source.');\n    }\n\n    if (!definition) {\n      throw new Error('No source definition provided.');\n    }\n\n    const sourceInfo = this._getSourceInfo(source);\n\n    if (!this._sourceHasMappings(source)) {\n      throw new Error(\n        `No measurement mappings found for '${sourceInfo}' source. Exiting early.`\n      );\n    }\n\n    let measurement = {};\n    try {\n      const sourceMappings = this.mappings[source.id];\n      const { toMeasurementSchema } = sourceMappings.find(\n        mapping => mapping.definition === definition\n      );\n\n      /* Convert measurement */\n      measurement = toMeasurementSchema(sourceMeasurement);\n\n      /* Assign measurement source instance */\n      measurement.source = source;\n    } catch (error) {\n      throw new Error(\n        `Failed to map '${sourceInfo}' measurement for definition ${definition}:`,\n        error.message\n      );\n    }\n\n    if (!this._isValidMeasurement(measurement)) {\n      throw new Error(\n        `Attempting to add or update a invalid measurement provided by '${sourceInfo}'. Exiting early.`\n      );\n    }\n\n    let internalId = sourceMeasurement.id;\n    if (!internalId) {\n      internalId = guid();\n      log.info(`Measurement ID not found. Generating UID: ${internalId}`);\n    }\n\n    const newMeasurement = {\n      ...measurement,\n      modifiedTimestamp: Math.floor(Date.now() / 1000),\n      id: internalId,\n    };\n\n    if (this.measurements[internalId]) {\n      log.info(\n        `Measurement already defined. Updating measurement.`,\n        newMeasurement\n      );\n      this.measurements[internalId] = newMeasurement;\n      this.publish(this.EVENTS.MEASUREMENT_UPDATED, {\n        source,\n        measurement: newMeasurement,\n        notYetUpdatedAtSource: false,\n      });\n    } else {\n      log.info('Measurement added.', newMeasurement);\n      this.measurements[internalId] = newMeasurement;\n      this.publish(this.EVENTS.MEASUREMENT_ADDED, {\n        source,\n        measurement: newMeasurement,\n      });\n    }\n\n    return newMeasurement.id;\n  }\n\n  /**\n   * Removes a measurement and broadcasts the removed event.\n   *\n   * @param {string} id The measurement id\n   * @param {MeasurementSource} source The measurement source instance\n   * @return {string} The removed measurement id\n   */\n  remove(id, source) {\n    if (!id || !this.measurements[id]) {\n      log.warn(`No id provided, or unable to find measurement by id.`);\n      return;\n    }\n\n    delete this.measurements[id];\n    this.publish(this.EVENTS.MEASUREMENT_REMOVED, {\n      source,\n      measurement: id, // This is weird :shrug:\n    });\n  }\n\n  clearMeasurements() {\n    this.measurements = {};\n    this._jumpToMeasurementCache = {};\n    this.publish(this.EVENTS.MEASUREMENTS_CLEARED);\n  }\n\n  jumpToMeasurement(viewportIndex, id) {\n    const measurement = this.measurements[id];\n\n    if (!measurement) {\n      log.warn(`No id provided, or unable to find measurement by id.`);\n      return;\n    }\n\n    this._addJumpToMeasurement(viewportIndex, id);\n\n    const eventName = this.EVENTS.JUMP_TO_MEASUREMENT;\n\n    const hasListeners = Object.keys(this.listeners).length > 0;\n    const hasCallbacks = Array.isArray(this.listeners[eventName]);\n\n    if (hasListeners && hasCallbacks) {\n      this.listeners[eventName].forEach(listener => {\n        listener.callback({ viewportIndex, measurement });\n      });\n    }\n  }\n\n  _addJumpToMeasurement(viewportIndex, id) {\n    this._jumpToMeasurementCache[viewportIndex] = id;\n  }\n\n  getJumpToMeasurement(viewportIndex) {\n    return this._jumpToMeasurementCache[viewportIndex];\n  }\n\n  removeJumpToMeasurement(viewportIndex) {\n    delete this._jumpToMeasurementCache[viewportIndex];\n  }\n\n  _getMappingByMeasurementSource(measurementId, definition) {\n    const measurement = this.getMeasurement(measurementId);\n    if (this._isValidSource(measurement.source)) {\n      return this.mappings[measurement.source.id].find(\n        m => m.definition === definition\n      );\n    }\n  }\n\n  /**\n   * Clear all measurements and broadcasts cleared event.\n   */\n  clear() {\n    this.measurements = {};\n    this.publish(this.EVENTS.MEASUREMENTS_CLEARED);\n  }\n\n  /**\n   * Get measurement mapping function if matching criteria.\n   *\n   * @param {MeasurementSource} source Measurement source instance\n   * @param {string} definition The source definition\n   * @param {Measurement} measurement The measurement service measurement\n   * @return {Object} The mapping based on matched criteria\n   */\n  _getMatchingMapping(source, definition, measurement) {\n    const sourceMappings = this.mappings[source.id];\n\n    const sourceMappingsByDefinition = sourceMappings.filter(\n      mapping => mapping.definition === definition\n    );\n\n    /* Criteria Matching */\n    return sourceMappingsByDefinition.find(({ matchingCriteria }) => {\n      if (matchingCriteria.type !== measurement.type) {\n        return false;\n      }\n\n      if (\n        matchingCriteria.properties &&\n        matchingCriteria.properties.every(name =>\n          measurement.hasOwnProperty(name)\n        )\n      ) {\n        return true;\n      }\n\n      if (\n        measurement.points &&\n        measurement.points.length === matchingCriteria.points\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  /**\n   * Returns formatted string with source info.\n   *\n   * @param {MeasurementSource} source Measurement source\n   * @return {string} Source information\n   */\n  _getSourceInfo(source) {\n    return `${source.name}@${source.version}`;\n  }\n\n  /**\n   * Checks if given source is valid.\n   *\n   * @param {MeasurementSource} source Measurement source\n   * @return {boolean} Measurement source validation\n   */\n  _isValidSource(source) {\n    return source && this.sources[source.id];\n  }\n\n  /**\n   * Checks if a given source has mappings.\n   *\n   * @param {MeasurementSource} source The measurement source\n   * @return {boolean} Validation if source has mappings\n   */\n  _sourceHasMappings(source) {\n    return (\n      Array.isArray(this.mappings[source.id]) && this.mappings[source.id].length\n    );\n  }\n\n  /**\n   * Check if a given measurement data is valid.\n   *\n   * @param {Measurement} measurementData Measurement data\n   * @return {boolean} Measurement validation\n   */\n  _isValidMeasurement(measurementData) {\n    Object.keys(measurementData).forEach(key => {\n      if (!MEASUREMENT_SCHEMA_KEYS.includes(key)) {\n        log.warn(`Invalid measurement key: ${key}`);\n        return false;\n      }\n    });\n\n    return true;\n  }\n\n  /**\n   * Check if a given measurement service event is valid.\n   *\n   * @param {string} eventName The name of the event\n   * @return {boolean} Event name validation\n  //  */\n  // _isValidEvent(eventName) {\n  //   return Object.values(this.EVENTS).includes(eventName);\n  // }\n\n  /**\n   * Converts object of objects to array.\n   *\n   * @return {Array} Array of objects\n   */\n  _arrayOfObjects = obj => {\n    return Object.entries(obj).map(e => ({ [e[0]]: e[1] }));\n  };\n}\n\nexport default MeasurementService;\nexport { EVENTS, VALUE_TYPES };\n","import MeasurementService from './MeasurementService';\n\nexport default {\n  name: 'MeasurementService',\n  create: ({ configuration = {} }) => {\n    return new MeasurementService();\n  },\n};\n","import getWADORSImageId from './getWADORSImageId';\n\n// https://stackoverflow.com/a/6021027/3895126\nfunction updateQueryStringParameter(uri, key, value) {\n  const regex = new RegExp('([?&])' + key + '=.*?(&|$)', 'i');\n  const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n  if (uri.match(regex)) {\n    return uri.replace(regex, '$1' + key + '=' + value + '$2');\n  } else {\n    return uri + separator + key + '=' + value;\n  }\n}\n\n/**\n * Obtain an imageId for Cornerstone from an image instance\n *\n * @param instance\n * @param frame\n * @param thumbnail\n * @returns {string} The imageId to be used by Cornerstone\n */\nexport default function getImageId(instance, frame, thumbnail = false) {\n  if (!instance) {\n    return;\n  }\n\n  if (typeof instance.getImageId === 'function') {\n    return instance.getImageId();\n  }\n\n  if (instance.url) {\n    if (frame !== undefined) {\n      instance.url = updateQueryStringParameter(instance.url, 'frame', frame);\n    }\n\n    return instance.url;\n  }\n\n  const renderingAttr = thumbnail ? 'thumbnailRendering' : 'imageRendering';\n\n  if (\n    !instance[renderingAttr] ||\n    instance[renderingAttr] === 'wadouri' ||\n    !instance.wadorsuri\n  ) {\n    let imageId = 'dicomweb:' + instance.wadouri;\n    if (frame !== undefined) {\n      imageId += '&frame=' + frame;\n    }\n\n    return imageId;\n  } else {\n    return getWADORSImageId(instance, frame, thumbnail); // WADO-RS Retrieve Frame\n  }\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Transition, {\n  ENTERED,\n  ENTERING,\n} from 'react-transition-group/Transition';\n\nconst propTypes = {\n  /**\n   * Show the component; triggers the fade in or fade out animation\n   */\n  in: PropTypes.bool,\n\n  /**\n   * Wait until the first \"enter\" transition to mount the component (add it to the DOM)\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * Unmount the component (remove it from the DOM) when it is faded out\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Run the fade in animation when the component mounts, if it is initially\n   * shown\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Duration of the fade animation in milliseconds, to ensure that finishing\n   * callbacks are fired even if the original browser transition end events are\n   * canceled\n   */\n  timeout: PropTypes.number,\n\n  /**\n   * Callback fired before the component fades in\n   */\n  onEnter: PropTypes.func,\n  /**\n   * Callback fired after the component starts to fade in\n   */\n  onEntering: PropTypes.func,\n  /**\n   * Callback fired after the has component faded in\n   */\n  onEntered: PropTypes.func,\n  /**\n   * Callback fired before the component fades out\n   */\n  onExit: PropTypes.func,\n  /**\n   * Callback fired after the component starts to fade out\n   */\n  onExiting: PropTypes.func,\n  /**\n   * Callback fired after the component has faded out\n   */\n  onExited: PropTypes.func,\n};\n\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n};\n\nconst fadeStyles = {\n  [ENTERING]: 'in',\n  [ENTERED]: 'in',\n};\n\nclass Fade extends React.Component {\n  render() {\n    const { className, children, ...props } = this.props;\n\n    return (\n      <Transition {...props}>\n        {(status, innerProps) =>\n          React.cloneElement(children, {\n            ...innerProps,\n            className: classNames(\n              'fade',\n              className,\n              children.props.className,\n              fadeStyles[status]\n            ),\n          })\n        }\n      </Transition>\n    );\n  }\n}\n\nFade.propTypes = propTypes;\nFade.defaultProps = defaultProps;\n\nexport default Fade;\n","import classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Overlay as BaseOverlay } from 'react-overlays';\nimport elementType from 'prop-types-extra/lib/elementType';\nimport { withTranslation } from '../../contextProviders';\n\nimport Fade from './Fade';\n\nconst propTypes = {\n  /**\n   * Set the visibility of the Overlay\n   */\n  show: PropTypes.bool,\n  /**\n   * Specify whether the overlay should trigger onHide when the user clicks outside the overlay\n   */\n  rootClose: PropTypes.bool,\n  /**\n   * A callback invoked by the overlay when it wishes to be hidden. Required if\n   * `rootClose` is specified.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Use animation\n   */\n  animation: PropTypes.oneOfType([PropTypes.bool, elementType]),\n\n  /**\n   * Callback fired before the Overlay transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Overlay transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning out\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Sets the direction of the Overlay.\n   */\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n};\n\nconst defaultProps = {\n  animation: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'right',\n};\n\nclass Overlay extends React.Component {\n  render() {\n    const { animation, children, ...props } = this.props;\n\n    const transition = animation === true ? Fade : animation || null;\n\n    let child;\n\n    if (!transition) {\n      child = cloneElement(children, {\n        className: classNames(children.props.className, 'in'),\n      });\n    } else {\n      child = children;\n    }\n\n    return (\n      <BaseOverlay {...props} transition={transition}>\n        {child}\n      </BaseOverlay>\n    );\n  }\n}\n\nOverlay.propTypes = propTypes;\nOverlay.defaultProps = defaultProps;\n\nconst connectedComponent = withTranslation()(Overlay);\nexport { connectedComponent as Overlay };\nexport default connectedComponent;\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs\n    .filter(f => f != null)\n    .reduce((acc, f) => {\n      if (typeof f !== 'function') {\n        throw new Error(\n          'Invalid Argument Type, must only provide functions, undefined, or null.'\n        );\n      }\n\n      if (acc === null) {\n        return f;\n      }\n\n      return function chainedFunction(...args) {\n        acc.apply(this, args);\n        f.apply(this, args);\n      };\n    }, null);\n}\n\nexport default createChainedFunction;\n","import contains from 'dom-helpers/query/contains';\nimport React, { cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport warning from 'warning';\n\nimport { Overlay } from './Overlay';\n\nimport createChainedFunction from './createChainedFunction';\n\n/**\n * Check if value one is inside or equal to the of value\n *\n * @param {string} one\n * @param {string|array} of\n * @returns {boolean}\n */\nfunction isOneOf(one, of) {\n  if (Array.isArray(of)) {\n    return of.indexOf(one) >= 0;\n  }\n  return one === of;\n}\n\nconst triggerType = PropTypes.oneOf(['click', 'hover', 'focus']);\n\nconst propTypes = {\n  /**\n   * Specify which action or actions trigger Overlay visibility\n   */\n  trigger: PropTypes.oneOfType([triggerType, PropTypes.arrayOf(triggerType)]),\n\n  /**\n   * A millisecond delay amount to show and hide the Overlay once triggered\n   */\n  delay: PropTypes.number,\n  /**\n   * A millisecond delay amount before showing the Overlay once triggered.\n   */\n  delayShow: PropTypes.number,\n  /**\n   * A millisecond delay amount before hiding the Overlay once triggered.\n   */\n  delayHide: PropTypes.number,\n\n  // FIXME: This should be `defaultShow`.\n  /**\n   * The initial visibility state of the Overlay. For more nuanced visibility\n   * control, consider using the Overlay component directly.\n   */\n  defaultOverlayShown: PropTypes.bool,\n\n  /**\n   * An element or text to overlay next to the target.\n   */\n  overlay: PropTypes.node.isRequired,\n\n  /**\n   * A function to be called once the hide is triggered\n   */\n  handleHide: PropTypes.func,\n\n  /**\n   * @private\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @private\n   */\n  onClick: PropTypes.func,\n  /**\n   * @private\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @private\n   */\n  onMouseOut: PropTypes.func,\n  /**\n   * @private\n   */\n  onMouseOver: PropTypes.func,\n\n  // Overridden props from `<Overlay>`.\n  /**\n   * @private\n   */\n  target: PropTypes.oneOf([null]),\n  /**\n   * @private\n   */\n  onHide: PropTypes.oneOf([null]),\n  /**\n   * @private\n   */\n  show: PropTypes.oneOf([null]),\n};\n\nconst defaultProps = {\n  defaultOverlayShown: false,\n  trigger: ['hover', 'focus'],\n};\n\nclass OverlayTrigger extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleDelayedShow = this.handleDelayedShow.bind(this);\n    this.handleDelayedHide = this.handleDelayedHide.bind(this);\n    this.handleHide = createChainedFunction(\n      this.handleHide.bind(this),\n      props.handleHide\n    );\n\n    this.handleMouseOver = e =>\n      this.handleMouseOverOut(this.handleDelayedShow, e, 'fromElement');\n    this.handleMouseOut = e =>\n      this.handleMouseOverOut(this.handleDelayedHide, e, 'toElement');\n\n    this._mountNode = null;\n\n    this.state = {\n      show: props.defaultOverlayShown,\n    };\n  }\n\n  componentDidMount() {\n    this._mountNode = document.createElement('div');\n    this.renderOverlay();\n  }\n\n  componentDidUpdate() {\n    this.renderOverlay();\n  }\n\n  componentWillUnmount() {\n    ReactDOM.unmountComponentAtNode(this._mountNode);\n    this._mountNode = null;\n\n    clearTimeout(this._hoverShowDelay);\n    clearTimeout(this._hoverHideDelay);\n  }\n\n  handleDelayedHide() {\n    if (this._hoverShowDelay != null) {\n      clearTimeout(this._hoverShowDelay);\n      this._hoverShowDelay = null;\n      return;\n    }\n\n    if (!this.state.show || this._hoverHideDelay != null) {\n      return;\n    }\n\n    const delay =\n      this.props.delayHide != null ? this.props.delayHide : this.props.delay;\n\n    if (!delay) {\n      this.hide();\n      return;\n    }\n\n    this._hoverHideDelay = setTimeout(() => {\n      this._hoverHideDelay = null;\n      this.hide();\n    }, delay);\n  }\n\n  handleDelayedShow() {\n    if (this._hoverHideDelay != null) {\n      clearTimeout(this._hoverHideDelay);\n      this._hoverHideDelay = null;\n      return;\n    }\n\n    if (this.state.show || this._hoverShowDelay != null) {\n      return;\n    }\n\n    const delay =\n      this.props.delayShow != null ? this.props.delayShow : this.props.delay;\n\n    if (!delay) {\n      this.show();\n      return;\n    }\n\n    this._hoverShowDelay = setTimeout(() => {\n      this._hoverShowDelay = null;\n      this.show();\n    }, delay);\n  }\n\n  handleHide() {\n    this.hide();\n  }\n\n  // Simple implementation of mouseEnter and mouseLeave.\n  // React's built version is broken: https://github.com/facebook/react/issues/4251\n  // for cases when the trigger is disabled and mouseOut/Over can cause flicker\n  // moving from one child element to another.\n  handleMouseOverOut(handler, e, relatedNative) {\n    const target = e.currentTarget;\n    const related = e.relatedTarget || e.nativeEvent[relatedNative];\n\n    if ((!related || related !== target) && !contains(target, related)) {\n      handler(e);\n    }\n  }\n\n  handleToggle() {\n    if (this.state.show) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  hide() {\n    this.setState({ show: false });\n  }\n\n  makeOverlay(overlay, props) {\n    return (\n      <Overlay\n        {...props}\n        show={this.state.show}\n        onHide={this.handleHide}\n        target={this}\n      >\n        {overlay}\n      </Overlay>\n    );\n  }\n\n  show() {\n    this.setState({ show: true });\n  }\n\n  renderOverlay() {\n    ReactDOM.unstable_renderSubtreeIntoContainer(\n      this,\n      this._overlay,\n      this._mountNode\n    );\n  }\n\n  render() {\n    const {\n      trigger,\n      overlay,\n      children,\n      onBlur,\n      onClick,\n      onFocus,\n      onMouseOut,\n      onMouseOver,\n      ...props\n    } = this.props;\n\n    delete props.delay;\n    delete props.delayShow;\n    delete props.delayHide;\n    delete props.defaultOverlayShown;\n\n    const child = React.Children.only(children);\n    const childProps = child.props;\n    const triggerProps = {};\n\n    if (this.state.show) {\n      triggerProps['aria-describedby'] = overlay.props.id;\n    }\n\n    // FIXME: The logic here for passing through handlers on this component is\n    // inconsistent. We shouldn't be passing any of these props through.\n\n    triggerProps.onClick = createChainedFunction(childProps.onClick, onClick);\n\n    if (isOneOf('click', trigger)) {\n      triggerProps.onClick = createChainedFunction(\n        triggerProps.onClick,\n        this.handleToggle\n      );\n    }\n\n    if (isOneOf('hover', trigger)) {\n      warning(\n        !(trigger === 'hover'),\n        '[react-bootstrap] Specifying only the `\"hover\"` trigger limits the ' +\n          'visibility of the overlay to just mouse users. Consider also ' +\n          'including the `\"focus\"` trigger so that touch and keyboard only ' +\n          'users can see the overlay as well.'\n      );\n\n      triggerProps.onMouseOver = createChainedFunction(\n        childProps.onMouseOver,\n        onMouseOver,\n        this.handleMouseOver\n      );\n      triggerProps.onMouseOut = createChainedFunction(\n        childProps.onMouseOut,\n        onMouseOut,\n        this.handleMouseOut\n      );\n    }\n\n    if (isOneOf('focus', trigger)) {\n      triggerProps.onFocus = createChainedFunction(\n        childProps.onFocus,\n        onFocus,\n        this.handleDelayedShow\n      );\n      triggerProps.onBlur = createChainedFunction(\n        childProps.onBlur,\n        onBlur,\n        this.handleDelayedHide\n      );\n    }\n\n    this._overlay = this.makeOverlay(overlay, props);\n\n    return cloneElement(child, triggerProps);\n  }\n}\n\nOverlayTrigger.propTypes = propTypes;\nOverlayTrigger.defaultProps = defaultProps;\n\nexport { OverlayTrigger };\n","export { Overlay } from './Overlay.js';\nexport { OverlayTrigger } from './OverlayTrigger.js';\n","import OHIFError from './OHIFError';\n\n/**\n * Abstract class to fetch study metadata.\n */\nexport class StudyMetadataSource {\n  /**\n   * Get study metadata for a study with given study InstanceUID.\n   * @param {String} studyInstanceUID Study InstanceUID.\n   */\n  getByInstanceUID(studyInstanceUID) {\n    /**\n     * Please override this method on a specialized class.\n     */\n    throw new OHIFError(\n      'StudyMetadataSource::getByInstanceUID is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example'\n    );\n  }\n\n  /**\n   * Load study info and study metadata for a given study into the viewer.\n   * @param {StudyMetadata} study StudyMetadata object.\n   */\n  loadStudy(study) {\n    /**\n     * Please override this method on a specialized class.\n     */\n    throw new OHIFError(\n      'StudyMetadataSource::loadStudy is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example'\n    );\n  }\n}\n","import RetrieveMetadata from './services/wado/retrieveMetadata.js';\n\nconst moduleName = 'RetrieveStudyMetadata';\n// Cache for promises. Prevents unnecessary subsequent calls to the server\nconst StudyMetaDataPromises = new Map();\n\n/**\n * Retrieves study metadata\n *\n * @param {Object} server Object with server configuration parameters\n * @param {string} StudyInstanceUID The UID of the Study to be retrieved\n * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\n * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\n * @param {boolean} [separateSeriesInstanceUIDFilters = false] - If true, split filtered metadata calls into multiple calls,\n * as some DICOMWeb implementations only support single filters.\n * @returns {Promise} that will be resolved with the metadata or rejected with the error\n */\nexport function retrieveStudyMetadata(\n  server,\n  StudyInstanceUID,\n  filters,\n  separateSeriesInstanceUIDFilters = false\n) {\n  // @TODO: Whenever a study metadata request has failed, its related promise will be rejected once and for all\n  // and further requests for that metadata will always fail. On failure, we probably need to remove the\n  // corresponding promise from the \"StudyMetaDataPromises\" map...\n\n  if (!server) {\n    throw new Error(`${moduleName}: Required 'server' parameter not provided.`);\n  }\n  if (!StudyInstanceUID) {\n    throw new Error(\n      `${moduleName}: Required 'StudyInstanceUID' parameter not provided.`\n    );\n  }\n\n  // Already waiting on result? Return cached promise\n  if (StudyMetaDataPromises.has(StudyInstanceUID)) {\n    return StudyMetaDataPromises.get(StudyInstanceUID);\n  }\n\n  // Create a promise to handle the data retrieval\n  let promise;\n\n  if (\n    filters &&\n    filters.seriesInstanceUID &&\n    separateSeriesInstanceUIDFilters\n  ) {\n    promise = __separateSeriesRequestToAggregatePromiseateSeriesRequestToAggregatePromise(\n      server,\n      StudyInstanceUID,\n      filters\n    );\n  } else {\n    promise = RetrieveMetadata(server, StudyInstanceUID, filters);\n\n    /*\n    promise = new Promise((resolve, reject) => {\n      RetrieveMetadata(server, StudyInstanceUID, filters).then(function(data) {\n        resolve(data);\n      }, reject);\n    });\n    */\n  }\n\n  // Store the promise in cache\n  StudyMetaDataPromises.set(StudyInstanceUID, promise);\n\n  return promise;\n}\n\n/**\n * Splits up seriesInstanceUID filters to multiple calls for platforms\n * @param {Object} server Object with server configuration parameters\n * @param {string} StudyInstanceUID The UID of the Study to be retrieved\n * @param {Object} filters - Object containing filters to be applied on retrieve metadata process\n */\nfunction __separateSeriesRequestToAggregatePromiseateSeriesRequestToAggregatePromise(\n  server,\n  StudyInstanceUID,\n  filters\n) {\n  const { seriesInstanceUID } = filters;\n  const seriesInstanceUIDs = seriesInstanceUID.split(',');\n\n  return new Promise((resolve, reject) => {\n    const promises = [];\n\n    seriesInstanceUIDs.forEach(uid => {\n      const seriesSpecificFilters = Object.assign({}, filters, {\n        seriesInstanceUID: uid,\n      });\n\n      promises.push(\n        RetrieveMetadata(server, StudyInstanceUID, seriesSpecificFilters)\n      );\n    });\n\n    Promise.all(promises).then(results => {\n      const data = results[0];\n\n      let series = [];\n\n      results.forEach(result => {\n        series = [...series, ...result.series];\n      });\n\n      data.series = series;\n\n      resolve(data);\n    }, reject);\n  });\n}\n\n/**\n * Delete the cached study metadata retrieval promise to ensure that the browser will\n * re-retrieve the study metadata when it is next requested\n *\n * @param {String} StudyInstanceUID The UID of the Study to be removed from cache\n *\n */\nexport function deleteStudyMetadataPromise(StudyInstanceUID) {\n  if (StudyMetaDataPromises.has(StudyInstanceUID)) {\n    StudyMetaDataPromises.delete(StudyInstanceUID);\n  }\n}\n","export const UPDATE_TOKEN = 'UPDATE_TOKEN';\nexport const SUPERUSER_LOGIN_SUCCESS = 'SUPERUSER_LOGIN_SUCCESS';\nexport const SUPERUSER_LOGIN_FAIL = 'SUPERUSER_LOGIN_FAIL';\nexport const INVESTIGATOR_LOGIN = 'INVESTIGATOR_LOGIN';\nexport const HEALTHPROFESSIONAL_LOGIN = 'HEALTHPROFESSIONAL_LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\nexport const SUPERUSER_AUTHENTICATED_SUCCESS =\n  'SUPERUSER_AUTHENTICATED_SUCCESS';\nexport const SUPERUSER_AUTHENTICATED_FAIL = 'SUPERUSER_AUTHENTICATED_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\nexport const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\nexport const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\nexport const GITHUB_AUTH_SUCCESS = 'GITHUB_AUTH_SUCCESS';\nexport const GITHUB_AUTH_FAIL = 'GITHUB_AUTH_FAIL';\nexport const LINKEDIN_AUTH_SUCCESS = 'LINKEDIN_AUTH_SUCCESS';\nexport const LINKEDIN_AUTH_FAIL = 'LINKEDIN_AUTH_FAIL';\nexport const SPOTIFY_AUTH_SUCCESS = 'SPOTIFY_AUTH_SUCCESS';\nexport const SPOTIFY_AUTH_FAIL = 'SPOTIFY_AUTH_FAIL';\nexport const USER_LOADED_APPS_SUCCESS = 'USER_LOADED_APPS_SUCCESS';\nexport const USER_LOADED_APPS_FAIL = 'USER_LOADED_APPS_FAIL';\nexport const LOGOUT = 'LOGOUT';\n","import './Tooltip.styl';\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  /** Sets the direction the Tooltip is positioned towards. */\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /** The \"top\" position value for the Tooltip. */\n  positionTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** The \"left\" position value for the Tooltip. */\n  positionLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** The \"top\" position value for the Tooltip arrow. */\n  arrowOffsetTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** The \"left\" position value for the Tooltip arrow. */\n  arrowOffsetLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nconst defaultProps = {\n  placement: 'right',\n};\n\nclass Tooltip extends React.Component {\n  render() {\n    const {\n      placement,\n      positionTop,\n      positionLeft,\n      arrowOffsetTop,\n      arrowOffsetLeft,\n      className,\n      style,\n      children,\n    } = this.props;\n\n    const outerStyle = {\n      top: positionTop,\n      left: positionLeft,\n      ...style,\n    };\n\n    const arrowStyle = {\n      top: arrowOffsetTop,\n      left: arrowOffsetLeft,\n    };\n\n    return (\n      <div\n        role=\"tooltip\"\n        className={classNames(className, 'tooltip', placement)}\n        style={outerStyle}\n      >\n        <div className=\"tooltip-arrow\" style={arrowStyle} />\n        <div className=\"tooltip-inner\">{children}</div>\n      </div>\n    );\n  }\n}\n\nTooltip.propTypes = propTypes;\nTooltip.defaultProps = defaultProps;\n\nexport { Tooltip };\n","export { Tooltip } from './Tooltip.js';\n","/**\n * Convert String to ArrayBuffer\n *\n * @param {String} str Input String\n * @return {ArrayBuffer} Output converted ArrayBuffer\n */\nexport default function str2ab(str) {\n  const strLen = str.length;\n  const bytes = new Uint8Array(strLen);\n\n  for (let i = 0; i < strLen; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n\n  return bytes.buffer;\n}\n","export class ObjectPath {\n  /**\n   * Set an object property based on \"path\" (namespace) supplied creating\n   * ... intermediary objects if they do not exist.\n   * @param object {Object} An object where the properties specified on path should be set.\n   * @param path {String} A string representing the property to be set, e.g. \"user.study.series.timepoint\".\n   * @param value {Any} The value of the property that will be set.\n   * @return {Boolean} Returns \"true\" on success, \"false\" if any intermediate component of the supplied path\n   * ... is not a valid Object, in which case the property cannot be set. No excpetions are thrown.\n   */\n  static set(object, path, value) {\n    let components = ObjectPath.getPathComponents(path),\n      length = components !== null ? components.length : 0,\n      result = false;\n\n    if (length > 0 && ObjectPath.isValidObject(object)) {\n      let i = 0,\n        last = length - 1,\n        currentObject = object;\n\n      while (i < last) {\n        let field = components[i];\n\n        if (field in currentObject) {\n          if (!ObjectPath.isValidObject(currentObject[field])) {\n            break;\n          }\n        } else {\n          currentObject[field] = {};\n        }\n\n        currentObject = currentObject[field];\n        i++;\n      }\n\n      if (i === last) {\n        currentObject[components[last]] = value;\n        result = true;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Get an object property based on \"path\" (namespace) supplied traversing the object\n   * ... tree as necessary.\n   * @param object {Object} An object where the properties specified might exist.\n   * @param path {String} A string representing the property to be searched for, e.g. \"user.study.series.timepoint\".\n   * @return {Any} The value of the property if found. By default, returns the special type \"undefined\".\n   */\n  static get(object, path) {\n    let found, // undefined by default\n      components = ObjectPath.getPathComponents(path),\n      length = components !== null ? components.length : 0;\n\n    if (length > 0 && ObjectPath.isValidObject(object)) {\n      let i = 0,\n        last = length - 1,\n        currentObject = object;\n\n      while (i < last) {\n        let field = components[i];\n\n        const isValid = ObjectPath.isValidObject(currentObject[field]);\n        if (field in currentObject && isValid) {\n          currentObject = currentObject[field];\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      if (i === last && components[last] in currentObject) {\n        found = currentObject[components[last]];\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * Check if the supplied argument is a real JavaScript Object instance.\n   * @param object {Any} The subject to be tested.\n   * @return {Boolean} Returns \"true\" if the object is a real Object instance and \"false\" otherwise.\n   */\n  static isValidObject(object) {\n    return (\n      typeof object === 'object' && object !== null && object instanceof Object\n    );\n  }\n\n  static getPathComponents(path) {\n    return typeof path === 'string' ? path.split('.') : null;\n  }\n}\n\nexport default ObjectPath;\n","const absoluteUrl = path => {\n  let absolutePath = '/';\n\n  if (!path) return absolutePath;\n\n  // TODO: Find another way to get root url\n  const absoluteUrl = window.location.origin;\n  const absoluteUrlParts = absoluteUrl.split('/');\n\n  if (absoluteUrlParts.length > 4) {\n    const rootUrlPrefixIndex = absoluteUrl.indexOf(absoluteUrlParts[3]);\n    absolutePath += absoluteUrl.substring(rootUrlPrefixIndex) + path;\n  } else {\n    absolutePath += path;\n  }\n\n  return absolutePath.replace(/\\/\\/+/g, '/');\n};\n\nexport default absoluteUrl;\n","// TODO: figure out where else to put this function\nconst addServers = (servers, store) => {\n  if (!servers || !store) {\n    throw new Error('The servers and store must be defined');\n  }\n\n  Object.keys(servers).forEach(serverType => {\n    const endpoints = servers[serverType];\n    endpoints.forEach(endpoint => {\n      const server = Object.assign({}, endpoint);\n      server.type = serverType;\n\n      store.dispatch({\n        type: 'ADD_SERVER',\n        server,\n      });\n    });\n  });\n};\n\nexport default addServers;\n","import cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport { api } from 'dicomweb-client';\nimport DICOMWeb from '../DICOMWeb';\n\nimport errorHandler from '../errorHandler';\nimport getXHRRetryRequestHook from './xhrRetryRequestHook';\n\nconst getImageId = imageObj => {\n  if (!imageObj) {\n    return;\n  }\n\n  return typeof imageObj.getImageId === 'function'\n    ? imageObj.getImageId()\n    : imageObj.url;\n};\n\nconst findImageIdOnStudies = (studies, displaySetInstanceUID) => {\n  const study = studies.find(study => {\n    const displaySet = study.displaySets.some(\n      displaySet => displaySet.displaySetInstanceUID === displaySetInstanceUID\n    );\n    return displaySet;\n  });\n  const { series = [] } = study;\n  const { instances = [] } = series[0] || {};\n  const instance = instances[0];\n\n  return getImageId(instance);\n};\n\nconst someInvalidStrings = strings => {\n  const stringsArray = Array.isArray(strings) ? strings : [strings];\n  const emptyString = string => !string;\n  let invalid = stringsArray.some(emptyString);\n  return invalid;\n};\n\nconst getImageInstance = dataset => {\n  return dataset && dataset.images && dataset.images[0];\n};\n\nconst getImageInstanceId = imageInstance => {\n  return getImageId(imageInstance);\n};\n\nconst fetchIt = (url, headers = DICOMWeb.getAuthorizationHeader()) => {\n  return fetch(url, headers).then(response => response.arrayBuffer());\n};\n\nconst cornerstoneRetriever = imageId => {\n  return cornerstone.loadAndCacheImage(imageId).then(image => {\n    return image && image.data && image.data.byteArray.buffer;\n  });\n};\n\nconst wadorsRetriever = (\n  url,\n  studyInstanceUID,\n  seriesInstanceUID,\n  sopInstanceUID,\n  headers = DICOMWeb.getAuthorizationHeader(),\n  errorInterceptor = errorHandler.getHTTPErrorHandler()\n) => {\n  const config = {\n    url,\n    headers,\n    errorInterceptor,\n    requestHooks: [getXHRRetryRequestHook()],\n  };\n  const dicomWeb = new api.DICOMwebClient(config);\n\n  return dicomWeb.retrieveInstance({\n    studyInstanceUID,\n    seriesInstanceUID,\n    sopInstanceUID,\n  });\n};\n\nconst getImageLoaderType = imageId => {\n  const loaderRegExp = /^\\w+\\:/;\n  const loaderType = loaderRegExp.exec(imageId);\n\n  return (\n    (loaderRegExp.lastIndex === 0 &&\n      loaderType &&\n      loaderType[0] &&\n      loaderType[0].replace(':', '')) ||\n    ''\n  );\n};\n\nclass DicomLoaderService {\n  getLocalData(dataset, studies) {\n    if (dataset && dataset.localFile) {\n      // Use referenced imageInstance\n      const imageInstance = getImageInstance(dataset);\n      let imageId = getImageInstanceId(imageInstance);\n\n      // or Try to get it from studies\n      if (someInvalidStrings(imageId)) {\n        imageId = findImageIdOnStudies(studies, dataset.displaySetInstanceUID);\n      }\n\n      if (!someInvalidStrings(imageId)) {\n        return cornerstoneWADOImageLoader.wadouri.loadFileRequest(imageId);\n      }\n    }\n  }\n\n  getDataByImageType(dataset) {\n    const imageInstance = getImageInstance(dataset);\n\n    if (imageInstance) {\n      const imageId = getImageInstanceId(imageInstance);\n      let getDicomDataMethod = fetchIt;\n      const loaderType = getImageLoaderType(imageId);\n\n      switch (loaderType) {\n        case 'dicomfile':\n          getDicomDataMethod = cornerstoneRetriever.bind(this, imageId);\n          break;\n        case 'wadors':\n          const url = imageInstance.getData().wadoRoot;\n          const studyInstanceUID = imageInstance.getStudyInstanceUID();\n          const seriesInstanceUID = imageInstance.getSeriesInstanceUID();\n          const sopInstanceUID = imageInstance.getSOPInstanceUID();\n          const invalidParams = someInvalidStrings([\n            url,\n            studyInstanceUID,\n            seriesInstanceUID,\n            sopInstanceUID,\n          ]);\n          if (invalidParams) {\n            return;\n          }\n\n          getDicomDataMethod = wadorsRetriever.bind(\n            this,\n            url,\n            studyInstanceUID,\n            seriesInstanceUID,\n            sopInstanceUID\n          );\n          break;\n        case 'wadouri':\n          // Strip out the image loader specifier\n          imageId = imageId.substring(imageId.indexOf(':') + 1);\n\n          if (someInvalidStrings(imageId)) {\n            return;\n          }\n          getDicomDataMethod = fetchIt.bind(this, imageId);\n          break;\n      }\n\n      return getDicomDataMethod();\n    }\n  }\n\n  getDataByDatasetType(dataset) {\n    const {\n      StudyInstanceUID,\n      SeriesInstanceUID,\n      SOPInstanceUID,\n      authorizationHeaders,\n      wadoRoot,\n      wadoUri,\n    } = dataset;\n    // Retrieve wadors or just try to fetch wadouri\n    if (!someInvalidStrings(wadoRoot)) {\n      return wadorsRetriever(\n        wadoRoot,\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        SOPInstanceUID,\n        authorizationHeaders\n      );\n    } else if (!someInvalidStrings(wadoUri)) {\n      return fetchIt(wadoUri, { headers: authorizationHeaders });\n    }\n  }\n\n  *getLoaderIterator(dataset, studies) {\n    yield this.getLocalData(dataset, studies);\n    yield this.getDataByImageType(dataset);\n    yield this.getDataByDatasetType(dataset);\n  }\n\n  findDicomDataPromise(dataset, studies) {\n    const loaderIterator = this.getLoaderIterator(dataset, studies);\n    // it returns first valid retriever method.\n    for (const loader of loaderIterator) {\n      if (loader) {\n        return loader;\n      }\n    }\n\n    // in case of no valid loader\n    throw new Error('Invalid dicom data loader');\n  }\n}\n\nconst dicomLoaderService = new DicomLoaderService();\n\nexport default dicomLoaderService;\n","/* Enabled JPEG images downloading on IE11. */\nconst b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {\n  const byteCharacters = atob(b64Data);\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  const blob = new Blob(byteArrays, { type: contentType });\n  return blob;\n};\n\nexport default b64toBlob;\n","import studyMetadataManager from './studyMetadataManager';\n\n/**\n * Study schema\n *\n * @typedef {Object} Study\n * @property {Array} seriesList -\n * @property {Object} seriesMap -\n * @property {Object} seriesLoader -\n * @property {string} wadoUriRoot -\n * @property {string} wadoRoot -\n * @property {string} qidoRoot -\n * @property {string} patientName -\n * @property {string} patientId -\n * @property {number} patientAge -\n * @property {number} patientSize -\n * @property {number} patientWeight -\n * @property {string} accessionNumber -\n * @property {string} studyDate -\n * @property {string} studyTime -\n * @property {string} modalities -\n * @property {string} studyDescription -\n * @property {string} imageCount -\n * @property {string} studyInstanceUid -\n * @property {string} institutionName -\n * @property {Array} displaySets -\n */\n\n/**\n * Factory function to load and cache derived display sets.\n *\n * @param {object} referencedDisplaySet Display set\n * @param {string} referencedDisplaySet.displaySetInstanceUid Display set instance uid\n * @param {string} referencedDisplaySet.seriesDate\n * @param {string} referencedDisplaySet.seriesTime\n * @param {string} referencedDisplaySet.seriesInstanceUid\n * @param {string} referencedDisplaySet.seriesNumber\n * @param {string} referencedDisplaySet.seriesDescription\n * @param {number} referencedDisplaySet.numImageFrames\n * @param {string} referencedDisplaySet.frameRate\n * @param {string} referencedDisplaySet.modality\n * @param {boolean} referencedDisplaySet.isMultiFrame\n * @param {number} referencedDisplaySet.instanceNumber\n * @param {boolean} referencedDisplaySet.isReconstructable\n * @param {string} referencedDisplaySet.studyInstanceUid\n * @param {Array} referencedDisplaySet.sopClassUids\n * @param {Study[]} studies Collection of studies\n * @param {object} logger\n * @param {object} snackbar\n * @returns void\n */\nasync function loadAndCacheDerivedDisplaySets(\n  referencedDisplaySet,\n  studies,\n  logger,\n  snackbar\n) {\n  const { StudyInstanceUID, SeriesInstanceUID } = referencedDisplaySet;\n  const promises = [];\n  const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n\n  if (!studyMetadata) {\n    return promises;\n  }\n\n  const derivedDisplaySets = studyMetadata.getDerivedDatasets({\n    referencedSeriesInstanceUID: SeriesInstanceUID,\n  });\n\n  if (!derivedDisplaySets.length) {\n    return promises;\n  }\n\n  // Filter by type\n  const displaySetsPerModality = {};\n\n  derivedDisplaySets.forEach(displaySet => {\n    const Modality = displaySet.Modality;\n\n    if (displaySetsPerModality[Modality] === undefined) {\n      displaySetsPerModality[Modality] = [];\n    }\n\n    displaySetsPerModality[Modality].push(displaySet);\n  });\n\n  // For each type, see if any are loaded, if not load the most recent.\n  await Promise.all(\n    Object.keys(displaySetsPerModality).map(async key => {\n      const displaySets = displaySetsPerModality[key];\n\n      const isLoaded = displaySets.some(displaySet => displaySet.isLoaded);\n      if (isLoaded) {\n        return;\n      }\n\n      if (displaySets.some(displaySet => displaySet.loadError)) {\n        return;\n      }\n\n      // find most recent and load it.\n      let recentDateTime = 0;\n      let recentDisplaySet = displaySets[0];\n\n      displaySets.forEach(displaySet => {\n        const dateTime = Number(\n          `${displaySet.SeriesDate}${displaySet.SeriesTime}`\n        );\n        if (dateTime > recentDateTime) {\n          recentDateTime = dateTime;\n          recentDisplaySet = displaySet;\n        }\n      });\n\n      try {\n        if (\n          recentDisplaySet.hasOwnProperty('getSourceDisplaySet') &&\n          typeof recentDisplaySet.getSourceDisplaySet === 'function'\n        ) {\n          if (recentDisplaySet.Modality === 'SEG' && logger) {\n            const onDisplaySetLoadFailureHandler = error => {\n              logger.error({ error, message: error.message });\n              snackbar.show({\n                title: 'DICOM Segmentation Loader',\n                message: error.message,\n                type: 'error',\n                autoClose: true,\n              });\n            };\n\n            let activatedLabelmapIndex = -1;\n            while (activatedLabelmapIndex == -1) {\n              const {\n                referencedDisplaySet,\n                activatedLabelmapPromise,\n              } = await recentDisplaySet.getSourceDisplaySet(\n                studies,\n                true,\n                onDisplaySetLoadFailureHandler\n              );\n\n              activatedLabelmapIndex = await activatedLabelmapPromise;\n              const selectionFired = new CustomEvent(\n                'extensiondicomsegmentationsegselected',\n                {\n                  detail: { activatedLabelmapIndex: activatedLabelmapIndex },\n                }\n              );\n              document.dispatchEvent(selectionFired);\n\n              const lastDateTime = Number(\n                `${recentDisplaySet.SeriesDate}${recentDisplaySet.SeriesTime}`\n              );\n              recentDateTime = 0;\n              displaySets.forEach(displaySet => {\n                const dateTime = Number(\n                  `${displaySet.SeriesDate}${displaySet.SeriesTime}`\n                );\n                if (dateTime > recentDateTime && dateTime < lastDateTime) {\n                  recentDateTime = dateTime;\n                  recentDisplaySet = displaySet;\n                }\n              });\n            }\n          } else {\n            await recentDisplaySet.getSourceDisplaySet(studies);\n          }\n        } else {\n          await recentDisplaySet.load(referencedDisplaySet, studies);\n        }\n      } catch (error) {\n        recentDisplaySet.isLoaded = false;\n        recentDisplaySet.loadError = true;\n        logger.error({ error, message: error.message });\n        snackbar.show({\n          title: 'Error loading derived display set:',\n          message: error.message,\n          type: 'error',\n          error,\n          autoClose: false,\n        });\n      }\n    })\n  );\n\n  /*\n   * TODO: Improve the way we notify parts of the app\n   * that depends on derived display sets to be loaded.\n   * (Implement pubsub for better tracking of derived display sets)\n   */\n  const event = new CustomEvent('deriveddisplaysetsloadedandcached');\n  document.dispatchEvent(event);\n}\n\nexport default loadAndCacheDerivedDisplaySets;\n","import lib from 'query-string';\n\nconst PARAM_SEPARATOR = ';';\nconst PARAM_PATTERN_IDENTIFIER = ':';\n\nfunction toLowerCaseFirstLetter(word) {\n  return word[0].toLowerCase() + word.slice(1);\n}\nconst getQueryFilters = (location = {}) => {\n  const { search } = location;\n\n  if (!search) {\n    return;\n  }\n\n  const searchParameters = parse(search);\n  const filters = {};\n\n  Object.entries(searchParameters).forEach(([key, value]) => {\n    filters[toLowerCaseFirstLetter(key)] = value;\n  });\n\n  return filters;\n};\n\nconst decode = (strToDecode = '') => {\n  try {\n    const decoded = window.atob(strToDecode);\n    return decoded;\n  } catch (e) {\n    return strToDecode;\n  }\n};\n\nconst parse = toParse => {\n  if (toParse) {\n    return lib.parse(toParse);\n  }\n\n  return {};\n};\nconst parseParam = paramStr => {\n  const _paramDecoded = decode(paramStr);\n  if (_paramDecoded && typeof _paramDecoded === 'string') {\n    return _paramDecoded.split(PARAM_SEPARATOR);\n  }\n};\n\nconst replaceParam = (path = '', paramKey, paramValue) => {\n  const paramPattern = `${PARAM_PATTERN_IDENTIFIER}${paramKey}`;\n  if (paramValue) {\n    return path.replace(paramPattern, paramValue);\n  }\n\n  return path;\n};\n\nconst isValidPath = path => {\n  const paramPatternPiece = `/${PARAM_PATTERN_IDENTIFIER}`;\n  return path.indexOf(paramPatternPiece) < 0;\n};\n\nconst queryString = {\n  getQueryFilters,\n};\n\nconst paramString = {\n  isValidPath,\n  parseParam,\n  replaceParam,\n};\n\nexport { parse, queryString, paramString };\n","export default function makeDeferred() {\n  let reject, resolve, promise = new Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  return Object.freeze({ promise, resolve, reject });\n}\n","\nexport default class Queue {\n\n  constructor(limit) {\n    this.limit = limit;\n    this.size = 0;\n    this.awaiting = null;\n  }\n\n  /**\n   * Creates a new \"proxy\" function associated with the current execution queue\n   * instance. When the returned function is invoked, the queue limit is checked\n   * to make sure the limit of scheduled tasks is repected (throwing an\n   * exception when the limit has been reached and before calling the original\n   * function). The original function is only invoked after all the previously\n   * scheduled tasks have finished executing (their returned promises have\n   * resolved/rejected);\n   *\n   * @param {function} task The function whose execution will be associated\n   * with the current Queue instance;\n   * @returns {function} The \"proxy\" function bound to the current Queue\n   * instance;\n   */\n  bind(task) {\n    return bind(this, task);\n  }\n\n  bindSafe(task, onError) {\n    const boundTask = bind(this, task);\n    return async function safeTask(...args) {\n      try {\n        return await boundTask(...args);\n      } catch (e) {\n        onError(e);\n      }\n    };\n  }\n}\n\n/**\n * Utils\n */\n\nfunction bind(queue, task) {\n  const cleaner = clean.bind(null, queue);\n  return async function boundTask(...args) {\n    if (queue.size >= queue.limit) {\n      throw new Error('Queue limit reached');\n    }\n    const promise = chain(queue.awaiting, task, args);\n    queue.awaiting = promise.then(cleaner, cleaner);\n    queue.size++;\n    return promise;\n  };\n}\n\nfunction clean(queue) {\n  if (queue.size > 0 && --queue.size === 0) {\n    queue.awaiting = null;\n  }\n}\n\nasync function chain(prev, task, args) {\n  await prev;\n  return task(...args);\n}\n","/**\n * Constants\n */\n\nconst SEPARATOR = '/';\n\n/**\n * API\n */\n\n/**\n * Add values to a list hierarchically.\n *  @ For example:\n *    addToList([], 'a', 'b', 'c');\n *  will add the following hierarchy to the list:\n *    a > b > c\n *  resulting in the following array:\n *    [['a', [['b', ['c']]]]]\n * @param {Array} list The target list;\n * @param  {...string} values The values to be hierarchically added to the list;\n * @returns {Array} Returns the provided list possibly updated with the given\n *  values or null when a bad list (not an actual array) is provided\n */\nfunction addToList(list, ...values) {\n  if (Array.isArray(list)) {\n    if (values.length > 0) {\n      addValuesToList(list, values);\n    }\n    return list;\n  }\n  return null;\n}\n\n/**\n * Iterates through the provided hierarchical list executing the callback\n * once for each leaf-node of the tree. The ancestors of the leaf-node being\n * visited are passed to the callback function along with the leaf-node in\n * the exact same order they appear on the tree (from root to leaf);\n *  @ For example, if the hierachy `a > b > c` appears on the tree (\"a\" being\n *    the root and \"c\" being the leaf) the callback function will be called as:\n *  callback('a', 'b', 'c');\n * @param {Array} list The hierarchical list to be iterated\n * @param {function} callback The callback which will be exected once for\n *  each leaf-node of the hierarchical list;\n * @returns {Array} Returns the provided list or null for bad arguments;\n */\nfunction forEach(list, callback) {\n  if (Array.isArray(list)) {\n    if (typeof callback === 'function') {\n      forEachValue(list, callback);\n    }\n    return list;\n  }\n  return null;\n}\n\n/**\n * Retrieves an item from the given hierarchical list based on an index (number)\n * or a path (string).\n *  @ For example:\n *    getItem(list, '1/0/4')\n *  will retrieve the fourth grandchild, from the first child of the second\n *  element of the list;\n * @param {Array} list The source list;\n * @param {string|number} indexOrPath The index of the element inside list\n *  (number) or the path to reach the desired element (string). The slash \"/\"\n *  character is cosidered the path separator;\n */\nfunction getItem(list, indexOrPath) {\n  if (Array.isArray(list)) {\n    let subpath = null;\n    let index = typeof indexOrPath === 'number' ? indexOrPath : -1;\n    if (typeof indexOrPath === 'string') {\n      const separator = indexOrPath.indexOf(SEPARATOR);\n      if (separator > 0) {\n        index = parseInt(indexOrPath.slice(0, separator), 10);\n        if (separator + 1 < indexOrPath.length) {\n          subpath = indexOrPath.slice(separator + 1, indexOrPath.length);\n        }\n      } else {\n        index = parseInt(indexOrPath, 10);\n      }\n    }\n    if (index >= 0 && index < list.length) {\n      const item = list[index];\n      if (isSublist(item)) {\n        if (subpath !== null) {\n          return getItem(item[1], subpath);\n        }\n        return item[0];\n      }\n      return item;\n    }\n  }\n}\n\n/**\n * Pretty-print the provided hierarchical list;\n * @param {Array} list The source list;\n * @returns {string} The textual representation of the hierarchical list;\n */\nfunction print(list) {\n  let text = '';\n  if (Array.isArray(list)) {\n    let prev = [];\n    forEachValue(list, function(...args) {\n      let prevLen = prev.length;\n      for (let i = 0, l = args.length; i < l; ++i) {\n        if (i < prevLen && args[i] === prev[i]) {\n          continue;\n        }\n        text += '  '.repeat(i) + args[i] + '\\n';\n      }\n      prev = args;\n    });\n  }\n  return text;\n}\n\n/**\n * Utils\n */\n\nfunction forEachValue(list, callback) {\n  for (let i = 0, l = list.length; i < l; ++i) {\n    let item = list[i];\n    if (isSublist(item)) {\n      if (item[1].length > 0) {\n        forEachValue(item[1], callback.bind(null, item[0]));\n        continue;\n      }\n      item = item[0];\n    }\n    callback(item);\n  }\n}\n\nfunction addValuesToList(list, values) {\n  let value = values.shift();\n  let index = add(list, value);\n  if (index >= 0) {\n    if (values.length > 0) {\n      let sublist = list[index];\n      if (!isSublist(sublist)) {\n        sublist = toSublist(value);\n        list[index] = sublist;\n      }\n      return addValuesToList(sublist[1], values);\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction add(list, value) {\n  let index = find(list, value);\n  if (index === -2) {\n    index = list.push(value) - 1;\n  }\n  return index;\n}\n\nfunction find(list, value) {\n  if (typeof value === 'string') {\n    for (let i = 0, l = list.length; i < l; ++i) {\n      let item = list[i];\n      if (item === value || (isSublist(item) && item[0] === value)) {\n        return i;\n      }\n    }\n    return -2;\n  }\n  return -1;\n}\n\nfunction isSublist(subject) {\n  return (\n    Array.isArray(subject) &&\n    subject.length === 2 &&\n    typeof subject[0] === 'string' &&\n    Array.isArray(subject[1])\n  );\n}\n\nfunction toSublist(value) {\n  return [value + '', []];\n}\n\n/**\n * Exports\n */\n\nexport { addToList, getItem, forEach, print };\n","import makeDeferred from './makeDeferred';\n\n/**\n * Constants\n */\n\nconst TYPE = Symbol('Type');\nconst TASK = Symbol('Task');\nconst LIST = Symbol('List');\n\n/**\n * Public Methods\n */\n\n/**\n * Creates an instance of a task list\n * @returns {Object} A task list object\n */\nfunction createList() {\n  return objectWithType(LIST, {\n    head: null,\n    named: Object.create(null),\n    observers: [],\n  });\n}\n\n/**\n * Checks if the given argument is a List instance\n * @param {any} subject The value to be tested\n * @returns {boolean} true if a valid List instance is given, false otherwise\n */\nfunction isList(subject) {\n  return isOfType(LIST, subject);\n}\n\n/**\n * Creates an instance of a task\n * @param {Object} list The List instance related to this task\n * @param {Object} next The next Task instance to link to\n * @returns {Object} A task object\n */\nfunction createTask(list, next) {\n  return objectWithType(TASK, {\n    list: isList(list) ? list : null,\n    next: isTask(next) ? next : null,\n    failed: false,\n    awaiting: null,\n    progress: 0.0,\n  });\n}\n\n/**\n * Checks if the given argument is a Task instance\n * @param {any} subject The value to be tested\n * @returns {boolean} true if a valid Task instance is given, false otherwise\n */\nfunction isTask(subject) {\n  return isOfType(TASK, subject);\n}\n\n/**\n * Appends a new Task to the given List instance and notifies the list observers\n * @param {Object} list A List instance\n * @returns {Object} The new Task instance appended to the List or null if the\n *  given List instanc is not valid\n */\nfunction increaseList(list) {\n  if (isList(list)) {\n    const task = createTask(list, list.head);\n    list.head = task;\n    notify(list, getOverallProgress(list));\n    return task;\n  }\n  return null;\n}\n\n/**\n * Updates the internal progress value of the given Task instance and notifies\n * the observers of the associated list.\n * @param {Object} task The Task instance to be updated\n * @param {number} value A number between 0 (inclusive) and 1 (exclusive)\n *  indicating the progress of the task;\n * @returns {void} Nothing is returned\n */\nfunction update(task, value) {\n  if (isTask(task) && isValidProgress(value) && value < 1.0) {\n    if (task.progress !== value) {\n      task.progress = value;\n      if (isList(task.list)) {\n        notify(task.list, getOverallProgress(task.list));\n      }\n    }\n  }\n}\n\n/**\n * Sets a Task instance as finished (progress = 1.0), freezes it in order to\n * prevent further modifications and notifies the observers of the associated\n * list.\n * @param {Object} task The Task instance to be finalized\n * @returns {void} Nothing is returned\n */\nfunction finish(task) {\n  if (isTask(task)) {\n    task.progress = 1.0;\n    task.awaiting = null;\n    Object.freeze(task);\n    if (isList(task.list)) {\n      notify(task.list, getOverallProgress(task.list));\n    }\n  }\n}\n\n/**\n * Generate a summarized snapshot of the current status of the given task List\n * @param {Object} list The List instance to be scanned\n * @returns {Object} An obeject representing the summarized status of the list\n */\nfunction getOverallProgress(list) {\n  const status = createStatus();\n  if (isList(list)) {\n    let task = list.head;\n    while (isTask(task)) {\n      status.total++;\n      if (isValidProgress(task.progress)) {\n        status.partial += task.progress;\n        if (task.progress === 1.0 && task.failed) status.failures++;\n      }\n      task = task.next;\n    }\n  }\n  if (status.total > 0) {\n    status.progress = status.partial / status.total;\n  }\n  return Object.freeze(status);\n}\n\n/**\n * Adds a Task instance to the given list that waits on a given \"thenable\". When\n * the thenable resolves the \"finish\" method is called on the newly created\n * instance thus notifying the observers of the list.\n * @param {Object} list The List instance to which the new task will be added\n * @param {Object|Promise} thenable The thenable to be waited on\n * @returns {Object} A reference to the newly created Task;\n */\nfunction waitOn(list, thenable) {\n  const task = increaseList(list);\n  if (isTask(task)) {\n    task.awaiting = Promise.resolve(thenable).then(\n      function() {\n        finish(task);\n      },\n      function() {\n        task.failed = true;\n        finish(task);\n      }\n    );\n    return task;\n  }\n  return null;\n}\n\n/**\n * Adds a Task instance to the given list using a deferred (a Promise that can\n * be externally resolved) notifying the observers of the list.\n * @param {Object} list The List instance to which the new task will be added\n * @returns {Object} An object with references to the created deferred and task\n */\nfunction addDeferred(list) {\n  const deferred = makeDeferred();\n  const task = waitOn(list, deferred.promise);\n  return Object.freeze({\n    deferred,\n    task,\n  });\n}\n\n/**\n * Assigns a name to a specific task of the list\n * @param {Object} list The List instance whose task will be named\n * @param {Object} task The specified Task instance\n * @param {string} name The name of the task\n * @returns {boolean} Returns true on success, false otherwise\n */\nfunction setTaskName(list, task, name) {\n  if (\n    contains(list, task) &&\n    list.named !== null &&\n    typeof list.named === 'object' &&\n    typeof name === 'string'\n  ) {\n    list.named[name] = task;\n    return true;\n  }\n  return false;\n}\n\n/**\n * Retrieves a task by name\n * @param {Object} list The List instance whose task will be retrieved\n * @param {string} name The name of the task to be retrieved\n * @returns {Object} The Task instance or null if not found\n */\nfunction getTaskByName(list, name) {\n  if (\n    isList(list) &&\n    list.named !== null &&\n    typeof list.named === 'object' &&\n    typeof name === 'string'\n  ) {\n    const task = list.named[name];\n    if (isTask(task)) {\n      return task;\n    }\n  }\n  return null;\n}\n\n/**\n * Adds an observer (callback function) to a given List instance\n * @param {Object} list The List instance to which the observer will be appended\n * @param {Function} observer The observer (function) that will be executed\n *  every time a change happens within the list\n * @returns {boolean} Returns true on success and false otherewise\n */\nfunction addObserver(list, observer) {\n  if (\n    isList(list) &&\n    Array.isArray(list.observers) &&\n    typeof observer === 'function'\n  ) {\n    list.observers.push(observer);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes an observer (callback function) from a given List instance\n * @param {Object} list The instance List from which the observer will removed\n * @param {Function} observer The observer function to be removed\n * @returns {boolean} Returns true on success and false otherewise\n */\nfunction removeObserver(list, observer) {\n  if (\n    isList(list) &&\n    Array.isArray(list.observers) &&\n    list.observers.length > 0\n  ) {\n    const index = list.observers.indexOf(observer);\n    if (index >= 0) {\n      list.observers.splice(index, 1);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Utils\n */\n\nfunction createStatus() {\n  return Object.seal({\n    total: 0,\n    partial: 0.0,\n    progress: 0.0,\n    failures: 0,\n  });\n}\n\nfunction objectWithType(type, object) {\n  return Object.seal(Object.defineProperty(object, TYPE, { value: type }));\n}\n\nfunction isOfType(type, subject) {\n  return (\n    subject !== null && typeof subject === 'object' && subject[TYPE] === type\n  );\n}\n\nfunction isValidProgress(value) {\n  return typeof value === 'number' && value >= 0.0 && value <= 1.0;\n}\n\nfunction contains(list, task) {\n  if (isList(list) && isTask(task)) {\n    let item = list.head;\n    while (isTask(item)) {\n      if (item === task) {\n        return true;\n      }\n      item = item.next;\n    }\n  }\n  return false;\n}\n\nfunction notify(list, data) {\n  if (\n    isList(list) &&\n    Array.isArray(list.observers) &&\n    list.observers.length > 0\n  ) {\n    list.observers.slice().forEach(function(observer) {\n      if (typeof observer === 'function') {\n        try {\n          observer(data, list);\n        } catch (e) {\n          /* Oops! */\n        }\n      }\n    });\n  }\n}\n\n/**\n * Exports\n */\n\nexport {\n  createList,\n  isList,\n  createTask,\n  isTask,\n  increaseList,\n  update,\n  finish,\n  getOverallProgress,\n  waitOn,\n  addDeferred,\n  setTaskName,\n  getTaskByName,\n  addObserver,\n  removeObserver,\n};\n","import ObjectPath from './objectPath';\nimport StackManager from './StackManager.js';\nimport absoluteUrl from './absoluteUrl';\nimport addServers from './addServers';\nimport guid from './guid';\nimport sortBy from './sortBy.js';\nimport studyMetadataManager from './studyMetadataManager';\nimport writeScript from './writeScript.js';\nimport DicomLoaderService from './dicomLoaderService.js';\nimport b64toBlob from './b64toBlob.js';\nimport loadAndCacheDerivedDisplaySets from './loadAndCacheDerivedDisplaySets.js';\nimport * as urlUtil from './urlUtil';\nimport makeDeferred from './makeDeferred';\nimport makeCancelable from './makeCancelable';\nimport hotkeys from './hotkeys';\nimport Queue from './Queue';\nimport isDicomUid from './isDicomUid';\nimport resolveObjectPath from './resolveObjectPath';\nimport * as hierarchicalListUtils from './hierarchicalListUtils';\nimport * as progressTrackingUtils from './progressTrackingUtils';\nimport xhrRetryRequestHook from './xhrRetryRequestHook';\n\nconst utils = {\n  guid,\n  ObjectPath,\n  absoluteUrl,\n  addServers,\n  sortBy,\n  writeScript,\n  b64toBlob,\n  StackManager,\n  studyMetadataManager,\n  DicomLoaderService,\n  urlUtil,\n  loadAndCacheDerivedDisplaySets,\n  makeDeferred,\n  makeCancelable,\n  hotkeys,\n  Queue,\n  isDicomUid,\n  resolveObjectPath,\n  hierarchicalListUtils,\n  progressTrackingUtils,\n  xhrRetryRequestHook,\n};\n\nexport {\n  guid,\n  ObjectPath,\n  absoluteUrl,\n  addServers,\n  sortBy,\n  writeScript,\n  b64toBlob,\n  StackManager,\n  studyMetadataManager,\n  DicomLoaderService,\n  urlUtil,\n  loadAndCacheDerivedDisplaySets,\n  makeDeferred,\n  makeCancelable,\n  hotkeys,\n  Queue,\n  isDicomUid,\n  resolveObjectPath,\n  hierarchicalListUtils,\n  progressTrackingUtils,\n  xhrRetryRequestHook,\n};\n\nexport default utils;\n","/* jshint -W060 */\nimport absoluteUrl from './absoluteUrl';\n\nexport default function writeScript(fileName, callback) {\n  const script = document.createElement('script');\n  script.src = absoluteUrl(fileName);\n  script.onload = () => {\n    if (typeof callback === 'function') {\n      callback(script);\n    }\n  };\n\n  document.body.appendChild(script);\n}\n","export default function makeCancelable(thenable) {\n  let isCanceled = false;\n  const promise = Promise.resolve(thenable).then(\n    function(result) {\n      if (isCanceled) throw Object.freeze({ isCanceled });\n      return result;\n    },\n    function(error) {\n      if (isCanceled) throw Object.freeze({ isCanceled, error });\n      throw error;\n    }\n  );\n  return Object.assign(Object.create(promise), {\n    then: promise.then.bind(promise),\n    cancel() {\n      isCanceled = true;\n    },\n  });\n}\n","export default function isDicomUid(subject) {\n  const regex = /^\\d+(?:\\.\\d+)*$/;\n  return typeof subject === 'string' && regex.test(subject.trim());\n}\n","export default function resolveObjectPath(root, path, defaultValue) {\n  if (root !== null && typeof root === 'object' && typeof path === 'string') {\n    let value,\n      separator = path.indexOf('.');\n    if (separator >= 0) {\n      return resolveObjectPath(\n        root[path.slice(0, separator)],\n        path.slice(separator + 1, path.length),\n        defaultValue\n      );\n    }\n    value = root[path];\n    return value === undefined && defaultValue !== undefined\n      ? defaultValue\n      : value;\n  }\n}\n","import cornerstone from 'cornerstone-core';\nimport getImageId from '../utils/getImageId.js';\n\nconst noop = () => {};\n\nexport class StudyPrefetcher {\n  options = {\n    order: 'closest',\n    displaySetCount: 1,\n    onImageCached: noop,\n    requestType: 'prefetch',\n    preventCache: false,\n    prefetchDisplaySetsTimeout: 300,\n    maxNumPrefetchRequests: 100,\n    includeActiveDisplaySet: false,\n  };\n\n  constructor(studies, options) {\n    this.studies = studies || [];\n\n    if (options) {\n      this.options = { ...this.options, ...options };\n      this.options.requestType = 'prefetch';\n    }\n\n    cornerstone.events.addEventListener(\n      'cornerstoneimagecachefull.StudyPrefetcher',\n      this.cacheFullHandler\n    );\n  }\n\n  /**\n   * Remove previously set event listeners and stop prefetching.\n   */\n  destroy() {\n    this.stopPrefetching();\n    cornerstone.events.removeEventListener(\n      'cornerstoneimagecachefull.StudyPrefetcher',\n      this.cacheFullHandler\n    );\n  }\n\n  /**\n   * Get StudyPrefetcher singleton instance.\n   *\n   * @param {array} studies\n   * @param {object} options\n   * @returns\n   */\n  static getInstance(studies = [], options) {\n    if (!StudyPrefetcher.instance) {\n      StudyPrefetcher.instance = new StudyPrefetcher(studies, options);\n    }\n\n    if (options) {\n      this.options = { ...this.options, ...options };\n      this.options.requestType = 'prefetch';\n    }\n\n    return StudyPrefetcher.instance;\n  }\n\n  /**\n   * OHIF study metadata instances.\n   *\n   * @param {array} studies\n   */\n  setStudies(studies) {\n    this.stopPrefetching();\n    this.studies = studies;\n  }\n\n  /**\n   * Get previously prefetched element.\n   *\n   * @returns {HTMLElement} Previously prefetched element.\n   */\n  getElement() {\n    return this.element;\n  }\n\n  /**\n   * Prefetch related display sets based on cornerstone viewport element\n   * with previously set options.\n   *\n   * @param {*} element\n   * @param {string} displaySetInstanceUID the display set instance uid\n   * @returns\n   */\n  prefetch(element, displaySetInstanceUID) {\n    if (!this.studies || !this.studies.length) {\n      return;\n    }\n\n    this.element = element;\n    try {\n      this.enabledElement = cornerstone.getEnabledElement(element);\n    } catch {\n      throw new Error('Failed to find the enabled element');\n    }\n\n    this.stopPrefetching();\n    this.prefetchDisplaySets(displaySetInstanceUID);\n  }\n\n  /**\n   * Stop prefetching images.\n   */\n  stopPrefetching() {\n    cornerstone.imageLoadPoolManager.clearRequestStack('prefetch');\n  }\n\n  /**\n   * Prefetch display sets async.\n   *\n   * @param {HTMLElement} element cornerstone viewport element\n   * @param {number} timeout\n   */\n  prefetchDisplaySetsAsync(element, timeout) {\n    try {\n      this.enabledElement = cornerstone.getEnabledElement(element);\n    } catch {\n      throw new Error('Failed to find the enabled element');\n    }\n    timeout = timeout || this.options.prefetchDisplaySetsTimeout;\n    clearTimeout(this.prefetchDisplaySetsHandler);\n    this.prefetchDisplaySetsHandler = setTimeout(() => {\n      this.prefetchDisplaySets(element);\n    }, timeout);\n  }\n\n  /**\n   * Extract all image ids from all display sets to be fetched and\n   * call method to add images to request pool manager.\n   *\n   * @param {string} displaySetInstanceUID the display set instance uid\n   */\n  prefetchDisplaySets(displaySetInstanceUID) {\n    const displaySetsToPrefetch = this.getDisplaySetsToPrefetch(\n      displaySetInstanceUID\n    );\n    const imageIds = this.getImageIdsFromDisplaySets(displaySetsToPrefetch);\n    this.prefetchImageIds(imageIds);\n  }\n\n  /**\n   * Add image ids to request pool manager.\n   *\n   * @param {array} imageIds\n   */\n  prefetchImageIds(imageIds) {\n    const nonCachedImageIds = this.filterCachedImageIds(imageIds);\n    const imageLoadPoolManager = cornerstone.imageLoadPoolManager;\n\n    imageLoadPoolManager.maxNumRequests = {\n      ...imageLoadPoolManager.maxNumRequests,\n      prefetch: this.options.maxNumPrefetchRequests,\n    };\n\n    let requestFn;\n    if (this.options.preventCache) {\n      requestFn = id => cornerstone.loadImage(id);\n    } else {\n      requestFn = id => cornerstone.loadAndCacheImage(id);\n    }\n\n    nonCachedImageIds.forEach(imageId => {\n      imageLoadPoolManager.addRequest(\n        requestFn.bind(this, imageId),\n        this.options.requestType,\n        {\n          imageId,\n        }\n      );\n    });\n  }\n\n  /**\n   * Get study by cornerstone image instance.\n   *\n   * @param {object} image\n   * @returns\n   */\n  getStudy(image) {\n    const StudyInstanceUID = cornerstone.metaData.get(\n      'StudyInstanceUID',\n      image.imageId\n    );\n    const studies = this.studies;\n    return studies.find(\n      study => study.getData().StudyInstanceUID === StudyInstanceUID\n    );\n  }\n\n  /**\n   * Get study series by cornerstone image instance.\n   *\n   * @param {object} study OHIF study instance\n   * @param {object} image cornerstone image instance object\n   * @returns\n   */\n  getSeries(study, image) {\n    const SeriesInstanceUID = cornerstone.metaData.get(\n      'SeriesInstanceUID',\n      image.imageId\n    );\n    return study.getSeriesByUID(SeriesInstanceUID);\n  }\n\n  /**\n   * Get sop instance by cornerstone image instance.\n   *\n   * @param {array} series\n   * @param {object} image\n   * @returns\n   */\n  getInstance(series, image) {\n    const instanceMetadata = cornerstone.metaData.get(\n      'instance',\n      image.imageId\n    );\n    return series.getInstanceByUID(instanceMetadata.SOPInstanceUID);\n  }\n\n  /**\n   * Returns the display set with given uid.\n   *\n   * @param {string} displaySetInstanceUID the display set instance uid\n   * @returns {object} displaySet\n   */\n  getDisplaySetByUID(displaySetInstanceUID) {\n    let displaySet;\n    this.studies.forEach(study => {\n      const ds = study.displaySets.find(\n        ds => ds.displaySetInstanceUID === displaySetInstanceUID\n      );\n      if (ds) {\n        displaySet = ds;\n      }\n    });\n    return displaySet;\n  }\n\n  /**\n   * Get display set by SOPInstanceUID.\n   *\n   * @param {array} displaySets\n   * @param {object} instance\n   * @returns\n   */\n  getDisplaySetBySOPInstanceUID(displaySets, instance) {\n    return displaySets.find(displaySet => {\n      return displaySet.images.some(displaySetImage => {\n        return displaySetImage.SOPInstanceUID === instance.SOPInstanceUID;\n      });\n    });\n  }\n\n  /**\n   * Get active viewport image based on cornerstone viewport element.\n   * @returns\n   */\n  getActiveViewportImage() {\n    if (!this.enabledElement) {\n      return;\n    }\n\n    return this.enabledElement.image;\n  }\n\n  /**\n   * Prefetch display sets based on cornerstone viewport element image.\n   *\n   * @param {string} displaySetInstanceUID the display set instance uid\n   * @returns {array} displaySets\n   */\n  getDisplaySetsToPrefetch(displaySetInstanceUID) {\n    const image = this.getActiveViewportImage();\n\n    if (!image) {\n      return [];\n    }\n\n    const study = this.getStudy(image);\n    const series = this.getSeries(study, image);\n    const instance = this.getInstance(series, image);\n    const displaySets = study.displaySets;\n    const activeDisplaySet = displaySetInstanceUID\n      ? this.getDisplaySetByUID(displaySetInstanceUID)\n      : this.getDisplaySetBySOPInstanceUID(displaySets, instance);\n\n    const prefetchMethodMap = {\n      topdown: 'getFirstDisplaySets',\n      downward: 'getNextDisplaySets',\n      upward: 'getPreviousDisplaySets',\n      closest: 'getClosestDisplaySets',\n      all: 'getAllDisplaySets',\n    };\n\n    const prefetchOrder = this.options.order;\n    const methodName = prefetchMethodMap[prefetchOrder];\n    const getDisplaySets = this[methodName];\n\n    if (!getDisplaySets) {\n      if (prefetchOrder) {\n        log.warn(`Invalid prefetch order configuration (${prefetchOrder})`);\n      }\n\n      return [];\n    }\n\n    return getDisplaySets.call(\n      this,\n      displaySets,\n      activeDisplaySet,\n      this.options.displaySetCount,\n      this.options.includeActiveDisplaySet\n    );\n  }\n\n  /**\n   * Get all display sets.\n   *\n   * @param {array} displaySets\n   * @param {object} activeDisplaySet\n   * @param {number} displaySetCount\n   * @param {boolean} includeActiveDisplaySet\n   * @returns\n   */\n  getAllDisplaySets(\n    displaySets,\n    activeDisplaySet,\n    displaySetCount,\n    includeActiveDisplaySet\n  ) {\n    const length = displaySets.length;\n    const selectedDisplaySets = [];\n\n    for (let i = 0; i < length; i++) {\n      const displaySet = displaySets[i];\n      selectedDisplaySets.push(displaySet);\n    }\n\n    return selectedDisplaySets;\n  }\n\n  /**\n   * Get all display sets in order after the active display set.\n   *\n   * @param {array} displaySets\n   * @param {object} activeDisplaySet\n   * @param {number} displaySetCount\n   * @param {boolean} includeActiveDisplaySet\n   * @returns\n   */\n  getFirstDisplaySets(\n    displaySets,\n    activeDisplaySet,\n    displaySetCount,\n    includeActiveDisplaySet\n  ) {\n    const length = displaySets.length;\n    const selectedDisplaySets = [];\n\n    for (let i = 0; i < length && displaySetCount; i++) {\n      const displaySet = displaySets[i];\n\n      if (includeActiveDisplaySet || displaySet !== activeDisplaySet) {\n        selectedDisplaySets.push(displaySet);\n        displaySetCount--;\n      }\n    }\n\n    return selectedDisplaySets;\n  }\n\n  /**\n   * Get all display sets before the active display set.\n   *\n   * @param {array} displaySets\n   * @param {object} activeDisplaySet\n   * @param {number} displaySetCount\n   * @param {boolean} includeActiveDisplaySet\n   * @returns\n   */\n  getPreviousDisplaySets(\n    displaySets,\n    activeDisplaySet,\n    displaySetCount,\n    includeActiveDisplaySet\n  ) {\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\n    const end = includeActiveDisplaySet\n      ? activeDisplaySetIndex + 1\n      : activeDisplaySetIndex;\n    const previousDisplaySets = displaySets.slice(0, end);\n    return previousDisplaySets.reverse().slice(0, displaySetCount);\n  }\n\n  /**\n   * Get all display sets after the active display set.\n   *\n   * @param {array} displaySets\n   * @param {object} activeDisplaySet\n   * @param {number} displaySetCount\n   * @param {boolean} includeActiveDisplaySet\n   * @returns\n   */\n  getNextDisplaySets(\n    displaySets,\n    activeDisplaySet,\n    displaySetCount,\n    includeActiveDisplaySet\n  ) {\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\n    const begin = includeActiveDisplaySet\n      ? activeDisplaySetIndex\n      : activeDisplaySetIndex + 1;\n    const end = Math.min(begin + displaySetCount, displaySets.length);\n    return displaySets.slice(begin, end);\n  }\n\n  /**\n   * Get all display set closest to the active display set.\n   *\n   * @param {array} displaySets\n   * @param {object} activeDisplaySet\n   * @param {number} displaySetCount\n   * @param {boolean} includeActiveDisplaySet\n   * @returns\n   */\n  getClosestDisplaySets(\n    displaySets,\n    activeDisplaySet,\n    displaySetCount,\n    includeActiveDisplaySet\n  ) {\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\n    const length = displaySets.length;\n    const selectedDisplaySets = [];\n    let left = activeDisplaySetIndex - 1;\n    let right = activeDisplaySetIndex + 1;\n\n    if (includeActiveDisplaySet) {\n      selectedDisplaySets.push(displaySets[activeDisplaySetIndex]);\n      displaySetCount--;\n    }\n\n    while ((left >= 0 || right < length) && displaySetCount) {\n      if (left >= 0) {\n        selectedDisplaySets.push(displaySets[left]);\n        displaySetCount--;\n        left--;\n      }\n\n      if (right < length && displaySetCount) {\n        selectedDisplaySets.push(displaySets[right]);\n        displaySetCount--;\n        right++;\n      }\n    }\n\n    return selectedDisplaySets;\n  }\n\n  /**\n   * Get all image ids from display sets.\n   *\n   * @param {array} displaySets\n   * @returns {array} image ids\n   */\n  getImageIdsFromDisplaySets(displaySets) {\n    let imageIds = [];\n\n    displaySets.forEach(displaySet => {\n      imageIds = imageIds.concat(this.getImageIdsFromDisplaySet(displaySet));\n    });\n\n    return imageIds;\n  }\n\n  /**\n   * Get all image ids from a given display set.\n   *\n   * @param {array} displaySet\n   * @returns\n   */\n  getImageIdsFromDisplaySet(displaySet) {\n    const imageIds = [];\n\n    if (!displaySet.images || displaySet.images.length < 1) {\n      return [];\n    }\n\n    // TODO: This duplicates work done by the stack manager\n    displaySet.images.forEach(image => {\n      const numFrames = image.numFrames;\n      if (numFrames > 1) {\n        for (let i = 0; i < numFrames; i++) {\n          let imageId = getImageId(image, i);\n          imageIds.push(imageId);\n        }\n      } else {\n        let imageId = getImageId(image);\n        imageIds.push(imageId);\n      }\n    });\n\n    return imageIds;\n  }\n\n  /**\n   * Filter cached image ids from a set of image ids.\n   *\n   * @param {array} imageIds\n   * @returns {array} images not cached\n   */\n  filterCachedImageIds(imageIds) {\n    return imageIds.filter(imageId => !this.isImageCached(imageId));\n  }\n\n  /**\n   * Check if image id is cached in cornerstone.\n   *\n   * @param {string} imageId\n   * @returns\n   */\n  isImageCached(imageId) {\n    const image = cornerstone.imageCache.imageCache[imageId];\n    return image && image.sizeInBytes;\n  }\n\n  /**\n   * Warns that cache is full and stops prefetching.\n   */\n  cacheFullHandler = () => {\n    log.warn('Cache full');\n    this.stopPrefetching();\n  };\n}\n","import cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport debounce from 'lodash.debounce';\n\nimport StackManager from '../utils/StackManager';\nimport { StudyPrefetcher } from './StudyPrefetcher';\n\nclass BaseLoadingListener {\n  constructor(stack, options = {}) {\n    this.id = BaseLoadingListener.getNewId();\n    this.stack = stack;\n    this.statsItemsLimit = options.statsItemsLimit || 2;\n    this.stats = {\n      items: [],\n      total: 0,\n      elapsedTime: 0,\n      speed: 0,\n    };\n\n    this._setProgressData = options._setProgressData;\n    this._clearProgressById = options._clearProgressById;\n\n    // Register the start point to make it possible to calculate\n    // bytes/s or frames/s when the first byte or frame is received\n    this._addStatsData(0);\n\n    // Update the progress before starting the download\n    // to make it possible to update the UI\n    this._updateProgress();\n  }\n\n  _addStatsData(value) {\n    const date = new Date();\n    const stats = this.stats;\n    const items = stats.items;\n    const newItem = {\n      value,\n      date,\n    };\n\n    items.push(newItem);\n    stats.total += newItem.value;\n\n    // Remove items until it gets below the limit\n    while (items.length > this.statsItemsLimit) {\n      const item = items.shift();\n      stats.total -= item.value;\n    }\n\n    // Update the elapsedTime (seconds) based on first and last\n    // elements and recalculate the speed (bytes/s or frames/s)\n    if (items.length > 1) {\n      const oldestItem = items[0];\n      stats.elapsedTime =\n        (newItem.date.getTime() - oldestItem.date.getTime()) / 1000;\n      stats.speed = (stats.total - oldestItem.value) / stats.elapsedTime;\n    }\n  }\n\n  _getProgressId() {\n    /**\n     * TODO: The id key should be configurable.\n     */\n    const displaySetInstanceUID = this.stack.displaySetInstanceUID;\n    return 'StackProgress:' + displaySetInstanceUID;\n  }\n\n  _clearProgress() {\n    const progressId = this._getProgressId();\n    this._clearProgressById(progressId);\n  }\n\n  startListening() {\n    throw new Error('`startListening` must be implemented by child classes');\n  }\n\n  stopListening() {\n    throw new Error('`stopListening` must be implemented by child classes');\n  }\n\n  destroy() {\n    this.stopListening();\n    this._clearProgress();\n  }\n\n  static getNewId() {\n    const timeSlice = new Date()\n      .getTime()\n      .toString()\n      .slice(-8);\n    const randomNumber = parseInt(Math.random() * 1000000000);\n\n    return timeSlice.toString() + randomNumber.toString();\n  }\n}\n\nclass DICOMFileLoadingListener extends BaseLoadingListener {\n  constructor(stack, options) {\n    super(stack, options);\n\n    this.imageLoadProgressEventHandler = this._imageLoadProgressEventHandler.bind(\n      this\n    );\n\n    this._dataSetUrl = this._getDataSetUrl(stack);\n    this._lastLoaded = 0;\n\n    // Check how many instances has already been download (cached)\n    this._checkCachedData();\n\n    this.startListening();\n  }\n\n  _checkCachedData() {\n    const dataSet = cornerstoneWADOImageLoader.wadouri.dataSetCacheManager.get(\n      this._dataSetUrl\n    );\n\n    if (dataSet) {\n      const dataSetLength = dataSet.byteArray.length;\n\n      this._updateProgress({\n        percentComplete: 100,\n        loaded: dataSetLength,\n        total: dataSetLength,\n      });\n    }\n  }\n\n  _getImageLoadProgressEventName() {\n    // TODO: Add this event as a constant in Cornerstone\n    return 'cornerstoneimageloadprogress.' + this.id;\n  }\n\n  startListening() {\n    const imageLoadProgressEventName = this._getImageLoadProgressEventName();\n\n    this.stopListening();\n\n    cornerstone.events.addEventListener(\n      imageLoadProgressEventName,\n      this.imageLoadProgressEventHandle\n    );\n  }\n\n  stopListening() {\n    const imageLoadProgressEventName = this._getImageLoadProgressEventName();\n    cornerstone.events.removeEventListener(\n      imageLoadProgressEventName,\n      this.imageLoadProgressEventHandle\n    );\n  }\n\n  _imageLoadProgressEventHandler = e => {\n    const eventData = e.detail;\n    const dataSetUrl = this._convertImageIdToDataSetUrl(eventData.imageId);\n    const bytesDiff = eventData.loaded - this._lastLoaded;\n\n    if (!this._dataSetUrl === dataSetUrl) {\n      return;\n    }\n\n    // Add the bytes downloaded to the stats\n    this._addStatsData(bytesDiff);\n\n    // Update the download progress\n    this._updateProgress(eventData);\n\n    // Cache the last eventData.loaded value\n    this._lastLoaded = eventData.loaded;\n  };\n\n  _updateProgress(eventData) {\n    const progressId = this._getProgressId();\n    eventData = eventData || {};\n\n    const progressData = {\n      multiFrame: false,\n      percentComplete: eventData.percentComplete,\n      bytesLoaded: eventData.loaded,\n      bytesTotal: eventData.total,\n      bytesPerSecond: this.stats.speed,\n    };\n\n    this._setProgressData(progressId, progressData);\n  }\n\n  _convertImageIdToDataSetUrl(imageId) {\n    // Remove the prefix (\"dicomweb:\" or \"wadouri:\"\")\n    imageId = imageId.replace(/^(dicomweb:|wadouri:)/i, '');\n\n    // Remove \"frame=999&\" from the imageId\n    imageId = imageId.replace(/frame=\\d+&?/i, '');\n\n    // Remove the last \"&\" like in \"http://...?foo=1&bar=2&\"\n    imageId = imageId.replace(/&$/, '');\n\n    return imageId;\n  }\n\n  _getDataSetUrl(stack) {\n    const imageId = stack.imageIds[0];\n    return this._convertImageIdToDataSetUrl(imageId);\n  }\n}\n\nconst StudyLoadingListenerEvents = {\n  OnProgress: 'StudyLoadingListenerEvents.OnProgress',\n};\n\nfunction promiseState(promise, callback) {\n  // Symbols and RegExps are never content-equal\n  var uniqueValue = window['Symbol'] ? Symbol('unique') : /unique/;\n\n  function notifyPendingOrResolved(value) {\n    if (value === uniqueValue) {\n      return callback('pending');\n    } else {\n      return callback('fulfilled');\n    }\n  }\n\n  function notifyRejected(reason) {\n    return callback('rejected');\n  }\n\n  var race = [promise, Promise.resolve(uniqueValue)];\n  Promise.race(race).then(notifyPendingOrResolved, notifyRejected);\n}\n\nclass StackLoadingListener extends BaseLoadingListener {\n  constructor(stack, options = {}) {\n    options.statsItemsLimit = 20;\n\n    super(stack, options);\n\n    this.imageLoadedEventHandler = this._imageLoadedEventHandler.bind(this);\n    this.imageCachePromiseRemovedEventHandler = this._imageCachePromiseRemovedEventHandler.bind(\n      this\n    );\n\n    this.imageDataMap = this._convertImageIdsArrayToMap(stack.imageIds);\n    this.framesStatus = this._createArray(stack.imageIds.length, false);\n    this.loadedCount = 0;\n\n    // Check how many instances has already been download (cached)\n    this._debouncedSetProgressData = debounce((...args) => {\n      this._setProgressData(...args);\n\n      /** After checking cache, continue prefetch */\n      const studyPrefetcher = StudyPrefetcher.getInstance();\n      studyPrefetcher.prefetch(studyPrefetcher.getElement());\n    }, 300);\n    const debounced = true;\n    this._checkCachedData(debounced);\n\n    this.startListening();\n  }\n\n  _convertImageIdsArrayToMap(imageIds) {\n    const imageIdsMap = new Map();\n\n    for (let i = 0; i < imageIds.length; i++) {\n      imageIdsMap.set(imageIds[i], {\n        index: i,\n        loaded: false,\n      });\n    }\n\n    return imageIdsMap;\n  }\n\n  _createArray(length, defaultValue) {\n    // `new Array(length)` is an anti-pattern in javascript because its\n    // funny API. Otherwise I would go for `new Array(length).fill(false)`\n    const array = [];\n\n    for (let i = 0; i < length; i++) {\n      array[i] = defaultValue;\n    }\n\n    return array;\n  }\n\n  /**\n   * Check if image id is cached in cornerstone.\n   *\n   * @param {string} imageId\n   * @returns\n   */\n  isImageCached(imageId) {\n    const image = cornerstone.imageCache.imageCache[imageId];\n    return image && image.sizeInBytes;\n  }\n\n  _checkCachedData(debounced = false) {\n    const imageIds = this.stack.imageIds;\n\n    for (let i = 0; i < imageIds.length; i++) {\n      const imageId = imageIds[i];\n\n      const imageObject = cornerstone.imageCache.getImageLoadObject(imageId);\n\n      if (this.isImageCached(imageId)) {\n        this._updateFrameStatus(imageId, true, debounced);\n      }\n\n      if (imageObject && imageObject.promise) {\n        promiseState(imageObject.promise, state => {\n          if (state === 'fulfilled') {\n            this._updateFrameStatus(imageId, true, debounced);\n          }\n        });\n      }\n    }\n  }\n\n  _getImageLoadedEventName() {\n    return `${cornerstone.EVENTS.IMAGE_LOADED}.${this.id}`;\n  }\n\n  _getImageCachePromiseRemoveEventName() {\n    return `${cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED}.${this.id}`;\n  }\n\n  _imageLoadedEventHandler(e) {\n    this._updateFrameStatus(e.detail.image.imageId, true);\n  }\n\n  _imageCachePromiseRemovedEventHandler(e) {\n    this._updateFrameStatus(e.detail.imageId, false);\n  }\n\n  startListening() {\n    const imageLoadedEventName = this._getImageLoadedEventName();\n    const imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();\n\n    this.stopListening();\n\n    cornerstone.events.addEventListener(\n      imageLoadedEventName,\n      this.imageLoadedEventHandler\n    );\n    cornerstone.events.addEventListener(\n      imageCachePromiseRemovedEventName,\n      this.imageCachePromiseRemovedEventHandler\n    );\n  }\n\n  stopListening() {\n    const imageLoadedEventName = this._getImageLoadedEventName();\n    const imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();\n\n    cornerstone.events.removeEventListener(\n      imageLoadedEventName,\n      this.imageLoadedEventHandler\n    );\n    cornerstone.events.removeEventListener(\n      imageCachePromiseRemovedEventName,\n      this.imageCachePromiseRemovedEventHandler\n    );\n  }\n\n  _updateFrameStatus(imageId, loaded, debounced) {\n    const imageData = this.imageDataMap.get(imageId);\n\n    if (!imageData || imageData.loaded === loaded) {\n      return;\n    }\n\n    // Add one more frame to the stats\n    if (loaded) {\n      this._addStatsData(1);\n    }\n\n    imageData.loaded = loaded;\n    this.framesStatus[imageData.index] = loaded;\n    this.loadedCount += loaded ? 1 : -1;\n    this._updateProgress(debounced);\n  }\n\n  _setProgressData(progressId, progressData) {\n    // TODO: This method (and _clearProgressById) need to access\n    // the Redux store and should therefore be provided from the\n    // application. I've added a workaround to pass this in through\n    // the 'options' variable on instantiation, but this is really ugly.\n    // We could consider making the StudyLoadingListener a higher-order\n    // component which would set this stuff itself.\n    throw new Error(\n      \"The _setProgressData function must be provided in StudyLoadingListener's options\"\n    );\n  }\n\n  _clearProgressById(progressId) {\n    throw new Error(\n      \"The _clearProgressById function must be provided in StudyLoadingListener's options\"\n    );\n  }\n\n  _updateProgress(debounced) {\n    const totalFramesCount = this.stack.imageIds.length;\n    const loadedFramesCount = this.loadedCount;\n    const loadingFramesCount = totalFramesCount - loadedFramesCount;\n    const percentComplete = Math.ceil(\n      (loadedFramesCount / totalFramesCount) * 100\n    );\n    const progressId = this._getProgressId();\n    const progressData = {\n      multiFrame: true,\n      totalFramesCount,\n      loadedFramesCount,\n      loadingFramesCount,\n      percentComplete,\n      framesPerSecond: this.stats.speed,\n      framesStatus: this.framesStatus,\n    };\n\n    if (debounced) {\n      this._debouncedSetProgressData(progressId, progressData);\n      return;\n    }\n\n    this._setProgressData(progressId, progressData);\n  }\n\n  _logProgress() {\n    const totalFramesCount = this.stack.imageIds.length;\n    const displaySetInstanceUID = this.stack.displaySetInstanceUID;\n    let progressBar = '[';\n\n    for (let i = 0; i < totalFramesCount; i++) {\n      const ch = this.framesStatus[i] ? '|' : '.';\n      progressBar += `${ch}`;\n    }\n\n    progressBar += ']';\n    console.info(`${displaySetInstanceUID}: ${progressBar}`);\n  }\n}\n\nclass StudyLoadingListener {\n  static events = StudyLoadingListenerEvents;\n\n  constructor(options) {\n    this.listeners = {};\n    this.options = options;\n  }\n\n  addStack(stack, stackMetaData) {\n    // TODO: Make this work for plugins\n    if (!stack) {\n      //console.log('Skipping adding stack to StudyLoadingListener');\n      return;\n    }\n\n    const displaySetInstanceUID = stack.displaySetInstanceUID;\n\n    if (!this.listeners[displaySetInstanceUID]) {\n      const listener = this._createListener(stack, stackMetaData);\n      if (listener) {\n        this.listeners[displaySetInstanceUID] = listener;\n      }\n    }\n  }\n\n  addStudy(study) {\n    study.displaySets.forEach(displaySet => {\n      const stack = StackManager.findOrCreateStack(study, displaySet);\n\n      // TODO: Make this work for plugins\n      if (!stack) {\n        console.warn('Skipping adding displaySet to StudyLoadingListener');\n        console.warn(displaySet);\n        return;\n      }\n\n      this.addStack(stack, {\n        isMultiFrame: displaySet.isMultiFrame,\n      });\n    });\n  }\n\n  addStudies(studies) {\n    if (!studies || !studies.length) {\n      return;\n    }\n\n    studies.forEach(study => this.addStudy(study));\n  }\n\n  clear() {\n    const displaySetInstanceUIDs = Object.keys(this.listeners);\n    const length = displaySetInstanceUIDs.length;\n\n    for (let i = 0; i < length; i++) {\n      const displaySetInstanceUID = displaySetInstanceUIDs[i];\n      const displaySet = this.listeners[displaySetInstanceUID];\n\n      displaySet.destroy();\n    }\n\n    this.listeners = {};\n  }\n\n  _createListener(stack, stackMetaData) {\n    const schema = this._getSchema(stack);\n\n    // A StackLoadingListener can be created if it's wadors or not a multiframe\n    // wadouri instance (single file) that means \"N\" files will have to be\n    // downloaded where \"N\" is the number of frames. DICOMFileLoadingListener\n    // is created only if it's a single DICOM file and there's no way to know\n    // how many frames has already been loaded (bytes/s instead of frames/s).\n    if (schema === 'wadors' || !stackMetaData.isMultiFrame) {\n      return new StackLoadingListener(stack, this.options);\n    } else {\n      return new DICOMFileLoadingListener(stack, this.options);\n    }\n  }\n\n  _getSchema(stack) {\n    const imageId = stack.imageIds[0];\n    if (!imageId) {\n      return;\n    }\n    const colonIndex = imageId.indexOf(':');\n    return imageId.substring(0, colonIndex);\n  }\n\n  static getInstance(options) {\n    /**\n     * TODO: Use a different alternative without the use of events.\n     */\n    const DEFAULT_OPTIONS = {\n      _setProgressData: (progressId, progressData) => {\n        const event = new CustomEvent(StudyLoadingListenerEvents.OnProgress, {\n          detail: { progressId, progressData },\n        });\n        document.dispatchEvent(event);\n      },\n      _clearProgressById: progressId => {\n        const event = new CustomEvent(StudyLoadingListenerEvents.OnProgress, {\n          detail: { progressId, percentComplete: 0 },\n        });\n        document.dispatchEvent(event);\n      },\n    };\n\n    if (!StudyLoadingListener._instance) {\n      StudyLoadingListener._instance = new StudyLoadingListener(\n        options || DEFAULT_OPTIONS\n      );\n    }\n\n    return StudyLoadingListener._instance;\n  }\n}\n\nexport { StudyLoadingListener, StackLoadingListener, DICOMFileLoadingListener };\n","const _subscriptions = Symbol('subscriptions');\nconst _lastSubscriptionId = Symbol('lastSubscriptionId');\n\n/**\n * Class to implement publish/subscribe pattern\n *\n * @class\n * @classdesc Pub/sub mechanism\n */\nexport default class PubSub {\n  constructor() {\n    this[_subscriptions] = {};\n    this[_lastSubscriptionId] = 0;\n  }\n\n  /**\n   * Subscribe to event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} callback Callback function\n   * @returns {void}\n   */\n  subscribe(eventName, callback) {\n    if (eventName === undefined) {\n      throw new Error('Event name is required');\n    }\n\n    if (typeof callback !== 'function') {\n      throw new Error('Callback must be a function');\n    }\n\n    if (!this[_subscriptions].hasOwnProperty(eventName)) {\n      this[_subscriptions][eventName] = {};\n    }\n\n    const subscriptionId = `sub${this[_lastSubscriptionId]++}`;\n    this[_subscriptions][eventName][subscriptionId] = callback;\n  }\n\n  /**\n   * Removes a subscription\n   *\n   * @param {string} eventName Event name\n   * @param {Function} [callback] Callback function\n   * @returns {void}\n   */\n  unsubscribe(eventName, callback) {\n    const callbacks = this[_subscriptions][eventName] || {};\n    for (let subscriptionId in callbacks) {\n      if (!callback) {\n        delete callbacks[subscriptionId];\n      } else if (callbacks[subscriptionId] === callback) {\n        delete callbacks[subscriptionId];\n      }\n    }\n  }\n\n  /**\n   * Publish event to all subscriptions\n   *\n   * @param {String} eventName Event name\n   * @param {any} [payload] Data that will be published\n   * @returns {void}\n   */\n  publish(eventName, ...payload) {\n    if (eventName === undefined) {\n      throw new Error('Event name is required');\n    }\n\n    const callbacks = this[_subscriptions][eventName] || {};\n    for (let subscriptionId in callbacks) {\n      callbacks[subscriptionId](...payload);\n    }\n  }\n}\n","import PubSub from './PubSub';\n\n/** Log Events */\nexport const LogEvents = Object.freeze({\n  OnLog: 'onLog',\n});\n\n/**\n * Log manager that implements pub/sub.\n * This manager can be used to send logs across different packages\n * using previously registered events.\n */\nclass LogManager extends PubSub {\n  EVENTS = LogEvents;\n}\n\n/** Singleton */\nexport default new LogManager();\n","import { studyMetadataManager } from '../utils';\n\nimport OHIFError from './OHIFError';\nimport { StudyMetadata } from './metadata/StudyMetadata';\nimport { StudyMetadataSource } from './StudyMetadataSource.js';\nimport { retrieveStudyMetadata } from '../studies/retrieveStudyMetadata.js';\n\nexport class OHIFStudyMetadataSource extends StudyMetadataSource {\n  /**\n   * Get study metadata for a study with given study InstanceUID\n   * @param server\n   * @param  {String} studyInstanceUID Study InstanceUID\n   * @return {Promise} A Promise object\n   */\n  getByInstanceUID(server, studyInstanceUID) {\n    return retrieveStudyMetadata(server, studyInstanceUID);\n  }\n\n  /**\n   * Load study info (OHIF.viewer.Studies) and study metadata (OHIF.viewer.StudyMetadataList) for a given study.\n   * @param {StudyMetadata} study StudyMetadata object.\n   */\n  loadStudy(study) {\n    if (!(study instanceof StudyMetadata)) {\n      throw new OHIFError(\n        'OHIFStudyMetadataSource::loadStudy study is not an instance of StudyMetadata'\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      const studyInstanceUID = study.getStudyInstanceUID();\n\n      if (study instanceof StudyMetadata) {\n        const alreadyLoaded = OHIF.viewer.Studies.findBy({\n          StudyInstanceUID: studyInstanceUID,\n        });\n\n        if (!alreadyLoaded) {\n          OHIFStudyMetadataSource._updateStudyCollections(study);\n        }\n\n        resolve(study);\n        return;\n      }\n\n      this.getByInstanceUID(studyInstanceUID)\n        .then(studyInfo => {\n          // Create study metadata object\n          const studyMetadata = new StudyMetadata(\n            studyInfo,\n            studyInfo.StudyInstanceUID\n          );\n\n          // Get Study display sets\n          const displaySets = studyMetadata.createDisplaySets();\n\n          OHIFStudyMetadataSource._updateStudyCollections(studyMetadata);\n          resolve(studyMetadata);\n        })\n        .catch(reject);\n    });\n  }\n\n  // Static methods\n  static _updateStudyCollections(studyMetadata) {\n    const studyInfo = studyMetadata.getData();\n\n    // Set some studyInfo properties\n    studyInfo.selected = true;\n    studyInfo.displaySets = studyMetadata.getDisplaySets();\n    studyMetadataManager.add(studyMetadata);\n  }\n}\n","import { InstanceMetadata, SeriesMetadata, StudyMetadata } from './metadata';\n\nimport CommandsManager from './CommandsManager.js';\nimport { DICOMFileLoadingListener } from './StudyLoadingListener';\nimport HotkeysManager from './HotkeysManager.js';\nimport ImageSet from './ImageSet';\nimport LogManager from './LogManager';\nimport PubSub from './PubSub';\nimport MetadataProvider from './MetadataProvider';\nimport OHIFError from './OHIFError.js';\nimport { OHIFStudyMetadataSource } from './OHIFStudyMetadataSource';\nimport { StackLoadingListener } from './StudyLoadingListener';\nimport { StudyLoadingListener } from './StudyLoadingListener';\nimport { StudyMetadataSource } from './StudyMetadataSource';\nimport { StudyPrefetcher } from './StudyPrefetcher';\nimport { TypeSafeCollection } from './TypeSafeCollection';\n\nexport {\n  OHIFStudyMetadataSource,\n  MetadataProvider,\n  CommandsManager,\n  HotkeysManager,\n  ImageSet,\n  StudyPrefetcher,\n  StudyLoadingListener,\n  StackLoadingListener,\n  DICOMFileLoadingListener,\n  StudyMetadata,\n  SeriesMetadata,\n  InstanceMetadata,\n  TypeSafeCollection,\n  OHIFError,\n  StudyMetadataSource,\n};\n\nconst classes = {\n  OHIFStudyMetadataSource,\n  MetadataProvider,\n  CommandsManager,\n  HotkeysManager,\n  LogManager,\n  ImageSet,\n  PubSub,\n  StudyPrefetcher,\n  StudyLoadingListener,\n  StackLoadingListener,\n  DICOMFileLoadingListener,\n  StudyMetadata,\n  SeriesMetadata,\n  InstanceMetadata,\n  TypeSafeCollection,\n  OHIFError,\n  StudyMetadataSource,\n};\n\nexport default classes;\n","import { sopClassDictionary } from './sopClassDictionary';\n\nconst imagesTypes = [\n  sopClassDictionary.ComputedRadiographyImageStorage,\n  sopClassDictionary.DigitalXRayImageStorageForPresentation,\n  sopClassDictionary.DigitalXRayImageStorageForProcessing,\n  sopClassDictionary.DigitalMammographyXRayImageStorageForPresentation,\n  sopClassDictionary.DigitalMammographyXRayImageStorageForProcessing,\n  sopClassDictionary.DigitalIntraOralXRayImageStorageForPresentation,\n  sopClassDictionary.DigitalIntraOralXRayImageStorageForProcessing,\n  sopClassDictionary.CTImageStorage,\n  sopClassDictionary.EnhancedCTImageStorage,\n  sopClassDictionary.LegacyConvertedEnhancedCTImageStorage,\n  sopClassDictionary.UltrasoundMultiframeImageStorage,\n  sopClassDictionary.MRImageStorage,\n  sopClassDictionary.EnhancedMRImageStorage,\n  sopClassDictionary.EnhancedMRColorImageStorage,\n  sopClassDictionary.LegacyConvertedEnhancedMRImageStorage,\n  sopClassDictionary.UltrasoundImageStorage,\n  sopClassDictionary.SecondaryCaptureImageStorage,\n  sopClassDictionary.MultiframeSingleBitSecondaryCaptureImageStorage,\n  sopClassDictionary.MultiframeGrayscaleByteSecondaryCaptureImageStorage,\n  sopClassDictionary.MultiframeGrayscaleWordSecondaryCaptureImageStorage,\n  sopClassDictionary.MultiframeTrueColorSecondaryCaptureImageStorage,\n  sopClassDictionary.XRayAngiographicImageStorage,\n  sopClassDictionary.EnhancedXAImageStorage,\n  sopClassDictionary.XRayRadiofluoroscopicImageStorage,\n  sopClassDictionary.EnhancedXRFImageStorage,\n  sopClassDictionary.XRay3DAngiographicImageStorage,\n  sopClassDictionary.XRay3DCraniofacialImageStorage,\n  sopClassDictionary.BreastTomosynthesisImageStorage,\n  sopClassDictionary.BreastProjectionXRayImageStorageForPresentation,\n  sopClassDictionary.BreastProjectionXRayImageStorageForProcessing,\n  sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForPresentation,\n  sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForProcessing,\n  sopClassDictionary.NuclearMedicineImageStorage,\n  sopClassDictionary.VLEndoscopicImageStorage,\n  sopClassDictionary.VideoEndoscopicImageStorage,\n  sopClassDictionary.VLMicroscopicImageStorage,\n  sopClassDictionary.VideoMicroscopicImageStorage,\n  sopClassDictionary.VLSlideCoordinatesMicroscopicImageStorage,\n  sopClassDictionary.VLPhotographicImageStorage,\n  sopClassDictionary.VideoPhotographicImageStorage,\n  sopClassDictionary.OphthalmicPhotography8BitImageStorage,\n  sopClassDictionary.OphthalmicPhotography16BitImageStorage,\n  sopClassDictionary.OphthalmicTomographyImageStorage,\n  sopClassDictionary.VLWholeSlideMicroscopyImageStorage,\n  sopClassDictionary.PositronEmissionTomographyImageStorage,\n  sopClassDictionary.EnhancedPETImageStorage,\n  sopClassDictionary.LegacyConvertedEnhancedPETImageStorage,\n  sopClassDictionary.RTImageStorage,\n];\n\n/**\n * Checks whether dicom files with specified SOP Class UID have image data\n * @param {string} SOPClassUID - SOP Class UID to be checked\n * @returns {boolean} - true if it has image data\n */\nexport const isImage = SOPClassUID => {\n  if (!SOPClassUID) return false;\n  return imagesTypes.indexOf(SOPClassUID) !== -1;\n};\n","import { asyncComponent, retryImport } from '@ohif/ui';\nimport OHIF from '@ohif/core';\nconst { urlUtil: UrlUtil } = OHIF.utils;\n\nconst IHEInvokeImageDisplay = asyncComponent(() =>\n  retryImport(() => import('./IHEInvokeImageDisplay.js'))\n);\n\nconst UploadModel = asyncComponent(() =>\n  retryImport(() => import('../components/AddAlgorithm.js'))\n);\n\nconst ModelList = asyncComponent(() =>\n  retryImport(() => import('../modelList/ModelListRouting.js'))\n);\n\nconst Editor = asyncComponent(() =>\n  retryImport(() => import('../editor/Editor.js'))\n);\n\nconst ViewerRouting = asyncComponent(() =>\n  retryImport(() => import('./ViewerRouting.js'))\n);\n\nconst StudyListRouting = asyncComponent(() =>\n  retryImport(() => import('../studylist/StudyListRouting.js'))\n);\nconst StandaloneRouting = asyncComponent(() =>\n  retryImport(() =>\n    import('../connectedComponents/ConnectedStandaloneRouting.js')\n  )\n);\nconst ViewerLocalFileData = asyncComponent(() =>\n  retryImport(() => import('../connectedComponents/ViewerLocalFileData.js'))\n);\n\nconst Superuser = asyncComponent(() =>\n  retryImport(() => import('../../../auth/src/containers/Superuser.js'))\n);\n\nconst TwoFA = asyncComponent(() =>\n  retryImport(() => import('../../../auth/src/containers/TwoFA.js'))\n);\n\nconst View_groups = asyncComponent(() =>\n  retryImport(() => import('../../../auth/src/containers/View_groups.js'))\n);\n\nconst Group_details = asyncComponent(() =>\n  retryImport(() => import('../../../auth/src/containers/Group_details.js'))\n);\n\nconst View_studies = asyncComponent(() =>\n  retryImport(() => import('../../../auth/src/containers/View_studies.js'))\n);\n\nconst View_models = asyncComponent(() =>\n  retryImport(() => import('../../../auth/src/containers/View_models.js'))\n);\n\nconst Add_permissions = asyncComponent(() =>\n  retryImport(() => import('../../../auth/src/containers/Add_permissions.js'))\n);\n\nconst Add_models = asyncComponent(() =>\n  retryImport(() => import('../../../auth/src/containers/Add_models.js'))\n);\n\nconst Add_or_Remove_studies = asyncComponent(() =>\n  retryImport(() =>\n    import('../../../auth/src/containers/Add_or_Remove_studies.js')\n  )\n);\n\nconst Remove_permissions = asyncComponent(() =>\n  retryImport(() =>\n    import('../../../auth/src/containers/Remove_permissions.js')\n  )\n);\n\nconst NewGroup = asyncComponent(() =>\n  retryImport(() => import('../../../auth/src/containers/Add_group.js'))\n);\n\nconst Add_elements = asyncComponent(() =>\n  retryImport(() => import('../../../auth/src/containers/Add_elements.js'))\n);\n\nconst Verify_Secret = asyncComponent(() =>\n  retryImport(() => import('../../../auth/src/containers/Verify_Secret.js'))\n);\n\nconst reload = () => window.location.reload();\n\nconst ROUTES_DEF = {\n  default: {\n    superuser: {\n      path: '/superuser',\n      component: Superuser,\n    },\n    verifySecret: {\n      path: '/verify_secret',\n      component: Verify_Secret,\n    },\n    groupDetails: {\n      path: '/group_details/:name/:userName',\n      component: Group_details,\n    },\n    removePermissions: {\n      path: '/remove_permissions/:name/:user',\n      component: Remove_permissions,\n    },\n    addGroup: {\n      path: '/add_group',\n      component: NewGroup,\n    },\n    addElements: {\n      path: '/add_elements/:name',\n      component: Add_elements,\n    },\n    addModels: {\n      path: '/add_models/:name',\n      component: Add_models,\n    },\n    addRemoveStudies: {\n      path: '/add_remove_studies/:name',\n      component: Add_or_Remove_studies,\n    },\n    addPermissions: {\n      path: '/add_permissions/:name/:user',\n      component: Add_permissions,\n    },\n    viewModels: {\n      path: '/view_models/:name',\n      component: View_models,\n    },\n    viewStudies: {\n      path: '/view_studies/:name',\n      component: View_studies,\n    },\n    viewGroups: {\n      path: '/view_groups',\n      component: View_groups,\n    },\n    twoFa: {\n      path: '/twoFA',\n      component: TwoFA,\n    },\n    viewer: {\n      path: '/viewer/:studyInstanceUIDs',\n      component: ViewerRouting,\n    },\n    standaloneViewer: {\n      path: '/viewer',\n      component: StandaloneRouting,\n    },\n    upload: {\n      path: '/model',\n      component: UploadModel,\n    },\n    modelList: {\n      path: '/modelList',\n      component: ModelList,\n    },\n    editor: {\n      path: '/editor',\n      component: Editor,\n    },\n    list: {\n      path: '/studylist',\n      component: StudyListRouting,\n    },\n    local: {\n      path: '/local',\n      component: ViewerLocalFileData,\n    },\n    IHEInvokeImageDisplay: {\n      path: '/IHEInvokeImageDisplay',\n      component: IHEInvokeImageDisplay,\n    },\n  },\n};\n\nconst getRoutes = appConfig => {\n  const routes = [];\n  for (let keyConfig in ROUTES_DEF) {\n    const routesConfig = ROUTES_DEF[keyConfig];\n\n    for (let routeKey in routesConfig) {\n      const route = routesConfig[routeKey];\n      const validRoute =\n        typeof route.condition === 'function'\n          ? route.condition(appConfig)\n          : true;\n\n      if (validRoute) {\n        routes.push({\n          path: route.path,\n          Component: route.component,\n        });\n      }\n    }\n  }\n\n  return routes;\n};\n\nconst parsePath = (path, server, params) => {\n  let _path = path;\n  const _paramsCopy = Object.assign({}, server, params);\n\n  for (let key in _paramsCopy) {\n    _path = UrlUtil.paramString.replaceParam(_path, key, _paramsCopy[key]);\n  }\n\n  return _path;\n};\n\nconst parseViewerPath = (appConfig = {}, server = {}, params) => {\n  let viewerPath = ROUTES_DEF.default.viewer.path;\n  if (appConfig.enableGoogleCloudAdapter) {\n    viewerPath = ROUTES_DEF.gcloud.viewer.path;\n  }\n\n  return parsePath(viewerPath, server, params);\n};\n\nconst parseStudyListPath = (appConfig = {}, server = {}, params) => {\n  let studyListPath = ROUTES_DEF.default.list.path;\n  if (appConfig.enableGoogleCloudAdapter) {\n    studyListPath = ROUTES_DEF.gcloud.list.path || studyListPath;\n  }\n\n  return parsePath(studyListPath, server, params);\n};\n\nexport { getRoutes, parseViewerPath, parseStudyListPath, reload };\n","import getAttribute from './getAttribute.js';\nimport getAuthorizationHeader from './getAuthorizationHeader.js';\nimport getModalities from './getModalities.js';\nimport getName from './getName.js';\nimport getNumber from './getNumber.js';\nimport getString from './getString.js';\n\nconst DICOMWeb = {\n  getAttribute,\n  getAuthorizationHeader,\n  getModalities,\n  getName,\n  getNumber,\n  getString,\n};\n\nexport default DICOMWeb;\n","/**\n * Returns the specified element as a dicom attribute group/element.\n *\n * @param element - The group/element of the element (e.g. '00280009')\n * @param [defaultValue] - The value to return if the element is not present\n * @returns {*}\n */\nexport default function getAttribute(element, defaultValue) {\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // Sanity check to make sure we have at least one entry in the array.\n  if (!element.Value.length) {\n    return defaultValue;\n  }\n\n  return convertToInt(element.Value);\n}\n\nfunction convertToInt(input) {\n  function padFour(input) {\n    const l = input.length;\n\n    if (l == 0) return '0000';\n    if (l == 1) return '000' + input;\n    if (l == 2) return '00' + input;\n    if (l == 3) return '0' + input;\n\n    return input;\n  }\n\n  let output = '';\n  for (let i = 0; i < input.length; i++) {\n    for (let j = 0; j < input[i].length; j++) {\n      output += padFour(input[i].charCodeAt(j).toString(16));\n    }\n  }\n\n  return parseInt(output, 16);\n}\n","import user from '../user';\n\n/**\n * Returns the Authorization header as part of an Object.\n *\n * @export\n * @param {Object} [server={}]\n * @param {Object} [server.requestOptions]\n * @param {string|function} [server.requestOptions.auth]\n * @returns {Object} { Authorization }\n */\nexport default function getAuthorizationHeader({ requestOptions } = {}) {\n  const headers = {};\n  const username=\"orthanc\";\n  const password=\"orthanc\";\n  /*\n  // Check for OHIF.user since this can also be run on the server\n  const accessToken = user && user.getAccessToken && user.getAccessToken();\n\n  // Auth for a specific server\n  if (requestOptions && requestOptions.auth) {\n    if (typeof requestOptions.auth === 'function') {\n      // Custom Auth Header\n      headers.Authorization = requestOptions.auth(requestOptions);\n    } else {\n      // HTTP Basic Auth (user:password)\n      headers.Authorization = `Basic ${btoa(requestOptions.auth)}`;\n    }\n  }\n  // Auth for the user's default\n  else if (accessToken) {\n    headers.Authorization = `Bearer ${accessToken}`;\n  }\n  */\n  headers.Authorization = \"Basic \" + btoa(username + \":\" + password);\n  return headers;\n}\n","export default function getModalities(Modality, ModalitiesInStudy) {\n  if (!Modality && !ModalitiesInStudy) {\n    return {};\n  }\n\n  const modalities = Modality || {\n    vr: 'CS',\n    Value: [],\n  };\n\n  if (ModalitiesInStudy) {\n    if (modalities.vr && modalities.vr === ModalitiesInStudy.vr) {\n      for (let i = 0; i < ModalitiesInStudy.Value.length; i++) {\n        const value = ModalitiesInStudy.Value[i];\n        if (modalities.Value.indexOf(value) === -1) {\n          modalities.Value.push(value);\n        }\n      }\n    } else {\n      return ModalitiesInStudy;\n    }\n  }\n\n  return modalities;\n}\n","/**\n * Returns the Alphabetic version of a PN\n *\n * @param element - The group/element of the element (e.g. '00200013')\n * @param [defaultValue] - The default value to return if the element is not found\n * @returns {*}\n */\nexport default function getName(element, defaultValue) {\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // Sanity check to make sure we have at least one entry in the array.\n  if (!element.Value.length) {\n    return defaultValue;\n  }\n  // Return the Alphabetic component group\n  if (element.Value[0].Alphabetic) {\n    return element.Value[0].Alphabetic;\n  }\n  // Orthanc does not return PN properly so this is a temporary workaround\n  return element.Value[0];\n}\n","/**\n * Returns the first string value as a Javascript Number\n * @param element - The group/element of the element (e.g. '00200013')\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nexport default function getNumber(element, defaultValue) {\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // Sanity check to make sure we have at least one entry in the array.\n  if (!element.Value.length) {\n    return defaultValue;\n  }\n\n  return parseFloat(element.Value[0]);\n}\n","/**\n * Returns the specified element as a string.  Multi-valued elements will be separated by a backslash\n *\n * @param element - The group/element of the element (e.g. '00200013')\n * @param [defaultValue] - The value to return if the element is not present\n * @returns {*}\n */\nexport default function getString(element, defaultValue) {\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // Sanity check to make sure we have at least one entry in the array.\n  if (!element.Value.length) {\n    return defaultValue;\n  }\n  // Join the array together separated by backslash\n  // NOTE: Orthanc does not correctly split values into an array so the join is a no-op\n  return element.Value.join('\\\\');\n}\n","const LOW_PRIORITY_MODALITIES = Object.freeze([\n  'SEG',\n  'DOC',\n  'RTSTRUCT',\n  'SR',\n  'KO',\n  'PR',\n]);\n\nexport default function isLowPriorityModality(Modality) {\n  return LOW_PRIORITY_MODALITIES.includes(Modality);\n}\n","import validate from 'validate.js';\n\nvalidate.validators.equals = function(value, options, key, attributes) {\n  if (options && value !== options.value) {\n    return key + 'must equal ' + options.value;\n  }\n};\n\nvalidate.validators.doesNotEqual = function(value, options, key) {\n  if (options && value === options.value) {\n    return key + 'cannot equal ' + options.value;\n  }\n};\n\nvalidate.validators.contains = function(value, options, key) {\n  if (options && value.indexOf && value.indexOf(options.value) === -1) {\n    return key + 'must contain ' + options.value;\n  }\n};\n\nvalidate.validators.doesNotContain = function(value, options, key) {\n  if (options && value.indexOf && value.indexOf(options.value) !== -1) {\n    return key + 'cannot contain ' + options.value;\n  }\n};\n\nvalidate.validators.startsWith = function(value, options, key) {\n  if (options && value.startsWith && !value.startsWith(options.value)) {\n    return key + 'must start with ' + options.value;\n  }\n};\n\nvalidate.validators.endsWith = function(value, options, key) {\n  if (options && value.endsWith && !value.endsWith(options.value)) {\n    return key + 'must end with ' + options.value;\n  }\n};\n\nexport { validate };\n","// Define an empty object to store callbacks that are used to retrieve custom attributes\n// The simplest example for a custom attribute is the Timepoint type (i.e. baseline or follow-up)\n// used in the LesionTracker application.\n//\n// Timepoint type can be obtained given a studyId, and this is done through a custom callback.\n// Developers can define attributes (i.e. attributeId = timepointType) with a name ('Timepoint Type')\n// and a callback function that is used to calculate them.\n//\n// The input to the callback, which is called during viewport-image matching rule evaluation\n// is the set of attributes that contains the specified attribute. In our example, timepointType is\n// linked to the study attributes, and so the inputs to the callback is an object containing\n// the study attributes.\nconst CustomAttributeRetrievalCallbacks = {};\n\n/**\n * Adds a custom attribute to be used in the HangingProtocol UI and matching rules, including a\n * callback that will be used to calculate the attribute value.\n *\n * @param attributeId The ID used to refer to the attribute (e.g. 'timepointType')\n * @param attributeName The name of the attribute to be displayed (e.g. 'Timepoint Type')\n * @param callback The function used to calculate the attribute value from the other attributes at its level (e.g. study/series/image)\n */\nfunction addCustomAttribute(attributeId, attributeName, callback) {\n  CustomAttributeRetrievalCallbacks[attributeId] = {\n    name: attributeName,\n    callback: callback,\n  };\n}\n\nexport { CustomAttributeRetrievalCallbacks, addCustomAttribute };\n","import OHIFError from '../classes/OHIFError.js';\nimport metadata from '../classes/metadata/';\nimport { validate } from './lib/validate.js';\nimport { CustomAttributeRetrievalCallbacks } from './customAttributes';\n\n/**\n * Import Constants\n */\nconst { InstanceMetadata } = metadata;\n\n/**\n * Match a Metadata instance against rules using Validate.js for validation.\n * @param  {InstanceMetadata} metadataInstance Metadata instance object\n * @param  {Array} rules Array of MatchingRules instances (StudyMatchingRule|SeriesMatchingRule|ImageMatchingRule) for the match\n * @return {Object}      Matching Object with score and details (which rule passed or failed)\n */\nconst match = (metadataInstance, rules) => {\n  // Make sure the supplied data is valid.\n  if (!(metadataInstance instanceof InstanceMetadata)) {\n    throw new OHIFError(\n      'HPMatcher::match metadataInstance must be an instance of InstanceMetadata'\n    );\n  }\n\n  const options = {\n    format: 'grouped',\n  };\n\n  const details = {\n    passed: [],\n    failed: [],\n  };\n\n  let requiredFailed = false;\n  let score = 0;\n\n  rules.forEach(rule => {\n    const attribute = rule.attribute;\n\n    // Do not use the custom attribute from the metadataInstance since it is subject to change\n    if (CustomAttributeRetrievalCallbacks.hasOwnProperty(attribute)) {\n      const customAttribute = CustomAttributeRetrievalCallbacks[attribute];\n      metadataInstance.setCustomAttribute(\n        attribute,\n        customAttribute.callback(metadataInstance)\n      );\n    }\n\n    // Format the constraint as required by Validate.js\n    const testConstraint = {\n      [attribute]: rule.constraint,\n    };\n\n    // Create a single attribute object to be validated, since metadataInstance is an\n    // instance of Metadata (StudyMetadata, SeriesMetadata or InstanceMetadata)\n    const attributeValue = metadataInstance.customAttributeExists(attribute)\n      ? metadataInstance.getCustomAttribute(attribute)\n      : metadataInstance.getTagValue(attribute);\n    const attributeMap = {\n      [attribute]: attributeValue,\n    };\n\n    // Use Validate.js to evaluate the constraints on the specified metadataInstance\n    let errorMessages;\n    try {\n      errorMessages = validate(attributeMap, testConstraint, [options]);\n    } catch (e) {\n      errorMessages = ['Something went wrong during validation.', e];\n    }\n\n    if (!errorMessages) {\n      // If no errorMessages were returned, then validation passed.\n\n      // Add the rule's weight to the total score\n      score += parseInt(rule.weight, 10);\n\n      // Log that this rule passed in the matching details object\n      details.passed.push({\n        rule,\n      });\n    } else {\n      // If errorMessages were present, then validation failed\n\n      // If the rule that failed validation was Required, then\n      // mark that a required Rule has failed\n      if (rule.required) {\n        requiredFailed = true;\n      }\n\n      // Log that this rule failed in the matching details object\n      // and include any error messages\n      details.failed.push({\n        rule,\n        errorMessages,\n      });\n    }\n  });\n\n  // If a required Rule has failed Validation, set the matching score to zero\n  if (requiredFailed) {\n    score = 0;\n  }\n\n  return {\n    score,\n    details,\n    requiredFailed,\n  };\n};\n\nconst HPMatcher = {\n  match,\n};\n\nexport { HPMatcher };\n","// Define an empty object to store callbacks that are used to apply custom viewport settings\n// after a viewport is rendered.\nconst CustomViewportSettings = {};\n\n/**\n * Adds a custom setting that can be chosen in the HangingProtocol UI and applied to a Viewport\n *\n * @param settingId The ID used to refer to the setting (e.g. 'displayCADMarkers')\n * @param settingName The name of the setting to be displayed (e.g. 'Display CAD Markers')\n * @param options\n * @param callback A function to be run after a viewport is rendered with a series\n */\nfunction addCustomViewportSetting(settingId, settingName, options, callback) {\n  CustomViewportSettings[settingId] = {\n    id: settingId,\n    text: settingName,\n    options: options,\n    callback: callback,\n  };\n}\n\nexport { CustomViewportSettings, addCustomViewportSetting };\n","const comparators = [\n  {\n    id: 'equals',\n    name: '= (Equals)',\n    validator: 'equals',\n    validatorOption: 'value',\n    description: 'The attribute must equal this value.',\n  },\n  {\n    id: 'doesNotEqual',\n    name: '!= (Does not equal)',\n    validator: 'doesNotEqual',\n    validatorOption: 'value',\n    description: 'The attribute must not equal this value.',\n  },\n  {\n    id: 'contains',\n    name: 'Contains',\n    validator: 'contains',\n    validatorOption: 'value',\n    description: 'The attribute must contain this value.',\n  },\n  {\n    id: 'doesNotContain',\n    name: 'Does not contain',\n    validator: 'doesNotContain',\n    validatorOption: 'value',\n    description: 'The attribute must not contain this value.',\n  },\n  {\n    id: 'startsWith',\n    name: 'Starts with',\n    validator: 'startsWith',\n    validatorOption: 'value',\n    description: 'The attribute must start with this value.',\n  },\n  {\n    id: 'endsWith',\n    name: 'Ends with',\n    validator: 'endsWith',\n    validatorOption: 'value',\n    description: 'The attribute must end with this value.',\n  },\n  {\n    id: 'onlyInteger',\n    name: 'Only Integers',\n    validator: 'numericality',\n    validatorOption: 'onlyInteger',\n    description: \"Real numbers won't be allowed.\",\n  },\n  {\n    id: 'greaterThan',\n    name: '> (Greater than)',\n    validator: 'numericality',\n    validatorOption: 'greaterThan',\n    description: 'The attribute has to be greater than this value.',\n  },\n  {\n    id: 'greaterThanOrEqualTo',\n    name: '>= (Greater than or equal to)',\n    validator: 'numericality',\n    validatorOption: 'greaterThanOrEqualTo',\n    description: 'The attribute has to be at least this value.',\n  },\n  {\n    id: 'lessThanOrEqualTo',\n    name: '<= (Less than or equal to)',\n    validator: 'numericality',\n    validatorOption: 'lessThanOrEqualTo',\n    description: 'The attribute can be this value at the most.',\n  },\n  {\n    id: 'lessThan',\n    name: '< (Less than)',\n    validator: 'numericality',\n    validatorOption: 'lessThan',\n    description: 'The attribute has to be less than this value.',\n  },\n  {\n    id: 'odd',\n    name: 'Odd',\n    validator: 'numericality',\n    validatorOption: 'odd',\n    description: 'The attribute has to be odd.',\n  },\n  {\n    id: 'even',\n    name: 'Even',\n    validator: 'numericality',\n    validatorOption: 'even',\n    description: 'The attribute has to be even.',\n  },\n];\n\n// Immutable object\nObject.freeze(comparators);\n\nexport { comparators };\n","import { comparators } from '../lib/comparators';\nimport guid from '../../utils/guid';\n\nconst EQUALS_REGEXP = /^equals$/;\n\n/**\n * This Class represents a Rule to be evaluated given a set of attributes\n * Rules have:\n * - An attribute (e.g. 'SeriesDescription')\n * - A constraint Object, in the form required by Validate.js:\n *\n * rule.constraint = {\n *   contains: {\n *      value: 'T-1'\n *      }\n *   };\n *\n *  Note: In this example we use the 'contains' Validator, which is a custom Validator defined in Viewerbase\n *\n * - A value for whether or not they are Required to be matched (default: False)\n * - A value for their relative weighting during Protocol or Image matching (default: 1)\n */\nexport default class Rule {\n  /**\n   * The Constructor for the Class to create a Rule with the bare\n   * minimum information\n   *\n   * @param name The desired name for the Rule\n   */\n  constructor(attribute, constraint, required, weight) {\n    // Create a new UUID for this Rule\n    this.id = guid();\n\n    // Set the Rule's weight (defaults to 1)\n    this.weight = weight || 1;\n\n    // If an attribute is specified, assign it\n    if (attribute) {\n      this.attribute = attribute;\n    }\n\n    // If a constraint is specified, assign it\n    if (constraint) {\n      this.constraint = constraint;\n    }\n\n    // If a value for 'required' is specified, assign it\n    if (required === undefined) {\n      // If no value was specified, default to False\n      this.required = false;\n    } else {\n      this.required = required;\n    }\n\n    // Cache for constraint info object\n    this._constraintInfo = void 0;\n\n    // Cache for validator and value object\n    this._validatorAndValue = void 0;\n  }\n\n  /**\n   * Occasionally the Rule class needs to be instantiated from a JavaScript Object.\n   * This function fills in a Protocol with the Object data.\n   *\n   * @param input A Rule as a JavaScript Object, e.g. retrieved from JSON\n   */\n  fromObject(input) {\n    // Check if the input already has an ID\n    // If so, keep it. It not, create a new UUID\n    this.id = input.id || guid();\n\n    // Assign the specified input data to the Rule\n    this.required = input.required;\n    this.weight = input.weight;\n    this.attribute = input.attribute;\n    this.constraint = input.constraint;\n  }\n\n  /**\n   * Get the constraint info object for the current constraint\n   * @return {Object\\undefined} Constraint object or undefined if current constraint\n   *                            is not valid or not found in comparators list\n   */\n  getConstraintInfo() {\n    let constraintInfo = this._constraintInfo;\n    // Check if info is cached already\n    if (constraintInfo !== void 0) {\n      return constraintInfo;\n    }\n\n    const ruleConstraint = Object.keys(this.constraint)[0];\n\n    if (ruleConstraint !== void 0) {\n      constraintInfo = comparators.find(\n        comparator => ruleConstraint === comparator.id\n      );\n    }\n\n    // Cache this information for later use\n    this._constraintInfo = constraintInfo;\n\n    return constraintInfo;\n  }\n\n  /**\n   * Check if current rule is related to priors\n   * @return {Boolean} True if a rule is related to priors or false otherwise\n   */\n  isRuleForPrior() {\n    // @TODO: Should we check this too? this.attribute === 'relativeTime'\n    return this.attribute === 'abstractPriorValue';\n  }\n\n  /**\n   * If the current rule is a rule for priors, returns the number of referenced priors. Otherwise, returns -1.\n   * @return {Number} The number of referenced priors or -1 if not applicable. Returns zero if the actual value could not be determined.\n   */\n  getNumberOfPriorsReferenced() {\n    if (!this.isRuleForPrior()) {\n      return -1;\n    }\n\n    // Get rule's validator and value\n    const ruleValidatorAndValue = this.getConstraintValidatorAndValue();\n    const { value, validator } = ruleValidatorAndValue;\n    const intValue = parseInt(value, 10) || 0; // avoid possible NaN\n\n    // \"Equal to\" validators\n    if (EQUALS_REGEXP.test(validator)) {\n      // In this case, -1 (the oldest prior) indicates that at least one study is used\n      return intValue < 0 ? 1 : intValue;\n    }\n\n    // Default cases return value\n    return 0;\n  }\n\n  /**\n   * Get the constraint validator and value\n   * @return {Object|undefined} Returns an object containing the validator and it's value or undefined\n   */\n  getConstraintValidatorAndValue() {\n    let validatorAndValue = this._validatorAndValue;\n\n    // Check if validator and value are cached already\n    if (validatorAndValue !== void 0) {\n      return validatorAndValue;\n    }\n\n    // Get the constraint info object\n    const constraintInfo = this.getConstraintInfo();\n\n    // Constraint info object exists and is valid\n    if (constraintInfo !== void 0) {\n      const validator = constraintInfo.validator;\n      const currentValidator = this.constraint[validator];\n\n      if (currentValidator) {\n        const constraintValidator = constraintInfo.validatorOption;\n        const constraintValue = currentValidator[constraintValidator];\n\n        validatorAndValue = {\n          value: constraintValue,\n          validator: constraintInfo.id,\n        };\n\n        this._validatorAndValue = validatorAndValue;\n      }\n    }\n\n    return validatorAndValue;\n  }\n}\n","import Rule from './Rule';\n\n/**\n * The ProtocolMatchingRule Class extends the Rule Class.\n *\n * At present it does not add any new methods or attributes\n * @type {ProtocolMatchingRule}\n */\nclass ProtocolMatchingRule extends Rule {}\n\n/**\n * The StudyMatchingRule Class extends the Rule Class.\n *\n * At present it does not add any new methods or attributes\n * @type {StudyMatchingRule}\n */\nclass StudyMatchingRule extends Rule {}\n\n/**\n * The SeriesMatchingRule Class extends the Rule Class.\n *\n * At present it does not add any new methods or attributes\n * @type {SeriesMatchingRule}\n */\nclass SeriesMatchingRule extends Rule {}\n\n/**\n * The ImageMatchingRule class extends the Rule Class.\n *\n * At present it does not add any new methods or attributes\n * @type {ImageMatchingRule}\n */\nclass ImageMatchingRule extends Rule {}\n\nexport {\n  ProtocolMatchingRule,\n  StudyMatchingRule,\n  SeriesMatchingRule,\n  ImageMatchingRule,\n};\n","/**\n * Removes the first instance of an element from an array, if an equal value exists\n *\n * @param array\n * @param input\n *\n * @returns {boolean} Whether or not the element was found and removed\n */\nconst removeFromArray = (array, input) => {\n  // If the array is empty, stop here\n  if (!array || !array.length) {\n    return false;\n  }\n\n  array.forEach((value, index) => {\n    // TODO: Double check whether or not this deep equality check is necessary\n    //if (_.isEqual(value, input)) {\n    if (value === input) {\n      indexToRemove = index;\n      return false;\n    }\n  });\n\n  if (indexToRemove === void 0) {\n    return false;\n  }\n\n  array.splice(indexToRemove, 1);\n  return true;\n};\n\nexport { removeFromArray };\n","/**\n * The ViewportStructure class represents the layout and layout properties that\n * Viewports are displayed in. ViewportStructure has a type, which corresponds to\n * a layout template, and a set of properties, which depend on the type.\n *\n * @type {ViewportStructure}\n */\nexport default class ViewportStructure {\n  constructor(type, properties) {\n    this.type = type;\n    this.properties = properties;\n  }\n\n  /**\n   * Occasionally the ViewportStructure class needs to be instantiated from a JavaScript Object.\n   * This function fills in a ViewportStructure with the Object data.\n   *\n   * @param input The ViewportStructure as a JavaScript Object, e.g. retrieved from JSON\n   */\n  fromObject(input) {\n    this.type = input.type;\n    this.properties = input.properties;\n  }\n\n  /**\n   * Retrieve the layout template name based on the layout type\n   *\n   * @returns {string}\n   */\n  getLayoutTemplateName() {\n    // Viewport structure can be updated later when we build more complex display layouts\n    switch (this.type) {\n      case 'grid':\n        return 'gridLayout';\n    }\n  }\n\n  /**\n   * Retrieve the number of Viewports required for this layout\n   * given the layout type and properties\n   *\n   * @returns {string}\n   */\n  getNumViewports() {\n    // Viewport structure can be updated later when we build more complex display layouts\n    switch (this.type) {\n      case 'grid':\n        // For the typical grid layout, we only need to multiply Rows by Columns to\n        // obtain the number of viewports\n        return this.properties.Rows * this.properties.Columns;\n    }\n  }\n}\n","import {\n  StudyMatchingRule,\n  SeriesMatchingRule,\n  ImageMatchingRule,\n} from './rules';\nimport { removeFromArray } from '../lib/removeFromArray';\n\n/**\n * This Class defines a Viewport in the Hanging Protocol Stage. A Viewport contains\n * arrays of Rules that are matched in the ProtocolEngine in order to determine which\n * images should be hung.\n *\n * @type {Viewport}\n */\nexport default class Viewport {\n  constructor() {\n    this.viewportSettings = {};\n    this.imageMatchingRules = [];\n    this.seriesMatchingRules = [];\n    this.studyMatchingRules = [];\n  }\n\n  /**\n   * Occasionally the Viewport class needs to be instantiated from a JavaScript Object.\n   * This function fills in a Viewport with the Object data.\n   *\n   * @param input The Viewport as a JavaScript Object, e.g. retrieved from JSON\n   */\n  fromObject(input) {\n    // If ImageMatchingRules exist, create them from the Object data\n    // and add them to the Viewport's imageMatchingRules array\n    if (input.imageMatchingRules) {\n      input.imageMatchingRules.forEach(ruleObject => {\n        var rule = new ImageMatchingRule();\n        rule.fromObject(ruleObject);\n        this.imageMatchingRules.push(rule);\n      });\n    }\n\n    // If SeriesMatchingRules exist, create them from the Object data\n    // and add them to the Viewport's seriesMatchingRules array\n    if (input.seriesMatchingRules) {\n      input.seriesMatchingRules.forEach(ruleObject => {\n        var rule = new SeriesMatchingRule();\n        rule.fromObject(ruleObject);\n        this.seriesMatchingRules.push(rule);\n      });\n    }\n\n    // If StudyMatchingRules exist, create them from the Object data\n    // and add them to the Viewport's studyMatchingRules array\n    if (input.studyMatchingRules) {\n      input.studyMatchingRules.forEach(ruleObject => {\n        var rule = new StudyMatchingRule();\n        rule.fromObject(ruleObject);\n        this.studyMatchingRules.push(rule);\n      });\n    }\n\n    // If ViewportSettings exist, add them to the current protocol\n    if (input.viewportSettings) {\n      this.viewportSettings = input.viewportSettings;\n    }\n  }\n\n  /**\n   * Finds and removes a rule from whichever array it exists in.\n   * It is not required to specify if it exists in studyMatchingRules,\n   * seriesMatchingRules, or imageMatchingRules\n   *\n   * @param rule\n   */\n  removeRule(rule) {\n    var array;\n    if (rule instanceof StudyMatchingRule) {\n      array = this.studyMatchingRules;\n    } else if (rule instanceof SeriesMatchingRule) {\n      array = this.seriesMatchingRules;\n    } else if (rule instanceof ImageMatchingRule) {\n      array = this.imageMatchingRules;\n    }\n\n    removeFromArray(array, rule);\n  }\n}\n","import ViewportStructure from './ViewportStructure';\nimport Viewport from './Viewport';\nimport guid from '../../utils/guid';\n\n/**\n * A Stage is one step in the Display Set Sequence for a Hanging Protocol\n *\n * Stages are defined as a ViewportStructure and an array of Viewports\n *\n * @type {Stage}\n */\nexport default class Stage {\n  constructor(ViewportStructure, name) {\n    // Create a new UUID for this Stage\n    this.id = guid();\n\n    // Assign the name and ViewportStructure provided\n    this.name = name;\n    this.viewportStructure = ViewportStructure;\n\n    // Create an empty array for the Viewports\n    this.viewports = [];\n\n    // Set the created date to Now\n    this.createdDate = new Date();\n  }\n\n  /**\n   * Creates a clone of the current Stage with a new name\n   *\n   * @param name\n   * @returns {Stage|*}\n   */\n  createClone(name) {\n    // Create a new JavaScript independent of the current Protocol\n    var currentStage = Object.assign({}, this);\n\n    // Create a new Stage to return\n    var clonedStage = new Stage();\n\n    // Assign the desired properties\n    currentStage.id = clonedStage.id;\n    clonedStage.fromObject(currentStage);\n\n    // If we have specified a name, assign it\n    if (name) {\n      clonedStage.name = name;\n    }\n\n    // Return the cloned Stage\n    return clonedStage;\n  }\n\n  /**\n   * Occasionally the Stage class needs to be instantiated from a JavaScript Object.\n   * This function fills in a Protocol with the Object data.\n   *\n   * @param input A Stage as a JavaScript Object, e.g. retrieved from JSON\n   */\n  fromObject(input) {\n    // Check if the input already has an ID\n    // If so, keep it. It not, create a new UUID\n    this.id = input.id || guid();\n\n    // Assign the input name to the Stage\n    this.name = input.name;\n\n    // If a ViewportStructure is present in the input, add it from the\n    // input data\n    this.viewportStructure = new ViewportStructure();\n    this.viewportStructure.fromObject(input.viewportStructure);\n\n    // If any viewports are present in the input object\n    if (input.viewports) {\n      input.viewports.forEach(viewportObject => {\n        // Create a new Viewport with their data\n        var viewport = new Viewport();\n        viewport.fromObject(viewportObject);\n\n        // Add it to the viewports array\n        this.viewports.push(viewport);\n      });\n    }\n  }\n}\n","import { ProtocolMatchingRule } from './rules';\nimport { removeFromArray } from '../lib/removeFromArray';\nimport Stage from './Stage';\nimport guid from '../../utils/guid';\nimport user from '../../user';\n\n/**\n * This class represents a Hanging Protocol at the highest level\n *\n * @type {Protocol}\n */\nexport default class Protocol {\n  /**\n   * The Constructor for the Class to create a Protocol with the bare\n   * minimum information\n   *\n   * @param name The desired name for the Protocol\n   */\n  constructor(name) {\n    // Create a new UUID for this Protocol\n    this.id = guid();\n\n    // Store a value which determines whether or not a Protocol is locked\n    // This is probably temporary, since we will eventually have role / user\n    // checks for editing. For now we just need it to prevent changes to the\n    // default protocols.\n    this.locked = false;\n\n    // Boolean value to indicate if the protocol has updated priors information\n    // it's set in \"updateNumberOfPriorsReferenced\" function\n    this.hasUpdatedPriorsInformation = false;\n\n    // Apply the desired name\n    this.name = name;\n\n    // Set the created and modified dates to Now\n    this.createdDate = new Date();\n    this.modifiedDate = new Date();\n\n    // If we are logged in while creating this Protocol,\n    // store this information as well\n    if (user.userLoggedIn && user.userLoggedIn()) {\n      this.createdBy = user.getUserId();\n      this.modifiedBy = user.getUserId();\n    }\n\n    // Create two empty Sets specifying which roles\n    // have read and write access to this Protocol\n    this.availableTo = new Set();\n    this.editableBy = new Set();\n\n    // Define empty arrays for the Protocol matching rules\n    // and Stages\n    this.protocolMatchingRules = [];\n    this.stages = [];\n\n    // Define auxiliary values for priors\n    this.numberOfPriorsReferenced = -1;\n  }\n\n  getNumberOfPriorsReferenced(skipCache = false) {\n    let numberOfPriorsReferenced =\n      skipCache !== true ? this.numberOfPriorsReferenced : -1;\n\n    // Check if information is cached already\n    if (numberOfPriorsReferenced > -1) {\n      return numberOfPriorsReferenced;\n    }\n\n    numberOfPriorsReferenced = 0;\n\n    // Search each study matching rule for prior rules\n    // Each stage can have many viewports that can have\n    // multiple study matching rules.\n    this.stages.forEach(stage => {\n      if (!stage.viewports) {\n        return;\n      }\n\n      stage.viewports.forEach(viewport => {\n        if (!viewport.studyMatchingRules) {\n          return;\n        }\n\n        viewport.studyMatchingRules.forEach(rule => {\n          // If the current rule is not a priors rule, it will return -1 then numberOfPriorsReferenced will continue to be 0\n          const priorsReferenced = rule.getNumberOfPriorsReferenced();\n          if (priorsReferenced > numberOfPriorsReferenced) {\n            numberOfPriorsReferenced = priorsReferenced;\n          }\n        });\n      });\n    });\n\n    this.numberOfPriorsReferenced = numberOfPriorsReferenced;\n\n    return numberOfPriorsReferenced;\n  }\n\n  updateNumberOfPriorsReferenced() {\n    this.getNumberOfPriorsReferenced(true);\n  }\n\n  /**\n   * Method to update the modifiedDate when the Protocol\n   * has been changed\n   */\n  protocolWasModified() {\n    // If we are logged in while modifying this Protocol,\n    // store this information as well\n    if (user.userLoggedIn && user.userLoggedIn()) {\n      this.modifiedBy = user.getUserId();\n    }\n\n    // Protocol has been modified, so mark priors information\n    // as \"outdated\"\n    this.hasUpdatedPriorsInformation = false;\n\n    // Update number of priors referenced info\n    this.updateNumberOfPriorsReferenced();\n\n    // Update the modifiedDate with the current Date/Time\n    this.modifiedDate = new Date();\n  }\n\n  /**\n   * Occasionally the Protocol class needs to be instantiated from a JavaScript Object\n   * containing the Protocol data. This function fills in a Protocol with the Object\n   * data.\n   *\n   * @param input A Protocol as a JavaScript Object, e.g. retrieved from JSON\n   */\n  fromObject(input) {\n    // Check if the input already has an ID\n    // If so, keep it. It not, create a new UUID\n    this.id = input.id || guid();\n\n    // Assign the input name to the Protocol\n    this.name = input.name;\n\n    // Retrieve locked status, use !! to make it truthy\n    // so that undefined values will be set to false\n    this.locked = !!input.locked;\n\n    // TODO: Check how to regenerate Set from Object\n    //this.availableTo = new Set(input.availableTo);\n    //this.editableBy = new Set(input.editableBy);\n\n    // If the input contains Protocol matching rules\n    if (input.protocolMatchingRules) {\n      input.protocolMatchingRules.forEach(ruleObject => {\n        // Create new Rules from the stored data\n        var rule = new ProtocolMatchingRule();\n        rule.fromObject(ruleObject);\n\n        // Add them to the Protocol\n        this.protocolMatchingRules.push(rule);\n      });\n    }\n\n    // If the input contains data for various Stages in the\n    // display set sequence\n    if (input.stages) {\n      input.stages.forEach(stageObject => {\n        // Create Stages from the stored data\n        var stage = new Stage();\n        stage.fromObject(stageObject);\n\n        // Add them to the Protocol\n        this.stages.push(stage);\n      });\n    }\n  }\n\n  /**\n   * Creates a clone of the current Protocol with a new name\n   *\n   * @param name\n   * @returns {Protocol|*}\n   */\n  createClone(name) {\n    // Create a new JavaScript independent of the current Protocol\n    var currentProtocol = Object.assign({}, this);\n\n    // Create a new Protocol to return\n    var clonedProtocol = new Protocol();\n\n    // Apply the desired properties\n    currentProtocol.id = clonedProtocol.id;\n    clonedProtocol.fromObject(currentProtocol);\n\n    // If we have specified a name, assign it\n    if (name) {\n      clonedProtocol.name = name;\n    }\n\n    // Unlock the clone\n    clonedProtocol.locked = false;\n\n    // Return the cloned Protocol\n    return clonedProtocol;\n  }\n\n  /**\n   * Adds a Stage to this Protocol's display set sequence\n   *\n   * @param stage\n   */\n  addStage(stage) {\n    this.stages.push(stage);\n\n    // Update the modifiedDate and User that last\n    // modified this Protocol\n    this.protocolWasModified();\n  }\n\n  /**\n   * Adds a Rule to this Protocol's array of matching rules\n   *\n   * @param rule\n   */\n  addProtocolMatchingRule(rule) {\n    this.protocolMatchingRules.push(rule);\n\n    // Update the modifiedDate and User that last\n    // modified this Protocol\n    this.protocolWasModified();\n  }\n\n  /**\n   * Removes a Rule from this Protocol's array of matching rules\n   *\n   * @param rule\n   */\n  removeProtocolMatchingRule(rule) {\n    var wasRemoved = removeFromArray(this.protocolMatchingRules, rule);\n\n    // Update the modifiedDate and User that last\n    // modified this Protocol\n    if (wasRemoved) {\n      this.protocolWasModified();\n    }\n  }\n}\n","import OHIFError from '../classes/OHIFError.js';\nimport metadata from '../classes/metadata/';\nimport { StudyMetadataSource } from '../classes/StudyMetadataSource.js';\nimport { isImage } from '../utils/isImage.js';\nimport { HPMatcher } from './HPMatcher.js';\nimport { sortByScore } from './lib/sortByScore';\nimport log from '../log.js';\nimport sortBy from '../utils/sortBy.js';\nimport { CustomViewportSettings } from './customViewportSettings';\nimport Protocol from './classes/Protocol';\nimport { ProtocolStore } from './protocolStore/classes';\n\n/**\n * Import Constants\n */\nconst { StudyMetadata, InstanceMetadata } = metadata;\n\n// Useful constants\nconst ABSTRACT_PRIOR_VALUE = 'abstractPriorValue';\n\nexport default class ProtocolEngine {\n  matchedProtocols = new Map();\n  matchedProtocolScores = {};\n\n  /**\n   * Constructor\n   * @param  {ProtocolStore} protocolStore Protocol Store used to keep track of all hanging protocols\n   * @param  {Array} studies Array of study metadata\n   * @param  {Map} priorStudies Map of prior studies\n   * @param  {Object} studyMetadataSource Instance of StudyMetadataSource (ohif-viewerbase) Object to get study metadata\n   * @param  {Object} options\n   */\n  constructor(\n    protocolStore,\n    studies,\n    priorStudies,\n    studyMetadataSource,\n    options = {}\n  ) {\n    // -----------\n    // Type Validations\n    if (!(studyMetadataSource instanceof StudyMetadataSource)) {\n      throw new OHIFError(\n        'ProtocolEngine::constructor studyMetadataSource is not an instance of StudyMetadataSource'\n      );\n    }\n\n    if (\n      !(studies instanceof Array) &&\n      !studies.every(study => study instanceof StudyMetadata)\n    ) {\n      throw new OHIFError(\n        \"ProtocolEngine::constructor studies is not an array or it's items are not instances of StudyMetadata\"\n      );\n    }\n\n    // --------------\n    // Initialization\n    this.protocolStore = protocolStore;\n    this.studies = studies;\n    this.priorStudies = priorStudies instanceof Map ? priorStudies : new Map();\n    this.studyMetadataSource = studyMetadataSource;\n    this.options = options;\n\n    // Put protocol engine in a known state\n    this.reset();\n\n    // Create an array for new stage ids to be stored\n    // while editing a stage\n    this.newStageIds = [];\n  }\n\n  /**\n   * Resets the ProtocolEngine to the best match\n   */\n  reset() {\n    const protocol = this.getBestProtocolMatch();\n\n    this.setHangingProtocol(protocol);\n  }\n\n  /**\n   * Retrieves the current Stage from the current Protocol and stage index\n   *\n   * @returns {*} The Stage model for the currently displayed Stage\n   */\n  getCurrentStageModel() {\n    return this.protocol.stages[this.stage];\n  }\n\n  /**\n   * Finds the best protocols from Protocol Store, matching each protocol matching rules\n   * with the given study. The best protocol are orded by score and returned in an array\n   * @param  {Object} study StudyMetadata instance object\n   * @return {Array}       Array of match objects or an empty array if no match was found\n   *                       Each match object has the score of the matching and the matched\n   *                       protocol\n   */\n  findMatchByStudy(study) {\n    log.trace('ProtocolEngine::findMatchByStudy');\n\n    const matched = [];\n    const studyInstance = study.getFirstInstance();\n\n    // Set custom attribute for study metadata\n    const numberOfAvailablePriors = this.getNumberOfAvailablePriors(\n      study.getObjectID()\n    );\n\n    this.protocolStore.getProtocol().forEach(protocol => {\n      // Clone the protocol's protocolMatchingRules array\n      // We clone it so that we don't accidentally add the\n      // numberOfPriorsReferenced rule to the Protocol itself.\n      let rules = protocol.protocolMatchingRules.slice();\n      if (!rules) {\n        return;\n      }\n\n      // Check if the study has the minimun number of priors used by the protocol.\n      const numberOfPriorsReferenced = protocol.getNumberOfPriorsReferenced();\n      if (numberOfPriorsReferenced > numberOfAvailablePriors) {\n        return;\n      }\n\n      // Run the matcher and get matching details\n      const matchedDetails = HPMatcher.match(studyInstance, rules);\n      const score = matchedDetails.score;\n\n      // The protocol matched some rule, add it to the matched list\n      if (score > 0) {\n        matched.push({\n          score,\n          protocol,\n        });\n      }\n    });\n\n    // If no matches were found, select the default protocol\n    if (!matched.length) {\n      const defaultProtocol = this.protocolStore.getProtocol('defaultProtocol');\n\n      return [\n        {\n          score: 1,\n          protocol: defaultProtocol,\n        },\n      ];\n    }\n\n    // Sort the matched list by score\n    sortByScore(matched);\n\n    log.trace('ProtocolEngine::findMatchByStudy matched', matched);\n\n    return matched;\n  }\n\n  _clearMatchedProtocols() {\n    this.matchedProtocols.clear();\n    this.matchedProtocolScores = {};\n  }\n  /**\n   * Populates the MatchedProtocols Collection by running the matching procedure\n   */\n  updateProtocolMatches() {\n    log.trace('ProtocolEngine::updateProtocolMatches');\n\n    // Clear all data currently in matchedProtocols\n    this._clearMatchedProtocols();\n\n    // For each study, find the matching protocols\n    this.studies.forEach(study => {\n      const matched = this.findMatchByStudy(study);\n\n      // For each matched protocol, check if it is already in MatchedProtocols\n      matched.forEach(matchedDetail => {\n        const protocol = matchedDetail.protocol;\n        if (!protocol) {\n          return;\n        }\n\n        // If it is not already in the MatchedProtocols Collection, insert it with its score\n        if (!this.matchedProtocols.has(protocol.id)) {\n          log.trace(\n            'ProtocolEngine::updateProtocolMatches inserting protocol match',\n            matchedDetail\n          );\n          this.matchedProtocols.set(protocol.id, protocol);\n          this.matchedProtocolScores[protocol.id] = matchedDetail.score;\n        }\n      });\n    });\n  }\n\n  _largestKeyByValue(obj) {\n    return Object.keys(obj).reduce((a, b) => (obj[a] > obj[b] ? a : b));\n  }\n\n  _getHighestScoringProtocol() {\n    if (!Object.keys(this.matchedProtocolScores).length) {\n      return this.protocolStore.getProtocol('defaultProtocol');\n    }\n    const highestScoringProtocolId = this._largestKeyByValue(\n      this.matchedProtocolScores\n    );\n    return this.matchedProtocols.get(highestScoringProtocolId);\n  }\n\n  /**\n   * Return the best matched Protocol to the current study or set of studies\n   * @returns {*}\n   */\n  getBestProtocolMatch() {\n    // Run the matching to populate matchedProtocols Set and Map\n    this.updateProtocolMatches();\n\n    // Retrieve the highest scoring Protocol\n    const bestMatch = this._getHighestScoringProtocol();\n\n    log.trace('ProtocolEngine::getBestProtocolMatch bestMatch', bestMatch);\n\n    return bestMatch;\n  }\n\n  /**\n   * Get the number of prior studies supplied in the priorStudies map property.\n   *\n   * @param {String} studyObjectID The study object ID of the study whose priors are needed\n   * @returns {number} The number of available prior studies with the same PatientID\n   */\n  getNumberOfAvailablePriors(studyObjectID) {\n    return this.getAvailableStudyPriors(studyObjectID).length;\n  }\n\n  /**\n   * Get the array of prior studies from a specific study.\n   *\n   * @param {String} studyObjectID The study object ID of the study whose priors are needed\n   * @returns {Array} The array of available priors or an empty array\n   */\n  getAvailableStudyPriors(studyObjectID) {\n    const priors = this.priorStudies.get(studyObjectID);\n\n    return priors instanceof Array ? priors : [];\n  }\n\n  // Match images given a list of Studies and a Viewport's image matching reqs\n  matchImages(viewport, viewportIndex) {\n    log.trace('ProtocolEngine::matchImages');\n\n    const {\n      studyMatchingRules,\n      seriesMatchingRules,\n      imageMatchingRules: instanceMatchingRules,\n    } = viewport;\n\n    const matchingScores = [];\n    const currentStudy = this.studies[0]; // @TODO: Should this be: this.studies[this.currentStudy] ???\n    const firstInstance = currentStudy.getFirstInstance();\n\n    let highestStudyMatchingScore = 0;\n    let highestSeriesMatchingScore = 0;\n\n    // Set custom attribute for study metadata and it's first instance\n    currentStudy.setCustomAttribute(ABSTRACT_PRIOR_VALUE, 0);\n    if (firstInstance instanceof InstanceMetadata) {\n      firstInstance.setCustomAttribute(ABSTRACT_PRIOR_VALUE, 0);\n    }\n\n    // Only used if study matching rules has abstract prior values defined...\n    let priorStudies;\n\n    studyMatchingRules.forEach(rule => {\n      if (rule.attribute === ABSTRACT_PRIOR_VALUE) {\n        const validatorType = Object.keys(rule.constraint)[0];\n        const validator = Object.keys(rule.constraint[validatorType])[0];\n\n        let abstractPriorValue = rule.constraint[validatorType][validator];\n        abstractPriorValue = parseInt(abstractPriorValue, 10);\n        // TODO: Restrict or clarify validators for abstractPriorValue?\n\n        // No need to call it more than once...\n        if (!priorStudies) {\n          priorStudies = this.getAvailableStudyPriors(\n            currentStudy.getObjectID()\n          );\n        }\n\n        // TODO: Revisit this later: What about two studies with the same\n        // study date?\n\n        let priorStudy;\n        if (abstractPriorValue === -1) {\n          priorStudy = priorStudies[priorStudies.length - 1];\n        } else {\n          const studyIndex = Math.max(abstractPriorValue - 1, 0);\n          priorStudy = priorStudies[studyIndex];\n        }\n\n        // Invalid data\n        if (!priorStudy instanceof StudyMetadata) {\n          return;\n        }\n\n        const priorStudyObjectID = priorStudy.getObjectID();\n\n        // Check if study metadata is already in studies list\n        if (\n          this.studies.find(study => study.getObjectID() === priorStudyObjectID)\n        ) {\n          return;\n        }\n\n        // Get study metadata if necessary and load study in the viewer (each viewer should provide it's own load study method)\n        this.studyMetadataSource.loadStudy(priorStudy).then(\n          studyMetadata => {\n            // Set the custom attribute abstractPriorValue for the study metadata\n            studyMetadata.setCustomAttribute(\n              ABSTRACT_PRIOR_VALUE,\n              abstractPriorValue\n            );\n\n            // Also add custom attribute\n            const firstInstance = studyMetadata.getFirstInstance();\n            if (firstInstance instanceof InstanceMetadata) {\n              firstInstance.setCustomAttribute(\n                ABSTRACT_PRIOR_VALUE,\n                abstractPriorValue\n              );\n            }\n\n            // Insert the new study metadata\n            this.studies.push(studyMetadata);\n\n            // Update the viewport to refresh layout manager with new study\n            this.updateViewports(viewportIndex);\n          },\n          error => {\n            log.warn(error);\n            throw new OHIFError(\n              `ProtocolEngine::matchImages could not get study metadata for the Study with the following ObjectID: ${priorStudyObjectID}`\n            );\n          }\n        );\n      }\n      // TODO: Add relative Date / time\n    });\n\n    this.studies.forEach(study => {\n      const studyMatchDetails = HPMatcher.match(\n        study.getFirstInstance(),\n        studyMatchingRules\n      );\n\n      // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed\n      if (\n        studyMatchDetails.requiredFailed === true ||\n        studyMatchDetails.score < highestStudyMatchingScore\n      ) {\n        return;\n      }\n\n      highestStudyMatchingScore = studyMatchDetails.score;\n\n      study.forEachSeries(series => {\n        const seriesMatchDetails = HPMatcher.match(\n          series.getFirstInstance(),\n          seriesMatchingRules\n        );\n\n        // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed\n        if (\n          seriesMatchDetails.requiredFailed === true ||\n          seriesMatchDetails.score < highestSeriesMatchingScore\n        ) {\n          return;\n        }\n\n        highestSeriesMatchingScore = seriesMatchDetails.score;\n\n        series.forEachInstance((instance, index) => {\n          // This tests to make sure there is actually image data in this instance\n          // TODO: Change this when we add PDF and MPEG support\n          // See https://ohiforg.atlassian.net/browse/LT-227\n          if (\n            !isImage(instance.getTagValue('SOPClassUID')) &&\n            !instance.getTagValue('Rows')\n          ) {\n            return;\n          }\n\n          const instanceMatchDetails = HPMatcher.match(\n            instance,\n            instanceMatchingRules\n          );\n\n          // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed\n          if (instanceMatchDetails.requiredFailed === true) {\n            return;\n          }\n\n          const matchDetails = {\n            passed: [],\n            failed: [],\n          };\n\n          matchDetails.passed = matchDetails.passed.concat(\n            instanceMatchDetails.details.passed\n          );\n          matchDetails.passed = matchDetails.passed.concat(\n            seriesMatchDetails.details.passed\n          );\n          matchDetails.passed = matchDetails.passed.concat(\n            studyMatchDetails.details.passed\n          );\n\n          matchDetails.failed = matchDetails.failed.concat(\n            instanceMatchDetails.details.failed\n          );\n          matchDetails.failed = matchDetails.failed.concat(\n            seriesMatchDetails.details.failed\n          );\n          matchDetails.failed = matchDetails.failed.concat(\n            studyMatchDetails.details.failed\n          );\n\n          const totalMatchScore =\n            instanceMatchDetails.score +\n            seriesMatchDetails.score +\n            studyMatchDetails.score;\n          const currentSOPInstanceUID = instance.getSOPInstanceUID();\n\n          const imageDetails = {\n            StudyInstanceUID: study.getStudyInstanceUID(),\n            SeriesInstanceUID: series.getSeriesInstanceUID(),\n            SOPInstanceUID: currentSOPInstanceUID,\n            currentImageIdIndex: index,\n            matchingScore: totalMatchScore,\n            matchDetails: matchDetails,\n            sortingInfo: {\n              score: totalMatchScore,\n              study:\n                instance.getTagValue('StudyDate') +\n                instance.getTagValue('StudyTime'),\n              series: parseInt(instance.getTagValue('SeriesNumber')), // TODO: change for seriesDateTime\n              instance: parseInt(instance.getTagValue('InstanceNumber')), // TODO: change for acquisitionTime\n            },\n          };\n\n          // Find the displaySet\n          const displaySet = study.findDisplaySet(displaySet =>\n            displaySet.images.find(\n              image => image.getSOPInstanceUID() === currentSOPInstanceUID\n            )\n          );\n\n          // If the instance was found, set the displaySet ID\n          if (displaySet) {\n            imageDetails.displaySetInstanceUID = displaySet.getUID();\n            imageDetails.imageId = instance.getImageId();\n          }\n\n          matchingScores.push(imageDetails);\n        });\n      });\n    });\n\n    // Sort the matchingScores\n    const sortingFunction = sortBy(\n      {\n        name: 'score',\n        reverse: true,\n      },\n      {\n        name: 'study',\n        reverse: true,\n      },\n      {\n        name: 'instance',\n      },\n      {\n        name: 'series',\n      }\n    );\n    matchingScores.sort((a, b) =>\n      sortingFunction(a.sortingInfo, b.sortingInfo)\n    );\n\n    const bestMatch = matchingScores[0];\n\n    log.trace('ProtocolEngine::matchImages bestMatch', bestMatch);\n\n    return {\n      bestMatch,\n      matchingScores,\n    };\n  }\n\n  /**\n   * Sets the current layout\n   *\n   * @param {number} numRows\n   * @param {number} numColumns\n   */\n  setLayout(numRows, numColumns) {\n    if (numRows < 1 && numColumns < 1) {\n      log.error(`Invalid layout ${numRows} x ${numColumns}`);\n      return;\n    }\n\n    if (typeof this.options.setLayout !== 'function') {\n      log.error('Hanging Protocol Engine setLayout callback is not defined');\n      return;\n    }\n\n    let viewports = [];\n    const numViewports = numRows * numColumns;\n\n    for (let i = 0; i < numViewports; i++) {\n      viewports.push({});\n    }\n\n    this.options.setLayout({ numRows, numColumns, viewports });\n  }\n\n  /**\n   * Rerenders viewports that are part of the current layout manager\n   * using the matching rules internal to each viewport.\n   *\n   * If this function is provided the index of a viewport, only the specified viewport\n   * is rerendered.\n   *\n   * @param viewportIndex\n   */\n  updateViewports(viewportIndex) {\n    log.trace(\n      `ProtocolEngine::updateViewports viewportIndex: ${viewportIndex}`\n    );\n\n    // Make sure we have an active protocol with a non-empty array of display sets\n    if (!this.getNumProtocolStages()) {\n      return;\n    }\n\n    // Retrieve the current stage\n    const stageModel = this.getCurrentStageModel();\n\n    // If the current stage does not fulfill the requirements to be displayed,\n    // stop here.\n    if (\n      !stageModel ||\n      !stageModel.viewportStructure ||\n      !stageModel.viewports ||\n      !stageModel.viewports.length\n    ) {\n      return;\n    }\n\n    // Retrieve the layoutTemplate associated with the current display set's viewport structure\n    // If no such template name exists, stop here.\n    const layoutTemplateName = stageModel.viewportStructure.getLayoutTemplateName();\n    if (!layoutTemplateName) {\n      return;\n    }\n\n    // Retrieve the properties associated with the current display set's viewport structure template\n    // If no such layout properties exist, stop here.\n    const layoutProps = stageModel.viewportStructure.properties;\n    if (!layoutProps) {\n      return;\n    }\n\n    // Create an empty array to store the output viewportData\n    const viewportData = [];\n\n    // Empty the matchDetails associated with the ProtocolEngine.\n    // This will be used to store the pass/fail details and score\n    // for each of the viewport matching procedures\n    this.matchDetails = [];\n\n    // Loop through each viewport\n    stageModel.viewports.forEach((viewport, viewportIndex) => {\n      const details = this.matchImages(viewport, viewportIndex);\n\n      this.matchDetails[viewportIndex] = details;\n\n      // Convert any YES/NO values into true/false for Cornerstone\n      const cornerstoneViewportParams = {};\n\n      // Cache viewportSettings keys\n      const viewportSettingsKeys = Object.keys(viewport.viewportSettings);\n\n      viewportSettingsKeys.forEach(key => {\n        let value = viewport.viewportSettings[key];\n        if (value === 'YES') {\n          value = true;\n        } else if (value === 'NO') {\n          value = false;\n        }\n\n        cornerstoneViewportParams[key] = value;\n      });\n\n      // imageViewerViewports occasionally needs relevant layout data in order to set\n      // the element style of the viewport in question\n      const currentViewportData = {\n        viewportIndex,\n        viewport: cornerstoneViewportParams,\n        ...layoutProps,\n      };\n\n      const customSettings = [];\n      viewportSettingsKeys.forEach(id => {\n        const setting = CustomViewportSettings[id];\n        if (!setting) {\n          return;\n        }\n\n        customSettings.push({\n          id: id,\n          value: viewport.viewportSettings[id],\n        });\n      });\n\n      currentViewportData.renderedCallback = element => {\n        //console.log('renderedCallback for ' + element.id);\n        customSettings.forEach(customSetting => {\n          log.trace(\n            `ProtocolEngine::currentViewportData.renderedCallback Applying custom setting: ${customSetting.id}`\n          );\n          log.trace(\n            `ProtocolEngine::currentViewportData.renderedCallback with value: ${customSetting.value}`\n          );\n\n          const setting = CustomViewportSettings[customSetting.id];\n          setting.callback(element, customSetting.value);\n        });\n      };\n\n      let currentMatch = details.bestMatch;\n      let currentPosition = 1;\n      const scoresLength = details.matchingScores.length;\n      while (\n        currentPosition < scoresLength &&\n        viewportData.find(a => a.imageId === currentMatch.imageId)\n      ) {\n        currentMatch = details.matchingScores[currentPosition];\n        currentPosition++;\n      }\n\n      if (currentMatch && currentMatch.imageId) {\n        currentViewportData.StudyInstanceUID = currentMatch.StudyInstanceUID;\n        currentViewportData.SeriesInstanceUID = currentMatch.SeriesInstanceUID;\n        currentViewportData.SOPInstanceUID = currentMatch.SOPInstanceUID;\n        currentViewportData.currentImageIdIndex =\n          currentMatch.currentImageIdIndex;\n        currentViewportData.displaySetInstanceUID =\n          currentMatch.displaySetInstanceUID;\n        currentViewportData.imageId = currentMatch.imageId;\n      }\n\n      // @TODO Why should we throw an exception when a best match is not found? This was aborting the whole process.\n      // if (!currentViewportData.displaySetInstanceUID) {\n      //     throw new OHIFError('ProtocolEngine::updateViewports No matching display set found?');\n      // }\n\n      viewportData.push(currentViewportData);\n    });\n\n    this.setLayout(layoutProps.Rows, layoutProps.Columns);\n\n    if (typeof this.options.setViewportSpecificData !== 'function') {\n      log.error(\n        'Hanging Protocol Engine setViewportSpecificData callback is not defined'\n      );\n      return;\n    }\n\n    // If viewportIndex is defined, then update only that viewport\n    if (viewportIndex !== undefined && viewportData[viewportIndex]) {\n      this.options.setViewportSpecificData(\n        viewportIndex,\n        viewportData[viewportIndex]\n      );\n      return;\n    }\n\n    // Update all viewports\n    viewportData.forEach(viewportSpecificData => {\n      this.options.setViewportSpecificData(\n        viewportSpecificData.viewportIndex,\n        viewportSpecificData\n      );\n    });\n  }\n\n  /**\n   * Sets the current Hanging Protocol to the specified Protocol\n   * An optional argument can also be used to prevent the updating of the Viewports\n   *\n   * @param newProtocol\n   * @param updateViewports\n   */\n  setHangingProtocol(newProtocol, updateViewports = true) {\n    log.trace('ProtocolEngine::setHangingProtocol newProtocol', newProtocol);\n    log.trace(\n      `ProtocolEngine::setHangingProtocol updateViewports = ${updateViewports}`\n    );\n\n    // Reset the array of newStageIds\n    this.newStageIds = [];\n\n    if (Protocol.prototype.isPrototypeOf(newProtocol)) {\n      this.protocol = newProtocol;\n    } else {\n      this.protocol = new Protocol();\n      this.protocol.fromObject(newProtocol);\n    }\n\n    this.stage = 0;\n\n    // Update viewports by default\n    if (updateViewports) {\n      this.updateViewports();\n    }\n  }\n\n  /**\n   * Check if the next stage is available\n   * @return {Boolean} True if next stage is available or false otherwise\n   */\n  isNextStageAvailable() {\n    const numberOfStages = this.getNumProtocolStages();\n\n    return this.stage + 1 < numberOfStages;\n  }\n\n  /**\n   * Check if the previous stage is available\n   * @return {Boolean} True if previous stage is available or false otherwise\n   */\n  isPreviousStageAvailable() {\n    return this.stage - 1 >= 0;\n  }\n\n  /**\n   * Changes the current stage to a new stage index in the display set sequence.\n   * It checks if the next stage exists.\n   *\n   * @param {Integer} stageAction An integer value specifying wheater next (1) or previous (-1) stage\n   * @return {Boolean} True if new stage has set or false, otherwise\n   */\n  setCurrentProtocolStage(stageAction) {\n    // Check if previous or next stage is available\n    if (stageAction === -1 && !this.isPreviousStageAvailable()) {\n      return false;\n    } else if (stageAction === 1 && !this.isNextStageAvailable()) {\n      return false;\n    }\n\n    // Sets the new stage\n    this.stage += stageAction;\n\n    // Log the new stage\n    log.trace(`ProtocolEngine::setCurrentProtocolStage stage = ${this.stage}`);\n\n    // Since stage has changed, we need to update the viewports\n    // and redo matchings\n    this.updateViewports();\n\n    // Everything went well\n    return true;\n  }\n\n  /**\n   * Retrieves the number of Stages in the current Protocol or\n   * undefined if no protocol or stages are set\n   */\n  getNumProtocolStages() {\n    if (\n      !this.protocol ||\n      !this.protocol.stages ||\n      !this.protocol.stages.length\n    ) {\n      return;\n    }\n\n    return this.protocol.stages.length;\n  }\n\n  /**\n   * Switches to the next protocol stage in the display set sequence\n   */\n  nextProtocolStage() {\n    log.trace('ProtocolEngine::nextProtocolStage');\n\n    if (!this.setCurrentProtocolStage(1)) {\n      log.trace('ProtocolEngine::nextProtocolStage failed');\n    }\n  }\n\n  /**\n   * Switches to the previous protocol stage in the display set sequence\n   */\n  previousProtocolStage() {\n    log.trace('ProtocolEngine::previousProtocolStage');\n\n    if (!this.setCurrentProtocolStage(-1)) {\n      log.trace('ProtocolEngine::previousProtocolStage failed');\n    }\n  }\n}\n","// Sorts an array by score\nconst sortByScore = arr => {\n  arr.sort((a, b) => {\n    return b.score - a.score;\n  });\n};\n\nexport { sortByScore };\n","import Protocol from '../../classes/Protocol';\n\n// The ProtocolStore class allows persisting hanging protocols using different strategies.\n// For example, one strategy stores hanging protocols in the application server while\n// another strategy stores them in a remote machine, but only one strategy can be used at a time.\n\nexport default class ProtocolStore {\n  constructor(strategy) {\n    this.strategy = strategy;\n  }\n\n  /**\n   * Get a Protocol instance or array of Protocol instances for the given protocol object or array\n   * @param  {Object|array} protocolObject Protocol plain object or array of Protocol plain objects\n   * @return {Protocol|array} Protocol instance or array of Protocol intances for the given protocol object or array\n   */\n  static getProtocolInstance(protocolObject) {\n    let result = protocolObject;\n\n    // If result is an array of protocols objects\n    if (result instanceof Array) {\n      result.forEach((protocol, index) => {\n        // Check if protocol is an instance of Protocol\n        if (!(protocol instanceof Protocol)) {\n          const protocolInstance = new Protocol();\n          protocolInstance.fromObject(protocol);\n          result[index] = protocolInstance;\n        }\n      });\n    } else if (result !== void 0 && !(result instanceof Protocol)) {\n      // Check if result exists and is not an instance of Protocol\n      const protocolInstance = new Protocol();\n      protocolInstance.fromObject(result);\n      result = protocolInstance;\n    }\n\n    return result;\n  }\n\n  /**\n   * Registers a function to be called when the protocol store is ready to persist hanging protocols\n   *\n   * NOTE: Strategies should implement this function\n   *\n   * @param callback The function to be called as a callback\n   */\n  onReady(callback) {\n    this.strategy.onReady(callback);\n  }\n\n  /**\n   * Gets the hanging protocol by protocolId if defined, otherwise all stored hanging protocols\n   *\n   * NOTE: Strategies should implement this function\n   *\n   * @param protocolId The protocol ID used to find the hanging protocol\n   * @returns {object|array} The hanging protocol by protocolId or array of the stored hanging protocols\n   */\n  getProtocol(protocolId) {\n    let result = this.strategy.getProtocol(protocolId);\n    return ProtocolStore.getProtocolInstance(result);\n  }\n\n  /**\n   * Stores the hanging protocol\n   *\n   * NOTE: Strategies should implement this function\n   *\n   * @param protocol The hanging protocol to be stored\n   */\n  addProtocol(protocol) {\n    this.strategy.addProtocol(protocol);\n  }\n\n  /**\n   * Updates the hanging protocol by protocolId\n   *\n   * NOTE: Strategies should implement this function\n   *\n   * @param protocolId The protocol ID used to find the hanging protocol to update\n   * @param protocol The updated hanging protocol\n   */\n  updateProtocol(protocolId, protocol) {\n    this.strategy.updateProtocol(protocolId, protocol);\n  }\n\n  /**\n   * Removes the hanging protocol\n   *\n   * NOTE: Strategies should implement this function\n   *\n   * @param protocolId The protocol ID used to remove the hanging protocol\n   */\n  removeProtocol(protocolId) {\n    this.strategy.removeProtocol(protocolId);\n  }\n}\n","import Protocol from '../classes/Protocol';\nimport ViewportStructure from '../classes/ViewportStructure';\nimport Viewport from '../classes/Viewport';\nimport Stage from '../classes/Stage';\n\nfunction getDefaultProtocol() {\n  const protocol = new Protocol('Default');\n  protocol.id = 'defaultProtocol';\n  protocol.locked = true;\n\n  const oneByOne = new ViewportStructure('grid', {\n    Rows: 1,\n    Columns: 1,\n  });\n\n  const viewport = new Viewport();\n  const first = new Stage(oneByOne, 'oneByOne');\n  first.viewports.push(viewport);\n\n  protocol.stages.push(first);\n\n  return protocol;\n}\n\nconst defaultProtocol = getDefaultProtocol();\n\nexport default defaultProtocol;\n","import ProtocolEngine from './ProtocolEngine.js';\nimport { ProtocolStore, ProtocolStrategy } from './protocolStore';\nimport { addCustomAttribute } from './customAttributes';\nimport { addCustomViewportSetting } from './customViewportSettings';\n\nconst hangingProtocols = {\n  ProtocolEngine,\n  ProtocolStore,\n  ProtocolStrategy,\n  addCustomAttribute,\n  addCustomViewportSetting,\n};\n\nexport default hangingProtocols;\n","import log from '../../../log';\nimport defaultProtocol from '../defaultProtocol';\n\nexport default class ProtocolStrategy {\n  constructor() {\n    this.hangingProtocols = new Map();\n    this.defaultsAdded = false;\n  }\n\n  /**\n   * Registers a function to be called when the hangingProtocols collection is subscribed\n   * The callback is called only one time when the subscription is ready\n   *\n   * @param callback The function to be called as a callback\n   */\n  onReady(callback) {\n    if (!this.defaultsAdded) {\n      log.info('Inserting the default hanging protocol...');\n      this.addProtocol(defaultProtocol);\n      this.defaultsAdded = true;\n    }\n\n    callback();\n  }\n\n  /**\n   * Gets the hanging protocol by protocolId if defined, otherwise all stored hanging protocols\n   *\n   * @param protocolId The protocol ID used to find the hanging protocol\n   * @returns {object|array} The hanging protocol by protocolId or array of the stored hanging protocols\n   */\n  getProtocol(protocolId) {\n    // Return the hanging protocol by protocolId if defined\n    if (protocolId) {\n      return this.hangingProtocols.get(protocolId);\n    }\n\n    // Otherwise, return all protocols\n    return Array.from(this.hangingProtocols.values());\n  }\n\n  /**\n   * Stores the hanging protocol\n   *\n   * @param protocol The hanging protocol to be stored\n   */\n  addProtocol(protocol) {\n    this.hangingProtocols.set(protocol.id, protocol);\n  }\n\n  /**\n   * Updates the hanging protocol by protocolId\n   *\n   * @param protocolId The protocol ID used to find the hanging protocol to update\n   * @param protocol The updated hanging protocol\n   */\n  updateProtocol(protocolId, protocol) {\n    if (!this.hangingProtocols.has(protocolId)) {\n      return;\n    }\n\n    this.hangingProtocols.set(protocolId, protocol);\n  }\n\n  /**\n   * Removes the hanging protocol\n   *\n   * @param protocolId The protocol ID used to remove the hanging protocol\n   */\n  removeProtocol(protocolId) {\n    if (!this.hangingProtocols.has(protocolId)) {\n      return;\n    }\n\n    this.hangingProtocols.delete(protocolId);\n  }\n}\n","//import Dropdown from './ui/dropdown/class.js';\n\n/*\n * Defines the base OHIF header object\n */\n//const dropdown = new OHIF.ui.Dropdown();\nconst header = {};\n\nexport default header;\n","// Transforms a shallow object with keys separated by \".\" into a nested object\nfunction getNestedObject(shallowObject) {\n  const nestedObject = {};\n  for (let key in shallowObject) {\n    if (!shallowObject.hasOwnProperty(key)) continue;\n    const value = shallowObject[key];\n    const propertyArray = key.split('.');\n    let currentObject = nestedObject;\n    while (propertyArray.length) {\n      const currentProperty = propertyArray.shift();\n      if (!propertyArray.length) {\n        currentObject[currentProperty] = value;\n      } else {\n        if (!currentObject[currentProperty]) {\n          currentObject[currentProperty] = {};\n        }\n\n        currentObject = currentObject[currentProperty];\n      }\n    }\n  }\n\n  return nestedObject;\n}\n\n// Transforms a nested object into a shallowObject merging its keys with \".\" character\nfunction getShallowObject(nestedObject) {\n  const shallowObject = {};\n  const putValues = (baseKey, nestedObject, resultObject) => {\n    for (let key in nestedObject) {\n      if (!nestedObject.hasOwnProperty(key)) continue;\n      let currentKey = baseKey ? `${baseKey}.${key}` : key;\n      const currentValue = nestedObject[key];\n      if (typeof currentValue === 'object') {\n        if (currentValue instanceof Array) {\n          currentKey += '[]';\n        }\n\n        putValues(currentKey, currentValue, resultObject);\n      } else {\n        resultObject[currentKey] = currentValue;\n      }\n    }\n  };\n\n  putValues('', nestedObject, shallowObject);\n  return shallowObject;\n}\n\nconst object = {\n  getNestedObject,\n  getShallowObject,\n};\n\nexport default object;\n","// TODO: This is duplicated in TypeSafeCollection\nfunction isObject(subject) {\n  return (\n    subject instanceof Object ||\n    (typeof subject === 'object' && subject !== null)\n  );\n}\n\n// TODO: This is duplicated in TypeSafeCollection\nfunction isString(subject) {\n  return typeof subject === 'string';\n}\n\n// Search for some string inside any object or array\nfunction search(object, query, property = null, result = []) {\n  // Create the search pattern\n  const pattern = new RegExp(query.trim(), 'i');\n\n  Object.keys(object).forEach(key => {\n    const item = object[key];\n\n    // Stop here if item is empty\n    if (!item) {\n      return;\n    }\n\n    // Get the value to be compared\n    const value = isString(property) ? item[property] : item;\n\n    // Check if the value match the pattern\n    if (isString(value) && pattern.test(value)) {\n      // Add the current item to the result\n      result.push(item);\n    }\n\n    if (isObject(item)) {\n      // Search recursively the item if the current item is an object\n      search(item, query, property, result);\n    }\n  });\n\n  // Return the found items\n  return result;\n}\n\n// Encode any string into a safe format for HTML id attribute\nfunction encodeId(input) {\n  const string = input && input.toString ? input.toString() : input;\n\n  // Return an underscore if the given string is empty or if it's not a string\n  if (string === '' || typeof string !== 'string') {\n    return '_';\n  }\n\n  // Create a converter to replace non accepted chars\n  const converter = match => '_' + match[0].charCodeAt(0).toString(16) + '_';\n\n  // Encode the given string and return it\n  return string.replace(/[^a-zA-Z0-9-]/g, converter);\n}\n\nconst string = {\n  search,\n  encodeId,\n};\n\nexport default string;\n","import unsavedChanges from './unsavedChanges.js';\nimport handleError from './handleError.js';\nimport isCharacterKeyPress from './isCharacterKeyPress.js';\nimport getOffset from './getOffset.js';\nimport getScrollbarSize from './getScrollbarSize.js';\n\nconst ui = {\n  getScrollbarSize,\n  getOffset,\n  isCharacterKeyPress,\n  handleError,\n};\n\nexport default ui;\n","/**\n * Get the vertical and horizontal scrollbar sizes\n * Got from https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n *\n * @returns {Array} Array containing the scrollbar horizontal and vertical sizes\n */\nexport default function getScrollbarSize() {\n  const inner = document.createElement('p');\n  inner.style.width = '100%';\n  inner.style.height = '100%';\n\n  const outer = document.createElement('div');\n  outer.style.position = 'absolute';\n  outer.style.top = '0px';\n  outer.style.left = '0px';\n  outer.style.visibility = 'hidden';\n  outer.style.width = '100px';\n  outer.style.height = '100px';\n  outer.style.overflow = 'hidden';\n  outer.appendChild(inner);\n\n  document.body.appendChild(outer);\n\n  const w1 = inner.offsetWidth;\n  const h1 = inner.offsetHeight;\n  outer.style.overflow = 'scroll';\n  let w2 = inner.offsetWidth;\n  let h2 = inner.offsetHeight;\n\n  if (w1 === w2) {\n    w2 = outer.clientWidth;\n  }\n\n  if (h1 === h2) {\n    h2 = outer.clientHeight;\n  }\n\n  document.body.removeChild(outer);\n\n  return [w1 - w2, h1 - h2];\n}\n","/**\n * Get the offset for the given element\n *\n * @param {Object} element DOM element which will have the offser calculated\n * @returns {Object} Object containing the top and left offset\n */\nexport default function getOffset(element) {\n  let top = 0;\n  let left = 0;\n  if (element.offsetParent) {\n    do {\n      left += element.offsetLeft;\n      top += element.offsetTop;\n    } while ((element = element.offsetParent));\n  }\n\n  return {\n    left,\n    top,\n  };\n}\n","/**\n * Check if the pressed key combination will result in a character input\n * Got from https://stackoverflow.com/questions/4179708/how-to-detect-if-the-pressed-key-will-produce-a-character-inside-an-input-text\n *\n * @returns {Boolean} Whether the pressed key combination will input a character or not\n */\nexport default function isCharacterKeyPress(event) {\n  if (typeof event.which === 'undefined') {\n    // This is IE, which only fires keypress events for printable keys\n    return true;\n  } else if (typeof event.which === 'number' && event.which > 0) {\n    // In other browsers except old versions of WebKit, event.which is\n    // only greater than zero if the keypress is a printable key.\n    // We need to filter out backspace and ctrl/alt/meta key combinations\n    return (\n      !event.ctrlKey && !event.metaKey && !event.altKey && event.which !== 8\n    );\n  }\n\n  return false;\n}\n","import log from '../log.js';\n\nexport default function handleError(error) {\n  let { title, message } = error;\n\n  if (!title) {\n    if (error instanceof Error) {\n      title = error.name;\n    }\n  }\n\n  if (!message) {\n    if (error instanceof Error) {\n      message = error.message;\n    }\n  }\n\n  const data = Object.assign(\n    {\n      title,\n      message,\n      class: 'themed',\n      hideConfirm: true,\n      cancelLabel: 'Dismiss',\n      cancelClass: 'btn-secondary',\n    },\n    error || {}\n  );\n\n  log.error(error);\n  // TODO: Find a better way to handle errors instead of displaying a dialog for all of them.\n  // OHIF.ui.showDialog('dialogForm', data);\n}\n","import './lib';\n\nimport { ExtensionManager, MODULE_TYPES } from './extensions';\nimport { ServicesManager } from './services';\nimport classes, { CommandsManager, HotkeysManager } from './classes/';\n\nimport DICOMWeb from './DICOMWeb';\nimport DICOMSR from './DICOMSR';\nimport cornerstone from './cornerstone.js';\nimport hangingProtocols from './hanging-protocols';\nimport header from './header.js';\nimport log from './log.js';\nimport measurements from './measurements';\nimport metadata from './classes/metadata/';\nimport object from './object.js';\nimport redux from './redux/';\nimport string from './string.js';\nimport studies from './studies/';\nimport ui from './ui';\nimport user from './user.js';\nimport errorHandler from './errorHandler.js';\nimport utils, { hotkeys } from './utils/';\nimport str2ab from './utils/str2ab';\n\nimport {\n  UINotificationService,\n  UIModalService,\n  UIDialogService,\n  MeasurementService,\n  LoggerService,\n} from './services';\n\nconst OHIF = {\n  MODULE_TYPES,\n  //\n  CommandsManager,\n  ExtensionManager,\n  HotkeysManager,\n  ServicesManager,\n  //\n  utils,\n  hotkeys,\n  studies,\n  redux,\n  classes,\n  metadata,\n  header,\n  cornerstone,\n  string,\n  ui,\n  user,\n  errorHandler,\n  object,\n  log,\n  DICOMWeb,\n  DICOMSR,\n  viewer: {},\n  measurements,\n  hangingProtocols,\n  //\n  UINotificationService,\n  UIModalService,\n  UIDialogService,\n  MeasurementService,\n  LoggerService,\n};\n\nexport {\n  MODULE_TYPES,\n  //\n  CommandsManager,\n  ExtensionManager,\n  HotkeysManager,\n  ServicesManager,\n  //\n  utils,\n  hotkeys,\n  studies,\n  redux,\n  classes,\n  metadata,\n  header,\n  cornerstone,\n  string,\n  ui,\n  user,\n  errorHandler,\n  object,\n  log,\n  DICOMWeb,\n  DICOMSR,\n  measurements,\n  hangingProtocols,\n  //\n  UINotificationService,\n  UIModalService,\n  UIDialogService,\n  MeasurementService,\n  LoggerService,\n\n  str2ab,\n};\n\nexport { OHIF };\n\nexport default OHIF;\n","// Return the array sorting function for its object's properties\nexport default function sortBy() {\n  var fields = [].slice.call(arguments),\n    n_fields = fields.length;\n\n  return function(A, B) {\n    var a, b, field, key, reverse, result, i;\n\n    for (i = 0; i < n_fields; i++) {\n      result = 0;\n      field = fields[i];\n\n      key = typeof field === 'string' ? field : field.name;\n\n      a = A[key];\n      b = B[key];\n\n      if (typeof field.primer !== 'undefined') {\n        a = field.primer(a);\n        b = field.primer(b);\n      }\n\n      reverse = field.reverse ? -1 : 1;\n\n      if (a < b) {\n        result = reverse * -1;\n      }\n\n      if (a > b) {\n        result = reverse * 1;\n      }\n\n      if (result !== 0) {\n        break;\n      }\n    }\n\n    return result;\n  };\n}\n","import OHIFError from '../classes/OHIFError.js';\nimport getImageId from './getImageId';\nimport metadataProvider from '../classes/MetadataProvider.js';\n\nlet stackMap = {};\nlet configuration = {};\nconst stackUpdatedCallbacks = [];\n\n/**\n * Loop through the current series and add metadata to the\n * Cornerstone meta data provider. This will be used to fill information\n * into the viewport overlays, and to calculate reference lines and orientation markers\n * @param  {Object} stackMap              stackMap object\n * @param  {Object} study                 Study object\n * @param  {Object} displaySet            The set of images to make the stack from\n * @return {Array}                        Array with image IDs\n */\nfunction createAndAddStack(stackMap, study, displaySet, stackUpdatedCallbacks) {\n  const images = displaySet.images;\n  if (!images) {\n    return;\n  }\n\n  const numImages = images.length;\n  const imageIds = [];\n  let imageId;\n\n  displaySet.images.forEach((instance, imageIndex) => {\n    const image = instance.getData();\n    const metaData = {\n      instance: image, // in this context, instance will be the data of the InstanceMetadata object...\n      series: displaySet, // TODO: Check this\n      study,\n      numImages,\n      imageIndex: imageIndex + 1,\n    };\n\n    const naturalizedInstance = instance.getData().metadata;\n    const NumberOfFrames = naturalizedInstance.NumberOfFrames;\n\n    if (NumberOfFrames > 1) {\n      for (let i = 0; i < NumberOfFrames; i++) {\n        metaData.frameNumber = i;\n        imageId = getImageId(image, i);\n        imageIds.push(imageId);\n\n        const {\n          StudyInstanceUID,\n          SeriesInstanceUID,\n          SOPInstanceUID,\n        } = instance.getData().metadata;\n\n        metadataProvider.addImageIdToUIDs(imageId, {\n          StudyInstanceUID,\n          SeriesInstanceUID,\n          SOPInstanceUID,\n        });\n      }\n    } else {\n      metaData.frameNumber = 1;\n      imageId = getImageId(image);\n      imageIds.push(imageId);\n\n      const {\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        SOPInstanceUID,\n      } = naturalizedInstance;\n\n      metadataProvider.addImageIdToUIDs(imageId, {\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        SOPInstanceUID,\n      });\n    }\n  });\n\n  const stack = {\n    StudyInstanceUID: study.StudyInstanceUID,\n    displaySetInstanceUID: displaySet.displaySetInstanceUID,\n    imageIds,\n    frameRate: displaySet.frameRate,\n    isClip: displaySet.isClip,\n  };\n\n  stackMap[displaySet.displaySetInstanceUID] = stack;\n\n  return stack;\n}\n\nconfiguration = {\n  createAndAddStack,\n};\n\n/**\n * This object contains all the functions needed for interacting with the stack manager.\n * Generally, findStack is the only function used. If you want to know when new stacks\n * come in, you can register a callback with addStackUpdatedCallback.\n */\nconst StackManager = {\n  /**\n   * Removes all current stacks\n   */\n  clearStacks() {\n    stackMap = {};\n  },\n  /**\n   * Create a stack from an image set, as well as add in the metadata on a per image bases.\n   * @param study The study who's metadata will be added\n   * @param displaySet The set of images to make the stack from\n   * @return {Array} Array with image IDs\n   */\n  makeAndAddStack(study, displaySet) {\n    return configuration.createAndAddStack(\n      stackMap,\n      study,\n      displaySet,\n      stackUpdatedCallbacks\n    );\n  },\n  /**\n   * Find a stack from the currently created stacks.\n   * @param displaySetInstanceUID The UID of the stack to find.\n   * @returns {*} undefined if not found, otherwise the stack object is returned.\n   */\n  findStack(displaySetInstanceUID) {\n    return stackMap[displaySetInstanceUID];\n  },\n  /**\n   * Find a stack or reate one if it has not been created yet\n   * @param study The study who's metadata will be added\n   * @param displaySet The set of images to make the stack from\n   * @return {Array} Array with image IDs\n   */\n  findOrCreateStack(study, displaySet) {\n    let stack = this.findStack(displaySet.displaySetInstanceUID);\n\n    if (!stack || !stack.imageIds) {\n      stack = this.makeAndAddStack(study, displaySet);\n    }\n\n    return stack;\n  },\n  /**\n   * Gets the underlying map of displaySetInstanceUID to stack object.\n   * WARNING: Do not change this object. It directly affects the manager.\n   * @returns {{}} map of displaySetInstanceUID -> stack.\n   */\n  getAllStacks() {\n    return stackMap;\n  },\n  /**\n   * Adds in a callback to be called on a stack being added / updated.\n   * @param callback must accept at minimum one argument,\n   * which is the stack that was added / updated.\n   */\n  addStackUpdatedCallback(callback) {\n    if (typeof callback !== 'function') {\n      throw new OHIFError('callback must be provided as a function');\n    }\n    stackUpdatedCallbacks.push(callback);\n  },\n  /**\n   * Return configuration\n   */\n  getConfiguration() {\n    return configuration;\n  },\n  /**\n   * Set configuration, in order to provide compatibility\n   * with other systems by overriding this functions\n   * @param {Object} config object with functions to be overrided\n   *\n   * For now, only makeAndAddStack can be overrided\n   */\n  setConfiguration(config) {\n    configuration = config;\n  },\n};\n\nexport { StackManager };\nexport default StackManager;\n","import guid from '../utils/guid';\n\n/**\n * Constants\n */\nconst PROPERTY_SEPARATOR = '.';\nconst ORDER_ASC = 'asc';\nconst ORDER_DESC = 'desc';\nconst MIN_COUNT = 0x00000000;\nconst MAX_COUNT = 0x7fffffff;\n\n/**\n * Class Definition\n */\nexport class TypeSafeCollection {\n  constructor() {\n    this._operationCount = MIN_COUNT;\n    this._elementList = [];\n    this._handlers = Object.create(null);\n  }\n\n  /**\n   * Private Methods\n   */\n\n  _invalidate() {\n    let count = this._operationCount;\n    this._operationCount = count < MAX_COUNT ? count + 1 : MIN_COUNT;\n  }\n\n  _elements(silent) {\n    silent === true || this._operationCount;\n    return this._elementList;\n  }\n\n  _elementWithPayload(payload, silent) {\n    return this._elements(silent).find(item => item.payload === payload);\n  }\n\n  _elementWithId(id, silent) {\n    return this._elements(silent).find(item => item.id === id);\n  }\n\n  _trigger(event, data) {\n    let handlers = this._handlers;\n    if (event in handlers) {\n      handlers = handlers[event];\n      if (!(handlers instanceof Array)) {\n        return;\n      }\n      for (let i = 0, limit = handlers.length; i < limit; ++i) {\n        let handler = handlers[i];\n        if (_isFunction(handler)) {\n          handler.call(null, data);\n        }\n      }\n    }\n  }\n\n  /**\n   * Public Methods\n   */\n\n  onInsert(callback) {\n    if (_isFunction(callback)) {\n      let handlers = this._handlers.insert;\n      if (!(handlers instanceof Array)) {\n        handlers = [];\n        this._handlers.insert = handlers;\n      }\n      handlers.push(callback);\n    }\n  }\n\n  /**\n   * Update the payload associated with the given ID to be the new supplied payload.\n   * @param {string} id The ID of the entry that will be updated.\n   * @param {any} payload The element that will replace the previous payload.\n   * @returns {boolean} Returns true if the given ID is present in the collection, false otherwise.\n   */\n  updateById(id, payload) {\n    let result = false,\n      found = this._elementWithPayload(payload, true);\n    if (found) {\n      // nothing to do since the element is already in the collection...\n      if (found.id === id) {\n        // set result to true since the ids match...\n        result = true;\n        this._invalidate();\n      }\n    } else {\n      found = this._elementWithId(id, true);\n      if (found) {\n        found.payload = payload;\n        result = true;\n        this._invalidate();\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Signal that the given element has been changed by notifying reactive data-source observers.\n   * This method is basically a means to invalidate the inernal reactive data-source.\n   * @param {any} payload The element that has been altered.\n   * @returns {boolean} Returns true if the element is present in the collection, false otherwise.\n   */\n  update(payload) {\n    let result = false,\n      found = this._elementWithPayload(payload, true);\n    if (found) {\n      // nothing to do since the element is already in the collection...\n      result = true;\n      this._invalidate();\n    }\n    return result;\n  }\n\n  /**\n   * Insert an element in the collection. On success, the element ID (a unique string) is returned. On failure, returns null.\n   * A failure scenario only happens when the given payload is already present in the collection. Note that NO exceptions are thrown!\n   * @param {any} payload The element to be stored.\n   * @returns {string} The ID of the inserted element or null if the element already exists...\n   */\n  insert(payload) {\n    let id = null,\n      found = this._elementWithPayload(payload, true);\n    if (!found) {\n      id = guid();\n      this._elements(true).push({ id, payload });\n      this._invalidate();\n      this._trigger('insert', { id, data: payload });\n    }\n    return id;\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @returns {void} No meaningful value is returned.\n   */\n  removeAll() {\n    let all = this._elements(true),\n      length = all.length;\n    for (let i = length - 1; i >= 0; i--) {\n      let item = all[i];\n      delete item.id;\n      delete item.payload;\n      all[i] = null;\n    }\n    all.splice(0, length);\n    this._invalidate();\n  }\n\n  /**\n   * Remove elements from the collection that match the criteria given in the property map.\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n   * @returns {Array} A list with all removed elements.\n   */\n  remove(propertyMap) {\n    let found = this.findAllEntriesBy(propertyMap),\n      foundCount = found.length,\n      removed = [];\n    if (foundCount > 0) {\n      const all = this._elements(true);\n      for (let i = foundCount - 1; i >= 0; i--) {\n        let item = found[i];\n        all.splice(item[2], 1);\n        removed.push(item[0]);\n      }\n      this._invalidate();\n    }\n    return removed;\n  }\n\n  /**\n   * Provides the ID of the given element inside the collection.\n   * @param {any} payload The element being searched for.\n   * @returns {string} The ID of the given element or undefined if the element is not present.\n   */\n  getElementId(payload) {\n    let found = this._elementWithPayload(payload);\n    return found && found.id;\n  }\n\n  /**\n   * Provides the position of the given element in the internal list returning -1 if the element is not present.\n   * @param {any} payload The element being searched for.\n   * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.\n   */\n  findById(id) {\n    let found = this._elementWithId(id);\n    return found && found.payload;\n  }\n\n  /**\n   * Provides the position of the given element in the internal list returning -1 if the element is not present.\n   * @param {any} payload The element being searched for.\n   * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.\n   */\n  indexOfElement(payload) {\n    return this._elements().indexOf(this._elementWithPayload(payload, true));\n  }\n\n  /**\n   * Provides the position of the element associated with the given ID in the internal list returning -1 if the element is not present.\n   * @param {string} id The index of the element.\n   * @returns {number} The position of the element associated with the given ID in the internal list. If the element is not present -1 is returned.\n   */\n  indexOfId(id) {\n    return this._elements().indexOf(this._elementWithId(id, true));\n  }\n\n  /**\n   * Provides a list-like approach to the collection returning an element by index.\n   * @param {number} index The index of the element.\n   * @returns {any} If out of bounds, undefined is returned. Otherwise the element in the given position is returned.\n   */\n  getElementByIndex(index) {\n    let found = this._elements()[index >= 0 ? index : -1];\n    return found && found.payload;\n  }\n\n  /**\n   * Find an element by a criteria defined by the given callback function.\n   * Attention!!! The reactive source will not be notified if no valid callback is supplied...\n   * @param {function} callback A callback function which will define the search criteria. The callback\n   * function will be passed the collection element, its ID and its index in this very order. The callback\n   * shall return true when its criterea has been fulfilled.\n   * @returns {any} The matched element or undefined if not match was found.\n   */\n  find(callback) {\n    let found;\n    if (_isFunction(callback)) {\n      found = this._elements().find((item, index) => {\n        return callback.call(this, item.payload, item.id, index);\n      });\n    }\n    return found && found.payload;\n  }\n\n  /**\n   * Find the first element that strictly matches the specified property map.\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\n   * but is not valid, an exception will be thrown.\n   * @returns {Any} The matched element or undefined if not match was found.\n   */\n  findBy(propertyMap, options) {\n    let found;\n    if (_isObject(options)) {\n      // if the \"options\" argument is provided and is a valid object,\n      // it must be applied to the dataset before search...\n      const all = this.all(options);\n      if (all.length > 0) {\n        if (_isObject(propertyMap)) {\n          found = all.find(item =>\n            _compareToPropertyMapStrict(propertyMap, item)\n          );\n        } else {\n          found = all[0]; // simply extract the first element...\n        }\n      }\n    } else if (_isObject(propertyMap)) {\n      found = this._elements().find(item =>\n        _compareToPropertyMapStrict(propertyMap, item.payload)\n      );\n      if (found) {\n        found = found.payload;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Find all elements that strictly match the specified property map.\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n   * @returns {Array} An array of entries of all elements that match the given criteria. Each set in\n   * in the array has the following format: [ elementData, elementId, elementIndex ].\n   */\n  findAllEntriesBy(propertyMap) {\n    const found = [];\n    if (_isObject(propertyMap)) {\n      this._elements().forEach((item, index) => {\n        if (_compareToPropertyMapStrict(propertyMap, item.payload)) {\n          // Match! Add it to the found list...\n          found.push([item.payload, item.id, index]);\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Find all elements that match a specified property map.\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\n   * but is not valid, an exception will be thrown.\n   * @returns {Array} An array with all elements that match the given criteria and sorted in the specified sorting order.\n   */\n  findAllBy(propertyMap, options) {\n    const found = this.findAllEntriesBy(propertyMap).map(item => item[0]); // Only payload is relevant...\n    if (_isObject(options)) {\n      if ('sort' in options) {\n        _sortListBy(found, options.sort);\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Executes the supplied callback function for each element of the collection.\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\n   * @param {function} callback The callback function to be executed. The callback is passed the element,\n   * its ID and its index in this very order.\n   * @returns {void} Nothing is returned.\n   */\n  forEach(callback) {\n    if (_isFunction(callback)) {\n      this._elements().forEach((item, index) => {\n        callback.call(this, item.payload, item.id, index);\n      });\n    }\n  }\n\n  /**\n   * Count the number of elements currently in the collection.\n   * @returns {number} The current number of elements in the collection.\n   */\n  count() {\n    return this._elements().length;\n  }\n\n  /**\n   * Returns a list with all elements of the collection optionally sorted by a sorting specifier criteria.\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\n   * but is not valid, an exception will be thrown.\n   * @returns {Array} An array with all elements stored in the collection.\n   */\n  all(options) {\n    let list = this._elements().map(item => item.payload);\n    if (_isObject(options)) {\n      if ('sort' in options) {\n        _sortListBy(list, options.sort);\n      }\n    }\n    return list;\n  }\n}\n\n/**\n * Utility Functions\n */\n\n/**\n * Test if supplied argument is a valid object for current class purposes.\n * Atention! The underscore version of this function should not be used for performance reasons.\n */\nfunction _isObject(subject) {\n  return (\n    subject instanceof Object ||\n    (typeof subject === 'object' && subject !== null)\n  );\n}\n\n/**\n * Test if supplied argument is a valid string for current class purposes.\n * Atention! The underscore version of this function should not be used for performance reasons.\n */\nfunction _isString(subject) {\n  return typeof subject === 'string';\n}\n\n/**\n * Test if supplied argument is a valid function for current class purposes.\n * Atention! The underscore version of this function should not be used for performance reasons.\n */\nfunction _isFunction(subject) {\n  return typeof subject === 'function';\n}\n\n/**\n * Shortcut for Object's prototype \"hasOwnProperty\" method.\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Retrieve an object's property value by name. Composite property names (e.g., 'address.country.name') are accepted.\n * @param {Object} targetObject The object we want read the property from...\n * @param {String} propertyName The property to be read (e.g., 'address.street.name' or 'address.street.number'\n * to read object.address.street.name or object.address.street.number, respectively);\n * @returns {Any} Returns whatever the property holds or undefined if the property cannot be read or reached.\n */\nfunction _getPropertyValue(targetObject, propertyName) {\n  let propertyValue; // undefined (the default return value)\n  if (_isObject(targetObject) && _isString(propertyName)) {\n    const fragments = propertyName.split(PROPERTY_SEPARATOR);\n    const fragmentCount = fragments.length;\n    if (fragmentCount > 0) {\n      const firstFragment = fragments[0];\n      const remainingFragments =\n        fragmentCount > 1 ? fragments.slice(1).join(PROPERTY_SEPARATOR) : null;\n      propertyValue = targetObject[firstFragment];\n      if (remainingFragments !== null) {\n        propertyValue = _getPropertyValue(propertyValue, remainingFragments);\n      }\n    }\n  }\n  return propertyValue;\n}\n\n/**\n * Compare a property map with a target object using strict comparison.\n * @param {Object} propertyMap The property map whose properties will be used for comparison. Composite\n * property names (e.g., 'address.country.name') will be tested against the \"resolved\" properties from the target object.\n * @param {Object} targetObject The target object whose properties will be tested.\n * @returns {boolean} Returns true if the properties match, false otherwise.\n */\nfunction _compareToPropertyMapStrict(propertyMap, targetObject) {\n  let result = false;\n  // \"for in\" loops do not thown exceptions for invalid data types...\n  for (let propertyName in propertyMap) {\n    if (_hasOwnProperty.call(propertyMap, propertyName)) {\n      if (\n        propertyMap[propertyName] !==\n        _getPropertyValue(targetObject, propertyName)\n      ) {\n        result = false;\n        break;\n      } else if (result !== true) {\n        result = true;\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if a sorting specifier is valid.\n * A valid sorting specifier consists of an array of arrays being each subarray a pair\n * in the format [\"property name\", \"sorting order\"].\n * The following exemple can be used to sort studies by \"date\"\" and use \"time\" to break ties in descending order.\n * [ [ 'study.date', 'desc' ], [ 'study.time', 'desc' ] ]\n * @param {Array} specifiers The sorting specifier to be tested.\n * @returns {boolean} Returns true if the specifiers are valid, false otherwise.\n */\nfunction _isValidSortingSpecifier(specifiers) {\n  let result = true;\n  if (specifiers instanceof Array && specifiers.length > 0) {\n    for (let i = specifiers.length - 1; i >= 0; i--) {\n      const item = specifiers[i];\n      if (item instanceof Array) {\n        const property = item[0];\n        const order = item[1];\n        if (\n          _isString(property) &&\n          (order === ORDER_ASC || order === ORDER_DESC)\n        ) {\n          continue;\n        }\n      }\n      result = false;\n      break;\n    }\n  }\n  return result;\n}\n\n/**\n * Sorts an array based on sorting specifier options.\n * @param {Array} list The that needs to be sorted.\n * @param {Array} specifiers An array of specifiers. Please read isValidSortingSpecifier method definition for further details.\n * @returns {void} No value is returned. The array is sorted in place.\n */\nfunction _sortListBy(list, specifiers) {\n  if (list instanceof Array && _isValidSortingSpecifier(specifiers)) {\n    const specifierCount = specifiers.length;\n    list.sort(function _sortListByCallback(a, b) {\n      // callback name for stack traces...\n      let index = 0;\n      while (index < specifierCount) {\n        const specifier = specifiers[index];\n        const property = specifier[0];\n        const order = specifier[1] === ORDER_DESC ? -1 : 1;\n        const aValue = _getPropertyValue(a, property);\n        const bValue = _getPropertyValue(b, property);\n        // @TODO: should we check for the types being compared, like:\n        // ~~ if (typeof aValue !== typeof bValue) continue;\n        // Not sure because dates, for example, can be correctly compared to numbers...\n        if (aValue < bValue) {\n          return order * -1;\n        }\n        if (aValue > bValue) {\n          return order * 1;\n        }\n        if (++index >= specifierCount) {\n          return 0;\n        }\n      }\n    });\n  } else {\n    throw new Error('Invalid Arguments');\n  }\n}\n","const displayFunction = data => {\n  return data.text || '';\n};\n\nexport const arrowAnnotate = {\n  id: 'ArrowAnnotate',\n  name: 'ArrowAnnotate',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'ArrowAnnotate',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  if (data.shortestDiameter) {\n    // TODO: Make this check criteria again to see if we should display shortest x longest\n    return data.longestDiameter + ' x ' + data.shortestDiameter;\n  }\n\n  return data.longestDiameter;\n};\n\nexport const bidirectional = {\n  id: 'Bidirectional',\n  name: 'Target',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'Bidirectional',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  let meanValue = '';\n  const { cachedStats } = data;\n  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {\n    meanValue = cachedStats.mean.toFixed(2) + ' HU';\n  }\n  return meanValue;\n};\n\nexport const ellipticalRoi = {\n  id: 'EllipticalRoi',\n  name: 'Ellipse',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'EllipticalRoi',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  let meanValue = '';\n  const { cachedStats } = data;\n  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {\n    meanValue = cachedStats.mean.toFixed(2) + ' HU';\n  }\n  return meanValue;\n};\n\nexport const circleRoi = {\n  id: 'CircleRoi',\n  name: 'Circle',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'CircleRoi',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  let meanValue = '';\n  if (data.meanStdDev && data.meanStdDev.mean && !isNaN(data.meanStdDev.mean)) {\n    meanValue = data.meanStdDev.mean.toFixed(2) + ' HU';\n  }\n  return meanValue;\n};\n\nexport const freehandMouse = {\n  id: 'FreehandMouse',\n  name: 'Freehand',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'FreehandMouse',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  let lengthValue = '';\n  if (data.length && !isNaN(data.length)) {\n    lengthValue = data.length.toFixed(2) + ' mm';\n  }\n  return lengthValue;\n};\n\nexport const length = {\n  id: 'Length',\n  name: 'Length',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'Length',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","export const nonTarget = {\n  id: 'NonTarget',\n  name: 'Non-Target',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'NonTarget',\n  options: {\n    measurementTable: {\n      displayFunction: data => data.response,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  let meanValue = '';\n  const { cachedStats } = data;\n  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {\n    meanValue = cachedStats.mean.toFixed(2) + ' HU';\n  }\n  return meanValue;\n};\n\nexport const rectangleRoi = {\n  id: 'RectangleRoi',\n  name: 'Rectangle',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'RectangleRoi',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  let text = '';\n  if (data.rAngle && !isNaN(data.rAngle)) {\n    text = data.rAngle.toFixed(2) + String.fromCharCode(parseInt('00B0', 16));\n  }\n  return text;\n};\n\nexport const angle = {\n  id: 'Angle',\n  name: 'Angle',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'Angle',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","export const targetCR = {\n  id: 'TargetCR',\n  name: 'CR Target',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'TargetCR',\n  options: {\n    measurementTable: {\n      displayFunction: data => data.response,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","export const targetNE = {\n  id: 'TargetNE',\n  name: 'NE Target',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'TargetNE',\n  options: {\n    measurementTable: {\n      displayFunction: data => data.response,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","export const targetUN = {\n  id: 'TargetUN',\n  name: 'UN Target',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'TargetUN',\n  options: {\n    measurementTable: {\n      displayFunction: data => data.response,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","export const dicomSRDisplayTool = {\n  id: 'DICOMSRDisplayTool',\n  name: 'DICOMSRDisplayTool',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'DICOMSRDisplayTool',\n  options: {\n    measurementTable: {\n      displayFunction: data => {\n        return `(SR) ${data.lesionNamingNumber ||\n          data.measurementNumber ||\n          data.text ||\n          ''}`;\n      },\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n\nexport default dicomSRDisplayTool;\n","import * as tools from '../tools';\n\nconst childTools = [];\nObject.keys(tools).forEach(key => childTools.push(tools[key]));\n\nexport const allTools = {\n  id: 'allTools',\n  name: 'Measurements',\n  childTools: childTools,\n  options: {\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","import { allTools } from './toolGroups/allTools';\nimport {\n  retrieveMeasurements,\n  storeMeasurements,\n  retrieveTimepoints,\n  storeTimepoints,\n  removeTimepoint,\n  updateTimepoint,\n  disassociateStudy,\n} from './dataExchange';\n\nconst measurementApiDefaultConfig = {\n  measurementTools: [allTools],\n  newLesions: [\n    {\n      id: 'newTargets',\n      name: 'New Targets',\n      toolGroupId: 'targets',\n    },\n    {\n      id: 'newNonTargets',\n      name: 'New Non-Targets',\n      toolGroupId: 'nonTargets',\n    },\n  ],\n  dataExchange: {\n    retrieve: retrieveMeasurements,\n    store: storeMeasurements,\n  },\n};\n\nconst timepointApiDefaultConfig = {\n  dataExchange: {\n    retrieve: retrieveTimepoints,\n    store: storeTimepoints,\n    remove: removeTimepoint,\n    update: updateTimepoint,\n    disassociate: disassociateStudy,\n  },\n};\n\nexport { measurementApiDefaultConfig, timepointApiDefaultConfig };\n","import log from '../log';\n\nexport const retrieveMeasurements = (PatientID, timepointIds) => {\n  log.error('retrieveMeasurements');\n  return Promise.resolve();\n};\n\nexport const storeMeasurements = (measurementData, timepointIds) => {\n  log.error('storeMeasurements');\n  return Promise.resolve();\n};\n\nexport const retrieveTimepoints = filter => {\n  log.error('retrieveTimepoints');\n  return Promise.resolve();\n};\n\nexport const storeTimepoints = timepointData => {\n  log.error('storeTimepoints');\n  return Promise.resolve();\n};\n\nexport const updateTimepoint = (timepointData, query) => {\n  log.error('updateTimepoint');\n  return Promise.resolve();\n};\n\nexport const removeTimepoint = timepointId => {\n  log.error('removeTimepoint');\n  return Promise.resolve();\n};\n\nexport const disassociateStudy = (timepointIds, StudyInstanceUID) => {\n  log.error('disassociateStudy');\n  return Promise.resolve();\n};\n","import log from '../../log';\nimport { timepointApiDefaultConfig } from './../configuration.js';\n\nconst configuration = {\n  ...timepointApiDefaultConfig,\n};\n\nconst TIMEPOINT_TYPE_NAMES = {\n  prebaseline: 'Pre-Baseline',\n  baseline: 'Baseline',\n  followup: 'Follow-up',\n};\n\nexport default class TimepointApi {\n  static Instance;\n\n  static setConfiguration(config) {\n    Object.assign(configuration, config);\n  }\n\n  static getConfiguration() {\n    return configuration;\n  }\n\n  constructor(currentTimepointId, options = {}) {\n    if (TimepointApi.Instance) {\n      TimepointApi.Instance.initialize(currentTimepointId, options);\n      return TimepointApi.Instance;\n    }\n\n    this.initialize(currentTimepointId, options);\n    TimepointApi.Instance = this;\n  }\n\n  initialize(currentTimepointId, options = {}) {\n    this.currentTimepointId = currentTimepointId;\n    this.comparisonTimepointKey = options.comparisonTimepointKey || 'baseline';\n    this.options = options;\n    this.timepoints = [];\n  }\n\n  onTimepointsUpdated() {\n    if (typeof this.options.onTimepointsUpdated !== 'function') {\n      log.warn('Timepoints update callback is not defined');\n      return;\n    }\n\n    this.options.onTimepointsUpdated(Object.assign([], this.timepoints));\n  }\n\n  calculateVisitNumber(timepoint) {\n    // Retrieve all of the relevant follow-up timepoints for this patient\n    const sortedTimepoints = this.timepoints.sort((tp1, tp2) => {\n      return tp1.visitDate > tp2.visitDate ? 1 : -1;\n    });\n    const filteredTimepoints = sortedTimepoints.find(\n      tp =>\n        tp.PatientID === timepoint.PatientID &&\n        tp.timepointType === timepoint.timepointType\n    );\n\n    // Create an array of just timepointIds, so we can use indexOf\n    // on it to find the current timepoint's relative position\n    const timepointIds = filteredTimepoints.map(\n      timepoint => timepoint.timepointId\n    );\n\n    // Calculate the index of the current timepoint in the array of all\n    // relevant follow-up timepoints\n    const visitNumber = timepointIds.indexOf(timepoint.timepointId) + 1;\n\n    // If visitNumber is 0, it means that the current timepoint was not in the list\n    if (!visitNumber) {\n      throw new Error(\n        'Current timepoint was not in the list of relevant timepoints?'\n      );\n    }\n\n    return visitNumber;\n  }\n\n  retrieveTimepoints(filter) {\n    const retrievalFn = configuration.dataExchange.retrieve;\n    if (typeof retrievalFn !== 'function') {\n      log.error('Timepoint retrieval function has not been configured.');\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      retrievalFn(filter)\n        .then(timepointData => {\n          log.info('Timepoint data retrieval');\n\n          timepointData.forEach(timepoint => {\n            const timepointIndex = this.timepoints.findIndex(\n              tp => tp.timepointId === timepoint.timepointId\n            );\n            if (timepointIndex < 0) {\n              this.timepoints.push(timepoint);\n            } else {\n              this.timepoints[timepointIndex] = timepoint;\n            }\n          });\n\n          // Let others know that the timepoints are updated\n          this.onTimepointsUpdated();\n\n          resolve();\n        })\n        .catch(reason => {\n          log.error(`Timepoint retrieval function failed: ${reason}`);\n          reject(reason);\n        });\n    });\n  }\n\n  storeTimepoints() {\n    const storeFn = configuration.dataExchange.store;\n    if (typeof storeFn !== 'function') {\n      log.error('Timepoint store function has not been configured.');\n      return;\n    }\n\n    log.info('Preparing to store timepoints');\n    log.info(JSON.stringify(this.timepoints, null, 2));\n\n    storeFn(this.timepoints).then(() =>\n      log.info('Timepoint storage completed')\n    );\n  }\n\n  disassociateStudy(timepointIds, StudyInstanceUID) {\n    const disassociateFn = configuration.dataExchange.disassociate;\n    if (typeof disassociateFn !== 'function') {\n      log.error('Study disassociate function has not been configured.');\n      return;\n    }\n\n    disassociateFn(timepointIds, StudyInstanceUID).then(() => {\n      log.info('Disassociation completed');\n\n      this.timepoints = [];\n      this.retrieveTimepoints({});\n    });\n  }\n\n  removeTimepoint(timepointId) {\n    const removeFn = configuration.dataExchange.remove;\n    if (typeof removeFn !== 'function') {\n      log.error('Timepoint remove function has not been configured.');\n      return;\n    }\n\n    const timepointData = {\n      timepointId,\n    };\n\n    log.info('Preparing to remove timepoint');\n    log.info(JSON.stringify(timepointData, null, 2));\n\n    removeFn(timepointData).then(() => {\n      log.info('Timepoint removal completed');\n\n      const tpIndex = this.timepoints.findIndex(\n        tp => tp.timepointId === timepointId\n      );\n      if (tpIndex > -1) {\n        this.timepoints.splice(tpIndex, 1);\n      }\n\n      // Let others know that the timepoints are updated\n      this.onTimepointsUpdated();\n    });\n  }\n\n  updateTimepoint(timepointId, query) {\n    const updateFn = configuration.dataExchange.update;\n    if (typeof updateFn !== 'function') {\n      log.error('Timepoint update function has not been configured.');\n      return;\n    }\n\n    const timepointData = {\n      timepointId,\n    };\n\n    log.info('Preparing to update timepoint');\n    log.info(JSON.stringify(timepointData, null, 2));\n    log.info(JSON.stringify(query, null, 2));\n\n    updateFn(timepointData, query).then(() => {\n      log.info('Timepoint updated completed');\n\n      const tpIndex = this.timepoints.findIndex(\n        tp => tp.timepointId === timepointId\n      );\n      if (tpIndex > -1) {\n        this.timepoints[tpIndex] = Object.assign(\n          {},\n          this.timepoints[tpIndex],\n          query\n        );\n      }\n\n      // Let others know that the timepoints are updated\n      this.onTimepointsUpdated();\n    });\n  }\n\n  // Return all timepoints\n  all(filter) {\n    let timepointsToReturn;\n    if (filter) {\n      timepointsToReturn = this.timepoints.filter(filter);\n    } else {\n      timepointsToReturn = this.timepoints;\n    }\n\n    return timepointsToReturn.sort((tp1, tp2) => {\n      return tp1.visitDate < tp2.visitDate ? 1 : -1;\n    });\n  }\n\n  // Return only the current timepoint\n  current() {\n    return this.timepoints.find(\n      tp => tp.timepointId === this.currentTimepointId\n    );\n  }\n\n  lock() {\n    const tpIndex = this.timepoints.findIndex(\n      tp => tp.timepointId === this.currentTimepointId\n    );\n    if (tpIndex < 0) {\n      return;\n    }\n\n    this.timepoints[tpIndex] = Object.assign({}, this.timepoints[tpIndex], {\n      locked: true,\n    });\n  }\n\n  // Return the prior timepoint\n  prior() {\n    const current = this.current();\n    if (!current) {\n      return;\n    }\n\n    return this.all().find(tp => tp.visitDate < current.visitDate);\n  }\n\n  // Return only the current and prior timepoints\n  currentAndPrior() {\n    const timepoints = [];\n\n    const current = this.current();\n    if (current) {\n      timepoints.push(current);\n    }\n\n    const prior = this.prior();\n    if (current && prior && prior.timepointId !== current.timepointId) {\n      timepoints.push(prior);\n    }\n\n    return timepoints;\n  }\n\n  // Return the current and the comparison timepoints\n  currentAndComparison(comparisonTimepointKey = this.comparisonTimepointKey) {\n    const current = this.current();\n    const comparisonTimepoint = this.comparison(comparisonTimepointKey);\n    const timepoints = [current];\n\n    if (\n      comparisonTimepoint &&\n      !timepoints.find(tp => tp.timepointId === comparisonTimepoint.timepointId)\n    ) {\n      timepoints.push(comparisonTimepoint);\n    }\n\n    return timepoints;\n  }\n\n  /**\n   * Return true if there are 2 or more baseline timepoints before and at the current timepoint, otherwise false\n   * @returns {boolean}\n   */\n  isRebaseline(timepointId) {\n    const current = timepointId\n      ? this.timepoints.find(tp => tp.timepointId === timepointId)\n      : this.current();\n    if (!current) {\n      return false;\n    }\n\n    const baselines = this.timepoints.filter(\n      tp => tp.timepointType === 'baseline' && tp.visitDate <= current.visitDate\n    );\n    return baselines.length > 1;\n  }\n\n  /**\n   * Return the next (closest future) baseline after current timepoint\n   * @returns {*}\n   */\n  nextBaselineAfterCurrent() {\n    let current = this.current();\n\n    //  Get all next timepoints newer than the current timepoint sorted by visitDate ascending\n    const sortedTimepoints = this.timepoints.sort((tp1, tp2) => {\n      return tp1.visitDate > tp2.visitDate ? 1 : -1;\n    });\n    return sortedTimepoints.find(\n      tp => tp.visitDate > current.visitDate && tp.timepointType === 'baseline'\n    );\n  }\n\n  /**\n   * Set the current timepoint id\n   * @param timepointId\n   */\n  setCurrentTimepointId(timepointId) {\n    this.currentTimepointId = timepointId;\n  }\n\n  /**\n   * Set the comparison timepoint that overrides the default comparison timepoint (called based on user selection in a viewport)\n   * @param timepoint\n   */\n  setUserComparison(timepoint) {\n    this.userComparison = timepoint;\n  }\n\n  /**\n   * Return only the comparison timepoint\n   * @param {String} [comparisonTimepointKey]\n   * @return {*}\n   */\n  comparison(comparisonTimepointKey = this.comparisonTimepointKey) {\n    // Return the comparison timepoint set by user if exists\n    if (this.userComparison) {\n      return this.userComparison;\n    }\n\n    const current = this.current();\n    if (!current) {\n      return;\n    }\n\n    // If current timepoint is prebaseline, the first (closest future) BL after current is comparison regardless of default comparison timepoint\n    if (current.timepointType === 'prebaseline') {\n      const nextBaselineAfterCurrent = this.nextBaselineAfterCurrent();\n      // If there is a next baseline, make it comparison, otherwise comparison is done by default comparison timepoint\n      if (nextBaselineAfterCurrent) {\n        return nextBaselineAfterCurrent;\n      }\n    }\n\n    // If current timepoint is baseline, the prior is comparison if exists regardless of default comparison timepoint\n    if (current.timepointType === 'baseline') {\n      const prior = this.prior();\n      if (prior) {\n        return prior;\n      }\n    }\n\n    const comparison = this[comparisonTimepointKey]();\n\n    // Do not return a comparison if it would be identical to\n    // the current.\n    if (comparison && comparison.timepointId === current.timepointId) {\n      return;\n    }\n\n    return comparison;\n  }\n\n  /**\n   * Return the latest initial (prebaseline or baseline) timepoint after current and before the next followup timepoint\n   * @returns {*}\n   */\n  latestInitialTimepointAfterCurrent() {\n    let currentTimepoint = this.current();\n\n    //  Skip if the current timepoint is FU since there is no initial timepoint after follow-up\n    if (currentTimepoint.timepointType === 'followup') {\n      return;\n    }\n\n    //  Get all next timepoints newer than the current timepoint sorted by visitDate ascending\n    const sortedTimepoints = this.timepoints.sort((tp1, tp2) => {\n      return tp1.visitDate > tp2.visitDate ? 1 : -1;\n    });\n    const allNextTimepoints = sortedTimepoints.filter(\n      tp => tp.visitDate > currentTimepoint.visitDate\n    );\n\n    const nextFollowupIndex = allNextTimepoints.findIndex(\n      tp => tp.timepointType === 'followup'\n    );\n    const latestInitialBeforeNextFUIndex = nextFollowupIndex - 1;\n\n    if (latestInitialBeforeNextFUIndex < 0) {\n      //  There is no FU and all next timepoints are initial, so return the last one\n      return allNextTimepoints[allNextTimepoints.length - 1];\n    }\n\n    //  Return the latest initial timepoint before the next FU\n    return allNextTimepoints[latestInitialBeforeNextFUIndex];\n  }\n\n  /**\n   * Return timepoint ids of initial timepoints which are prebaseline and baseline\n   * @returns {*}\n   */\n  initialTimepointIds() {\n    let timepointToCheck = this.current();\n\n    //  If the current timepoint is PBL or BL, then get the recent PBL/BL of the current timepoint by its first FU\n    //      If it does not exist, then there is no newer initial timepoint, so the current timepoint is used to determine initial timepoint ids\n    if (\n      timepointToCheck.timepointType === 'prebaseline' ||\n      timepointToCheck.timepointType === 'baseline'\n    ) {\n      timepointToCheck =\n        this.latestInitialTimepointAfterCurrent() || timepointToCheck;\n    }\n\n    const visitDateToCheck = timepointToCheck.visitDate;\n\n    const preBaselineTimepoints =\n      this.timepoints.filter(\n        tp =>\n          tp.timepointType === 'prebaseline' && tp.visitDate <= visitDateToCheck\n      ) || [];\n    const preBaselineTimepointIds = preBaselineTimepoints.map(\n      timepoint => timepoint.timepointId\n    );\n\n    const baselineTimepoints =\n      this.timepoints.filter(\n        tp =>\n          tp.timepointType === 'baseline' && tp.visitDate <= visitDateToCheck\n      ) || [];\n    const baselineTimepointIds = baselineTimepoints.map(\n      timepoint => timepoint.timepointId\n    );\n\n    return preBaselineTimepointIds.concat(baselineTimepointIds);\n  }\n\n  // Return only the baseline timepoint\n  baseline() {\n    const currentVisitDate = this.current().visitDate;\n    return this.all().find(\n      tp => tp.timepointType === 'baseline' && tp.visitDate <= currentVisitDate\n    );\n  }\n\n  /**\n   * Return only the nadir timepoint. Must be prior to the current timepoint\n   * @return {any}\n   */\n  nadir() {\n    const current = this.current();\n    const nadir = this.all().find(\n      tp =>\n        tp.timepointId !== current.timepointId &&\n        tp.timepointKey === 'nadir' &&\n        tp.visitDate <= current.visitDate\n    );\n\n    // If we have found a nadir, return that\n    if (nadir) {\n      return nadir;\n    }\n\n    // Otherwise, return the most recent baseline\n    // This should only happen if we are only at FU1,\n    // so the baseline is the nadir.\n    return this.baseline();\n  }\n\n  // Return only the key timepoints (current, prior, nadir and baseline)\n  key() {\n    const result = [this.current()];\n    const prior = this.prior();\n    const nadir = this.nadir();\n    const baseline = this.baseline();\n\n    const resultIncludes = timepoint =>\n      !!result.find(x => x.timepointId === timepoint.timepointId);\n\n    if (prior && resultIncludes(prior) === false) {\n      result.push(prior);\n    }\n\n    if (nadir && resultIncludes(nadir) === false) {\n      result.push(nadir);\n    }\n\n    if (baseline && resultIncludes(baseline) === false) {\n      result.push(baseline);\n    }\n\n    return result;\n  }\n\n  // Return only the timepoints for the given study\n  study(StudyInstanceUID) {\n    return this.all().filter(timepoint =>\n      timepoint.studyInstanceUIDs.includes(StudyInstanceUID)\n    );\n  }\n\n  // Return the timepoint's name\n  name(timepoint) {\n    const timepointTypeName = TIMEPOINT_TYPE_NAMES[timepoint.timepointType];\n\n    // Check if this is a Baseline timepoint, if it is, return 'Baseline'\n    if (timepoint.timepointType === 'baseline') {\n      return 'Baseline';\n    } else if (timepoint.visitNumber) {\n      return `${timepointTypeName} ${timepoint.visitNumber}`;\n    }\n\n    const visitNumber = this.calculateVisitNumber(timepoint);\n\n    // Return the timepoint name as 'Follow-up N'\n    return `${timepointTypeName} ${visitNumber}`;\n  }\n\n  // Build the timepoint title based on its date\n  title(timepoint) {\n    const timepointName = this.name(timepoint);\n\n    const all = this.all();\n    let index = -1;\n    let currentIndex = null;\n    for (let i = 0; i < all.length; i++) {\n      const currentTimepoint = all[i];\n\n      // Skip the iterations until we can't find the selected timepoint on study list\n      if (this.currentTimepointId === currentTimepoint.timepointId) {\n        currentIndex = 0;\n      }\n\n      if (currentIndex !== null) {\n        index = currentIndex++;\n      }\n\n      // Break the loop if reached the timepoint to get the title\n      if (currentTimepoint.timepointId === timepoint.timepointId) {\n        break;\n      }\n    }\n\n    const states = {\n      0: ['Current'],\n      1: ['Prior'],\n    };\n    const parenthesis = states[index] || [];\n    const nadir = this.nadir();\n\n    if (nadir && nadir.timepointId === timepoint.timepointId) {\n      parenthesis.push('Nadir');\n    }\n\n    let parenthesisText = '';\n    if (parenthesis.length) {\n      parenthesisText = `(${parenthesis.join(', ')})`;\n    }\n\n    return `${timepointName} ${parenthesisText}`;\n  }\n}\n","export default function(measurement) {\n  if (!measurement) {\n    return;\n  }\n\n  switch (measurement.toolType) {\n    case 'Bidirectional':\n    case 'TargetCR':\n    case 'TargetNE':\n    case 'TargetUN':\n      return `Target ${measurement.lesionNamingNumber}`;\n    case 'NonTarget':\n      return `Non-Target ${measurement.lesionNamingNumber}`;\n  }\n}\n","export default function(measurement) {\n  return measurement.description;\n}\n","import studyMetadataManager from '../../utils/studyMetadataManager';\n\nexport default function(imagePath, thumbnail = false) {\n  const [\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID,\n    frameIndex,\n  ] = imagePath.split('_');\n  const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n  const series = studyMetadata.getSeriesByUID(SeriesInstanceUID);\n  const instance = series.getInstanceByUID(SOPInstanceUID);\n  return instance.getImageId(frameIndex, thumbnail);\n}\n","import cornerstoneTools from 'cornerstone-tools';\nimport cornerstone from 'cornerstone-core';\nimport log from '../../log';\nimport getLabel from '../lib/getLabel';\nimport getDescription from '../lib/getDescription';\nimport getImageIdForImagePath from '../lib/getImageIdForImagePath';\nimport guid from '../../utils/guid';\nimport studyMetadataManager from '../../utils/studyMetadataManager';\nimport { measurementApiDefaultConfig } from './../configuration.js';\n\nconst configuration = {\n  ...measurementApiDefaultConfig,\n};\n\nexport default class MeasurementApi {\n  static Instance;\n\n  /**\n   * Set configuration: It should merge default configuration with any new one\n   *\n   * @static\n   * @param {Object} config\n   * @param {Object} config.server\n   * @param {string} config.server.type - The server type\n   * @param {string} config.server.wadoRoot - The server wado URL root\n   * @param {Array} config.measurementTools\n   * @param {string} config.measurementTools[].id - The tool group id\n   * @param {string} config.measurementTools[].name - The tool group name\n   * @param {Array} config.measurementTools[].childTools - The child tool's configuration\n   * @param {Object} config.dataExchange\n   * @param {Function} config.dataExchange.store - Function that store measurement data\n   * @param {Function} config.dataExchange.retrieve - Function that retrieves measurement data\n   *\n   * @memberof MeasurementApi\n   */\n  static setConfiguration(config) {\n    Object.assign(configuration, config);\n  }\n\n  static getConfiguration() {\n    return configuration;\n  }\n\n  static getToolsGroupsMap() {\n    const toolsGroupsMap = {};\n    configuration.measurementTools.forEach(toolGroup => {\n      toolGroup.childTools.forEach(\n        tool => (toolsGroupsMap[tool.id] = toolGroup.id)\n      );\n    });\n\n    return toolsGroupsMap;\n  }\n\n  static getToolGroupTools(toolsGroupsMap) {\n    const result = {};\n    Object.keys(toolsGroupsMap).forEach(toolType => {\n      const toolGroupId = toolsGroupsMap[toolType];\n      if (!result[toolGroupId]) {\n        result[toolGroupId] = [];\n      }\n\n      result[toolGroupId].push(toolType);\n    });\n\n    return result;\n  }\n\n  static getToolConfiguration(toolType) {\n    const configuration = MeasurementApi.getConfiguration();\n    const toolsGroupsMap = MeasurementApi.getToolsGroupsMap();\n\n    const toolGroupId = toolsGroupsMap[toolType];\n    const toolGroup = configuration.measurementTools.find(\n      toolGroup => toolGroup.id === toolGroupId\n    );\n\n    let tool;\n    if (toolGroup) {\n      tool = toolGroup.childTools.find(tool => tool.id === toolType);\n    }\n\n    return {\n      toolGroupId,\n      toolGroup,\n      tool,\n    };\n  }\n\n  static syncMeasurementAndToolData(measurement) {\n    log.info('syncMeasurementAndToolData');\n\n    const measurementLabel = getLabel(measurement);\n    if (measurementLabel) {\n      measurement.labels = [measurementLabel];\n    }\n\n    const toolState = cornerstoneTools.globalImageIdSpecificToolStateManager.saveToolState();\n\n    // Stop here if the metadata for the measurement's study is not loaded yet\n    const { StudyInstanceUID } = measurement;\n    const metadata = studyMetadataManager.get(StudyInstanceUID);\n    if (!metadata) return;\n\n    // Iterate each child tool if the current tool has children\n    const toolType = measurement.toolType;\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\n    if (Array.isArray(tool.childTools)) {\n      tool.childTools.forEach(childToolKey => {\n        const childMeasurement = measurement[childToolKey];\n        if (!childMeasurement) return;\n        childMeasurement._id = measurement._id;\n        childMeasurement.measurementNumber = measurement.measurementNumber;\n        childMeasurement.lesionNamingNumber = measurement.lesionNamingNumber;\n\n        MeasurementApi.syncMeasurementAndToolData(childMeasurement);\n      });\n\n      return;\n    }\n\n    const imageId = getImageIdForImagePath(measurement.imagePath);\n\n    // If no tool state exists for this imageId, create an empty object to store it\n    if (!toolState[imageId]) {\n      toolState[imageId] = {};\n    }\n\n    const currentToolState = toolState[imageId][toolType];\n    const toolData = currentToolState && currentToolState.data;\n\n    // Check if we already have toolData for this imageId and toolType\n    if (toolData && toolData.length) {\n      // If we have toolData, we should search it for any data related to the current Measurement\n      const toolData = toolState[imageId][toolType].data;\n\n      // Create a flag so we know if we've successfully updated the Measurement in the toolData\n      let alreadyExists = false;\n\n      // Loop through the toolData to search for this Measurement\n      toolData.forEach(tool => {\n        // Break the loop if this isn't the Measurement we are looking for\n        if (tool._id !== measurement._id) {\n          return;\n        }\n\n        // If we have found the Measurement, set the flag to True\n        alreadyExists = true;\n\n        // Update the toolData from the Measurement data\n        Object.assign(tool, measurement);\n        return false;\n      });\n\n      // If we have found the Measurement we intended to update, we can stop this function here\n      if (alreadyExists === true) {\n        return;\n      }\n    } else {\n      // If no toolData exists for this toolType, create an empty array to hold some\n      toolState[imageId][toolType] = {\n        data: [],\n      };\n    }\n\n    // If we have reached this point, it means we haven't found the Measurement we are looking for\n    // in the current toolData. This means we need to add it.\n\n    // Add the MeasurementData into the toolData for this imageId\n    toolState[imageId][toolType].data.push(measurement);\n\n    cornerstoneTools.globalImageIdSpecificToolStateManager.restoreToolState(\n      toolState\n    );\n  }\n\n  static isToolIncluded(tool) {\n    return (\n      tool.options &&\n      tool.options.caseProgress &&\n      tool.options.caseProgress.include\n    );\n  }\n\n  constructor(timepointApi, options = {}) {\n    if (MeasurementApi.Instance) {\n      MeasurementApi.Instance.initialize(timepointApi, options);\n      return MeasurementApi.Instance;\n    }\n\n    this.initialize(timepointApi, options);\n    MeasurementApi.Instance = this;\n  }\n\n  initialize(timepointApi, options = {}) {\n    this.timepointApi = timepointApi;\n    this.options = options;\n    this.toolGroups = {};\n    this.tools = {};\n    this.toolsGroupsMap = MeasurementApi.getToolsGroupsMap();\n    this.toolGroupTools = MeasurementApi.getToolGroupTools(this.toolsGroupsMap);\n\n    // Iterate over each tool group and create collection\n    configuration.measurementTools.forEach(toolGroup => {\n      this.toolGroups[toolGroup.id] = [];\n\n      // Iterate over each tool group child tools (e.g. bidirectional, targetCR, etc.) and create collection\n      toolGroup.childTools.forEach(tool => {\n        this.tools[tool.id] = [];\n      });\n    });\n  }\n\n  onMeasurementsUpdated() {\n    if (typeof this.options.onMeasurementsUpdated !== 'function') {\n      log.warn('Measurements update callback is not defined');\n      return;\n    }\n\n    this.options.onMeasurementsUpdated(Object.assign({}, this.tools));\n  }\n\n  retrieveMeasurements(PatientID, timepointIds) {\n    const retrievalFn = configuration.dataExchange.retrieve;\n    const { server } = configuration;\n    if (typeof retrievalFn !== 'function') {\n      log.error('Measurement retrieval function has not been configured.');\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      retrievalFn(server).then(measurementData => {\n        if (measurementData) {\n          log.info('Measurement data retrieval');\n          //log.info(measurementData);\n\n          Object.keys(measurementData).forEach(measurementTypeId => {\n            const measurements = measurementData[measurementTypeId];\n\n            measurements.forEach(measurement => {\n              const { toolType } = measurement;\n\n              if (\n                toolType !== 'DICOMSRDisplayTool' &&\n                measurement.isReadOnly !== true\n              ) {\n                console.log(measurement);\n                this.addMeasurement(toolType, measurement);\n              }\n            });\n          });\n        }\n\n        resolve();\n\n        // Synchronize the new tool data\n        this.syncMeasurementsAndToolData();\n\n        cornerstone.getEnabledElements().forEach(enabledElement => {\n          if (enabledElement.image) {\n            cornerstone.updateImage(enabledElement.element);\n          }\n        });\n\n        // Let others know that the measurements are updated\n        this.onMeasurementsUpdated();\n      }, reject);\n    });\n  }\n\n  storeMeasurements(timepointId) {\n    const { server } = configuration;\n    const storeFn = configuration.dataExchange.store;\n    if (typeof storeFn !== 'function') {\n      log.error('Measurement store function has not been configured.');\n      return;\n    }\n\n    let measurementData = {};\n    configuration.measurementTools.forEach(toolGroup => {\n      // Skip the tool groups excluded from case progress\n      if (!MeasurementApi.isToolIncluded(toolGroup)) {\n        return;\n      }\n\n      toolGroup.childTools.forEach(tool => {\n        // Skip the tools excluded from case progress\n        if (!MeasurementApi.isToolIncluded(tool)) {\n          return;\n        }\n\n        if (!measurementData[toolGroup.id]) {\n          measurementData[toolGroup.id] = [];\n        }\n\n        measurementData[toolGroup.id] = measurementData[toolGroup.id].concat(\n          this.tools[tool.id]\n        );\n      });\n    });\n\n    const timepointFilter = timepointId\n      ? tp => tp.timepointId === timepointId\n      : null;\n    const timepoints = this.timepointApi.all(timepointFilter);\n    const timepointIds = timepoints.map(t => t.timepointId);\n    const PatientID = timepoints[0].PatientID;\n    const filter = {\n      PatientID,\n      timepointIds,\n    };\n\n    log.info('Saving Measurements for timepoints:', timepoints);\n    return storeFn(measurementData, filter, server).then(result => {\n      log.info('Measurement storage completed');\n      return result;\n    });\n  }\n\n  calculateLesionNamingNumber(measurements) {\n    const sortedMeasurements = measurements.sort((a, b) => {\n      if (a.lesionNamingNumber > b.lesionNamingNumber) {\n        return 1;\n      } else if (a.lesionNamingNumber < b.lesionNamingNumber) {\n        return -1;\n      }\n\n      return 0;\n    });\n\n    //  Calculate lesion naming number starting from 1 not to miss any measurement (as seen in MM)\n    //      A measurement from beginning of the list might be deleted, so a new measurement should replace that\n    let i;\n    for (i = 1; i < sortedMeasurements.length + 1; i++) {\n      if (i < sortedMeasurements[i - 1].lesionNamingNumber) {\n        break;\n      }\n    }\n\n    return i;\n  }\n\n  fetch(toolGroupId, filter) {\n    if (!this.toolGroups[toolGroupId]) {\n      throw new Error(\n        `MeasurementApi: No Collection with the id: ${toolGroupId}`\n      );\n    }\n\n    let items;\n    if (filter) {\n      items = this.toolGroups[toolGroupId].filter(filter);\n    } else {\n      items = this.toolGroups[toolGroupId];\n    }\n\n    return items.map(item => {\n      if (item.toolId) {\n        return this.tools[item.toolId].find(\n          tool => tool._id === item.toolItemId\n        );\n      }\n\n      return { lesionNamingNumber: item.lesionNamingNumber };\n    });\n  }\n\n  getFirstMeasurement(timepointId) {\n    // Get child tools from all included tool groups\n    let childTools = [];\n    configuration.measurementTools.forEach(toolGroup => {\n      // Skip the tool groups excluded from case progress\n      if (!MeasurementApi.isToolIncluded(toolGroup)) {\n        return false;\n      }\n\n      childTools = childTools.concat(toolGroup.childTools);\n    });\n\n    // Get all included child tools\n    const includedChildTools = childTools.filter(tool =>\n      MeasurementApi.isToolIncluded(tool)\n    );\n\n    // Get the first measurement for the given timepoint\n    let measurement = undefined;\n    includedChildTools.every(tool => {\n      measurement = this.tools[tool.id].find(\n        t => t.timepointId === timepointId && t.measurementNumber === 1\n      );\n\n      return !measurement;\n    });\n\n    // Return the found measurement object or undefined if not found\n    return measurement;\n  }\n\n  lesionExistsAtTimepoints(lesionNamingNumber, toolGroupId, timepointIds) {\n    // Retrieve all the data for the given tool group (e.g. 'targets')\n    const measurementsAtTimepoint = this.fetch(toolGroupId, tool =>\n      timepointIds.includes(tool.timepointId)\n    );\n\n    // Return whether or not any lesion at this timepoint has the same lesionNamingNumber\n    return !!measurementsAtTimepoint.find(\n      m => m.lesionNamingNumber === lesionNamingNumber\n    );\n  }\n\n  isNewLesionsMeasurement(measurementData) {\n    if (!measurementData) {\n      return;\n    }\n\n    const toolConfig = MeasurementApi.getToolConfiguration(\n      measurementData.toolType\n    );\n    const toolType = toolConfig.tool.parentTool || measurementData.toolType;\n    const { timepointApi } = this;\n    const currentMeasurement =\n      this.tools[toolType].find(tool => tool._id === measurementData._id) || {};\n    const timepointId =\n      currentMeasurement.timepointId || measurementData.timepointId;\n    const lesionNamingNumber =\n      currentMeasurement.lesionNamingNumber ||\n      measurementData.lesionNamingNumber;\n\n    // Stop here if the needed information is not set\n    if (!timepointApi || !timepointId || !toolConfig) {\n      return;\n    }\n\n    const { toolGroupId } = toolConfig;\n    const current = timepointApi.timepoints.find(\n      tp => tp.timepointId === timepointId\n    );\n    const initialTimepointIds = timepointApi.initialTimepointIds();\n\n    // Stop here if there's no initial timepoint, or if the current is any initial\n    if (\n      !initialTimepointIds ||\n      initialTimepointIds.length < 1 ||\n      initialTimepointIds.some(\n        initialtpid => initialtpid === current.timepointId\n      )\n    ) {\n      return false;\n    }\n\n    return (\n      this.lesionExistsAtTimepoints(\n        lesionNamingNumber,\n        toolGroupId,\n        initialTimepointIds\n      ) === false\n    );\n  }\n\n  calculateLesionMaxMeasurementNumber(groupId, filter) {\n    let measurements = [];\n    if (groupId) {\n      // Get the measurements of the group\n      measurements = this.toolGroups[groupId] || [];\n    } else {\n      // Get all measurements of all groups\n      measurements = Object.keys(this.toolGroups).reduce((acc, val) => {\n        acc.push(...this.toolGroups[val]);\n        return acc;\n      }, []);\n    }\n\n    const sortedMeasurements = measurements.filter(filter).sort((tp1, tp2) => {\n      return tp1.measurementNumber < tp2.measurementNumber ? 1 : -1;\n    });\n\n    for (let i = 0; i < sortedMeasurements.length; i++) {\n      const toolGroupMeasurement = sortedMeasurements[i];\n      const measurement = this.tools[toolGroupMeasurement.toolId].find(\n        tool => tool._id === toolGroupMeasurement.toolItemId\n      );\n      const isNew = this.isNewLesionsMeasurement(measurement);\n      if (!isNew) {\n        return measurement.measurementNumber;\n      }\n    }\n\n    return 0;\n  }\n\n  calculateNewLesionMaxMeasurementNumber(groupId, filter) {\n    const sortedMeasurements = this.toolGroups[groupId]\n      .filter(filter)\n      .sort((tp1, tp2) => {\n        return tp1.measurementNumber < tp2.measurementNumber ? 1 : -1;\n      });\n\n    for (let i = 0; i < sortedMeasurements.length; i++) {\n      const toolGroupMeasurement = sortedMeasurements[i];\n      const measurement = this.tools[toolGroupMeasurement.toolId].find(\n        tool => tool._id === toolGroupMeasurement.toolItemId\n      );\n      const isNew = this.isNewLesionsMeasurement(measurement);\n      if (isNew) {\n        return measurement.measurementNumber;\n      }\n    }\n\n    return 0;\n  }\n\n  calculateMeasurementNumber(measurement) {\n    const toolGroupId = this.toolsGroupsMap[measurement.toolType];\n\n    const filter = tool => tool._id !== measurement._id;\n\n    const isNew = this.isNewLesionsMeasurement(measurement);\n\n    if (isNew) {\n      const maxTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\n        'targets',\n        filter\n      );\n      const maxNonTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\n        'nonTargets',\n        filter\n      );\n      const maxNewTargetMeasurementNumber = this.calculateNewLesionMaxMeasurementNumber(\n        'targets',\n        filter\n      );\n      if (toolGroupId === 'targets') {\n        return Math.max(\n          maxTargetMeasurementNumber,\n          maxNonTargetMeasurementNumber,\n          maxNewTargetMeasurementNumber\n        );\n      } else if (toolGroupId === 'nonTargets') {\n        const maxNewNonTargetMeasurementNumber = this.calculateNewLesionMaxMeasurementNumber(\n          'nonTargets',\n          filter\n        );\n        return Math.max(\n          maxTargetMeasurementNumber,\n          maxNonTargetMeasurementNumber,\n          maxNewTargetMeasurementNumber,\n          maxNewNonTargetMeasurementNumber\n        );\n      }\n    } else {\n      const maxTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\n        'targets',\n        filter\n      );\n      if (toolGroupId === 'targets') {\n        return maxTargetMeasurementNumber;\n      } else if (toolGroupId === 'nonTargets') {\n        const maxNonTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\n          'nonTargets',\n          filter\n        );\n        return Math.max(\n          maxTargetMeasurementNumber,\n          maxNonTargetMeasurementNumber\n        );\n      } else {\n        return this.calculateLesionMaxMeasurementNumber(null, filter);\n      }\n    }\n\n    return 0;\n  }\n\n  getPreviousMeasurement(measurementData) {\n    if (!measurementData) {\n      return;\n    }\n\n    const { timepointId, toolType, lesionNamingNumber } = measurementData;\n    if (!timepointId || !toolType || !lesionNamingNumber) {\n      return;\n    }\n\n    const toolGroupId = this.toolsGroupsMap[measurementData.toolType];\n\n    // TODO: Remove TrialPatientLocationUID from here and override it somehow\n    // by dependant applications. Here we should use the location attribute instead of the uid\n    let filter;\n    const uid =\n      measurementData.additionalData &&\n      measurementData.additionalData.TrialPatientLocationUID;\n    if (uid) {\n      filter = tool =>\n        tool._id !== measurementData._id &&\n        tool.additionalData &&\n        tool.additionalData.TrialPatientLocationUID === uid;\n    } else {\n      filter = tool =>\n        tool._id !== measurementData._id &&\n        tool.lesionNamingNumber === lesionNamingNumber;\n    }\n\n    const childToolTypes = this.toolGroupTools[toolGroupId];\n    for (let i = 0; i < childToolTypes.length; i++) {\n      const childToolType = childToolTypes[i];\n      const toolCollection = this.tools[childToolType];\n      const item = toolCollection.find(filter);\n\n      if (item) {\n        return item;\n      }\n    }\n  }\n\n  hasDuplicateMeasurementNumber(measurementData) {\n    if (!measurementData) {\n      return;\n    }\n\n    const { toolType, measurementNumber } = measurementData;\n    if (!toolType || !measurementNumber) {\n      return;\n    }\n\n    const filter = tool =>\n      tool._id !== measurementData._id &&\n      tool.measurementNumber === measurementData.measurementNumber;\n\n    return configuration.measurementTools\n      .filter(toolGroup => toolGroup.id !== 'temp')\n      .some(toolGroup => {\n        if (this.toolGroups[toolGroup.id].find(filter)) {\n          return true;\n        }\n        return toolGroup.childTools.some(tool => {\n          if (this.tools[tool.id].find(filter)) {\n            return true;\n          }\n        });\n      });\n  }\n\n  updateNumbering(collectionToUpdate, propertyFilter, propertyName, increment) {\n    collectionToUpdate.filter(propertyFilter).forEach(item => {\n      item[propertyName] += increment;\n    });\n  }\n\n  updateMeasurementNumberForAllMeasurements(measurement, increment) {\n    const filter = tool =>\n      tool._id !== measurement._id &&\n      tool.measurementNumber >= measurement.measurementNumber;\n\n    configuration.measurementTools\n      .filter(toolGroup => toolGroup.id !== 'temp')\n      .forEach(toolGroup => {\n        this.updateNumbering(\n          this.toolGroups[toolGroup.id],\n          filter,\n          'measurementNumber',\n          increment\n        );\n\n        toolGroup.childTools.forEach(tool => {\n          this.updateNumbering(\n            this.tools[tool.id],\n            filter,\n            'measurementNumber',\n            increment\n          );\n        });\n      });\n  }\n\n  addMeasurement(toolType, measurement) {\n    if (measurement.isReadOnly || toolType === 'DICOMSRDisplayTool') {\n      console.log(measurement);\n      return;\n    }\n\n    const toolGroup = this.toolsGroupsMap[toolType];\n    const groupCollection = this.toolGroups[toolGroup];\n    const collection = this.tools[toolType];\n\n    // Get the related measurement by the measurement number and use its location if defined\n    const relatedMeasurement = collection.find(\n      t =>\n        t.lesionNamingNumber === measurement.lesionNamingNumber &&\n        t.toolType === measurement.toolType\n    );\n\n    // Use the related measurement location if found and defined\n    if (relatedMeasurement && relatedMeasurement.location) {\n      measurement.location = relatedMeasurement.location;\n    }\n\n    // Use the related measurement description if found and defined\n    if (relatedMeasurement && relatedMeasurement.description) {\n      measurement.description = relatedMeasurement.description;\n    }\n\n    measurement._id = guid();\n\n    measurement.isReadOnly = false; // alterei!\n\n    // Get the timepoint\n    let timepoint;\n    if (measurement.StudyInstanceUID) {\n      timepoint = this.timepointApi.study(measurement.StudyInstanceUID)[0];\n    } else {\n      const { timepointId } = measurement;\n      timepoint = this.timepointApi.timepoints.find(\n        t => t.timepointId === timepointId\n      );\n    }\n\n    // Preventing errors thrown when non-associated (standalone) study is opened...\n    // @TODO: Make sure this logic is correct.\n    if (!timepoint) return;\n\n    // Empty Item is the lesion just added in cornerstoneTools, but does not have measurement data yet\n    const emptyItem = groupCollection.find(\n      groupTool =>\n        !groupTool.toolId && groupTool.timepointId === timepoint.timepointId\n    );\n\n    // Set the timepointId attribute to measurement to make it easier to filter measurements by timepoint\n    measurement.timepointId = timepoint.timepointId;\n\n    // Check if the measurement data is just added by a cornerstone tool and is still empty\n    if (emptyItem) {\n      // Set relevant initial data and measurement number to the measurement\n      measurement.lesionNamingNumber = emptyItem.lesionNamingNumber;\n      measurement.measurementNumber = emptyItem.measurementNumber;\n\n      groupCollection\n        .filter(\n          groupTool =>\n            groupTool.timepointId === timepoint.timepointId &&\n            groupTool.lesionNamingNumber === measurement.lesionNamingNumber\n        )\n        .forEach(groupTool => {\n          //groupTool.toolId = tool.id;\n          groupTool.toolItemId = measurement._id;\n          groupTool.createdAt = measurement.createdAt;\n          groupTool.measurementNumber = measurement.measurementNumber;\n        });\n    } else {\n      // Handle measurements not added by cornerstone tools and update its number\n      const measurementsInTimepoint = groupCollection.filter(\n        groupTool => groupTool.timepointId === timepoint.timepointId\n      );\n      measurement.lesionNamingNumber = this.calculateLesionNamingNumber(\n        measurementsInTimepoint\n      );\n      measurement.measurementNumber =\n        measurement.measurementNumber ||\n        this.calculateMeasurementNumber(measurement) + 1;\n    }\n\n    // Define an update object to reflect the changes in the collection\n    const updateObject = {\n      timepointId: timepoint.timepointId,\n      lesionNamingNumber: measurement.lesionNamingNumber,\n      measurementNumber: measurement.measurementNumber,\n    };\n\n    // Find the matched measurement from other timepoints\n    const found = this.getPreviousMeasurement(measurement);\n\n    // Check if a previous related meausurement was found on other timepoints\n    if (found) {\n      // Use the same number as the previous measurement\n      measurement.lesionNamingNumber = found.lesionNamingNumber;\n      measurement.measurementNumber = found.measurementNumber;\n\n      // TODO: Remove TrialPatientLocationUID from here and override it somehow\n      // by dependant applications\n\n      // Change the update object to set the same number, additionalData,\n      // location, label and description to the current measurement\n      updateObject.lesionNamingNumber = found.lesionNamingNumber;\n      updateObject.measurementNumber = found.measurementNumber;\n      updateObject.additionalData = measurement.additionalData || {};\n      updateObject.additionalData.TrialPatientLocationUID =\n        found.additionalData && found.additionalData.TrialPatientLocationUID;\n      updateObject.location = found.location;\n      updateObject.label = found.label;\n      updateObject.description = found.description;\n      updateObject.isSplitLesion = found.isSplitLesion;\n      updateObject.isNodal = found.isNodal;\n\n      const description = getDescription(found, measurement);\n      if (description) {\n        updateObject.description = description;\n      }\n    } else if (this.hasDuplicateMeasurementNumber(measurement)) {\n      // Update measurementNumber for the measurements with masurementNumber greater or equal than\n      //  measurementNumber of the added measurement (except the added one)\n      //   only if there is another measurement with the same measurementNumber\n      this.updateMeasurementNumberForAllMeasurements(measurement, 1);\n    }\n\n    let addedMeasurement;\n\n    // Upsert the measurement in collection\n    const toolIndex = collection.findIndex(\n      tool => tool._id === measurement._id\n    );\n    if (toolIndex > -1) {\n      addedMeasurement = Object.assign({}, collection[toolIndex], updateObject);\n      collection[toolIndex] = addedMeasurement;\n    } else {\n      addedMeasurement = Object.assign({}, measurement, updateObject);\n      collection.push(addedMeasurement);\n    }\n\n    /*if (measurement.isReadOnly) {\n      addedMeasurement.isReadOnly = measurement.isReadOnly;\n    }*/\n\n    if (!emptyItem) {\n      // Reflect the entry in the tool group collection\n      groupCollection.push({\n        toolId: toolType,\n        toolItemId: addedMeasurement._id,\n        timepointId: timepoint.timepointId,\n        StudyInstanceUID: addedMeasurement.StudyInstanceUID,\n        createdAt: addedMeasurement.createdAt,\n        lesionNamingNumber: addedMeasurement.lesionNamingNumber,\n        measurementNumber: addedMeasurement.measurementNumber,\n      });\n    }\n\n    // Let others know that the measurements are updated\n    this.onMeasurementsUpdated();\n\n    // TODO: Enable reactivity\n    // this.timepointChanged.set(timepoint.timepointId);\n\n    console.log('Added measurement', addedMeasurement);\n\n    return addedMeasurement;\n  }\n\n  updateMeasurement(toolType, measurement) {\n    const collection = this.tools[toolType];\n\n    const toolIndex = collection.findIndex(\n      tool => tool._id === measurement._id\n    );\n    if (toolIndex < 0) {\n      return;\n    }\n\n    collection[toolIndex] = Object.assign({}, measurement);\n\n    // Let others know that the measurements are updated\n    this.onMeasurementsUpdated();\n\n    // TODO: Enable reactivity\n    // this.timepointChanged.set(timepoint.timepointId);\n  }\n\n  onMeasurementRemoved(toolType, measurement) {\n    const { lesionNamingNumber, measurementNumber } = measurement;\n\n    const toolGroupId = this.toolsGroupsMap[toolType];\n    const groupCollection = this.toolGroups[toolGroupId];\n\n    const groupIndex = groupCollection.findIndex(\n      group => group.toolItemId === measurement._id\n    );\n    if (groupIndex < 0) {\n      return;\n    }\n\n    //  Remove the deleted measurement only in its timepoint from the collection\n    groupCollection.splice(groupIndex, 1);\n\n    //  Check which timepoints have the deleted measurement\n    const timepointsWithDeletedMeasurement = groupCollection\n      .filter(tool => tool.measurementNumber === measurementNumber)\n      .map(tool => tool.timepointId);\n\n    //  Update lesionNamingNumber and measurementNumber only if there is no timepoint with that measurement\n    if (timepointsWithDeletedMeasurement.length < 1) {\n      //  Decrease lesionNamingNumber of all measurements with lesionNamingNumber greater than lesionNamingNumber of the deleted measurement by 1\n      const lesionNamingNumberFilter = tool =>\n        tool.lesionNamingNumber >= lesionNamingNumber;\n      this.updateNumbering(\n        groupCollection,\n        lesionNamingNumberFilter,\n        'lesionNamingNumber',\n        -1\n      );\n\n      const toolGroup = configuration.measurementTools.find(\n        tGroup => tGroup.id === toolGroupId\n      );\n      if (toolGroup && toolGroup.childTools) {\n        toolGroup.childTools.forEach(childTool => {\n          const collection = this.tools[childTool.id];\n          this.updateNumbering(\n            collection,\n            lesionNamingNumberFilter,\n            'lesionNamingNumber',\n            -1\n          );\n        });\n      }\n\n      //  Decrease measurementNumber of all measurements with measurementNumber greater than measurementNumber of the deleted measurement by 1\n      this.updateMeasurementNumberForAllMeasurements(measurement, -1);\n    }\n\n    // Synchronize the new tool data\n    this.syncMeasurementsAndToolData();\n\n    // Let others know that the measurements are updated\n    this.onMeasurementsUpdated();\n\n    // TODO: Enable reactivity\n    // this.timepointChanged.set(timepoint.timepointId);\n  }\n\n  syncMeasurementsAndToolData() {\n    configuration.measurementTools.forEach(toolGroup => {\n      // Skip the tool groups excluded from case progress\n      if (!MeasurementApi.isToolIncluded(toolGroup)) {\n        return;\n      }\n      toolGroup.childTools.forEach(tool => {\n        // Skip the tools excluded from case progress\n        if (!MeasurementApi.isToolIncluded(tool)) {\n          return;\n        }\n        const measurements = this.tools[tool.id];\n        measurements.forEach(measurement => {\n          MeasurementApi.syncMeasurementAndToolData(measurement);\n        });\n      });\n    });\n  }\n\n  deleteMeasurements(toolType, measurementTypeId, filter) {\n    const filterKeys = Object.keys(filter);\n    const groupCollection = this.toolGroups[measurementTypeId];\n\n    // Stop here if it is a temporary toolGroups\n    if (!groupCollection) return;\n\n    // Get the entries information before removing them\n    const groupItems = groupCollection.filter(toolGroup => {\n      return filterKeys.every(\n        filterKey => toolGroup[filterKey] === filter[filterKey]\n      );\n    });\n    const entries = [];\n    groupItems.forEach(groupItem => {\n      if (!groupItem.toolId) {\n        return;\n      }\n\n      const collection = this.tools[groupItem.toolId];\n      const toolIndex = collection.findIndex(\n        tool => tool._id === groupItem.toolItemId\n      );\n      if (toolIndex > -1) {\n        entries.push(collection[toolIndex]);\n        collection.splice(toolIndex, 1);\n      }\n    });\n\n    // Stop here if no entries were found\n    if (!entries.length) {\n      return;\n    }\n\n    // If the filter doesn't have the measurement number, get it from the first entry\n    const lesionNamingNumber =\n      filter.lesionNamingNumber || entries[0].lesionNamingNumber;\n\n    // Synchronize the new data with cornerstone tools\n    const toolState = cornerstoneTools.globalImageIdSpecificToolStateManager.saveToolState();\n\n    entries.forEach(entry => {\n      const measurementsData = [];\n      const { tool } = MeasurementApi.getToolConfiguration(entry.toolType);\n      if (Array.isArray(tool.childTools)) {\n        tool.childTools.forEach(key => {\n          const childMeasurement = entry[key];\n          if (!childMeasurement) return;\n          measurementsData.push(childMeasurement);\n        });\n      } else {\n        measurementsData.push(entry);\n      }\n\n      measurementsData.forEach(measurementData => {\n        const { imagePath, toolType } = measurementData;\n        const imageId = getImageIdForImagePath(imagePath);\n        if (imageId && toolState[imageId]) {\n          const toolData = toolState[imageId][toolType];\n          const measurementEntries = toolData && toolData.data;\n          const measurementEntry = measurementEntries.find(\n            mEntry => mEntry._id === entry._id\n          );\n          if (measurementEntry) {\n            const index = measurementEntries.indexOf(measurementEntry);\n            measurementEntries.splice(index, 1);\n          }\n        }\n      });\n\n      this.onMeasurementRemoved(toolType, entry);\n    });\n\n    cornerstoneTools.globalImageIdSpecificToolStateManager.restoreToolState(\n      toolState\n    );\n\n    // Synchronize the updated measurements with Cornerstone Tools\n    // toolData to make sure the displayed measurements show 'Target X' correctly\n    const syncFilter = Object.assign({}, filter);\n    delete syncFilter.timepointId;\n    delete syncFilter.lesionNamingNumber;\n\n    const syncFilterKeys = Object.keys(syncFilter);\n\n    const toolTypes = [...new Set(entries.map(entry => entry.toolType))];\n    toolTypes.forEach(toolType => {\n      const collection = this.tools[toolType];\n      collection\n        .filter(tool => {\n          return (\n            tool.lesionNamingNumber > lesionNamingNumber - 1 &&\n            syncFilterKeys.every(\n              syncFilterKey => tool[syncFilterKey] === filter[syncFilterKey]\n            )\n          );\n        })\n        .forEach(measurement => {\n          MeasurementApi.syncMeasurementAndToolData(measurement);\n        });\n    });\n  }\n}\n","export class BaseCriterion {\n  constructor(options, criterionName) {\n    this.options = options;\n    this.criterionName = criterionName;\n  }\n\n  generateResponse(message, measurements) {\n    const passed = !message;\n    const isGlobal = !measurements || !measurements.length;\n\n    return {\n      passed,\n      isGlobal,\n      message,\n      measurements,\n      criterionName: this.criterionName,\n    };\n  }\n\n  getNewTargetNumbers(data) {\n    const { options } = this;\n    const baselineMeasurementNumbers = [];\n    const newTargetNumbers = new Set();\n\n    if (options.newTarget) {\n      data.targets.forEach(target => {\n        const { measurementNumber } = target.measurement;\n        if (target.timepoint.timepointType === 'baseline') {\n          baselineMeasurementNumbers.push(measurementNumber);\n        }\n      });\n      data.targets.forEach(target => {\n        const { measurementNumber } = target.measurement;\n        if (target.timepoint.timepointType === 'followup') {\n          if (!baselineMeasurementNumbers.includes(measurementNumber)) {\n            newTargetNumbers.add(measurementNumber);\n          }\n        }\n      });\n    }\n\n    return newTargetNumbers;\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const LocationSchema = {\n  type: 'object',\n};\n\n/* LocationCriterion\n *   Check if the there are non-target measurements with response different than \"present\" on baseline\n */\nexport class LocationCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    const items = data.targets.concat(data.nonTargets);\n    const measurements = [];\n    let message;\n\n    items.forEach(item => {\n      const measurement = item.measurement;\n\n      if (!measurement.location) {\n        measurements.push(measurement);\n      }\n    });\n\n    if (measurements.length) {\n      message = 'All measurements should have a location';\n    }\n\n    return this.generateResponse(message, measurements);\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const MaxTargetsPerOrganSchema = {\n  type: 'object',\n  properties: {\n    limit: {\n      label: 'Max targets allowed per organ',\n      type: 'integer',\n      minimum: 1,\n    },\n    newTarget: {\n      label: 'Flag to evaluate only new targets',\n      type: 'boolean',\n    },\n    isNodal: {\n      label: 'Filter to evaluate only nodal or extranodal measurements',\n      type: 'boolean'\n    },\n    message: {\n      label: 'Message to be displayed in case of nonconformity',\n      type: 'string',\n    }\n  },\n  required: ['limit'],\n};\n\n/*\n * MaxTargetsPerOrganCriterion\n *   Check if the number of target measurements per organ exceeded the limit allowed\n * Options:\n *   limit: Max targets allowed in study\n *   newTarget: Flag to evaluate only new targets (must be evaluated on both)\n *   isNodal: Filter to evaluate only nodal or extranodal measurements\n *   message: Message to be displayed in case of nonconformity\n */\nexport class MaxTargetsPerOrganCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    const { options } = this;\n    const targetsPerOrgan = {};\n    let measurements = [];\n\n    const newTargetNumbers = this.getNewTargetNumbers(data);\n    data.targets.forEach(target => {\n      const { measurement } = target;\n      const { location, measurementNumber, isSplitLesion, isNodal } = measurement;\n\n      if (isSplitLesion)\n        return;\n\n      if (typeof isNodal === 'boolean' && typeof options.isNodal === 'boolean' && options.isNodal !== isNodal)\n        return;\n\n      if (!targetsPerOrgan[location]) {\n        targetsPerOrgan[location] = new Set();\n      }\n\n      if (!options.newTarget || newTargetNumbers.has(measurementNumber)) {\n        targetsPerOrgan[location].add(measurementNumber);\n      }\n\n      if (targetsPerOrgan[location].size > options.limit) {\n        measurements.push(measurement);\n      }\n    });\n\n    let message;\n    if (measurements.length) {\n      const increment = options.newTarget ? 'new ' : '';\n      message =\n        options.message ||\n        `Each organ should not have more than ${\n        options.limit\n        } ${increment}targets.`;\n    }\n\n    return this.generateResponse(message, measurements);\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const MaxTargetsSchema = {\n  type: 'object',\n  properties: {\n    limit: {\n      label: 'Max targets allowed in study',\n      type: 'integer',\n      minimum: 0,\n    },\n    newTarget: {\n      label: 'Flag to evaluate only new targets',\n      type: 'boolean',\n    },\n    locationIn: {\n      label:\n        'Filter to evaluate only measurements with the specified locations',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    locationNotIn: {\n      label:\n        'Filter to evaluate only measurements without the specified locations',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    isNodal: {\n      label: 'Filter to evaluate only nodal or extranodal measurements',\n      type: 'boolean'\n    },\n    message: {\n      label: 'Message to be displayed in case of nonconformity',\n      type: 'string',\n    }\n  },\n  required: ['limit'],\n};\n\n/* MaxTargetsCriterion\n *   Check if the number of target measurements exceeded the limit allowed\n * Options:\n *   limit: Max targets allowed in study\n *   newTarget: Flag to evaluate only new targets (must be evaluated on both)\n *   locationIn: Filter to evaluate only measurements with the specified locations\n *   locationNotIn: Filter to evaluate only measurements without the specified locations\n *   isNodal: Filter to evaluate only nodal or extranodal measurements\n *   message: Message to be displayed in case of nonconformity\n */\nexport class MaxTargetsCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    const { options } = this;\n\n    const newTargetNumbers = this.getNewTargetNumbers(data);\n    const measurementNumbers = [];\n    data.targets.forEach(target => {\n      const { location, measurementNumber, isSplitLesion, isNodal } = target.measurement;\n\n      if (isSplitLesion)\n        return;\n\n      if (typeof isNodal === 'boolean' && typeof options.isNodal === 'boolean' && options.isNodal !== isNodal)\n        return;\n\n      if (options.newTarget && !newTargetNumbers.has(measurementNumber))\n        return;\n\n      if (options.locationIn && options.locationIn.indexOf(location) === -1)\n        return;\n\n      if (options.locationNotIn && options.locationNotIn.indexOf(location) > -1)\n        return;\n\n      measurementNumbers.push(measurementNumber);\n    });\n\n    let lesionType = '';\n    if (typeof options.isNodal === 'boolean') {\n      lesionType = options.isNodal ? 'nodal ' : 'extranodal ';\n    }\n\n    let message;\n    if (measurementNumbers.length > options.limit) {\n      const increment = options.newTarget ? 'new ' : '';\n      const plural = options.limit === 1 ? '' : 's';\n      const amount = options.limit === 0 ? '' : `more than ${options.limit}`;\n      message =\n        options.message ||\n        `The study should not have ${amount} ${increment}${lesionType}target${plural}.`;\n    }\n\n    return this.generateResponse(message);\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const MeasurementsLengthSchema = {\n  type: 'object',\n  properties: {\n    longAxis: {\n      label: 'Minimum length of long axis',\n      type: 'number',\n      minimum: 0,\n    },\n    shortAxis: {\n      label: 'Minimum length of short axis',\n      type: 'number',\n      minimum: 0,\n    },\n    longAxisSliceThicknessMultiplier: {\n      label: 'Length of long axis multiplier',\n      type: 'number',\n      minimum: 0,\n    },\n    shortAxisSliceThicknessMultiplier: {\n      label: 'Length of short axis multiplier',\n      type: 'number',\n      minimum: 0,\n    },\n    modalityIn: {\n      label:\n        'Filter to evaluate only measurements with the specified modalities',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    modalityNotIn: {\n      label:\n        'Filter to evaluate only measurements without the specified modalities',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    locationIn: {\n      label:\n        'Filter to evaluate only measurements with the specified locations',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    locationNotIn: {\n      label:\n        'Filter to evaluate only measurements without the specified locations',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    isNodal: {\n      label: 'Filter to evaluate only nodal or extranodal measurements',\n      type: 'boolean',\n    },\n    message: {\n      label: 'Message to be displayed in case of nonconformity',\n      type: 'string',\n    },\n  },\n  anyOf: [\n    { required: ['message', 'longAxis'] },\n    { required: ['message', 'shortAxis'] },\n    { required: ['message', 'longAxisSliceThicknessMultiplier'] },\n    { required: ['message', 'shortAxisSliceThicknessMultiplier'] },\n  ],\n};\n\n/*\n * MeasurementsLengthCriterion\n *   Check the measurements of all bidirectional tools based on\n *   short axis, long axis, modalities, location and slice thickness\n * Options:\n *   longAxis: Minimum length of long axis\n *   shortAxis: Minimum length of short axis\n *   longAxisSliceThicknessMultiplier: Length of long axis multiplier\n *   shortAxisSliceThicknessMultiplier: Length of short axis multiplier\n *   modalityIn: Filter to evaluate only measurements with the specified modalities\n *   modalityNotIn: Filter to evaluate only measurements without the specified modalities\n *   locationIn: Filter to evaluate only measurements with the specified locations\n *   locationNotIn: Filter to evaluate only measurements without the specified locations\n *   isNodal: Filter to evaluate only nodal or extranodal measurements\n *   message: Message to be displayed in case of nonconformity\n */\nexport class MeasurementsLengthCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    let message;\n    let measurements = [];\n    const { options } = this;\n    const longMultiplier = options.longAxisSliceThicknessMultiplier;\n    const shortMultiplier = options.shortAxisSliceThicknessMultiplier;\n\n    data.targets.forEach(item => {\n      const { metadata, measurement } = item;\n      const { location } = measurement;\n\n      let { longestDiameter, shortestDiameter, isNodal } = measurement;\n      if (measurement.childToolsCount) {\n        const child = measurement.bidirectional;\n        longestDiameter = (child && child.longestDiameter) || 0;\n        shortestDiameter = (child && child.shortestDiameter) || 0;\n      }\n\n      const { SliceThickness } = metadata;\n\n      const Modality = metadata.getTagValue('Modality') || '';\n\n      // Stop here if the measurement does not match the Modality and location filters\n      if (\n        typeof isNodal === 'boolean' &&\n        typeof options.isNodal === 'boolean' &&\n        options.isNodal !== isNodal\n      )\n        return;\n      if (options.locationIn && options.locationIn.indexOf(location) === -1)\n        return;\n      if (options.modalityIn && options.modalityIn.indexOf(Modality) === -1)\n        return;\n      if (options.locationNotIn && options.locationNotIn.indexOf(location) > -1)\n        return;\n      if (options.modalityNotIn && options.modalityNotIn.indexOf(Modality) > -1)\n        return;\n\n      // Check the measurement length\n      const failed =\n        (options.longAxis && longestDiameter < options.longAxis) ||\n        (options.shortAxis && shortestDiameter < options.shortAxis) ||\n        (longMultiplier &&\n          !isNaN(SliceThickness) &&\n          longestDiameter < longMultiplier * SliceThickness) ||\n        (shortMultiplier &&\n          !isNaN(SliceThickness) &&\n          shortestDiameter < shortMultiplier * SliceThickness);\n\n      // Mark this measurement as invalid if some of the checks have failed\n      if (failed) {\n        measurements.push(measurement);\n      }\n    });\n\n    // Use the options' message if some measurement is invalid\n    if (measurements.length) {\n      message = options.message;\n    }\n\n    return this.generateResponse(message, measurements);\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const ModalitySchema = {\n  type: 'object',\n  properties: {\n    method: {\n      label: 'Specify if it\\'s goinig to \"allow\" or \"deny\" the modalities',\n      type: 'string',\n      enum: ['allow', 'deny'],\n    },\n    measurementTypes: {\n      label: 'List of measurement types that will be evaluated',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    modalities: {\n      label: 'List of allowed/denied modalities',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n  },\n  required: ['method', 'modalities'],\n};\n\n/*\n * ModalityCriteria\n *   Check if a Modality is allowed or denied\n * Options:\n *   method (string): Specify if it\\'s goinig to \"allow\" or \"deny\" the modalities\n *   measurementTypes (string[]): List of measurement types that will be evaluated\n *   modalities (string[]): List of allowed/denied modalities\n */\nexport class ModalityCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    const measurementTypes = this.options.measurementTypes || ['targets'];\n    const modalitiesSet = new Set(this.options.modalities);\n    const validationMethod = this.options.method;\n    const measurements = [];\n    const invalidModalities = new Set();\n    let message;\n\n    measurementTypes.forEach(measurementType => {\n      const items = data[measurementType];\n\n      items.forEach(item => {\n        const { measurement, metadata } = item;\n        const Modality = metadata.getTagValue('Modality') || '';\n\n        if (\n          (validationMethod === 'allow' && !modalitiesSet.has(Modality)) ||\n          (validationMethod === 'deny' && modalitiesSet.has(Modality))\n        ) {\n          measurements.push(measurement);\n          invalidModalities.add(Modality);\n        }\n      });\n    });\n\n    if (measurements.length) {\n      const uniqueModalities = Array.from(invalidModalities);\n      const uniqueModalitiesText = uniqueModalities.join(', ');\n      const modalityText =\n        uniqueModalities.length > 1 ? 'modalities' : 'Modality';\n\n      message = `The ${modalityText} ${uniqueModalitiesText} should not be used as a method of measurement`;\n    }\n\n    return this.generateResponse(message, measurements);\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const NonTargetResponseSchema = {\n  type: 'object',\n};\n\n/* NonTargetResponseCriterion\n *   Check if the there are non-target measurements with response different than \"present\" on baseline\n */\nexport class NonTargetResponseCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    const items = data.nonTargets;\n    const measurements = [];\n    let message;\n\n    items.forEach(item => {\n      const measurement = item.measurement;\n      const response = (measurement.response || '').toLowerCase();\n\n      if (response !== 'present') {\n        measurements.push(measurement);\n      }\n    });\n\n    if (measurements.length) {\n      message = 'Non-targets can only be assessed as \"present\"';\n    }\n\n    return this.generateResponse(message, measurements);\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const TargetTypeSchema = {\n  type: 'object',\n};\n\n/* TargetTypeCriterion\n *   Check if the there are non-bidirectional target measurements on baseline\n */\nexport class TargetTypeCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    const items = data.targets;\n    const measurements = [];\n    let message;\n\n    items.forEach(item => {\n      const measurement = item.measurement;\n\n      if (\n        measurement.toolType !== 'Bidirectional' &&\n        !measurement.bidirectional\n      ) {\n        measurements.push(measurement);\n      }\n    });\n\n    if (measurements.length) {\n      message =\n        'Target lesions must have measurements (cannot be assessed as CR, UN/NE, EX)';\n    }\n\n    return this.generateResponse(message, measurements);\n  }\n}\n","import { BaseCriterion } from './criteria/BaseCriterion';\nimport * as initialCriteria from './criteria';\nimport Ajv from 'ajv';\n\nconst Criteria = Object.assign({}, initialCriteria);\n\nexport class CriteriaEvaluator {\n  constructor(criteriaObject) {\n    const criteriaValidator = this.getCriteriaValidator();\n    this.criteria = [];\n\n    if (!criteriaValidator(criteriaObject)) {\n      let message = '';\n      criteriaValidator.errors.forEach(error => {\n        message += `\\noptions${error.dataPath} ${error.message}`;\n      });\n      throw new Error(message);\n    }\n\n    Object.keys(criteriaObject).forEach(criterionkey => {\n      const optionsObject = criteriaObject[criterionkey];\n      const Criterion = Criteria[`${criterionkey}Criterion`];\n      const optionsArray =\n        optionsObject instanceof Array ? optionsObject : [optionsObject];\n      optionsArray.forEach(options =>\n        this.criteria.push(new Criterion(options, criterionkey))\n      );\n    });\n  }\n\n  getMaxTargets(newTarget = false) {\n    let result = 0;\n    this.criteria.forEach(criterion => {\n      const newTargetMatch = newTarget === !!criterion.options.newTarget;\n      if (criterion instanceof Criteria.MaxTargetsCriterion && newTargetMatch) {\n        const { limit } = criterion.options;\n        if (limit > result) {\n          result = limit;\n        }\n      }\n    });\n    return result;\n  }\n\n  getCriteriaValidator() {\n    if (CriteriaEvaluator.criteriaValidator) {\n      return CriteriaEvaluator.criteriaValidator;\n    }\n\n    const schema = {\n      properties: {},\n      definitions: {},\n    };\n\n    Object.keys(Criteria).forEach(key => {\n      const Criterion = Criteria[key];\n      if (Criterion.prototype instanceof BaseCriterion) {\n        const criterionkey = key.replace(/Criterion$/, '');\n        const criterionDefinition = `#/definitions/${criterionkey}`;\n\n        schema.definitions[criterionkey] = Criteria[`${criterionkey}Schema`];\n        schema.properties[criterionkey] = {\n          oneOf: [\n            { $ref: criterionDefinition },\n            {\n              type: 'array',\n              items: {\n                $ref: criterionDefinition,\n              },\n            },\n          ],\n        };\n      }\n    });\n\n    CriteriaEvaluator.criteriaValidator = new Ajv().compile(schema);\n    return CriteriaEvaluator.criteriaValidator;\n  }\n\n  evaluate(data) {\n    const nonconformities = [];\n    this.criteria.forEach(criterion => {\n      const criterionResult = criterion.evaluate(data);\n      if (!criterionResult.passed) {\n        nonconformities.push(criterionResult);\n      }\n    });\n    return nonconformities;\n  }\n\n  static setCriterion(criterionKey, criterionDefinitions) {\n    Criteria[criterionKey] = criterionDefinitions;\n  }\n}\n","import * as recistEvaluation from './recist.json';\n\nexport const recist11 = recistEvaluation;\n","import { CriteriaEvaluator } from './CriteriaEvaluator';\nimport * as initialEvaluations from './evaluations';\nimport log from '../../log';\n\nconst evaluations = Object.assign({}, initialEvaluations);\n\nconst BASELINE = 'baseline';\nconst FOLLOWUP = 'followup';\nconst BOTH = 'both';\nconst TARGETS = 'targets';\nconst NONTARGETS = 'nonTargets';\n\nclass ConformanceCriteria {\n  constructor(measurementApi, timepointApi, options = {}) {\n    this.measurementApi = measurementApi;\n    this.timepointApi = timepointApi;\n    this.nonconformities = [];\n    this.groupedNonConformities = [];\n    this.maxTargets = null;\n    this.maxNewTargets = null;\n    this.options = options;\n  }\n\n  loadStudy(StudyInstanceUID) {\n    if (typeof this.options.loadStudy !== 'function') {\n      throw new Error('loadStudy callback is not defined');\n    }\n\n    return this.options.loadStudy(null, StudyInstanceUID);\n  }\n\n  async validate(trialCriteriaType) {\n    const baselinePromise = this.getData(BASELINE);\n    const followupPromise = this.getData(FOLLOWUP);\n    const [baselineData, followupData] = await Promise.all([\n      baselinePromise,\n      followupPromise,\n    ]);\n    const mergedData = {\n      targets: [],\n      nonTargets: [],\n    };\n\n    mergedData.targets = mergedData.targets.concat(baselineData.targets);\n    mergedData.targets = mergedData.targets.concat(followupData.targets);\n    mergedData.nonTargets = mergedData.nonTargets.concat(\n      baselineData.nonTargets\n    );\n    mergedData.nonTargets = mergedData.nonTargets.concat(\n      followupData.nonTargets\n    );\n\n    this.maxTargets = null;\n    this.maxNewTargets = null;\n    const resultBoth = this.validateTimepoint(\n      BOTH,\n      trialCriteriaType,\n      mergedData\n    );\n    const resultBaseline = this.validateTimepoint(\n      BASELINE,\n      trialCriteriaType,\n      baselineData\n    );\n    const resultFollowup = this.validateTimepoint(\n      FOLLOWUP,\n      trialCriteriaType,\n      followupData\n    );\n    const nonconformities = resultBaseline\n      .concat(resultFollowup)\n      .concat(resultBoth);\n    const groupedNonConformities = this.groupNonConformities(nonconformities);\n\n    // Keep both? Group the data only on viewer/measurementTable views?\n    // Work with not grouped data (worse lookup performance on measurementTableRow)?\n    this.nonconformities = nonconformities;\n    this.groupedNonConformities = groupedNonConformities;\n\n    console.warn('nonconformities');\n    console.warn(nonconformities);\n    console.warn('groupedNonConformities');\n    console.warn(groupedNonConformities);\n\n    return nonconformities;\n  }\n\n  groupNonConformities(nonconformities) {\n    const groups = {};\n    const toolsGroupsMap = this.measurementApi.toolsGroupsMap;\n\n    nonconformities.forEach(nonConformity => {\n      if (nonConformity.isGlobal) {\n        groups.globals = groups.globals || { messages: [] };\n        groups.globals.messages.push(nonConformity.message);\n\n        return;\n      }\n\n      nonConformity.measurements.forEach(measurement => {\n        const groupName = toolsGroupsMap[measurement.toolType];\n        groups[groupName] = groups[groupName] || { measurementNumbers: {} };\n\n        const group = groups[groupName];\n        const measureNumber = measurement.measurementNumber;\n        let measurementNumbers = group.measurementNumbers[measureNumber];\n\n        if (!measurementNumbers) {\n          measurementNumbers = group.measurementNumbers[measureNumber] = {\n            messages: [],\n            measurements: [],\n          };\n        }\n\n        measurementNumbers.messages.push(nonConformity.message);\n        measurementNumbers.measurements.push(measurement);\n      });\n    });\n\n    return groups;\n  }\n\n  validateTimepoint(timepointType, trialCriteriaType, data) {\n    const evaluators = this.getEvaluators(timepointType, trialCriteriaType);\n    let nonconformities = [];\n\n    evaluators.forEach(evaluator => {\n      const maxTargets = evaluator.getMaxTargets(false);\n      const maxNewTargets = evaluator.getMaxTargets(true);\n      if (maxTargets) {\n        this.maxTargets = maxTargets;\n      }\n\n      if (maxNewTargets) {\n        this.maxNewTargets = maxNewTargets;\n      }\n\n      const result = evaluator.evaluate(data);\n\n      if (result.length > 0) {\n        result.forEach(resultItem => {\n          resultItem.timepointType = timepointType;\n        });\n      }\n\n      nonconformities = nonconformities.concat(result);\n    });\n\n    return nonconformities;\n  }\n\n  getEvaluators(timepointType, trialCriteriaType) {\n    const evaluators = [];\n    console.warn(evaluations);\n    const trialCriteriaTypeId = trialCriteriaType.id.toLowerCase();\n    const evaluation = evaluations[trialCriteriaTypeId];\n\n    if (evaluation) {\n      const evaluationTimepoint = evaluation[timepointType];\n\n      if (evaluationTimepoint) {\n        evaluators.push(new CriteriaEvaluator(evaluationTimepoint));\n      }\n    }\n\n    return evaluators;\n  }\n\n  /*\n   * Build the data that will be used to do the conformance criteria checks\n   */\n  async getData(timepointType) {\n    const data = {\n      targets: [],\n      nonTargets: [],\n    };\n\n    const studyPromises = [];\n\n    const fillData = measurementType => {\n      const measurements = this.measurementApi.fetch(measurementType);\n\n      measurements.forEach(measurement => {\n        const { StudyInstanceUID } = measurement;\n\n        const timepointId = measurement.timepointId;\n        const timepoint =\n          timepointId &&\n          this.timepointApi.timepoints.find(a => a.timepointId === timepointId);\n\n        if (\n          !timepoint ||\n          (timepointType !== BOTH && timepoint.timepointType !== timepointType)\n        ) {\n          return;\n        }\n\n        const promise = this.loadStudy(StudyInstanceUID);\n        promise.then(\n          studyMetadata => {\n            data[measurementType].push({\n              measurement,\n              metadata: studyMetadata.getFirstInstance(),\n              timepoint,\n            });\n          },\n          error => {\n            throw new Error(error);\n          }\n        );\n        studyPromises.push(promise);\n      });\n    };\n\n    fillData(TARGETS);\n    fillData(NONTARGETS);\n\n    await Promise.all(studyPromises);\n\n    return data;\n  }\n\n  static setEvaluationDefinitions(evaluationKey, evaluationDefinitions) {\n    evaluations[evaluationKey] = evaluationDefinitions;\n  }\n}\n\nexport default ConformanceCriteria;\n//OHIF.measurements.ConformanceCriteria = ConformanceCriteria;\n","import cornerstone from 'cornerstone-core';\n\nexport default function(element, imageId) {\n  if (!imageId) {\n    // Get the Cornerstone imageId\n    const enabledElement = cornerstone.getEnabledElement(element);\n    imageId = enabledElement.image.imageId;\n  }\n\n  // Get StudyInstanceUID & PatientID\n  const {\n    StudyInstanceUID,\n    PatientID,\n    SeriesInstanceUID,\n    SOPInstanceUID,\n  } = cornerstone.metaData.get('instance', imageId);\n\n  const splitImageId = imageId.split('&frame');\n  const frameIndex =\n    splitImageId[1] !== undefined ? Number(splitImageId[1]) : 0;\n\n  const imagePath = [\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID,\n    frameIndex,\n  ].join('_');\n\n  return {\n    PatientID,\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID,\n    frameIndex,\n    imagePath,\n  };\n}\n","import cornerstone from 'cornerstone-core';\n\nexport default function refreshCornerstoneViewports() {\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    if (enabledElement.image) {\n      cornerstone.updateImage(enabledElement.element);\n    }\n  });\n}\n","import cornerstone from 'cornerstone-core';\nimport { MeasurementApi } from '../classes';\nimport log from '../../log';\nimport user from '../../user';\nimport getImageAttributes from '../lib/getImageAttributes';\nimport getLabel from '../lib/getLabel';\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\n\nexport default function handleSingleMeasurementAdded({ eventData, tool }) {\n  const measurementApi = MeasurementApi.Instance;\n  if (!measurementApi) {\n    log.warn('Measurement API is not initialized');\n  }\n\n  const { measurementData, toolType } = eventData;\n\n  const collection = measurementApi.tools[toolType];\n\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\n  if (!collection) return;\n\n  // Stop here if there's no measurement data or if it was cancelled\n  if (!measurementData || measurementData.cancelled) return;\n\n  log.info('CornerstoneToolsMeasurementAdded');\n\n  const imageAttributes = getImageAttributes(eventData.element);\n  const measurement = Object.assign({}, measurementData, imageAttributes, {\n    lesionNamingNumber: measurementData.lesionNamingNumber,\n    userId: user.getUserId(),\n    toolType,\n  });\n\n  const addedMeasurement = measurementApi.addMeasurement(toolType, measurement);\n  Object.assign(measurementData, addedMeasurement);\n\n  const measurementLabel = getLabel(measurementData);\n  if (measurementLabel) {\n    measurementData.labels = [measurementLabel];\n  }\n\n  // TODO: This is very hacky, but will work for now\n  refreshCornerstoneViewports();\n\n  // TODO: Notify about the last activated measurement\n\n  if (MeasurementApi.isToolIncluded(tool)) {\n    // TODO: Notify that viewer suffered changes\n  }\n}\n","import cornerstone from 'cornerstone-core';\nimport { MeasurementApi } from '../classes';\nimport log from '../../log';\nimport user from '../../user';\nimport getImageAttributes from '../lib/getImageAttributes';\nimport getLabel from '../lib/getLabel';\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\n\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\n  const measurementApi = MeasurementApi.Instance;\n  if (!measurementApi) {\n    log.warn('Measurement API is not initialized');\n  }\n\n  const { measurementData } = eventData;\n\n  const collection = measurementApi.tools[tool.parentTool];\n\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\n  if (!collection) return;\n\n  // Stop here if there's no measurement data or if it was cancelled\n  if (!measurementData || measurementData.cancelled) return;\n\n  log.info('CornerstoneToolsMeasurementAdded');\n\n  const imageAttributes = getImageAttributes(eventData.element);\n\n  const additionalProperties = Object.assign(imageAttributes, {\n    userId: user.getUserId(),\n  });\n\n  const childMeasurement = Object.assign(\n    {},\n    measurementData,\n    additionalProperties\n  );\n\n  const parentMeasurement = collection.find(\n    t =>\n      t.toolType === tool.parentTool &&\n      t.PatientID === imageAttributes.PatientID &&\n      t[tool.attribute] === null\n  );\n\n  // Check if a measurement to fit this child tool already exists\n  if (parentMeasurement) {\n    const key = tool.attribute;\n\n    // Add the createdAt attribute\n    childMeasurement.createdAt = new Date();\n\n    // Update the parent measurement\n    parentMeasurement[key] = childMeasurement;\n    parentMeasurement.childToolsCount =\n      (parentMeasurement.childToolsCount || 0) + 1;\n    measurementApi.updateMeasurement(tool.parentTool, parentMeasurement);\n\n    // Update the measurementData ID and lesionNamingNumber\n    measurementData._id = parentMeasurement._id;\n    measurementData.lesionNamingNumber = parentMeasurement.lesionNamingNumber;\n  } else {\n    const measurement = {\n      toolType: tool.parentTool,\n      lesionNamingNumber: measurementData.lesionNamingNumber,\n      userId: user.getUserId(),\n      PatientID: imageAttributes.PatientID,\n      StudyInstanceUID: imageAttributes.StudyInstanceUID,\n    };\n\n    measurement[tool.attribute] = Object.assign(\n      {},\n      measurementData,\n      additionalProperties\n    );\n\n    const addedMeasurement = measurementApi.addMeasurement(\n      tool.parentTool,\n      measurement\n    );\n    Object.assign(measurementData, addedMeasurement);\n  }\n\n  const measurementLabel = getLabel(measurementData);\n  if (measurementLabel) {\n    measurementData.labels = [measurementLabel];\n  }\n\n  // TODO: This is very hacky, but will work for now\n  refreshCornerstoneViewports();\n\n  // TODO: Notify about the last activated measurement\n\n  if (MeasurementApi.isToolIncluded(tool)) {\n    // TODO: Notify that viewer suffered changes\n  }\n}\n","import cornerstone from 'cornerstone-core';\nimport { MeasurementApi } from '../classes';\nimport log from '../../log';\n\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\n  const measurementApi = MeasurementApi.Instance;\n  if (!measurementApi) {\n    log.warn('Measurement API is not initialized');\n  }\n\n  const { measurementData, toolType } = eventData;\n\n  const collection = measurementApi.tools[toolType];\n\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\n  if (!collection) return;\n\n  log.info('CornerstoneToolsMeasurementModified');\n  let measurement = collection.find(t => t._id === measurementData._id);\n\n  // Stop here if the measurement is already deleted\n  if (!measurement) return;\n\n  measurement = Object.assign(measurement, measurementData);\n  measurement.viewport = cornerstone.getViewport(eventData.element);\n\n  measurementApi.updateMeasurement(toolType, measurement);\n\n  // TODO: Notify about the last activated measurement\n\n  if (MeasurementApi.isToolIncluded(tool)) {\n    // TODO: Notify that viewer suffered changes\n  }\n}\n","import cornerstone from 'cornerstone-core';\nimport { MeasurementApi } from '../classes';\nimport log from '../../log';\n\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\n  const measurementApi = MeasurementApi.Instance;\n  if (!measurementApi) {\n    log.warn('Measurement API is not initialized');\n  }\n\n  const { measurementData } = eventData;\n\n  const collection = measurementApi.tools[tool.parentTool];\n\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\n  if (!collection) return;\n\n  log.info('CornerstoneToolsMeasurementModified');\n\n  const measurement = collection.find(t => t._id === measurementData._id);\n  let childMeasurement = measurement && measurement[tool.attribute];\n\n  // Stop here if the measurement is already deleted\n  if (!childMeasurement) return;\n\n  childMeasurement = Object.assign(childMeasurement, measurementData);\n  childMeasurement.viewport = cornerstone.getViewport(eventData.element);\n\n  // Update the parent measurement\n  measurement[tool.attribute] = childMeasurement;\n  measurementApi.updateMeasurement(tool.parentTool, measurement);\n\n  // TODO: Notify about the last activated measurement\n\n  if (MeasurementApi.isToolIncluded(tool)) {\n    // TODO: Notify that viewer suffered changes\n  }\n}\n","import cornerstone from 'cornerstone-core';\nimport { MeasurementApi } from '../classes';\nimport log from '../../log';\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\n\nexport default function handleSingleMeasurementRemoved({\n  eventData,\n  tool,\n  toolGroupId,\n  toolGroup,\n}) {\n  log.info('CornerstoneToolsMeasurementRemoved');\n  const { measurementData, toolType } = eventData;\n\n  const measurementApi = MeasurementApi.Instance;\n  if (!measurementApi) {\n    log.warn('Measurement API is not initialized');\n  }\n\n  const collection = measurementApi.tools[toolType];\n\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\n  if (!collection) return;\n\n  const measurementTypeId = measurementApi.toolsGroupsMap[toolType];\n  const measurement = collection.find(t => t._id === measurementData._id);\n\n  // Stop here if the measurement is already gone or never existed\n  if (!measurement) return;\n\n  // Remove all the measurements with the given type and number\n  const { lesionNamingNumber, timepointId } = measurement;\n  measurementApi.deleteMeasurements(toolType, measurementTypeId, {\n    lesionNamingNumber,\n    timepointId,\n  });\n\n  // TODO: This is very hacky, but will work for now\n  refreshCornerstoneViewports();\n\n  if (MeasurementApi.isToolIncluded(tool)) {\n    // TODO: Notify that viewer suffered changes\n  }\n}\n","import cornerstone from 'cornerstone-core';\nimport { MeasurementApi } from '../classes';\nimport log from '../../log';\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\n\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\n  log.info('CornerstoneToolsMeasurementRemoved');\n  const { measurementData } = eventData;\n\n  const measurementApi = MeasurementApi.Instance;\n  if (!measurementApi) {\n    log.warn('Measurement API is not initialized');\n  }\n\n  const collection = measurementApi.tools[tool.parentTool];\n\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\n  if (!collection) return;\n\n  const measurementIndex = collection.findIndex(\n    t => t._id === measurementData._id\n  );\n  const measurement =\n    measurementIndex > -1 ? collection[measurementIndex] : null;\n\n  // Stop here if the measurement is already gone or never existed\n  if (!measurement) return;\n\n  if (measurement.childToolsCount === 1) {\n    // Remove the measurement\n    collection.splice(measurementIndex, 1);\n    measurementApi.onMeasurementRemoved(tool.parentTool, measurement);\n  } else {\n    // Update the measurement\n    measurement[tool.attribute] = null;\n    measurement.childToolsCount = (measurement.childToolsCount || 0) - 1;\n    measurementApi.updateMeasurement(tool.parentTool, measurement);\n  }\n\n  // TODO: This is very hacky, but will work for now\n  refreshCornerstoneViewports();\n\n  if (MeasurementApi.isToolIncluded(tool)) {\n    // TODO: Notify that viewer suffered changes\n  }\n}\n","import { MeasurementApi } from '../classes';\nimport handleSingleMeasurementAdded from './handleSingleMeasurementAdded';\nimport handleChildMeasurementAdded from './handleChildMeasurementAdded';\nimport handleSingleMeasurementModified from './handleSingleMeasurementModified';\nimport handleChildMeasurementModified from './handleChildMeasurementModified';\nimport handleSingleMeasurementRemoved from './handleSingleMeasurementRemoved';\nimport handleChildMeasurementRemoved from './handleChildMeasurementRemoved';\n\nconst getEventData = event => {\n  const eventData = event.detail;\n  if (eventData.toolName) {\n    eventData.toolType = eventData.toolName;\n  }\n\n  return eventData;\n};\n\nconst MeasurementHandlers = {\n  handleSingleMeasurementAdded,\n  handleChildMeasurementAdded,\n  handleSingleMeasurementModified,\n  handleChildMeasurementModified,\n  handleSingleMeasurementRemoved,\n  handleChildMeasurementRemoved,\n\n  onAdded(event) {\n    const eventData = getEventData(event);\n    const { toolType } = eventData;\n    const {\n      toolGroupId,\n      toolGroup,\n      tool,\n    } = MeasurementApi.getToolConfiguration(toolType);\n    const params = {\n      eventData,\n      tool,\n      toolGroupId,\n      toolGroup,\n    };\n\n    if (!tool) return;\n\n    if (tool.parentTool) {\n      handleChildMeasurementAdded(params);\n    } else {\n      handleSingleMeasurementAdded(params);\n    }\n  },\n\n  onModified(event) {\n    const eventData = getEventData(event);\n    const { toolType } = eventData;\n    const {\n      toolGroupId,\n      toolGroup,\n      tool,\n    } = MeasurementApi.getToolConfiguration(toolType);\n    const params = {\n      eventData,\n      tool,\n      toolGroupId,\n      toolGroup,\n    };\n\n    if (!tool) return;\n\n    if (tool.parentTool) {\n      handleChildMeasurementModified(params);\n    } else {\n      handleSingleMeasurementModified(params);\n    }\n  },\n\n  onRemoved(event) {\n    const eventData = getEventData(event);\n    const { toolType } = eventData;\n    const {\n      toolGroupId,\n      toolGroup,\n      tool,\n    } = MeasurementApi.getToolConfiguration(toolType);\n    const params = {\n      eventData,\n      tool,\n      toolGroupId,\n      toolGroup,\n    };\n\n    if (!tool) return;\n\n    if (tool.parentTool) {\n      handleChildMeasurementRemoved(params);\n    } else {\n      handleSingleMeasurementRemoved(params);\n    }\n  },\n};\n\nexport default MeasurementHandlers;\n","import { bidirectional, targetCR, targetUN, targetNE } from '../tools';\n\nexport const targets = {\n  id: 'targets',\n  name: 'Targets',\n  childTools: [bidirectional, targetCR, targetUN, targetNE],\n  options: {\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","import { nonTarget } from '../tools';\n\nexport const nonTargets = {\n  id: 'nonTargets',\n  name: 'Non-Targets',\n  childTools: [nonTarget],\n  options: {\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","import { length, ellipticalRoi } from '../tools';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst childTools = cloneDeep([length, ellipticalRoi]);\n\n// Exclude temp tools from case progress\nchildTools.forEach(childTool => {\n  childTool.options = Object.assign({}, childTool.options, {\n    caseProgress: {\n      include: false,\n      evaluate: false,\n    },\n  });\n});\n\nexport const temp = {\n  id: 'temp',\n  name: 'Temporary',\n  childTools,\n  options: {\n    caseProgress: {\n      include: false,\n      evaluate: false,\n    },\n  },\n};\n","import { targets } from './toolGroups/targets';\nimport { nonTargets } from './toolGroups/nonTargets';\nimport { temp } from './toolGroups/temp';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst ltTools = cloneDeep([targets, nonTargets, temp]);\n\nltTools.forEach(toolGroup => {\n  toolGroup.childTools.forEach(tool => {\n    tool.toolGroup = toolGroup.id;\n  });\n});\n\nexport default ltTools;\n","import * as tools from './tools';\nimport { MeasurementApi, TimepointApi } from './classes';\nimport { ConformanceCriteria } from './conformance';\nimport MeasurementHandlers from './measurementHandlers';\nimport getDescription from './lib/getDescription';\nimport getImageAttributes from './lib/getImageAttributes';\nimport getImageIdForImagePath from './lib/getImageIdForImagePath';\nimport getLabel from './lib/getLabel';\nimport ltTools from './ltTools';\n\nconst measurements = {\n  TimepointApi,\n  MeasurementApi,\n  ConformanceCriteria,\n  MeasurementHandlers,\n  ltTools,\n  tools,\n  getLabel,\n  getDescription,\n  getImageAttributes,\n  getImageIdForImagePath,\n};\n\nexport default measurements;\n","import DICOMWeb from '../../../DICOMWeb/';\nimport { api } from 'dicomweb-client';\n\nimport errorHandler from '../../../errorHandler';\n\n/**\n * Parses data returned from a QIDO search and transforms it into\n * an array of series that are present in the study\n *\n * @param server The DICOM server\n * @param StudyInstanceUID\n * @param resultData\n * @returns {Array} Series List\n */\nfunction resultDataToStudyMetadata(server, StudyInstanceUID, resultData) {\n  const seriesMap = {};\n  const series = [];\n\n  resultData.forEach(function(instance) {\n    // Use seriesMap to cache series data\n    // If the series instance UID has already been used to\n    // process series data, continue using that series\n    var SeriesInstanceUID = DICOMWeb.getString(instance['0020000E']);\n    var series = seriesMap[SeriesInstanceUID];\n\n    // If no series data exists in the seriesMap cache variable,\n    // process any available series data\n    if (!series) {\n      series = {\n        SeriesInstanceUID: SeriesInstanceUID,\n        SeriesNumber: DICOMWeb.getString(instance['00200011']),\n        instances: [],\n      };\n\n      // Save this data in the seriesMap cache variable\n      seriesMap[SeriesInstanceUID] = series;\n      series.push(series);\n    }\n\n    // The uri for the dicomweb\n    // NOTE: DCM4CHEE seems to return the data zipped\n    // NOTE: Orthanc returns the data with multi-part mime which cornerstoneWADOImageLoader doesn't\n    //       know how to parse yet\n    //var uri = DICOMWeb.getString(instance['00081190']);\n    //uri = uri.replace('wado-rs', 'dicom-web');\n\n    // manually create a WADO-URI from the UIDs\n    // NOTE: Haven't been able to get Orthanc's WADO-URI to work yet - maybe its not configured?\n    var SOPInstanceUID = DICOMWeb.getString(instance['00080018']);\n    var uri =\n      server.wadoUriRoot +\n      '?requestType=WADO&studyUID=' +\n      StudyInstanceUID +\n      '&seriesUID=' +\n      SeriesInstanceUID +\n      '&objectUID=' +\n      SOPInstanceUID +\n      '&contentType=application%2Fdicom';\n\n    // Add this instance to the current series\n    series.instances.push({\n      SOPClassUID: DICOMWeb.getString(instance['00080016']),\n      SOPInstanceUID: SOPInstanceUID,\n      uri: uri,\n      InstanceNumber: DICOMWeb.getString(instance['00200013']),\n    });\n  });\n  return series;\n}\n\n/**\n * Retrieve a set of instances using a QIDO call\n * @param server\n * @param StudyInstanceUID\n * @throws ECONNREFUSED\n * @returns {{wadoUriRoot: String, StudyInstanceUID: String, series: Array}}\n */\nexport default function Instances(server, StudyInstanceUID) {\n  // TODO: Are we using this function anywhere?? Can we remove it?\n\n  const config = {\n    url: server.qidoRoot,\n    headers: DICOMWeb.getAuthorizationHeader(server),\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\n  };\n  const dicomWeb = new api.DICOMwebClient(config);\n  const queryParams = getQIDOQueryParams(\n    filter,\n    server.qidoSupportsIncludeField\n  );\n  const options = {\n    studyInstanceUID: StudyInstanceUID,\n  };\n\n  return dicomWeb.searchForInstances(options).then(result => {\n    return {\n      wadoUriRoot: server.wadoUriRoot,\n      StudyInstanceUID: StudyInstanceUID,\n      series: resultDataToStudyMetadata(server, StudyInstanceUID, result.data),\n    };\n  });\n}\n","import { api } from 'dicomweb-client';\nimport StaticWadoClient from './StaticWadoClient';\nimport DICOMWeb from '../../../DICOMWeb/';\n\nimport errorHandler from '../../../errorHandler';\nimport getXHRRetryRequestHook from '../../../utils/xhrRetryRequestHook';\n\n/**\n * Creates a QIDO date string for a date range query\n * Assumes the year is positive, at most 4 digits long.\n *\n * @param date The Date object to be formatted\n * @returns {string} The formatted date string\n */\nfunction dateToString(date) {\n  if (!date) return '';\n  let year = date.getFullYear().toString();\n  let month = (date.getMonth() + 1).toString();\n  let day = date.getDate().toString();\n  year = '0'.repeat(4 - year.length).concat(year);\n  month = '0'.repeat(2 - month.length).concat(month);\n  day = '0'.repeat(2 - day.length).concat(day);\n  return ''.concat(year, month, day);\n}\n\n/**\n * Produces a QIDO URL given server details and a set of specified search filter\n * items\n *\n * @param filter\n * @param serverSupportsQIDOIncludeField\n * @returns {string} The URL with encoded filter query data\n */\nfunction getQIDOQueryParams(filter, serverSupportsQIDOIncludeField) {\n  const commaSeparatedFields = [\n    '00081030', // Study Description\n    '00080060', // Modality\n    // Add more fields here if you want them in the result\n  ].join(',');\n\n  const parameters = {\n    PatientName: filter.PatientName,\n    PatientID: filter.PatientID,\n    AccessionNumber: filter.AccessionNumber,\n    StudyDescription: filter.StudyDescription,\n    ModalitiesInStudy: filter.ModalitiesInStudy,\n    limit: filter.limit,\n    offset: filter.offset,\n    fuzzymatching: filter.fuzzymatching,\n    includefield: serverSupportsQIDOIncludeField ? commaSeparatedFields : 'all',\n  };\n\n  // build the StudyDate range parameter\n  if (filter.studyDateFrom || filter.studyDateTo) {\n    const dateFrom = dateToString(new Date(filter.studyDateFrom));\n    const dateTo = dateToString(new Date(filter.studyDateTo));\n    parameters.StudyDate = `${dateFrom}-${dateTo}`;\n  }\n\n  // Build the StudyInstanceUID parameter\n  if (filter.StudyInstanceUID) {\n    let studyUIDs = filter.StudyInstanceUID;\n    studyUIDs = Array.isArray(studyUIDs) ? studyUIDs.join() : studyUIDs;\n    studyUIDs = studyUIDs.replace(/[^0-9.]+/g, '\\\\');\n    parameters.StudyInstanceUID = studyUIDs;\n  }\n\n  // Clean query params of undefined values.\n  const params = {};\n  Object.keys(parameters).forEach(key => {\n    if (parameters[key] !== undefined && parameters[key] !== '') {\n      params[key] = parameters[key];\n    }\n  });\n\n  return params;\n}\n\n/**\n * Parses resulting data from a QIDO call into a set of Study MetaData\n *\n * @param resultData\n * @returns {Array} An array of Study MetaData objects\n */\nfunction resultDataToStudies(resultData) {\n  const studies = [];\n\n  if (!resultData || !resultData.length) return;\n\n  resultData.forEach(study =>\n    studies.push({\n      StudyInstanceUID: DICOMWeb.getString(study['0020000D']),\n      // 00080005 = SpecificCharacterSet\n      StudyDate: DICOMWeb.getString(study['00080020']),\n      StudyTime: DICOMWeb.getString(study['00080030']),\n      AccessionNumber: DICOMWeb.getString(study['00080050']),\n      referringPhysicianName: DICOMWeb.getString(study['00080090']),\n      // 00081190 = URL\n      PatientName: DICOMWeb.getName(study['00100010']),\n      PatientID: DICOMWeb.getString(study['00100020']),\n      PatientBirthdate: DICOMWeb.getString(study['00100030']),\n      patientSex: DICOMWeb.getString(study['00100040']),\n      studyId: DICOMWeb.getString(study['00200010']),\n      numberOfStudyRelatedSeries: DICOMWeb.getString(study['00201206']),\n      numberOfStudyRelatedInstances: DICOMWeb.getString(study['00201208']),\n      StudyDescription: DICOMWeb.getString(study['00081030']),\n      // Modality: DICOMWeb.getString(study['00080060']),\n      // ModalitiesInStudy: DICOMWeb.getString(study['00080061']),\n      modalities: DICOMWeb.getString(\n        DICOMWeb.getModalities(study['00080060'], study['00080061'])\n      ),\n    })\n  );\n\n  return studies;\n}\n\nexport default function Studies(server, filter) {\n  const { staticWado } = server;\n  const config = {\n    ...server,\n    url: server.qidoRoot,\n    headers: DICOMWeb.getAuthorizationHeader(server),\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\n    requestHooks: [getXHRRetryRequestHook()],\n  };\n\n  const dicomWeb = staticWado\n    ? new StaticWadoClient(config)\n    : new api.DICOMwebClient(config);\n  server.qidoSupportsIncludeField =\n    server.qidoSupportsIncludeField === undefined\n      ? true\n      : server.qidoSupportsIncludeField;\n  const queryParams = getQIDOQueryParams(\n    filter,\n    server.qidoSupportsIncludeField\n  );\n  const options = {\n    queryParams,\n  };\n\n  return dicomWeb.searchForStudies(options).then(resultDataToStudies);\n}\n","// DICOMWeb instance, study, and metadata retrieval\nimport Instances from './qido/instances.js';\nimport Studies from './qido/studies.js';\nimport RetrieveMetadata from './wado/retrieveMetadata.js';\n\nconst WADO = {\n  RetrieveMetadata,\n};\n\nconst QIDO = {\n  Studies,\n  Instances,\n};\n\nexport { QIDO, WADO };\n","import Studies from './services/qido/studies';\n\nconst studySearchPromises = new Map();\n\n/**\n * Search for studies information by the given filter\n *\n * @param {Object} filter Filter that will be used on search\n * @returns {Promise} resolved with an array of studies information or rejected with an error\n */\nexport default function searchStudies(server, filter) {\n  const promiseKeyObj = {\n    qidoRoot: server.qidoRoot,\n    filter,\n  };\n  const promiseKey = JSON.stringify(promiseKeyObj);\n  if (studySearchPromises.has(promiseKey)) {\n    return studySearchPromises.get(promiseKey);\n  } else {\n    const promise = Studies(server, filter);\n\n    studySearchPromises.set(promiseKey, promise);\n\n    return promise;\n  }\n}\n","import { QIDO, WADO } from './services/';\nimport {\n  deleteStudyMetadataPromise,\n  retrieveStudyMetadata,\n} from './retrieveStudyMetadata.js';\n\nimport getStudyBoxData from './getStudyBoxData';\nimport retrieveStudiesMetadata from './retrieveStudiesMetadata.js';\nimport searchStudies from './searchStudies';\nimport sortStudy from './sortStudy';\n\nconst studies = {\n  services: {\n    QIDO,\n    WADO,\n  },\n  loadingDict: {},\n  retrieveStudyMetadata,\n  deleteStudyMetadataPromise,\n  retrieveStudiesMetadata,\n  getStudyBoxData,\n  searchStudies,\n  sortStudy,\n};\n\nexport default studies;\n","import log from '../log.js';\nimport { retrieveStudyMetadata } from './retrieveStudyMetadata';\n\n/**\n * Retrieves metaData for multiple studies at once.\n *\n * This function calls retrieveStudyMetadata several times, asynchronously,\n * and waits for all of the results to be returned.\n *\n * @param {Object} server Object with server configuration parameters\n * @param {Array} studyInstanceUIDs The UIDs of the Studies to be retrieved\n * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\n * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\n * @param {boolean} [separateSeriesInstanceUIDFilters = false] - If true, split filtered metadata calls into multiple calls,\n * as some DICOMWeb implementations only support single filters.\n * @returns {Promise} that will be resolved with the metadata or rejected with the error\n */\nexport default function retrieveStudiesMetadata(\n  server,\n  studyInstanceUIDs,\n  filters,\n  separateSeriesInstanceUIDFilters = false\n) {\n  // Create an empty array to store the Promises for each metaData retrieval call\n  const promises = [];\n\n  // Loop through the array of studyInstanceUIDs\n  studyInstanceUIDs.forEach(function(StudyInstanceUID) {\n    // Send the call and resolve or reject the related promise based on its outcome\n    const promise = retrieveStudyMetadata(\n      server,\n      StudyInstanceUID,\n      filters,\n      separateSeriesInstanceUIDFilters\n    );\n\n    // Add the current promise to the array of promises\n    promises.push(promise);\n  });\n\n  // When all of the promises are complete, this callback runs\n  const promise = Promise.all(promises);\n\n  // Warn the error on console if some retrieval failed\n  promise.catch(error => log.warn(error));\n\n  return promise;\n}\n","/**\n * Overridable namespace to allow getting study boxes data externally.\n *\n * The function must handle the first parameter as a studyInformation object containing at least the\n * StudyInstanceUID attribute.\n *\n * Shall return a promise that will be resolved with an object containing those attributes:\n * - StudyInstanceUID {String}: copy of studyInformation.StudyInstanceUID\n * - modalities {String}: 2 uppercase letters for each Modality split by any non-alphabetical char(s)\n * - StudyDate {String}: date formatted as YYYYMMDD\n * - StudyDescription {String}: study description string\n */\n// TODO: What is this for?\nconst getStudyBoxData = false;\n\nexport default getStudyBoxData;\n","function getWADORSImageUrl(instance, frame) {\n  let wadorsuri = instance.wadorsuri;\n\n  if (!wadorsuri) {\n    return;\n  }\n\n  // Use null to obtain an imageId which represents the instance\n  if (frame === null) {\n    wadorsuri = wadorsuri.replace(/frames\\/(\\d+)/, '');\n  } else {\n    // We need to sum 1 because WADO-RS frame number is 1-based\n    frame = frame ? parseInt(frame) + 1 : 1;\n\n    // Replaces /frame/1 by /frame/{frame}\n    wadorsuri = wadorsuri.replace(/frames\\/(\\d+)/, `frames/${frame}`);\n  }\n\n  return wadorsuri;\n}\n\n/**\n * Obtain an imageId for Cornerstone based on the WADO-RS scheme\n *\n * @param {object} instanceMetada metadata object (InstanceMetadata)\n * @param {(string\\|number)} [frame] the frame number\n * @returns {string} The imageId to be used by Cornerstone\n */\nexport default function getWADORSImageId(instance, frame) {\n  const uri = getWADORSImageUrl(instance, frame);\n\n  if (!uri) {\n    return;\n  }\n\n  return `wadors:${uri}`;\n}\n","import DICOMWeb from '../DICOMWeb/';\nimport isLowPriorityModality from '../utils/isLowPriorityModality';\n\nconst INFO = Symbol('INFO');\n\n/**\n * Creates an object with processed series information and saves its reference\n * inside the series object itself.\n * @param {Object} series The raw series object\n * @returns {Object} object containing some useful info from given series\n */\nexport default function getSeriesInfo(series) {\n  let info = series[INFO];\n  if (!info) {\n    const Modality = DICOMWeb.getString(series['00080060'], '').toUpperCase();\n    info = Object.freeze({\n      Modality,\n      isLowPriority: isLowPriorityModality(Modality),\n      SeriesInstanceUID: DICOMWeb.getString(series['0020000E']),\n      SeriesNumber: DICOMWeb.getNumber(series['00200011'], 0) || 0,\n    });\n    series[INFO] = info;\n  }\n  return info;\n}\n","import getSeriesInfo from './getSeriesInfo';\n\n/**\n * Series sorting criteria: series considered low priority are moved to the end\n * of the list and series number is used to break ties\n * @param {Object} firstSeries\n * @param {Object} secondSeries\n */\nfunction seriesInfoSortingCriteria(firstSeries, secondSeries) {\n  const a = getSeriesInfo(firstSeries);\n  const b = getSeriesInfo(secondSeries);\n  if (!a.isLowPriority && b.isLowPriority) {\n    return -1;\n  }\n  if (a.isLowPriority && !b.isLowPriority) {\n    return 1;\n  }\n  return a.SeriesNumber - b.SeriesNumber;\n}\n\nconst seriesSortCriteria = {\n  default: (a, b) => a.SeriesNumber - b.SeriesNumber,\n  seriesInfoSortingCriteria,\n};\n\nconst instancesSortCriteria = {\n  default: (a, b) => a.InstanceNumber - b.InstanceNumber,\n};\n\nconst sortingCriteria = {\n  seriesSortCriteria,\n  instancesSortCriteria,\n};\n\n/**\n * Sorts given series (given param is modified)\n * The default criteria is based on series number in ascending order.\n *\n * @param {Array} series List of series\n * @param {function} seriesSortingCriteria method for sorting\n * @returns {Array} sorted series object\n */\nconst sortStudySeries = (\n  series,\n  seriesSortingCriteria = seriesSortCriteria.default\n) => {\n  return series.sort(seriesSortingCriteria);\n};\n\n/**\n * Sorts given instancesList (given param is modified)\n * The default criteria is based on instance number in ascending order.\n *\n * @param {Array} instancesList List of series\n * @param {function} instancesSortingCriteria method for sorting\n * @returns {Array} sorted instancesList object\n */\nconst sortStudyInstances = (\n  instancesList,\n  instancesSortingCriteria = instancesSortCriteria.default\n) => {\n  return instancesList.sort(instancesSortingCriteria);\n};\n\n/**\n * Sorts the series and instances (by default) inside a study instance based on sortingCriteria (given param is modified)\n * The default criteria is based on series and instance numbers in ascending order.\n *\n * @param {Object} study The study instance\n * @param {boolean} [deepSort = true] to sort instance also\n * @param {function} [seriesSortingCriteria = seriesSortCriteria.default] method for sorting series\n * @param {function} [instancesSortingCriteria = instancesSortCriteria.default] method for sorting instances\n * @returns {Object} sorted study object\n */\nexport default function sortStudy(\n  study,\n  deepSort = true,\n  seriesSortingCriteria = seriesSortCriteria.default,\n  instancesSortingCriteria = instancesSortCriteria.default\n) {\n  if (!study || !study.series) {\n    throw new Error('Insufficient study data was provided to sortStudy');\n  }\n\n  sortStudySeries(study.series, seriesSortingCriteria);\n\n  if (deepSort) {\n    study.series.forEach(series => {\n      sortStudyInstances(series.instances, instancesSortingCriteria);\n    });\n  }\n\n  return study;\n}\n\nexport { sortStudySeries, sortStudyInstances, sortingCriteria };\n","import DICOMWeb from '../../../DICOMWeb';\n\n/**\n * Function to get series sequence (sequence of pepeating items where each\n * item includes the attributes of one or more series) based on a given sopInstance.\n *\n * @param {Object} instance The sop instance\n * @returns {Promise} Referenced series sequence\n */\nconst getReferencedSeriesSequence = instance => {\n  const referencedSeriesSequenceRaw = instance['00081115'];\n\n  const referencedSeriesSequence = [];\n\n  if (referencedSeriesSequenceRaw && referencedSeriesSequenceRaw.Value) {\n    referencedSeriesSequenceRaw.Value.forEach(referencedSeries => {\n      const referencedSeriesInstanceUID = DICOMWeb.getString(\n        referencedSeries['0020000E']\n      );\n\n      const referencedInstanceSequenceRaw = referencedSeries['0008114A'];\n      const referencedInstanceSequence = [];\n\n      referencedInstanceSequenceRaw.Value.forEach(referencedInstance => {\n        referencedInstanceSequence.push({\n          referencedSOPClassUID: DICOMWeb.getString(\n            referencedInstance['00081150']\n          ),\n          referencedSOPInstanceUID: DICOMWeb.getString(\n            referencedInstance['00081155']\n          ),\n        });\n      });\n\n      referencedSeriesSequence.push({\n        referencedSeriesInstanceUID,\n        referencedInstanceSequence,\n      });\n    });\n  }\n\n  return referencedSeriesSequence;\n};\n\nexport default getReferencedSeriesSequence;\n","import DICOMWeb from '../../../DICOMWeb';\nimport metadataProvider from '../../../classes/MetadataProvider';\nimport getWADORSImageId from '../../../utils/getWADORSImageId';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport getReferencedSeriesSequence from './getReferencedSeriesSequence';\n\n/**\n * Create a plain JS object that describes a study (a study descriptor object)\n * @param {Object} server Object with server configuration parameters\n * @param {Object} aSopInstance a SOP Instance from which study information will be added\n */\nfunction createStudy(server, aSopInstance) {\n  // TODO: Pass a reference ID to the server instead of including the URLs here\n  return {\n    series: [],\n    seriesMap: Object.create(null),\n    seriesLoader: null,\n    wadoUriRoot: server.wadoUriRoot,\n    wadoRoot: server.wadoRoot,\n    qidoRoot: server.qidoRoot,\n    PatientName: DICOMWeb.getName(aSopInstance['00100010']),\n    PatientID: DICOMWeb.getString(aSopInstance['00100020']),\n    PatientAge: DICOMWeb.getNumber(aSopInstance['00101010']),\n    PatientSize: DICOMWeb.getNumber(aSopInstance['00101020']),\n    PatientWeight: DICOMWeb.getNumber(aSopInstance['00101030']),\n    AccessionNumber: DICOMWeb.getString(aSopInstance['00080050']),\n    StudyTime: DICOMWeb.getString(aSopInstance['00080030']),\n    StudyDate: DICOMWeb.getString(aSopInstance['00080020']),\n    FrameOfReferenceUID: DICOMWeb.getString(aSopInstance['00200052']),\n    ReferencedSeriesSequence: getReferencedSeriesSequence(aSopInstance),\n    modalities: DICOMWeb.getString(aSopInstance['00080061']), // TODO -> Rename this.. it'll take a while to not mess this one up.\n    StudyDescription: DICOMWeb.getString(aSopInstance['00081030']),\n    NumberOfStudyRelatedInstances: DICOMWeb.getString(aSopInstance['00201208']),\n    StudyInstanceUID: DICOMWeb.getString(aSopInstance['0020000D']),\n    InstitutionName: DICOMWeb.getString(aSopInstance['00080080']),\n  };\n}\n\n/** Returns a WADO url for an instance\n *\n * @param StudyInstanceUID\n * @param SeriesInstanceUID\n * @param SOPInstanceUID\n * @returns  {string}\n */\nfunction buildInstanceWadoUrl(\n  server,\n  StudyInstanceUID,\n  SeriesInstanceUID,\n  SOPInstanceUID\n) {\n  // TODO: This can be removed, since DICOMWebClient has the same function. Not urgent, though\n  const params = [];\n\n  params.push('requestType=WADO');\n  params.push(`studyUID=${StudyInstanceUID}`);\n  params.push(`seriesUID=${SeriesInstanceUID}`);\n  params.push(`objectUID=${SOPInstanceUID}`);\n  params.push('contentType=application/dicom');\n  params.push('transferSyntax=*');\n\n  const paramString = params.join('&');\n\n  return `${server.wadoUriRoot}?${paramString}`;\n}\n\nfunction buildInstanceWadoRsUri(\n  server,\n  StudyInstanceUID,\n  SeriesInstanceUID,\n  SOPInstanceUID\n) {\n  return `${server.wadoRoot}/studies/${StudyInstanceUID}/series/${SeriesInstanceUID}/instances/${SOPInstanceUID}`;\n}\n\nfunction buildInstanceFrameWadoRsUri(\n  server,\n  StudyInstanceUID,\n  SeriesInstanceUID,\n  SOPInstanceUID,\n  frame\n) {\n  const baseWadoRsUri = buildInstanceWadoRsUri(\n    server,\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID\n  );\n  frame = frame != null || 1;\n\n  return `${baseWadoRsUri}/frames/${frame}`;\n}\n\nasync function makeSOPInstance(server, study, instance) {\n  const naturalizedInstance = await metadataProvider.addInstance(instance, {\n    server,\n  });\n\n  const {\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID,\n  } = naturalizedInstance;\n\n  let series = study.seriesMap[SeriesInstanceUID];\n\n  if (!series) {\n    series = {\n      SeriesInstanceUID,\n      SeriesDescription: naturalizedInstance.SeriesDescription,\n      Modality: naturalizedInstance.Modality,\n      SeriesNumber: naturalizedInstance.SeriesNumber,\n      SeriesDate: naturalizedInstance.SeriesDate,\n      SeriesTime: naturalizedInstance.SeriesTime,\n      instances: [],\n    };\n    study.seriesMap[SeriesInstanceUID] = series;\n    study.series.push(series);\n  } else {\n    if (series.SeriesDate === undefined)\n      series.SeriesDate = naturalizedInstance.SeriesDate;\n    if (series.SeriesTime === undefined)\n      series.SeriesTime = naturalizedInstance.SeriesTime;\n  }\n\n  const wadouri = buildInstanceWadoUrl(\n    server,\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID\n  );\n  const baseWadoRsUri = buildInstanceWadoRsUri(\n    server,\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID\n  );\n  const wadorsuri = buildInstanceFrameWadoRsUri(\n    server,\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID\n  );\n\n  const sopInstance = {\n    metadata: naturalizedInstance,\n    baseWadoRsUri,\n    wadouri,\n    wadorsuri,\n    wadoRoot: server.wadoRoot,\n    imageRendering: server.imageRendering,\n    thumbnailRendering: server.thumbnailRendering,\n  };\n\n  series.instances.push(sopInstance);\n\n  if (\n    sopInstance.thumbnailRendering === 'wadors' ||\n    sopInstance.imageRendering === 'wadors'\n  ) {\n    // If using WADO-RS for either images or thumbnails,\n    // Need to add this to cornerstoneWADOImageLoader's provider\n    // (it won't be hit on cornerstone.metaData.get, but cornerstoneWADOImageLoader\n    // will cry if you don't add data to cornerstoneWADOImageLoader.wadors.metaDataManager).\n\n    const wadoRSMetadata = Object.assign(instance);\n\n    const { NumberOfFrames } = sopInstance.metadata;\n\n    if (NumberOfFrames) {\n      for (let i = 0; i < NumberOfFrames; i++) {\n        const wadorsImageId = getWADORSImageId(sopInstance, i);\n\n        cornerstoneWADOImageLoader.wadors.metaDataManager.add(\n          wadorsImageId,\n          wadoRSMetadata\n        );\n      }\n    } else {\n      const wadorsImageId = getWADORSImageId(sopInstance);\n\n      cornerstoneWADOImageLoader.wadors.metaDataManager.add(\n        wadorsImageId,\n        wadoRSMetadata\n      );\n    }\n  }\n\n  return sopInstance;\n}\n\n/**\n * Add a list of SOP Instances to a given study object descriptor\n * @param {Object} server Object with server configuration parameters\n * @param {Object} study The study descriptor to which the given SOP instances will be added\n * @param {Array} sopInstanceList A list of SOP instance objects\n */\nasync function addInstancesToStudy(server, study, sopInstanceList) {\n  return Promise.all(\n    sopInstanceList.map(function(sopInstance) {\n      return makeSOPInstance(server, study, sopInstance);\n    })\n  );\n}\n\nconst createStudyFromSOPInstanceList = async (server, sopInstanceList) => {\n  if (Array.isArray(sopInstanceList) && sopInstanceList.length > 0) {\n    const firstSopInstance = sopInstanceList[0];\n    const study = createStudy(server, firstSopInstance);\n    await addInstancesToStudy(server, study, sopInstanceList);\n    return study;\n  }\n  throw new Error('Failed to create study out of provided SOP instance list');\n};\n\nexport { createStudyFromSOPInstanceList, addInstancesToStudy };\n","/**\n * Class to define inheritance of load retrieve strategy.\n * The process can be async load (lazy) or sync load\n *\n * There are methods that must be implemented at consumer level\n * To retrieve study call execLoad\n */\nexport default class RetrieveMetadataLoader {\n  /**\n   * @constructor\n   * @param {Object} server Object with server configuration parameters\n   * @param {Array} studyInstanceUID Study instance ui to be retrieved\n   * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\n   * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\n   */\n  constructor(server, studyInstanceUID, filters = {}) {\n    this.server = server;\n    this.studyInstanceUID = studyInstanceUID;\n    this.filters = filters;\n  }\n\n  async execLoad() {\n    await this.configLoad();\n    const preLoadData = await this.preLoad();\n    const loadData = await this.load(preLoadData);\n    const postLoadData = await this.posLoad(loadData);\n\n    return postLoadData;\n  }\n\n  /**\n   * It iterates over given loaders running each one. Loaders parameters must be bind when getting it.\n   * @param {Array} loaders - array of loader to retrieve data.\n   */\n  async runLoaders(loaders) {\n    let result;\n    for (const loader of loaders) {\n      try {\n        result = await loader();\n        if (result && result.length) {\n          break; // closes iterator in case data is retrieved successfully\n        }\n      } catch (e) {\n        throw e;\n      }\n    }\n\n    if (loaders.next().done && !result) {\n      throw new Error('RetrieveMetadataLoader failed');\n    }\n\n    return result;\n  }\n\n  // Methods to be overwrite\n  async configLoad() {}\n  async preLoad() {}\n  async load(preLoadData) {}\n  async posLoad(loadData) {}\n}\n","import { api } from 'dicomweb-client';\nimport DICOMWeb from '../../../DICOMWeb/';\nimport { createStudyFromSOPInstanceList } from './studyInstanceHelpers';\nimport RetrieveMetadataLoader from './retrieveMetadataLoader';\n\nimport errorHandler from '../../../errorHandler';\nimport getXHRRetryRequestHook from '../../../utils/xhrRetryRequestHook';\n\n/**\n * Class for sync load of study metadata.\n * It inherits from RetrieveMetadataLoader\n *\n * A list of loaders (getLoaders) can be created so, it will be applied a fallback load strategy.\n * I.e Retrieve metadata using all loaders possibilities.\n */\nexport default class RetrieveMetadataLoaderSync extends RetrieveMetadataLoader {\n  getOptions() {\n    const { studyInstanceUID, filters } = this;\n\n    const options = {\n      studyInstanceUID,\n    };\n\n    const { seriesInstanceUID } = filters;\n    if (seriesInstanceUID) {\n      options['seriesInstanceUID'] = seriesInstanceUID;\n    }\n\n    return options;\n  }\n\n  /**\n   * @returns {Array} Array of loaders. To be consumed as queue\n   */\n  *getLoaders() {\n    const loaders = [];\n    const {\n      studyInstanceUID,\n      filters: { seriesInstanceUID } = {},\n      client,\n    } = this;\n\n    if (seriesInstanceUID) {\n      loaders.push(\n        client.retrieveSeriesMetadata.bind(client, {\n          studyInstanceUID,\n          seriesInstanceUID,\n        })\n      );\n    }\n\n    loaders.push(\n      client.retrieveStudyMetadata.bind(client, { studyInstanceUID })\n    );\n\n    yield* loaders;\n  }\n\n  configLoad() {\n    const { server } = this;\n    const client = new api.DICOMwebClient({\n      url: server.wadoRoot,\n      headers: DICOMWeb.getAuthorizationHeader(server),\n      errorInterceptor: errorHandler.getHTTPErrorHandler(),\n      requestHooks: [getXHRRetryRequestHook()],\n    });\n\n    this.client = client;\n  }\n\n  async load(preLoadData) {\n    const loaders = this.getLoaders();\n    const result = this.runLoaders(loaders);\n    return result;\n  }\n\n  async posLoad(loadData) {\n    const { server } = this;\n    return createStudyFromSOPInstanceList(server, loadData);\n  }\n}\n","import StaticWadoClient from '../qido/StaticWadoClient';\nimport dcmjs from 'dcmjs';\nimport DICOMWeb from '../../../DICOMWeb/';\nimport RetrieveMetadataLoader from './retrieveMetadataLoader';\nimport { sortStudySeries, sortingCriteria } from '../../sortStudy';\nimport getSeriesInfo from '../../getSeriesInfo';\nimport {\n  createStudyFromSOPInstanceList,\n  addInstancesToStudy,\n} from './studyInstanceHelpers';\n\nimport errorHandler from '../../../errorHandler';\nimport { getXHRRetryRequestHook } from '../../../utils/xhrRetryRequestHook';\n\nconst { naturalizeDataset } = dcmjs.data.DicomMetaDictionary;\n\n/**\n * Map series to an array of SeriesInstanceUID\n * @param {Arrays} series list of Series Instance UIDs\n * @returns {Arrays} A list of Series Instance UIDs\n */\nfunction mapStudySeries(series) {\n  return series.map(series => getSeriesInfo(series).SeriesInstanceUID);\n}\n\nfunction attachSeriesLoader(server, study, seriesLoader) {\n  study.seriesLoader = Object.freeze({\n    hasNext() {\n      return seriesLoader.hasNext();\n    },\n    async next() {\n      const series = await seriesLoader.next();\n      await addInstancesToStudy(server, study, series.sopInstances);\n      return study.seriesMap[series.seriesInstanceUID];\n    },\n  });\n}\n\n/**\n * Creates an immutable series loader object which loads each series sequentially using the iterator interface\n * @param {DICOMWebClient} dicomWebClient The DICOMWebClient instance to be used for series load\n * @param {string} studyInstanceUID The Study Instance UID from which series will be loaded\n * @param {Array} seriesInstanceUIDList A list of Series Instance UIDs\n * @returns {Object} Returns an object which supports loading of instances from each of given Series Instance UID\n */\nfunction makeSeriesAsyncLoader(\n  dicomWebClient,\n  studyInstanceUID,\n  seriesInstanceUIDList\n) {\n  return Object.freeze({\n    hasNext() {\n      return seriesInstanceUIDList.length > 0;\n    },\n    async next() {\n      const seriesInstanceUID = seriesInstanceUIDList.shift();\n      const sopInstances = await dicomWebClient.retrieveSeriesMetadata({\n        studyInstanceUID,\n        seriesInstanceUID,\n      });\n      return { studyInstanceUID, seriesInstanceUID, sopInstances };\n    },\n  });\n}\n\n/**\n * Class for async load of study metadata.\n * It inherits from RetrieveMetadataLoader\n *\n * It loads the one series and then append to seriesLoader the others to be consumed/loaded\n */\nexport default class RetrieveMetadataLoaderAsync extends RetrieveMetadataLoader {\n  configLoad() {\n    const { server } = this;\n\n    const client = new StaticWadoClient({\n      ...server,\n      url: server.qidoRoot,\n      headers: DICOMWeb.getAuthorizationHeader(server),\n      errorInterceptor: errorHandler.getHTTPErrorHandler(),\n      requestHooks: [getXHRRetryRequestHook()],\n    });\n\n    this.client = client;\n  }\n\n  /**\n   * @returns {Array} Array of preLoaders. To be consumed as queue\n   */\n  *getPreLoaders() {\n    const preLoaders = [];\n    const {\n      studyInstanceUID,\n      filters: { seriesInstanceUID } = {},\n      client,\n    } = this;\n\n    if (seriesInstanceUID) {\n      const options = {\n        studyInstanceUID,\n        queryParams: { SeriesInstanceUID: seriesInstanceUID },\n      };\n      preLoaders.push(client.searchForSeries.bind(client, options));\n    }\n    // Fallback preloader\n    preLoaders.push(client.searchForSeries.bind(client, { studyInstanceUID }));\n\n    yield* preLoaders;\n  }\n\n  async preLoad() {\n    const preLoaders = this.getPreLoaders();\n\n    // seriesData is the result of the QIDO-RS Search For Series request\n    // It's an array of Objects containing DICOM Tag values at the Series level\n    const seriesData = await this.runLoaders(preLoaders);\n\n    const seriesSorted = sortStudySeries(\n      seriesData,\n      sortingCriteria.seriesSortCriteria.seriesInfoSortingCriteria\n    );\n    const seriesInstanceUIDsMap = mapStudySeries(seriesSorted);\n\n    return {\n      seriesInstanceUIDsMap,\n      seriesData,\n    };\n  }\n\n  async load(preLoadData) {\n    const { client, studyInstanceUID } = this;\n\n    const seriesAsyncLoader = makeSeriesAsyncLoader(\n      client,\n      studyInstanceUID,\n      preLoadData.seriesInstanceUIDsMap\n    );\n\n    const firstSeries = await seriesAsyncLoader.next();\n\n    return {\n      sopInstances: firstSeries.sopInstances,\n      asyncLoader: seriesAsyncLoader,\n      seriesData: preLoadData.seriesData,\n    };\n  }\n\n  async posLoad(loadData) {\n    const { server } = this;\n\n    const { sopInstances, asyncLoader, seriesData } = loadData;\n\n    const study = await createStudyFromSOPInstanceList(server, sopInstances);\n\n    // TODO: Should this be in a helper\n    const seriesDataNaturalized = seriesData.map(naturalizeDataset);\n\n    seriesDataNaturalized.forEach((series, idx) => {\n      const seriesDataFromQIDO = {\n        SeriesInstanceUID: series.SeriesInstanceUID,\n        SeriesDescription: series.SeriesDescription,\n        SeriesNumber: series.SeriesNumber,\n        Modality: series.Modality,\n        instances: [],\n      };\n\n      if (study.series[idx]) {\n        study.series[idx] = Object.assign(\n          seriesDataFromQIDO,\n          study.series[idx]\n        );\n      } else {\n        study.series[idx] = seriesDataFromQIDO;\n      }\n\n      study.seriesMap[series.SeriesInstanceUID] = study.series[idx];\n    });\n\n    if (asyncLoader.hasNext()) {\n      attachSeriesLoader(server, study, asyncLoader);\n    }\n\n    return study;\n  }\n}\n","import RetrieveMetadataLoaderSync from './retrieveMetadataLoaderSync';\nimport RetrieveMetadataLoaderAsync from './retrieveMetadataLoaderAsync';\n\n/**\n * Retrieve Study metadata from a DICOM server. If the server is configured to use lazy load, only the first series\n * will be loaded and the property \"studyLoader\" will be set to let consumer load remaining series as needed.\n *\n * @param {Object} server Object with server configuration parameters\n * @param {string} StudyInstanceUID The Study Instance UID of the study which needs to be loaded\n * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\n * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\n * @returns {Object} A study descriptor object\n */\nasync function RetrieveMetadata(server, StudyInstanceUID, filters = {}) {\n  const RetrieveMetadataLoader =\n    server.enableStudyLazyLoad != false\n      ? RetrieveMetadataLoaderAsync\n      : RetrieveMetadataLoaderSync;\n\n  const retrieveMetadataLoader = new RetrieveMetadataLoader(\n    server,\n    StudyInstanceUID,\n    filters\n  );\n  const studyMetadata = retrieveMetadataLoader.execLoad();\n\n  return studyMetadata;\n}\n\nexport default RetrieveMetadata;\n","import Hammer from 'hammerjs';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneMath from 'cornerstone-math';\nimport cornerstoneTools from 'cornerstone-tools';\nimport OHIF from '@ohif/core';\n\nconst { log } = OHIF;\n\nexport default function(configuration = {}) {\n  // For debugging\n  window.cornerstoneTools = cornerstoneTools;\n\n  cornerstoneTools.external.cornerstone = cornerstone;\n  cornerstoneTools.external.Hammer = Hammer;\n  cornerstoneTools.external.cornerstoneMath = cornerstoneMath;\n  cornerstoneTools.init(configuration);\n\n  cornerstoneTools.loadHandlerManager.setErrorLoadingHandler(\n    (element, imageId, error) => {\n      log.error(imageId);\n      throw error;\n    }\n  );\n\n  // Set the tool font and font size\n  // context.font = \"[style] [variant] [weight] [size]/[line height] [font family]\";\n  const fontFamily =\n    'Roboto, OpenSans, HelveticaNeue-Light, Helvetica Neue Light, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif';\n  cornerstoneTools.textStyle.setFont(`16px ${fontFamily}`);\n\n  // Tool styles/colors\n  cornerstoneTools.toolStyle.setToolWidth(2);\n  cornerstoneTools.toolColors.setToolColor('rgb(255, 255, 0)');\n  cornerstoneTools.toolColors.setActiveColor('rgb(0, 255, 0)');\n\n  cornerstoneTools.store.state.touchProximity = 40;\n\n  // Configure stack prefetch\n  cornerstoneTools.stackPrefetch.setConfiguration({\n    maxImagesToPrefetch: configuration.maxImagesToPrefetch,\n    preserveExistingPool: configuration.preserveExistingPool,\n    maxSimultaneousRequests: configuration.maxSimultaneousRequests,\n  });\n}\n","import cornerstone from 'cornerstone-core';\n\nconst SUPPORTED_TOOLS = [\n  'Length',\n  'EllipticalRoi',\n  'RectangleRoi',\n  'ArrowAnnotate',\n];\n\nconst measurementServiceMappingsFactory = measurementService => {\n  /**\n   * Maps measurement service format object to cornerstone annotation object.\n   *\n   * @param {Measurement} measurement The measurement instance\n   * @param {string} definition The source definition\n   * @return {Object} Cornerstone annotation data\n   */\n  const toAnnotation = (measurement, definition) => {\n    const {\n      id,\n      label,\n      description,\n      points,\n      unit,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      referenceSeriesUID,\n    } = measurement;\n\n    return {\n      toolName: definition,\n      measurementData: {\n        sopInstanceUid: SOPInstanceUID,\n        frameOfReferenceUID: FrameOfReferenceUID,\n        SeriesInstanceUID: referenceSeriesUID,\n        unit,\n        text: label,\n        description,\n        handles: _getHandlesFromPoints(points),\n        _measurementServiceId: id,\n      },\n    };\n  };\n\n  /**\n   * Maps cornerstone annotation event data to measurement service format.\n   *\n   * @param {Object} cornerstone Cornerstone event data\n   * @return {Measurement} Measurement instance\n   */\n  const toMeasurement = csToolsAnnotation => {\n    const { element, measurementData } = csToolsAnnotation;\n    const tool =\n      csToolsAnnotation.toolType ||\n      csToolsAnnotation.toolName ||\n      measurementData.toolType;\n\n    const validToolType = toolName => SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType(tool)) {\n      throw new Error('Tool not supported');\n    }\n\n    const {\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      SeriesInstanceUID,\n    } = _getAttributes(element);\n\n    const points = [];\n    points.push(measurementData.handles);\n\n    return {\n      id: measurementData._measurementServiceId,\n      SOPInstanceUID: SOPInstanceUID,\n      FrameOfReferenceUID,\n      referenceSeriesUID: SeriesInstanceUID,\n      label: measurementData.text,\n      description: measurementData.description,\n      unit: measurementData.unit,\n      area:\n        measurementData.cachedStats &&\n        measurementData.cachedStats\n          .area /* TODO: Add concept names instead (descriptor) */,\n      type: _getValueTypeFromToolType(tool),\n      points: _getPointsFromHandles(measurementData.handles),\n    };\n  };\n\n  const _getAttributes = element => {\n    const enabledElement = cornerstone.getEnabledElement(element);\n    const imageId = enabledElement.image.imageId;\n    const instance = cornerstone.metaData.get('instance', imageId);\n\n    return {\n      SOPInstanceUID: instance.SOPInstanceUID,\n      FrameOfReferenceUID: instance.FrameOfReferenceUID,\n      SeriesInstanceUID: instance.SeriesInstanceUID,\n    };\n  };\n\n  const _getValueTypeFromToolType = toolType => {\n    const { POLYLINE, ELLIPSE, POINT } = measurementService.VALUE_TYPES;\n\n    /* TODO: Relocate static value types */\n    const TOOL_TYPE_TO_VALUE_TYPE = {\n      Length: POLYLINE,\n      EllipticalRoi: ELLIPSE,\n      RectangleRoi: POLYLINE,\n      ArrowAnnotate: POINT,\n    };\n\n    return TOOL_TYPE_TO_VALUE_TYPE[toolType];\n  };\n\n  const _getPointsFromHandles = handles => {\n    let points = [];\n    Object.keys(handles).map(handle => {\n      if (['start', 'end'].includes(handle)) {\n        let point = {};\n        if (handles[handle].x) point.x = handles[handle].x;\n        if (handles[handle].y) point.y = handles[handle].y;\n        points.push(point);\n      }\n    });\n    return points;\n  };\n\n  const _getHandlesFromPoints = points => {\n    return points\n      .map((p, i) => (i % 10 === 0 ? { start: p } : { end: p }))\n      .reduce((obj, item) => Object.assign(obj, { ...item }), {});\n  };\n\n  return {\n    toAnnotation,\n    toMeasurement,\n  };\n};\n\nexport default measurementServiceMappingsFactory;\n","import cornerstone from 'cornerstone-core';\n\nconst state = {\n  TrackingUniqueIdentifier: null,\n  trackingIdentifiersByEnabledElementUUID: {},\n};\n\nfunction setTrackingUniqueIdentifiersForElement(\n  element,\n  trackingUniqueIdentifiers,\n  activeIndex = 0\n) {\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const { uuid } = enabledElement;\n\n  state.trackingIdentifiersByEnabledElementUUID[uuid] = {\n    trackingUniqueIdentifiers,\n    activeIndex,\n  };\n}\n\nfunction setActiveTrackingUniqueIdentifierForElement(\n  element,\n  TrackingUniqueIdentifier\n) {\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const { uuid } = enabledElement;\n\n  const trackingIdentifiersForElement =\n    state.trackingIdentifiersByEnabledElementUUID[uuid];\n\n  if (trackingIdentifiersForElement) {\n    const activeIndex = trackingIdentifiersForElement.trackingUniqueIdentifiers.findIndex(\n      tuid => tuid === TrackingUniqueIdentifier\n    );\n\n    trackingIdentifiersForElement.activeIndex = activeIndex;\n  }\n}\n\nfunction getTrackingUniqueIdentifiersForElement(element) {\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const { uuid } = enabledElement;\n\n  if (state.trackingIdentifiersByEnabledElementUUID[uuid]) {\n    return state.trackingIdentifiersByEnabledElementUUID[uuid];\n  }\n\n  return { trackingUniqueIdentifiers: [] };\n}\n\nexport default {\n  state,\n  getters: {\n    trackingUniqueIdentifiersForElement: getTrackingUniqueIdentifiersForElement,\n  },\n  setters: {\n    trackingUniqueIdentifiersForElement: setTrackingUniqueIdentifiersForElement,\n    activeTrackingUniqueIdentifierForElement: setActiveTrackingUniqueIdentifierForElement,\n  },\n};\n","import OHIF from '@ohif/core';\nimport { SimpleDialog } from '@ohif/ui';\nimport cornerstone from 'cornerstone-core';\nimport csTools from 'cornerstone-tools';\nimport merge from 'lodash.merge';\nimport initCornerstoneTools from './initCornerstoneTools.js';\nimport measurementServiceMappingsFactory from './utils/measurementServiceMappings/measurementServiceMappingsFactory';\nimport dicomSRModule from './tools/modules/dicomSRModule';\nimport srModuleId from './tools/id';\n\n/**\n *\n * @param {Object} servicesManager\n * @param {Object} configuration\n * @param {Object|Array} configuration.csToolsConfig\n */\nexport default function init({ servicesManager, configuration }) {\n  const { UIDialogService, MeasurementService } = servicesManager.services;\n\n  csTools.register('module', srModuleId, dicomSRModule);\n\n  const callInputDialog = (data, event, callback) => {\n    if (UIDialogService) {\n      let dialogId = UIDialogService.create({\n        centralize: true,\n        isDraggable: false,\n        content: SimpleDialog.InputDialog,\n        useLastPosition: false,\n        showOverlay: true,\n        contentProps: {\n          title: 'Enter your annotation',\n          label: 'New label',\n          measurementData: data ? { description: data.text } : {},\n          onClose: () => UIDialogService.dismiss({ id: dialogId }),\n          onSubmit: value => {\n            callback(value);\n            UIDialogService.dismiss({ id: dialogId });\n          },\n        },\n      });\n    }\n  };\n\n  const {\n    csToolsConfig,\n    stackPrefetch = {\n      maxImagesToPrefetch: Infinity,\n      preserveExistingPool: false,\n      maxSimultaneousRequests: 20,\n    },\n  } = configuration;\n  const metadataProvider = OHIF.cornerstone.metadataProvider;\n\n  cornerstone.metaData.addProvider(\n    metadataProvider.get.bind(metadataProvider),\n    9999\n  );\n\n  // ~~\n  const defaultCsToolsConfig = csToolsConfig || {\n    globalToolSyncEnabled: true,\n    showSVGCursors: true,\n    autoResizeViewports: false,\n  };\n\n  initCornerstoneTools({ ...defaultCsToolsConfig, ...stackPrefetch });\n\n  const toolsGroupedByType = {\n    touch: [csTools.PanMultiTouchTool, csTools.ZoomTouchPinchTool],\n    annotations: [\n      csTools.ArrowAnnotateTool,\n      csTools.BidirectionalTool,\n      csTools.LengthTool,\n      csTools.AngleTool,\n      csTools.FreehandRoiTool,\n      csTools.EllipticalRoiTool,\n      csTools.DragProbeTool,\n      csTools.RectangleRoiTool,\n    ],\n    other: [\n      csTools.PanTool,\n      csTools.ZoomTool,\n      csTools.WwwcTool,\n      csTools.WwwcRegionTool,\n      csTools.MagnifyTool,\n      csTools.StackScrollTool,\n      csTools.StackScrollMouseWheelTool,\n      csTools.OverlayTool,\n    ],\n  };\n\n  let tools = [];\n  Object.keys(toolsGroupedByType).forEach(toolsGroup =>\n    tools.push(...toolsGroupedByType[toolsGroup])\n  );\n\n  /* Measurement Service */\n  _connectToolsToMeasurementService(MeasurementService);\n\n  /* Add extension tools configuration here. */\n  const internalToolsConfig = {\n    ArrowAnnotate: {\n      configuration: {\n        getTextCallback: (callback, eventDetails) =>\n          callInputDialog(null, eventDetails, callback),\n        changeTextCallback: (data, eventDetails, callback) =>\n          callInputDialog(data, eventDetails, callback),\n      },\n    },\n  };\n\n  /* Abstract tools configuration using extension configuration. */\n  const parseToolProps = (props, tool) => {\n    const { annotations } = toolsGroupedByType;\n    // An alternative approach would be to remove the `drawHandlesOnHover` config\n    // from the supported configuration properties in `cornerstone-tools`\n    const toolsWithHideableHandles = annotations.filter(\n      tool => !['RectangleRoiTool', 'EllipticalRoiTool'].includes(tool.name)\n    );\n\n    let parsedProps = { ...props };\n\n    /**\n     * drawHandles - Never/Always show handles\n     * drawHandlesOnHover - Only show handles on handle hover (pointNearHandle)\n     *\n     * Does not apply to tools where handles aren't placed in predictable\n     * locations.\n     */\n    if (\n      configuration.hideHandles !== false &&\n      toolsWithHideableHandles.includes(tool)\n    ) {\n      if (props.configuration) {\n        parsedProps.configuration.drawHandlesOnHover = true;\n      } else {\n        parsedProps.configuration = { drawHandlesOnHover: true };\n      }\n    }\n\n    return parsedProps;\n  };\n\n  /* Add tools with its custom props through extension configuration. */\n  tools.forEach(tool => {\n    const toolName = tool.name.replace('Tool', '');\n    const externalToolsConfig = configuration.tools || {};\n    const externalToolProps = externalToolsConfig[toolName] || {};\n    const internalToolProps = internalToolsConfig[toolName] || {};\n    const props = merge(\n      internalToolProps,\n      parseToolProps(externalToolProps, tool)\n    );\n    csTools.addTool(tool, props);\n  });\n\n  // TODO -> We need a better way to do this with maybe global tool state setting all tools passive.\n  const BaseAnnotationTool = csTools.importInternal('base/BaseAnnotationTool');\n  tools.forEach(tool => {\n    if (tool.prototype instanceof BaseAnnotationTool) {\n      // BaseAnnotationTool would likely come from csTools lib exports\n      const toolName = new tool().name;\n      csTools.setToolPassive(toolName); // there may be a better place to determine name; may not be on uninstantiated class\n    }\n  });\n\n  csTools.setToolActive('Pan', { mouseButtonMask: 4 });\n  csTools.setToolActive('Zoom', { mouseButtonMask: 2 });\n  csTools.setToolActive('Wwwc', { mouseButtonMask: 1 });\n  csTools.setToolActive('StackScrollMouseWheel', {}); // TODO: Empty options should not be required\n  csTools.setToolActive('PanMultiTouch', { pointers: 2 }); // TODO: Better error if no options\n  csTools.setToolActive('ZoomTouchPinch', {});\n  csTools.setToolEnabled('Overlay', {});\n}\n\nconst _initMeasurementService = measurementService => {\n  /* Initialization */\n  const { toAnnotation, toMeasurement } = measurementServiceMappingsFactory(\n    measurementService\n  );\n  const csToolsVer4MeasurementSource = measurementService.createSource(\n    'CornerstoneTools',\n    '4'\n  );\n\n  /* Matching Criterias */\n  const matchingCriteria = {\n    valueType: measurementService.VALUE_TYPES.POLYLINE,\n    points: 2,\n  };\n\n  /* Mappings */\n  measurementService.addMapping(\n    csToolsVer4MeasurementSource,\n    'Length',\n    matchingCriteria,\n    toAnnotation,\n    toMeasurement\n  );\n\n  return csToolsVer4MeasurementSource;\n};\n\nconst _connectToolsToMeasurementService = measurementService => {\n  const csToolsVer4MeasurementSource = _initMeasurementService(\n    measurementService\n  );\n  const {\n    id: sourceId,\n    addOrUpdate,\n    getAnnotation,\n  } = csToolsVer4MeasurementSource;\n\n  /* Measurement Service Events */\n  cornerstone.events.addEventListener(\n    cornerstone.EVENTS.ELEMENT_ENABLED,\n    event => {\n      const {\n        MEASUREMENT_ADDED,\n        MEASUREMENT_UPDATED,\n      } = measurementService.EVENTS;\n\n      measurementService.subscribe(\n        MEASUREMENT_ADDED,\n        ({ source, measurement }) => {\n          if (![sourceId].includes(source.id)) {\n            const annotation = getAnnotation('Length', measurement.id);\n\n            console.log(\n              'Measurement Service [Cornerstone]: Measurement added',\n              measurement\n            );\n            console.log('Mapped annotation:', annotation);\n          }\n        }\n      );\n\n      measurementService.subscribe(\n        MEASUREMENT_UPDATED,\n        ({ source, measurement }) => {\n          if (![sourceId].includes(source.id)) {\n            const annotation = getAnnotation('Length', measurement.id);\n\n            console.log(\n              'Measurement Service [Cornerstone]: Measurement updated',\n              measurement\n            );\n            console.log('Mapped annotation:', annotation);\n          }\n        }\n      );\n\n      const addOrUpdateMeasurement = csToolsAnnotation => {\n        try {\n          const { toolName, toolType, measurementData } = csToolsAnnotation;\n          const csTool = toolName || measurementData.toolType || toolType;\n          csToolsAnnotation.id = measurementData._measurementServiceId;\n          const measurementServiceId = addOrUpdate(csTool, csToolsAnnotation);\n\n          if (!measurementData._measurementServiceId) {\n            addMeasurementServiceId(measurementServiceId, csToolsAnnotation);\n          }\n        } catch (error) {\n          console.warn('Failed to add or update measurement:', error);\n        }\n      };\n\n      const addMeasurementServiceId = (id, csToolsAnnotation) => {\n        const { measurementData } = csToolsAnnotation;\n        Object.assign(measurementData, { _measurementServiceId: id });\n      };\n\n      [\n        csTools.EVENTS.MEASUREMENT_ADDED,\n        csTools.EVENTS.MEASUREMENT_MODIFIED,\n      ].forEach(csToolsEvtName => {\n        event.detail.element.addEventListener(\n          csToolsEvtName,\n          ({ detail: csToolsAnnotation }) => {\n            console.log(`Cornerstone Element Event: ${csToolsEvtName}`);\n            addOrUpdateMeasurement(csToolsAnnotation);\n          }\n        );\n      });\n    }\n  );\n};\n","import { redux } from '@ohif/core';\n\nconst { setLayout } = redux.actions;\n\n/**\n * Update the current layout with a simple Cornerstone one\n *\n * @return void\n */\nconst setCornerstoneLayout = () => {\n  const layout = {\n    numRows: 1,\n    numColumns: 1,\n    viewports: [{ plugin: 'cornerstone' }],\n  };\n\n  const action = setLayout(layout);\n\n  window.store.dispatch(action);\n}\n\nexport default setCornerstoneLayout;\n","import React from 'react';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport PropTypes from 'prop-types';\n\nimport { ViewportDownloadForm } from '@ohif/ui';\nimport { utils } from '@ohif/core';\n\nimport { getEnabledElement } from './state';\n\nconst MINIMUM_SIZE = 100;\nconst DEFAULT_SIZE = 512;\nconst MAX_TEXTURE_SIZE = 10000;\n\nconst CornerstoneViewportDownloadForm = ({ onClose, activeViewportIndex }) => {\n  const activeEnabledElement = getEnabledElement(activeViewportIndex);\n\n  const enableViewport = viewportElement => {\n    if (viewportElement) {\n      cornerstone.enable(viewportElement);\n    }\n  };\n\n  const disableViewport = viewportElement => {\n    if (viewportElement) {\n      cornerstone.disable(viewportElement);\n    }\n  };\n\n  const updateViewportPreview = (viewportElement, downloadCanvas, fileType) =>\n    new Promise(resolve => {\n      cornerstone.fitToWindow(viewportElement);\n\n      viewportElement.addEventListener(\n        'cornerstoneimagerendered',\n        function updateViewport(event) {\n          const enabledElement = cornerstone.getEnabledElement(event.target)\n            .element;\n          const type = 'image/' + fileType;\n          const dataUrl = downloadCanvas.toDataURL(type, 1);\n\n          let newWidth = enabledElement.offsetHeight;\n          let newHeight = enabledElement.offsetWidth;\n\n          if (newWidth > DEFAULT_SIZE || newHeight > DEFAULT_SIZE) {\n            const multiplier = DEFAULT_SIZE / Math.max(newWidth, newHeight);\n            newHeight *= multiplier;\n            newWidth *= multiplier;\n          }\n\n          resolve({ dataUrl, width: newWidth, height: newHeight });\n\n          viewportElement.removeEventListener(\n            'cornerstoneimagerendered',\n            updateViewport\n          );\n        }\n      );\n    });\n\n  const loadImage = (activeViewport, viewportElement, width, height) =>\n    new Promise(resolve => {\n      if (activeViewport && viewportElement) {\n        const enabledElement = cornerstone.getEnabledElement(activeViewport);\n        const viewport = Object.assign({}, enabledElement.viewport);\n        delete viewport.scale;\n        viewport.translation = {\n          x: 0,\n          y: 0,\n        };\n\n        cornerstone.loadImage(enabledElement.image.imageId).then(image => {\n          cornerstone.displayImage(viewportElement, image);\n          cornerstone.setViewport(viewportElement, viewport);\n          cornerstone.resize(viewportElement, true);\n\n          const newWidth = Math.min(width || image.width, MAX_TEXTURE_SIZE);\n          const newHeight = Math.min(height || image.height, MAX_TEXTURE_SIZE);\n\n          resolve({ image, width: newWidth, height: newHeight });\n        });\n      }\n    });\n\n  const toggleAnnotations = (toggle, viewportElement) => {\n    cornerstoneTools.store.state.tools.forEach(({ name }) => {\n      if (toggle) {\n        cornerstoneTools.setToolEnabledForElement(viewportElement, name);\n      } else {\n        cornerstoneTools.setToolDisabledForElement(viewportElement, name);\n      }\n    });\n  };\n\n  const downloadBlob = (\n    filename,\n    fileType,\n    viewportElement,\n    downloadCanvas\n  ) => {\n    const file = `${filename}.${fileType}`;\n    const mimetype = `image/${fileType}`;\n\n    /* Handles JPEG images for IE11 */\n    if (downloadCanvas.msToBlob && fileType === 'jpeg') {\n      const image = downloadCanvas.toDataURL(mimetype, 1);\n      const blob = utils.b64toBlob(\n        image.replace('data:image/jpeg;base64,', ''),\n        mimetype\n      );\n      return window.navigator.msSaveBlob(blob, file);\n    }\n\n    viewportElement.querySelector('canvas').toBlob(blob => {\n      const URLObj = window.URL || window.webkitURL;\n      const a = document.createElement('a');\n      a.href = URLObj.createObjectURL(blob);\n      a.download = file;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    });\n  };\n\n  return (\n    <ViewportDownloadForm\n      onClose={onClose}\n      minimumSize={MINIMUM_SIZE}\n      maximumSize={MAX_TEXTURE_SIZE}\n      defaultSize={DEFAULT_SIZE}\n      canvasClass={'cornerstone-canvas'}\n      activeViewport={activeEnabledElement}\n      enableViewport={enableViewport}\n      disableViewport={disableViewport}\n      updateViewportPreview={updateViewportPreview}\n      loadImage={loadImage}\n      toggleAnnotations={toggleAnnotations}\n      downloadBlob={downloadBlob}\n    />\n  );\n};\n\nCornerstoneViewportDownloadForm.propTypes = {\n  onClose: PropTypes.func,\n  activeViewportIndex: PropTypes.number.isRequired,\n};\n\nexport default CornerstoneViewportDownloadForm;\n","import cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport OHIF from '@ohif/core';\n\nimport setCornerstoneLayout from './utils/setCornerstoneLayout.js';\nimport { getEnabledElement } from './state';\nimport CornerstoneViewportDownloadForm from './CornerstoneViewportDownloadForm';\nconst scroll = cornerstoneTools.import('util/scroll');\n\nconst { studyMetadataManager } = OHIF.utils;\nconst { setViewportSpecificData } = OHIF.redux.actions;\n\nconst refreshCornerstoneViewports = () => {\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    if (enabledElement.image) {\n      cornerstone.updateImage(enabledElement.element);\n    }\n  });\n};\n\nconst commandsModule = ({ servicesManager }) => {\n  const actions = {\n    rotateViewport: ({ viewports, rotation }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n\n      if (enabledElement) {\n        let viewport = cornerstone.getViewport(enabledElement);\n        viewport.rotation += rotation;\n        cornerstone.setViewport(enabledElement, viewport);\n      }\n    },\n    flipViewportHorizontal: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n\n      if (enabledElement) {\n        let viewport = cornerstone.getViewport(enabledElement);\n        viewport.hflip = !viewport.hflip;\n        cornerstone.setViewport(enabledElement, viewport);\n      }\n    },\n    flipViewportVertical: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n\n      if (enabledElement) {\n        let viewport = cornerstone.getViewport(enabledElement);\n        viewport.vflip = !viewport.vflip;\n        cornerstone.setViewport(enabledElement, viewport);\n      }\n    },\n    scaleViewport: ({ direction, viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n      const step = direction * 0.15;\n\n      if (enabledElement) {\n        if (step) {\n          let viewport = cornerstone.getViewport(enabledElement);\n          viewport.scale += step;\n          cornerstone.setViewport(enabledElement, viewport);\n        } else {\n          cornerstone.fitToWindow(enabledElement);\n        }\n      }\n    },\n    resetViewport: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n\n      if (enabledElement) {\n        cornerstone.reset(enabledElement);\n      }\n    },\n    invertViewport: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n\n      if (enabledElement) {\n        let viewport = cornerstone.getViewport(enabledElement);\n        viewport.invert = !viewport.invert;\n        cornerstone.setViewport(enabledElement, viewport);\n      }\n    },\n    // TODO: this is receiving `evt` from `ToolbarRow`. We could use it to have\n    //       better mouseButtonMask sets.\n    setToolActive: ({ toolName }) => {\n      if (!toolName) {\n        console.warn('No toolname provided to setToolActive command');\n      }\n      cornerstoneTools.setToolActive(toolName, { mouseButtonMask: 1 });\n    },\n    clearAnnotations: ({ viewports }) => {\n      const element = getEnabledElement(viewports.activeViewportIndex);\n      if (!element) {\n        return;\n      }\n\n      const enabledElement = cornerstone.getEnabledElement(element);\n      if (!enabledElement || !enabledElement.image) {\n        return;\n      }\n\n      const {\n        toolState,\n      } = cornerstoneTools.globalImageIdSpecificToolStateManager;\n      if (\n        !toolState ||\n        toolState.hasOwnProperty(enabledElement.image.imageId) === false\n      ) {\n        return;\n      }\n\n      const imageIdToolState = toolState[enabledElement.image.imageId];\n\n      const measurementsToRemove = [];\n\n      Object.keys(imageIdToolState).forEach(toolType => {\n        const { data } = imageIdToolState[toolType];\n\n        data.forEach(measurementData => {\n          const {\n            _id,\n            lesionNamingNumber,\n            measurementNumber,\n          } = measurementData;\n          if (!_id) {\n            return;\n          }\n\n          measurementsToRemove.push({\n            toolType,\n            _id,\n            lesionNamingNumber,\n            measurementNumber,\n          });\n        });\n      });\n\n      measurementsToRemove.forEach(measurementData => {\n        OHIF.measurements.MeasurementHandlers.onRemoved({\n          detail: {\n            toolType: measurementData.toolType,\n            measurementData,\n          },\n        });\n      });\n    },\n    nextImage: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n      scroll(enabledElement, 1);\n    },\n    previousImage: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n      scroll(enabledElement, -1);\n    },\n    getActiveViewportEnabledElement: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n      return enabledElement;\n    },\n    showDownloadViewportModal: ({ title, viewports }) => {\n      const activeViewportIndex = viewports.activeViewportIndex;\n      const { UIModalService } = servicesManager.services;\n      if (UIModalService) {\n        UIModalService.show({\n          content: CornerstoneViewportDownloadForm,\n          title,\n          contentProps: {\n            activeViewportIndex,\n            onClose: UIModalService.hide,\n          },\n        });\n      }\n    },\n    updateTableWithNewMeasurementData({\n      toolType,\n      measurementNumber,\n      location,\n      description,\n    }) {\n      // Update all measurements by measurement number\n      const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n      const measurements = measurementApi.tools[toolType].filter(\n        m => m.measurementNumber === measurementNumber\n      );\n\n      measurements.forEach(measurement => {\n        measurement.location = location;\n        measurement.description = description;\n\n        measurementApi.updateMeasurement(measurement.toolType, measurement);\n      });\n\n      measurementApi.syncMeasurementsAndToolData();\n\n      refreshCornerstoneViewports();\n    },\n    getNearbyToolData({ element, canvasCoordinates, availableToolTypes }) {\n      const nearbyTool = {};\n      let pointNearTool = false;\n\n      availableToolTypes.forEach(toolType => {\n        const elementToolData = cornerstoneTools.getToolState(\n          element,\n          toolType\n        );\n\n        if (!elementToolData) {\n          return;\n        }\n\n        elementToolData.data.forEach((toolData, index) => {\n          let elementToolInstance = cornerstoneTools.getToolForElement(\n            element,\n            toolType\n          );\n\n          if (!elementToolInstance) {\n            elementToolInstance = cornerstoneTools.getToolForElement(\n              element,\n              `${toolType}Tool`\n            );\n          }\n\n          if (!elementToolInstance) {\n            console.warn('Tool not found.');\n            return undefined;\n          }\n\n          if (\n            elementToolInstance.pointNearTool(\n              element,\n              toolData,\n              canvasCoordinates\n            )\n          ) {\n            pointNearTool = true;\n            nearbyTool.tool = toolData;\n            nearbyTool.index = index;\n            nearbyTool.toolType = toolType;\n          }\n        });\n\n        if (pointNearTool) {\n          return false;\n        }\n      });\n\n      return pointNearTool ? nearbyTool : undefined;\n    },\n    removeToolState: ({ element, toolType, tool }) => {\n      cornerstoneTools.removeToolState(element, toolType, tool);\n      cornerstone.updateImage(element);\n    },\n    setCornerstoneLayout: () => {\n      setCornerstoneLayout();\n    },\n    setWindowLevel: ({ viewports, window, level }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n\n      if (enabledElement) {\n        let viewport = cornerstone.getViewport(enabledElement);\n\n        viewport.voi = {\n          windowWidth: Number(window),\n          windowCenter: Number(level),\n        };\n        cornerstone.setViewport(enabledElement, viewport);\n      }\n    },\n    jumpToImage: ({\n      StudyInstanceUID,\n      SOPInstanceUID,\n      frameIndex,\n      activeViewportIndex,\n      refreshViewports = true,\n    }) => {\n      const study = studyMetadataManager.get(StudyInstanceUID);\n\n      const displaySet = study.findDisplaySet(ds => {\n        return (\n          ds.images &&\n          ds.images.find(i => i.getSOPInstanceUID() === SOPInstanceUID)\n        );\n      });\n\n      if (!displaySet) {\n        return;\n      }\n\n      displaySet.SOPInstanceUID = SOPInstanceUID;\n      displaySet.frameIndex = frameIndex;\n\n      window.store.dispatch(\n        setViewportSpecificData(activeViewportIndex, displaySet)\n      );\n\n      if (refreshViewports) {\n        refreshCornerstoneViewports();\n      }\n    },\n  };\n\n  const definitions = {\n    jumpToImage: {\n      commandFn: actions.jumpToImage,\n      storeContexts: [],\n      options: {},\n    },\n    getNearbyToolData: {\n      commandFn: actions.getNearbyToolData,\n      storeContexts: [],\n      options: {},\n    },\n    removeToolState: {\n      commandFn: actions.removeToolState,\n      storeContexts: [],\n      options: {},\n    },\n    updateTableWithNewMeasurementData: {\n      commandFn: actions.updateTableWithNewMeasurementData,\n      storeContexts: [],\n      options: {},\n    },\n    showDownloadViewportModal: {\n      commandFn: actions.showDownloadViewportModal,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    getActiveViewportEnabledElement: {\n      commandFn: actions.getActiveViewportEnabledElement,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    rotateViewportCW: {\n      commandFn: actions.rotateViewport,\n      storeContexts: ['viewports'],\n      options: { rotation: 90 },\n    },\n    rotateViewportCCW: {\n      commandFn: actions.rotateViewport,\n      storeContexts: ['viewports'],\n      options: { rotation: -90 },\n    },\n    invertViewport: {\n      commandFn: actions.invertViewport,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    flipViewportVertical: {\n      commandFn: actions.flipViewportVertical,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    flipViewportHorizontal: {\n      commandFn: actions.flipViewportHorizontal,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    scaleUpViewport: {\n      commandFn: actions.scaleViewport,\n      storeContexts: ['viewports'],\n      options: { direction: 1 },\n    },\n    scaleDownViewport: {\n      commandFn: actions.scaleViewport,\n      storeContexts: ['viewports'],\n      options: { direction: -1 },\n    },\n    fitViewportToWindow: {\n      commandFn: actions.scaleViewport,\n      storeContexts: ['viewports'],\n      options: { direction: 0 },\n    },\n    resetViewport: {\n      commandFn: actions.resetViewport,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    clearAnnotations: {\n      commandFn: actions.clearAnnotations,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    nextImage: {\n      commandFn: actions.nextImage,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    previousImage: {\n      commandFn: actions.previousImage,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    // TOOLS\n    setToolActive: {\n      commandFn: actions.setToolActive,\n      storeContexts: [],\n      options: {},\n    },\n    setZoomTool: {\n      commandFn: actions.setToolActive,\n      storeContexts: [],\n      options: { toolName: 'Zoom' },\n    },\n    setCornerstoneLayout: {\n      commandFn: actions.setCornerstoneLayout,\n      storeContexts: [],\n      options: {},\n      context: 'VIEWER',\n    },\n    setWindowLevel: {\n      commandFn: actions.setWindowLevel,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n  };\n\n  return {\n    actions,\n    definitions,\n    defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\n  };\n};\n\nexport default commandsModule;\n","// TODO: A way to add Icons that don't already exist?\n// - Register them and add\n// - Include SVG Source/Inline?\n// - By URL, or own component?\n\n// What KINDS of toolbar buttons do we have...\n// - One's that dispatch commands\n// - One's that set tool's active\n// - More custom, like CINE\n//    - Built in for one's like this, or custom components?\n\n// Visible?\n// Disabled?\n// Based on contexts or misc. criteria?\n//  -- ACTIVE_ROUTE::VIEWER\n//  -- ACTIVE_VIEWPORT::CORNERSTONE\n// setToolActive commands should receive the button event that triggered\n// so we can do the \"bind to this button\" magic\n\nconst TOOLBAR_BUTTON_TYPES = {\n  COMMAND: 'command',\n  SET_TOOL_ACTIVE: 'setToolActive',\n  BUILT_IN: 'builtIn',\n};\n\nconst TOOLBAR_BUTTON_BEHAVIORS = {\n  CINE: 'CINE',\n  DOWNLOAD_SCREEN_SHOT: 'DOWNLOAD_SCREEN_SHOT',\n};\n\n/* TODO: Export enums through a extension manager. */\nconst enums = {\n  TOOLBAR_BUTTON_TYPES,\n  TOOLBAR_BUTTON_BEHAVIORS,\n};\n\nconst definitions = [\n  {\n    id: 'StackScroll',\n    label: 'Stack Scroll',\n    icon: 'bars',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'StackScroll' },\n  },\n  {\n    id: 'Zoom',\n    label: 'Zoom',\n    icon: 'search-plus',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'Zoom' },\n  },\n  {\n    id: 'Wwwc',\n    label: 'Levels',\n    icon: 'level',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'Wwwc' },\n  },\n  {\n    id: 'Pan',\n    label: 'Pan',\n    icon: 'arrows',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'Pan' },\n  },\n  {\n    id: 'Length',\n    label: 'Length',\n    icon: 'measure-temp',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'Length' },\n  },\n  {\n    id: 'ArrowAnnotate',\n    label: 'Annotate',\n    icon: 'measure-non-target',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'ArrowAnnotate' },\n  },\n  {\n    id: 'Angle',\n    label: 'Angle',\n    icon: 'angle-left',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'Angle' },\n  },\n  {\n    id: 'Reset',\n    label: 'Reset',\n    icon: 'reset',\n    //\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\n    commandName: 'resetViewport',\n  },\n  {\n    id: 'Cine',\n    label: 'CINE',\n    icon: 'youtube',\n    //\n    type: TOOLBAR_BUTTON_TYPES.BUILT_IN,\n    options: {\n      behavior: TOOLBAR_BUTTON_BEHAVIORS.CINE,\n    },\n  },\n  {\n    id: 'More',\n    label: 'More',\n    icon: 'ellipse-circle',\n    buttons: [\n      {\n        id: 'Magnify',\n        label: 'Magnify',\n        icon: 'circle',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'Magnify' },\n      },\n      {\n        id: 'WwwcRegion',\n        label: 'ROI Window',\n        icon: 'stop',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'WwwcRegion' },\n      },\n      {\n        id: 'DragProbe',\n        label: 'Probe',\n        icon: 'dot-circle',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'DragProbe' },\n      },\n      {\n        id: 'EllipticalRoi',\n        label: 'Ellipse',\n        icon: 'circle-o',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'EllipticalRoi' },\n      },\n      {\n        id: 'RectangleRoi',\n        label: 'Rectangle',\n        icon: 'square-o',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'RectangleRoi' },\n      },\n      {\n        id: 'Invert',\n        label: 'Invert',\n        icon: 'adjust',\n        //\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\n        commandName: 'invertViewport',\n      },\n      {\n        id: 'RotateRight',\n        label: 'Rotate Right',\n        icon: 'rotate-right',\n        //\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\n        commandName: 'rotateViewportCW',\n      },\n      {\n        id: 'FlipH',\n        label: 'Flip H',\n        icon: 'ellipse-h',\n        //\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\n        commandName: 'flipViewportHorizontal',\n      },\n      {\n        id: 'FlipV',\n        label: 'Flip V',\n        icon: 'ellipse-v',\n        //\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\n        commandName: 'flipViewportVertical',\n      },\n      {\n        id: 'Clear',\n        label: 'Clear',\n        icon: 'trash',\n        //\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\n        commandName: 'clearAnnotations',\n      },\n      {\n        id: 'Bidirectional',\n        label: 'Bidirectional',\n        icon: 'measure-target',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'Bidirectional' },\n      },\n      {\n        id: 'Download',\n        label: 'Download',\n        icon: 'create-screen-capture',\n        //\n        type: TOOLBAR_BUTTON_TYPES.BUILT_IN,\n        options: {\n          behavior: TOOLBAR_BUTTON_BEHAVIORS.DOWNLOAD_SCREEN_SHOT,\n          togglable: true,\n        },\n      },\n    ],\n  },\n  {\n    id: 'Exit2DMPR',\n    label: 'Exit 2D MPR',\n    icon: 'times',\n    //\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\n    commandName: 'setCornerstoneLayout',\n    context: 'ACTIVE_VIEWPORT::VTK',\n  },\n];\n\nexport default {\n  definitions,\n  defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\n};\n","import React from 'react';\nimport init from './init.js';\nimport commandsModule from './commandsModule.js';\nimport toolbarModule from './toolbarModule.js';\nimport CornerstoneViewportDownloadForm from './CornerstoneViewportDownloadForm';\nimport { version } from '../package.json';\n\nconst Component = React.lazy(() => {\n  return import('./OHIFCornerstoneViewport');\n});\n\nconst OHIFCornerstoneViewport = props => {\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <Component {...props} />\n    </React.Suspense>\n  );\n};\n\n/**\n *\n */\nexport default {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'cornerstone',\n  version,\n\n  /**\n   *\n   *\n   * @param {object} [configuration={}]\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\n   */\n  preRegistration({ servicesManager, configuration = {} }) {\n    init({ servicesManager, configuration });\n  },\n  getViewportModule({ commandsManager, appConfig }) {\n    const ExtendedOHIFCornerstoneViewport = props => {\n      /**\n       * TODO: This appears to be used to set the redux parameters for\n       * the viewport when new images are loaded. It's very ugly\n       * and we should remove it.\n       */\n      const onNewImageHandler = jumpData => {\n        /** Do not trigger all viewports to render unnecessarily */\n        jumpData.refreshViewports = false;\n        commandsManager.runCommand('jumpToImage', jumpData);\n      };\n\n      const { studyPrefetcher } = appConfig;\n      const isStackPrefetchEnabled =\n        studyPrefetcher && !studyPrefetcher.enabled;\n\n      return (\n        <OHIFCornerstoneViewport\n          {...props}\n          onNewImage={onNewImageHandler}\n          isStackPrefetchEnabled={isStackPrefetchEnabled}\n        />\n      );\n    };\n\n    return ExtendedOHIFCornerstoneViewport;\n  },\n  getToolbarModule() {\n    return toolbarModule;\n  },\n  getCommandsModule({ servicesManager }) {\n    return commandsModule({ servicesManager });\n  },\n};\n\nexport { CornerstoneViewportDownloadForm };\n","/* eslint-disable react/prop-types */\nimport React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\nimport { Icon } from '@ohif/ui';\nimport { ToastContainer, toast } from 'react-toastify';\nimport ExitToApp from '@material-ui/icons/ExitToApp';\n\nconst Navbar = ({\n  logout,\n  isAuthenticated,\n  isInvestigatorAuthenticated,\n  isHealthProfessionalAuthenticated,\n  isSuperuserAuthenticated,\n  user,\n}) => {\n  const [redirect, setRedirect] = useState(false);\n\n  const logout_user = () => {\n    logout();\n    toast.success('Logged out!', {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    setRedirect(true);\n    localStorage.clear();\n  };\n\n  const logout_user2 = () => {\n    logout();\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/login\" onClick={logout_user2}>\n          Log In\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/signup\">\n          Sign Up\n        </Link>\n      </li>\n    </Fragment>\n  );\n\n  const investigatorAuthLinks = () => (\n    <Fragment>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/model\">\n          Add AI Algorithm\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/modelList\">\n          Model List\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/studylist\">\n          Study List\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/local\">\n          View Local Studies\n        </Link>\n      </li>\n\n      {user && !user.social_apps ? (\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/twoFA\">\n            <Icon\n              name=\"check\"\n              style={{ marginRight: '5px', marginTop: '-5px' }}\n            />\n            2 Factor Authentication\n          </Link>\n        </li>\n      ) : null}\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/view_groups\">\n          <Icon name=\"user\" style={{ marginRight: '5px', marginTop: '-5px' }} />\n          Research Groups\n        </Link>\n      </li>\n    </Fragment>\n  );\n\n  const healthProfessionalAuthLinks = () => (\n    <Fragment>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/studylist\">\n          Study List\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/local\">\n          View Local Studies\n        </Link>\n      </li>\n      {user && !user.social_apps ? (\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/twoFA\">\n            <Icon\n              name=\"check\"\n              style={{ marginRight: '5px', marginTop: '-5px' }}\n            />\n            2 Factor Authentication\n          </Link>\n        </li>\n      ) : null}\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/view_groups\">\n          <Icon name=\"user\" style={{ marginRight: '5px', marginTop: '-5px' }} />\n          Study Groups\n        </Link>\n      </li>\n    </Fragment>\n  );\n\n  const SuperauthLinks = () => (\n    <Fragment>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/superuser\">\n          View Medical Certificates\n        </Link>\n      </li>\n      {user && !user.social_apps ? (\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/twoFA\">\n            <Icon\n              name=\"check\"\n              style={{ marginRight: '5px', marginTop: '-5px' }}\n            />\n            2 Factor Authentication\n          </Link>\n        </li>\n      ) : null}\n    </Fragment>\n  );\n\n  if (isAuthenticated && isInvestigatorAuthenticated) {\n    return (\n      <Fragment>\n        <nav\n          className=\"navbar navbar-expand-lg navbar-light\"\n          style={{ backgroundColor: '#ffffff' }}\n        >\n          <Icon\n            style={{ color: '#00BFFF', height: '30px', width: '40px' }}\n            name=\"brain\"\n            className=\"header-logo-image\"\n          />\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/\">\n                  Home <span className=\"sr-only\">(current)</span>\n                </Link>\n              </li>\n              {investigatorAuthLinks()}\n            </ul>\n          </div>\n          <div\n            style={{\n              float: 'right',\n            }}\n          >\n            <button\n              style={{\n                backgroundColor: '#ffffff',\n                color: '#00BFFF',\n                borderRadius: '5px',\n                padding: '6px 6px',\n              }}\n              className=\"btn btn-info btn-lg\"\n              onClick={logout_user}\n            >\n              <span className=\"glyphicon glyphicon-log-out\"></span>\n              Log out\n              <ExitToApp\n                style={{\n                  marginLeft: '4px',\n                }}\n              />\n            </button>\n          </div>\n        </nav>\n\n        {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n      </Fragment>\n    );\n  }\n\n  if (isAuthenticated && isHealthProfessionalAuthenticated) {\n    return (\n      <Fragment>\n        <nav\n          className=\"navbar navbar-expand-lg navbar-light\"\n          style={{ backgroundColor: '#ffffff' }}\n        >\n          <Icon\n            style={{ color: '#00BFFF', height: '30px', width: '40px' }}\n            name=\"brain\"\n            className=\"header-logo-image\"\n          />\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/\">\n                  Home <span className=\"sr-only\">(current)</span>\n                </Link>\n              </li>\n              {healthProfessionalAuthLinks()}\n            </ul>\n          </div>\n          <div\n            style={{\n              float: 'right',\n            }}\n          >\n            <button\n              style={{\n                backgroundColor: '#ffffff',\n                color: '#00BFFF',\n                borderRadius: '5px',\n                padding: '6px 6px',\n              }}\n              className=\"btn btn-info btn-lg\"\n              onClick={logout_user}\n            >\n              <span className=\"glyphicon glyphicon-log-out\"></span>\n              Log out\n              <ExitToApp\n                style={{\n                  marginLeft: '4px',\n                }}\n              />\n            </button>\n          </div>\n        </nav>\n        {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n      </Fragment>\n    );\n  }\n\n  if (isAuthenticated && isSuperuserAuthenticated) {\n    return (\n      <Fragment>\n        <nav\n          className=\"navbar navbar-expand-lg navbar-light\"\n          style={{ backgroundColor: '#ffffff' }}\n        >\n          <Icon\n            style={{ color: '#00BFFF', height: '30px', width: '40px' }}\n            name=\"brain\"\n            className=\"header-logo-image\"\n          />\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/\">\n                  Home <span className=\"sr-only\">(current)</span>\n                </Link>\n              </li>\n              {SuperauthLinks()}\n            </ul>\n          </div>\n          <div\n            style={{\n              float: 'right',\n            }}\n          >\n            <button\n              style={{\n                backgroundColor: '#ffffff',\n                color: '#00BFFF',\n                borderRadius: '5px',\n                padding: '6px 6px',\n              }}\n              className=\"btn btn-info btn-lg\"\n              onClick={logout_user}\n            >\n              <span className=\"glyphicon glyphicon-log-out\"></span>\n              Log out\n              <ExitToApp\n                style={{\n                  marginLeft: '4px',\n                }}\n              />\n            </button>\n          </div>\n        </nav>\n        {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n      <nav\n        className=\"navbar navbar-expand-lg navbar-light\"\n        style={{ backgroundColor: '#ffffff' }}\n      >\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <Icon\n              style={{ color: '#00BFFF', height: '30px', width: '40px' }}\n              name=\"brain\"\n              className=\"header-logo-image\"\n            />\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to=\"/\">\n                Home <span className=\"sr-only\">(current)</span>\n              </Link>\n            </li>\n            {guestLinks()}\n          </ul>\n        </div>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={4000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </nav>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  isInvestigatorAuthenticated: state.auth.isInvestigatorAuthenticated,\n  isHealthProfessionalAuthenticated:\n    state.auth.isHealthProfessionalAuthenticated,\n  isSuperuserAuthenticated: state.auth.isSuperuserAuthenticated,\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Navbar);\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst csrftoken = Cookies.get('csrftoken');\n\nconst Add_description = ({ match }) => {\n  const [formData, setFormData] = useState({\n    profession: '',\n    isbeingApproved: false,\n    hasMedicalCertificate: false,\n  });\n\n  const types = ['Investigator', 'Health Professional'];\n\n  const { profession, isbeingApproved, hasMedicalCertificate } = formData;\n\n  const [selectedFile, setSelectedFile] = useState();\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onChange1 = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      };\n      const email = match.params.email;\n\n      let form_data = new FormData();\n      form_data.append('email', email);\n      form_data.append('profession', profession);\n\n      if (profession !== 'Investigator') {\n        form_data.append(\n          'medical_certificate',\n          selectedFile,\n          selectedFile.name\n        );\n      }\n\n      const res = await axios.post(\n        `/api/add_description`,\n        form_data,\n        config\n      );\n\n      const options = {\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          HTTP_X_CSRFTOKEN: csrftoken,\n        },\n      };\n\n      try {\n        await axios.post(\n          `/api/encrypt_db/${email}`,\n          options\n        );\n      } catch (err) {\n        alert(err.message);\n      }\n\n      if (res.data.Status === true) {\n        setFormData({ ...formData, isbeingApproved: true });\n      } else {\n        setFormData({ ...formData, hasMedicalCertificate: true });\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  if (hasMedicalCertificate) {\n    logout();\n    return (\n      <div className=\"container\">\n        <div\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n          style={{ marginTop: '150px' }}\n        >\n          <h1>\n            Your account was successfully created, but your medical certificate\n            is under evaluation. We will reach to you soon!\n          </h1>\n        </div>\n      </div>\n    );\n  }\n\n  if (isbeingApproved) {\n    logout();\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\">\n          <h2 className=\"display-6\" style={{ textAlign: 'center' }}>\n            Account successfully created with the email{' '}\n            <b>{match.params.email}</b>. You can now Log In!\n          </h2>\n          <hr className=\"my-4\" />\n        </div>\n      </div>\n    );\n  }\n\n  const files = () => (\n    <div className=\"form-group\">\n      <br></br>\n      <p>\n        <b>Upload medical certificate</b>\n      </p>\n      <input type=\"file\" name=\"file\" onChange={e => onChange1(e)} required />\n    </div>\n  );\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron mt-5\">\n        <h1>Add description</h1>\n        <br></br>\n        <p>Please, choose the description that matches your role.</p>\n        <form onSubmit={e => onSubmit(e)}>\n          <div className=\"form-group\">\n            <select\n              name=\"profession\"\n              value={profession}\n              onChange={e => onChange(e)}\n              required\n            >\n              <option key=\"\"></option>\n              {types.map(type => (\n                <option key={type}>{type}</option>\n              ))}\n            </select>\n          </div>\n          {profession === 'Health Professional' ? files() : null}\n          <br></br>\n\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Register\n          </button>\n        </form>\n        <hr className=\"my-4\" />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Add_description);\n","/* eslint-disable no-console */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { facebookAuthenticate, load_user_apps } from '../actions/auth';\nimport queryString from 'query-string';\nimport axios from 'axios';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst Facebook = ({ user, load_user_apps, facebookAuthenticate }) => {\n  let location = useLocation();\n\n  const [formData, setFormData] = useState({\n    login: false,\n    hasSecret: false,\n    notMedicalCertificate: false,\n    pin: '',\n  });\n\n  const { login, hasSecret, notMedicalCertificate, pin } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  useEffect(() => {\n    const values = queryString.parse(location.search);\n    const state = values.state ? values.state : null;\n    const code = values.code ? values.code : null;\n\n    console.log(values);\n    console.log('State: ' + state);\n    console.log('Code: ' + code);\n\n    if (state && code) {\n      facebookAuthenticate(state, code);\n    }\n  }, [facebookAuthenticate, location]);\n\n  const onSubmit1 = async e => {\n    e.preventDefault();\n\n    const config = {\n      headers: {\n        //'Accept': 'application/json',\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    let form_data = new FormData();\n    form_data.append('email', user.email);\n    form_data.append('pin', pin);\n    try {\n      const res = await axios.post(\n        `/api/2FA_login`,\n        form_data,\n        config\n      );\n      console.log(res.data.Status);\n      if (res.data.Status === true) {\n        setFormData({ ...formData, login: true });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const config = {\n        headers: {\n          //'Accept': 'application/json',\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          //'HTTP_X_CSRFTOKEN': csrftoken\n        },\n      };\n      const res = await axios.get(\n        `/api/check_medical_certificate?email=${user.email}`,\n        config\n      );\n      console.log(res.data.Status);\n\n      if (res.data.Status === true) {\n        /*try {\n          const res = await axios.get(\n            `/api/check_secret?email=${user.email}`,\n            config\n          );\n          console.log(res.data.Status);\n\n          if (res.data.Status === true) {\n            setFormData({ ...formData, hasSecret: true });\n          } else {\n            setFormData({ ...formData, login: true });\n          }\n        } catch (err) {\n          console.log(err);\n        }*/\n        setFormData({ ...formData, login: true });\n      } else {\n        setFormData({ ...formData, notMedicalCertificate: true });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (notMedicalCertificate) {\n    const url = '/add_description/' + user.email;\n    return <Redirect to={url} />;\n  }\n\n  if (login) {\n    load_user_apps(user.email);\n    return <Redirect to=\"/\" />;\n  }\n\n  /*if (hasSecret) {\n    return (\n      <div className=\"container mt-5\">\n        <h1>\n          Hello {user.first_name} {user.last_name}! Enter the code which is in\n          Google Authenticator.\n        </h1>\n\n        <form onSubmit={e => onSubmit1(e)}>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"pin\"\n              placeholder=\"Pin\"\n              name=\"pin\"\n              value={pin}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }*/\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"jumbotron mt-5\">\n          <h1 className=\"display-4\">Almost there...</h1>\n          <br></br>\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Press here to continue\n          </button>\n          <hr className=\"my-4\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  { load_user_apps, facebookAuthenticate }\n)(Facebook);\n","/* eslint-disable no-console */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { githubAuthenticate, load_user_apps } from '../actions/auth';\nimport queryString from 'query-string';\nimport axios from 'axios';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst Github = ({ user, load_user_apps, githubAuthenticate }) => {\n  let location = useLocation();\n\n  const [formData, setFormData] = useState({\n    login: false,\n    hasSecret: false,\n    notMedicalCertificate: false,\n    pin: '',\n  });\n\n  const { login, hasSecret, notMedicalCertificate, pin } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  useEffect(() => {\n    const values = queryString.parse(location.search);\n    const state = values.state ? values.state : null;\n    const code = values.code ? values.code : null;\n\n    console.log(values);\n    console.log('State: ' + state);\n    console.log('Code: ' + code);\n\n    if (state && code) {\n      githubAuthenticate(state, code);\n    }\n  }, [githubAuthenticate, location]);\n\n  const onSubmit1 = async e => {\n    e.preventDefault();\n\n    const config = {\n      headers: {\n        //'Accept': 'application/json',\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    let form_data = new FormData();\n    form_data.append('email', user.email);\n    form_data.append('pin', pin);\n    try {\n      const res = await axios.post(\n        `/api/2FA_login`,\n        form_data,\n        config\n      );\n      console.log(res.data.Status);\n      if (res.data.Status === true) {\n        setFormData({ ...formData, login: true });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const config = {\n        headers: {\n          //'Accept': 'application/json',\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          //'HTTP_X_CSRFTOKEN': csrftoken\n        },\n      };\n      const res = await axios.get(\n        `/api/check_medical_certificate?email=${user.email}`,\n        config\n      );\n      console.log(res.data.Status);\n\n      if (res.data.Status === true) {\n        /*try {\n          const res = await axios.get(\n            `/api/check_secret?email=${user.email}`,\n            config\n          );\n          console.log(res.data.Status);\n\n          if (res.data.Status === true) {\n            setFormData({ ...formData, hasSecret: true });\n          } else {\n            setFormData({ ...formData, login: true });\n          }\n        } catch (err) {\n          console.log(err);\n        }*/\n        setFormData({ ...formData, login: true });\n      } else {\n        setFormData({ ...formData, notMedicalCertificate: true });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (notMedicalCertificate) {\n    const url = '/add_description/' + user.email;\n    return <Redirect to={url} />;\n  }\n\n  if (login) {\n    load_user_apps(user.email);\n    return <Redirect to=\"/\" />;\n  }\n\n  /*if (hasSecret) {\n    return (\n      <div className=\"container mt-5\">\n        <h1>\n          Hello {user.first_name} {user.last_name}! Enter the code which is in\n          Google Authenticator.\n        </h1>\n\n        <form onSubmit={e => onSubmit1(e)}>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"pin\"\n              placeholder=\"Pin\"\n              name=\"pin\"\n              value={pin}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }*/\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"jumbotron mt-5\">\n          <h1 className=\"display-4\">Almost there...</h1>\n          <br></br>\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Press here to continue\n          </button>\n          <hr className=\"my-4\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  { load_user_apps, githubAuthenticate }\n)(Github);\n","/* eslint-disable no-console */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { spotifyAuthenticate, load_user_apps } from '../actions/auth';\nimport queryString from 'query-string';\nimport axios from 'axios';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst Spotify = ({ user, load_user_apps, spotifyAuthenticate }) => {\n  let location = useLocation();\n\n  const [formData, setFormData] = useState({\n    login: false,\n    hasSecret: false,\n    notMedicalCertificate: false,\n    pin: '',\n  });\n\n  const { login, hasSecret, notMedicalCertificate, pin } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  useEffect(() => {\n    const values = queryString.parse(location.search);\n    const state = values.state ? values.state : null;\n    const code = values.code ? values.code : null;\n\n    console.log(values);\n    console.log('State: ' + state);\n    console.log('Code: ' + code);\n\n    if (state && code) {\n      spotifyAuthenticate(state, code);\n    }\n  }, [location, spotifyAuthenticate]);\n\n  const onSubmit1 = async e => {\n    e.preventDefault();\n\n    const config = {\n      headers: {\n        //'Accept': 'application/json',\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    let form_data = new FormData();\n    form_data.append('email', user.email);\n    form_data.append('pin', pin);\n    try {\n      const res = await axios.post(\n        `/api/2FA_login`,\n        form_data,\n        config\n      );\n      console.log(res.data.Status);\n      if (res.data.Status === true) {\n        setFormData({ ...formData, login: true });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const config = {\n        headers: {\n          //'Accept': 'application/json',\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          //'HTTP_X_CSRFTOKEN': csrftoken\n        },\n      };\n      const res = await axios.get(\n        `/api/check_medical_certificate?email=${user.email}`,\n        config\n      );\n      console.log(res.data.Status);\n\n      if (res.data.Status === true) {\n        /*try {\n          const res = await axios.get(\n            `/api/check_secret?email=${user.email}`,\n            config\n          );\n          console.log(res.data.Status);\n\n          if (res.data.Status === true) {\n            setFormData({ ...formData, hasSecret: true });\n          } else {\n            setFormData({ ...formData, login: true });\n          }\n        } catch (err) {\n          console.log(err);\n        }*/\n        setFormData({ ...formData, login: true });\n      } else {\n        setFormData({ ...formData, notMedicalCertificate: true });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (notMedicalCertificate) {\n    const url = '/add_description/' + user.email;\n    return <Redirect to={url} />;\n  }\n\n  if (login) {\n    load_user_apps(user.email);\n    return <Redirect to=\"/\" />;\n  }\n\n  /*if (hasSecret) {\n    return (\n      <div className=\"container mt-5\">\n        <h1>\n          Hello {user.first_name} {user.last_name}! Enter the code which is in\n          Google Authenticator.\n        </h1>\n\n        <form onSubmit={e => onSubmit1(e)}>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"pin\"\n              placeholder=\"Pin\"\n              name=\"pin\"\n              value={pin}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }*/\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"jumbotron mt-5\">\n          <h1 className=\"display-4\">Almost there...</h1>\n          <br></br>\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Press here to continue\n          </button>\n          <hr className=\"my-4\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  { load_user_apps, spotifyAuthenticate }\n)(Spotify);\n","/* eslint-disable no-console */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { linkedinAuthenticate, load_user_apps } from '../actions/auth';\nimport queryString from 'query-string';\nimport axios from 'axios';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst Linkedin = ({ user, load_user_apps, linkedinAuthenticate }) => {\n  let location = useLocation();\n\n  const [formData, setFormData] = useState({\n    login: false,\n    hasSecret: false,\n    notMedicalCertificate: false,\n    pin: '',\n  });\n\n  const { login, hasSecret, notMedicalCertificate, pin } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  useEffect(() => {\n    const values = queryString.parse(location.search);\n    const state = values.state ? values.state : null;\n    const code = values.code ? values.code : null;\n\n    console.log(values);\n    console.log('State: ' + state);\n    console.log('Code: ' + code);\n\n    if (state && code) {\n      linkedinAuthenticate(state, code);\n    }\n  }, [linkedinAuthenticate, location]);\n\n  const onSubmit1 = async e => {\n    e.preventDefault();\n\n    const config = {\n      headers: {\n        //'Accept': 'application/json',\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    let form_data = new FormData();\n    form_data.append('email', user.email);\n    form_data.append('pin', pin);\n    try {\n      const res = await axios.post(\n        `/api/2FA_login`,\n        form_data,\n        config\n      );\n      console.log(res.data.Status);\n      if (res.data.Status === true) {\n        setFormData({ ...formData, login: true });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const config = {\n        headers: {\n          //'Accept': 'application/json',\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          //'HTTP_X_CSRFTOKEN': csrftoken\n        },\n      };\n      const res = await axios.get(\n        `/api/check_medical_certificate?email=${user.email}`,\n        config\n      );\n      console.log(res.data.Status);\n\n      if (res.data.Status === true) {\n        /*try {\n          const res = await axios.get(\n            `/api/check_secret?email=${user.email}`,\n            config\n          );\n          console.log(res.data.Status);\n\n          if (res.data.Status === true) {\n            setFormData({ ...formData, hasSecret: true });\n          } else {\n            setFormData({ ...formData, login: true });\n          }\n        } catch (err) {\n          console.log(err);\n        }*/\n        setFormData({ ...formData, login: true });\n      } else {\n        setFormData({ ...formData, notMedicalCertificate: true });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (notMedicalCertificate) {\n    const url = '/add_description/' + user.email;\n    return <Redirect to={url} />;\n  }\n\n  if (login) {\n    load_user_apps(user.email);\n    return <Redirect to=\"/\" />;\n  }\n\n  /*if (hasSecret) {\n    return (\n      <div className=\"container mt-5\">\n        <h1>\n          Hello {user.first_name} {user.last_name}! Enter the code from Google\n          Authenticator.\n        </h1>\n\n        <form onSubmit={e => onSubmit1(e)}>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"pin\"\n              placeholder=\"Pin\"\n              name=\"pin\"\n              value={pin}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }*/\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"jumbotron mt-5\">\n          <h1 className=\"display-4\">Almost there...</h1>\n          <br></br>\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Press here to continue\n          </button>\n          <hr className=\"my-4\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  { load_user_apps, linkedinAuthenticate }\n)(Linkedin);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nconst Home = ({\n  user,\n  isAuthenticated,\n  isInvestigatorAuthenticated,\n  isSuperuserAuthenticated,\n  isHealthProfessionalAuthenticated,\n}) => {\n  if (user !== null && isAuthenticated && isInvestigatorAuthenticated) {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\">\n          <h1 className=\"display-4\">\n            Hello, <b>{user.email}</b>!\n          </h1>\n          <br></br>\n          <p className=\"lead\">\n            You can browse studies from Orthanc, upload and view local images,\n            and add AI algorithms.\n          </p>\n\n          <hr className=\"my-4\" />\n        </div>\n      </div>\n    );\n  } else if (user !== null && isAuthenticated && isSuperuserAuthenticated) {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\">\n          <h1 className=\"display-4\">\n            Hello, admin <b>{user.email}</b>!\n          </h1>\n          <br></br>\n          <hr className=\"my-4\" />\n        </div>\n      </div>\n    );\n  } else if (\n    user !== null &&\n    isAuthenticated &&\n    isHealthProfessionalAuthenticated\n  ) {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\">\n          <h1 className=\"display-4\">\n            Hello, Dr. <b>{user.email}</b>!\n          </h1>\n          <br></br>\n          <p className=\"lead\">\n            You can browse studies from Orthanc, upload, share and view local\n            images.\n          </p>\n          <hr className=\"my-4\" />\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\">\n          <h1 className=\"display-4\">Welcome!</h1>\n          <p className=\"lead\">This is a DICOM Image Tool with AI features!</p>\n          <br></br>\n          <p>\n            For more information, visit our\n            {` `}\n            <FontAwesomeIcon\n              icon={faGithub}\n              size=\"2x\"\n              style={{ color: 'black', cursor: 'pointer' }}\n              onClick={() =>\n                window.open(\n                  'https://github.com/Joao231/Medical-app-authentication?fbclid=IwAR1FHWLY4_B6lQtei5vtYacTtxFKp9tqwJYnaCNQyBKYjudHaUNuIlATcUY',\n                  '_blank'\n                )\n              }\n            />\n            {` `} repository.\n          </p>\n          <hr className=\"my-4\" />\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  isInvestigatorAuthenticated: state.auth.isInvestigatorAuthenticated,\n  isSuperuserAuthenticated: state.auth.isSuperuserAuthenticated,\n  isHealthProfessionalAuthenticated:\n    state.auth.isHealthProfessionalAuthenticated,\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Home);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login, loginSuperuser } from '../actions/auth';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport Home from './Home.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faGoogle,\n  faFacebook,\n  faLinkedin,\n  faGithub,\n  faSpotify,\n} from '@fortawesome/free-brands-svg-icons';\nimport './App.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Input from \"@material-ui/core/Input\";\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst Login = ({\n  login,\n  loginSuperuser,\n  isAuthenticated,\n  isSuperuserAuthenticated,\n}) => {\n  const csrftoken = Cookies.get('csrftoken');\n  const [formData, setFormData] = useState({\n    hasSecret: false,\n    pin: '',\n    email: '',\n    //password: '',\n  });\n\n  const { hasSecret, pin, email} = formData;\n\n  const [values, setValues] = React.useState({\n    password: \"\",\n    showPassword: false,\n  });\n  \n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n  \n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  \n  const handlePasswordChange = (prop) => (event) => {\n    let input = document.getElementById('password');\n    let text = document.getElementById('message');\n\n    input.addEventListener('keyup', function(e) {\n      if (e.getModifierState('CapsLock')) {\n        text.textContent = 'Caps lock is on';\n      } else {\n        text.textContent = '';\n      }\n    });\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const onChange = e => {\n    let input = document.getElementById('password');\n    let text = document.getElementById('message');\n\n    input.addEventListener('keyup', function(e) {\n      if (e.getModifierState('CapsLock')) {\n        text.textContent = 'Caps lock is on';\n      } else {\n        text.textContent = '';\n      }\n    });\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onChange1 = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit1 = async e => {\n    e.preventDefault();\n\n    const requestOptions = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Basic am9hbzpmMWRyaXZlcjE5OTk=',\n        Accept: 'application/json',\n        HTTP_X_CSRFTOKEN: csrftoken,\n      },\n      body: JSON.stringify({\n        pin: pin,\n        email: email,\n      }),\n    };\n\n    try {\n      const res = await axios.post(\n        `/api/2FA_login_login`,\n        requestOptions\n      );\n      if (res.data.Status === true) {\n        const res = await axios.get(\n          `/api/check_superuser/${email}`, requestOptions\n        );\n        if (res.data.Status === true) {\n          loginSuperuser(email, values.password);\n        } else {\n          login(email, values.password);\n        }\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': 'Basic am9hbzpmMWRyaXZlcjE5OTk=',\n        'apikey' : '9jcoFNyj/XR2ipwhdMVuwYnT',\n      },\n    };\n    try {\n      const res = await axios.get(\n        `/api/check_secret_login/${email}`, config\n      );\n\n      if (res.data.Status === true) {\n        setFormData({ ...formData, hasSecret: true });\n      } else {\n        const res = await axios.get(\n          `/api/check_superuser/${email}`\n        );\n        if (res.data.Status === true) {\n          loginSuperuser(email, values.password);\n        } else {\n          login(email, values.password);\n        }\n      }\n    } catch (err) {\n      toast.error('User Account does not exist!', {\n        position: 'top-right',\n        autoClose: 4000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      return (\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      );\n    }\n  };\n\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'apikey' : '9jcoFNyj/XR2ipwhdMVuwYnT',\n      'Authorization': 'Basic am9hbzpmMWRyaXZlcjE5OTk=',\n    },\n  };\n\n  const continueWithGoogle = async () => {\n    try {\n      axios.defaults.withCredentials = true;\n      const res = await axios.get(\n        `/auth/o/google-oauth2/?redirect_uri=http://localhost/google`, config\n      );\n\n      window.location.replace(res.data.authorization_url);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  const continueWithFacebook = async () => {\n    try {\n      const res = await axios.get(\n        `/auth/o/facebook/?redirect_uri=http://localhost/facebook`, config\n      );\n\n      window.location.replace(res.data.authorization_url);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  const githubAuthenticate = async () => {\n    try {\n      const res = await axios.get(\n        `/auth/o/github/?redirect_uri=http://localhost/complete/github/`, config\n      );\n\n      window.location.replace(res.data.authorization_url);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  const linkedinAuthenticate = async () => {\n    try {\n      const res = await axios.get(\n        `/auth/o/linkedin-oauth2/?redirect_uri=http://localhost/complete/linkedin/`, config\n      );\n\n      window.location.replace(res.data.authorization_url);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  const spotifyAuthenticate = async () => {\n    try {\n      const res = await axios.get(\n        `/auth/o/spotify/?redirect_uri=http://localhost/callback/spotify/`, config\n      );\n\n      window.location.replace(res.data.authorization_url);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  if (isSuperuserAuthenticated || isAuthenticated) {\n    return <Home />;\n  }\n\n  if (hasSecret) {\n    return (\n      <div className=\"container mt-5\">\n        <h1>Enter the code from Google Authenticator</h1>\n        <form onSubmit={e => onSubmit1(e)}>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"pin\"\n              placeholder=\"Pin\"\n              name=\"pin\"\n              value={pin}\n              onChange={e => onChange1(e)}\n              required\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Sign In</h1>\n      <p>Sign into your account</p>\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <Input\n            className=\"form-control\"\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            value={email}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <Input\n            id=\"password\"\n            className=\"form-control\"\n            type={values.showPassword ? \"text\" : \"password\"}\n            placeholder=\"Password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handlePasswordChange(\"password\")}\n            minLength=\"6\"\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n            required\n          />\n          <div className=\"message\" id=\"message\" style={{ color: 'red' }}></div>\n        </div>\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Sign In\n        </button>\n      </form>\n      <p className=\"mt-3\">Or sign with:</p>\n      <div className=\"social-container\">\n        <a className=\"google social\" onClick={continueWithGoogle}>\n          <FontAwesomeIcon icon={faGoogle} size=\"3x\" />\n        </a>\n\n        <a className=\"facebook social\" onClick={continueWithFacebook}>\n          <FontAwesomeIcon icon={faFacebook} size=\"3x\" />\n        </a>\n\n        <a className=\"linkedin social\" onClick={linkedinAuthenticate}>\n          <FontAwesomeIcon icon={faLinkedin} size=\"3x\" />\n        </a>\n\n        <a className=\"github social\" onClick={githubAuthenticate}>\n          <FontAwesomeIcon icon={faGithub} size=\"3x\" />\n        </a>\n\n        <a className=\"spotify social\" onClick={spotifyAuthenticate}>\n          <FontAwesomeIcon icon={faSpotify} size=\"3x\" />\n        </a>\n      </div>\n\n      <p className=\"mt-3\">\n        Do not have an account? <Link to=\"/signup\">Sign Up</Link>\n      </p>\n      <p className=\"mt-3\">\n        Forgot your password? <Link to=\"/reset-password\">Reset Password</Link>\n      </p>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isSuperuserAuthenticated: state.auth.isSuperuserAuthenticated,\n});\n\nexport default connect(\n  mapStateToProps,\n  { login, loginSuperuser }\n)(Login);\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n/* eslint-disable no-empty */\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Input from \"@material-ui/core/Input\";\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst Signup = ({ signup, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [formData, setFormData] = useState({\n    profession: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    //password: '',\n    //re_password: '',\n  });\n\n  const [selectedFile, setSelectedFile] = useState();\n\n  const {\n    profession,\n    first_name,\n    last_name,\n    email,\n    //password,\n    //re_password,\n  } = formData;\n\n  const types = ['Investigator', 'Health Professional'];\n\n  const [values, setValues] = React.useState({\n    password: \"\",\n    showPassword: false,\n    re_password: \"\",\n    showRe_Password: false,\n  });\n  \n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleClickShowRe_Password = () => {\n    setValues({ ...values, showRe_Password: !values.showRe_Password });\n  };\n  \n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleMouseDownRe_Password = (event) => {\n    event.preventDefault();\n  };\n  \n  const handlePasswordChange = (prop) => (event) => {\n    let input_password = document.getElementById('password');\n    let confirm_password = document.getElementById('confirm_password');\n    let text1 = document.getElementById('message1');\n    let text2 = document.getElementById('message2');\n\n    confirm_password.addEventListener('keyup', function(e) {\n      if (e.getModifierState('CapsLock')) {\n        text2.textContent = 'Caps lock is on';\n      } else {\n        text2.textContent = '';\n      }\n    });\n\n    input_password.addEventListener('keyup', function(e) {\n      if (e.getModifierState('CapsLock')) {\n        text1.textContent = 'Caps lock is on';\n      } else {\n        text1.textContent = '';\n      }\n    });\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const onChange = e => {\n    let input_password = document.getElementById('password');\n    let confirm_password = document.getElementById('confirm_password');\n    let text1 = document.getElementById('message1');\n    let text2 = document.getElementById('message2');\n\n    confirm_password.addEventListener('keyup', function(e) {\n      if (e.getModifierState('CapsLock')) {\n        text2.textContent = 'Caps lock is on';\n      } else {\n        text2.textContent = '';\n      }\n    });\n\n    input_password.addEventListener('keyup', function(e) {\n      if (e.getModifierState('CapsLock')) {\n        text1.textContent = 'Caps lock is on';\n      } else {\n        text1.textContent = '';\n      }\n    });\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onChange1 = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (values.password === values.re_password) {\n      signup(\n        first_name,\n        last_name,\n        email,\n        values.password,\n        values.re_password,\n        profession,\n        selectedFile\n      );\n      //setAccountCreated(true);\n    } else {\n      toast.error('Password fields do not match.', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      return (\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      );\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Sign Up</h1>\n      <p>Create your account</p>\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <Input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"First Name*\"\n            name=\"first_name\"\n            value={first_name}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <Input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Last Name*\"\n            name=\"last_name\"\n            value={last_name}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <Input\n            className=\"form-control\"\n            type=\"email\"\n            placeholder=\"Email*\"\n            name=\"email\"\n            value={email}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <Input\n            id=\"password\"\n            className=\"form-control\"\n            type={values.showPassword ? \"text\" : \"password\"}\n            placeholder=\"Password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handlePasswordChange(\"password\")}\n            minLength=\"6\"\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n            required\n          />\n          <div className=\"message\" id=\"message1\" style={{ color: 'red' }}></div>\n        </div>\n        <div className=\"form-group\">\n          <Input\n            id=\"confirm_password\"\n            className=\"form-control\"\n            type={values.showRe_Password ? \"text\" : \"password\"}\n            placeholder=\"Confirm Password*\"\n            name=\"re_password\"\n            value={values.re_password}\n            onChange={handlePasswordChange(\"re_password\")}\n            minLength=\"6\"\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={handleClickShowRe_Password}\n                  onMouseDown={handleMouseDownRe_Password}\n                >\n                  {values.showRe_Password ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n            required\n          />\n          <div className=\"message\" id=\"message2\" style={{ color: 'red' }}></div>\n        </div>\n        <div className=\"form-group\">\n          <p>Please choose the description that matches your role.</p>\n          <select\n            name=\"profession\"\n            value={profession}\n            onChange={e => onChange(e)}\n          >\n            <option key=\"\"></option>\n            {types.map(type => (\n              <option key={type}>{type}</option>\n            ))}\n          </select>\n        </div>\n        {profession === 'Health Professional' ? (\n          <div className=\"form-group\">\n            <input\n              type=\"file\"\n              name=\"file\"\n              onChange={e => onChange1(e)}\n              required\n            />\n          </div>\n        ) : null}\n\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Register\n        </button>\n      </form>\n\n      <p className=\"mt-3\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(\n  mapStateToProps,\n  { signup }\n)(Signup);\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { verify } from '../actions/auth';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst Activate = ({ verify, match }) => {\n  const [verified, setVerified] = useState(false);\n\n  const [formData, setFormData] = useState({\n    hasMedicalCertificate: false,\n    notMedicalCertificate: false,\n    email: '',\n  });\n\n  const { hasMedicalCertificate, notMedicalCertificate, email } = formData;\n\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'apikey' : '9jcoFNyj/XR2ipwhdMVuwYnT',\n      'Authorization': 'Basic am9hbzpmMWRyaXZlcjE5OTk=',\n    },\n  };\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.get(\n        `/api/check_medical_certificate_login/${email}`, config\n      );\n\n      if (res.data.Status === true) {\n        setFormData({ ...formData, hasMedicalCertificate: true });\n      } else {\n        setFormData({ ...formData, notMedicalCertificate: true });\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  const verify_account = () => {\n    const uid = match.params.uid;\n    const token = match.params.token;\n\n    verify(uid, token);\n    toast.success('Your account has been created and is ready to use!', {\n      position: 'top-right',\n      autoClose: 10000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    setVerified(true);\n\n    return (\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    );\n  };\n\n  if (verified) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  if (hasMedicalCertificate) {\n    return (\n      <div className=\"container\">\n        <div\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n          style={{ marginTop: '200px' }}\n        >\n          <h1>Please, verify your account.</h1>\n          <button\n            onClick={verify_account}\n            style={{ marginTop: '50px' }}\n            type=\"button\"\n            className=\"btn btn-primary\"\n          >\n            Verify\n          </button>\n        </div>\n      </div>\n    );\n  } else if (notMedicalCertificate) {\n    return (\n      <div className=\"container\">\n        <div\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n          style={{ marginTop: '200px' }}\n        >\n          <h1>Your account is being evaluated. We will reach to you soon!</h1>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron mt-5\">\n        <h1>Please, enter your email.</h1>\n        <br></br>\n        <form onSubmit={e => onSubmit(e)}>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Email*\"\n              name=\"email\"\n              value={email}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <br></br>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Verify\n          </button>\n        </form>\n        <hr className=\"my-4\" />\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  null,\n  { verify }\n)(Activate);\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password } from '../actions/auth';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ResetPassword = ({ reset_password }) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n  });\n\n  const { email } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    reset_password(email);\n    setRequestSent(true);\n    toast.success(\n      'An verification email was sent to ' + email + '. Please, check it!',\n      {\n        position: 'top-right',\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }\n    );\n    return (\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    );\n  };\n\n  if (requestSent) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron mt-5\">\n        <h1>Request Password Reset</h1>\n        <br></br>\n        <form onSubmit={e => onSubmit(e)}>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"email\"\n              placeholder=\"Email\"\n              name=\"email\"\n              value={email}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <br></br>\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Reset\n          </button>\n        </form>\n        <hr className=\"my-4\" />\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  null,\n  { reset_password }\n)(ResetPassword);\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password_confirm } from '../actions/auth';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const [formData, setFormData] = useState({\n    new_password: '',\n    re_new_password: '',\n  });\n\n  const { new_password, re_new_password } = formData;\n\n  const onChange = e => {\n    let input_password = document.getElementById('password');\n    let confirm_password = document.getElementById('confirm_password');\n    let text1 = document.getElementById('message1');\n    let text2 = document.getElementById('message2');\n\n    confirm_password.addEventListener('keyup', function(e) {\n      if (e.getModifierState('CapsLock')) {\n        text2.textContent = 'Caps lock is on';\n      } else {\n        text2.textContent = '';\n      }\n    });\n\n    input_password.addEventListener('keyup', function(e) {\n      if (e.getModifierState('CapsLock')) {\n        text1.textContent = 'Caps lock is on';\n      } else {\n        text1.textContent = '';\n      }\n    });\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const uid = match.params.uid;\n    const token = match.params.token;\n\n    if (new_password !== re_new_password) {\n      toast.error('Password fields do not match.', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      return (\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      );\n    } else {\n      reset_password_confirm(uid, token, new_password, re_new_password);\n      setRequestSent(true);\n\n      toast.success('Your password has been successfully changed!', {\n        position: 'top-right',\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      return (\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      );\n    }\n  };\n\n  if (requestSent) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            id=\"password\"\n            className=\"form-control\"\n            type=\"password\"\n            placeholder=\"New Password\"\n            name=\"new_password\"\n            value={new_password}\n            onChange={e => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n          <div className=\"message\" id=\"message1\" style={{ color: 'red' }}></div>\n        </div>\n        <div className=\"form-group\">\n          <input\n            id=\"confirm_password\"\n            className=\"form-control\"\n            type=\"password\"\n            placeholder=\"Confirm New Password\"\n            name=\"re_new_password\"\n            value={re_new_password}\n            onChange={e => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n          <div className=\"message\" id=\"message2\" style={{ color: 'red' }}></div>\n        </div>\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Reset Password\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default connect(\n  null,\n  { reset_password_confirm }\n)(ResetPasswordConfirm);\n","/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { googleAuthenticate, load_user_apps } from '../actions/auth';\nimport queryString from 'query-string';\nimport axios from 'axios';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst Google = ({ user, load_user_apps, googleAuthenticate }) => {\n  let location = useLocation();\n\n  const [formData, setFormData] = useState({\n    login: false,\n    hasSecret: false,\n    notMedicalCertificate: false,\n    pin: '',\n  });\n\n  const { login, hasSecret, notMedicalCertificate, pin } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  useEffect(() => {\n    const values = queryString.parse(location.search);\n    const state = values.state ? values.state : null;\n    const code = values.code ? values.code : null;\n\n    if (state && code) {\n      googleAuthenticate(state, code);\n    }\n  }, [googleAuthenticate, location]);\n\n  const onSubmit1 = async e => {\n    e.preventDefault();\n\n    const config = {\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    let form_data = new FormData();\n    form_data.append('email', user.email);\n    form_data.append('pin', pin);\n    try {\n      const res = await axios.post(\n        `/api/2FA_login`,\n        form_data,\n        config\n      );\n\n      if (res.data.Status === true) {\n        setFormData({ ...formData, login: true });\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n      };\n      const res = await axios.get(\n        `/api/check_medical_certificate?email=${user.email}`,\n        config\n      );\n\n      if (res.data.Status === true) {\n        /*try {\n          const res = await axios.get(\n            `/api/check_secret?email=${user.email}`,\n            config\n          );\n\n          if (res.data.Status === true) {\n            setFormData({ ...formData, hasSecret: true });\n          } else {\n            setFormData({ ...formData, login: true });\n          }\n        } catch (err) {\n          alert(err.message);\n        }*/\n        setFormData({ ...formData, login: true });\n      } else {\n        setFormData({ ...formData, notMedicalCertificate: true });\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  if (notMedicalCertificate) {\n    const url = '/add_description/' + user.email;\n    return <Redirect to={url} />;\n  }\n\n  if (login) {\n    load_user_apps(user.email);\n    return <Redirect to=\"/\" />;\n  }\n\n  /*if (hasSecret) {\n    return (\n      <div className=\"container mt-5\">\n        <h1>\n          Hello {user.first_name} {user.last_name}! Enter the code from Google\n          Authenticator.\n        </h1>\n\n        <form onSubmit={e => onSubmit1(e)}>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"pin\"\n              placeholder=\"Pin\"\n              name=\"pin\"\n              value={pin}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }*/\n\n  return (\n    <div className=\"container\">\n      {user ? (\n        <form onSubmit={e => onSubmit(e)}>\n          <div className=\"jumbotron mt-5\">\n            <h1 className=\"display-4\">Almost there...</h1>\n            <br></br>\n            <button className=\"btn btn-primary\" type=\"submit\">\n              Press here to continue\n            </button>\n            <hr className=\"my-4\" />\n          </div>\n        </form>\n      ) : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  { load_user_apps, googleAuthenticate }\n)(Google);\n","import {\n  UPDATE_TOKEN,\n  INVESTIGATOR_LOGIN,\n  HEALTHPROFESSIONAL_LOGIN,\n  SUPERUSER_LOGIN_SUCCESS,\n  SUPERUSER_LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  SUPERUSER_AUTHENTICATED_SUCCESS,\n  SUPERUSER_AUTHENTICATED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  AUTHENTICATED_FAIL,\n  PASSWORD_RESET_SUCCESS,\n  PASSWORD_RESET_FAIL,\n  PASSWORD_RESET_CONFIRM_SUCCESS,\n  PASSWORD_RESET_CONFIRM_FAIL,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  GOOGLE_AUTH_SUCCESS,\n  GOOGLE_AUTH_FAIL,\n  FACEBOOK_AUTH_SUCCESS,\n  FACEBOOK_AUTH_FAIL,\n  GITHUB_AUTH_SUCCESS,\n  GITHUB_AUTH_FAIL,\n  LINKEDIN_AUTH_SUCCESS,\n  LINKEDIN_AUTH_FAIL,\n  SPOTIFY_AUTH_SUCCESS,\n  SPOTIFY_AUTH_FAIL,\n  USER_LOADED_APPS_SUCCESS,\n  USER_LOADED_APPS_FAIL,\n  LOGOUT,\n} from '../actions/types';\n\nconst initialState = {\n  access: localStorage.getItem('access'),\n  refresh: localStorage.getItem('refresh'),\n  superuser_authenticated: localStorage.getItem('Superuser_Authenticated'),\n  isSuperuserAuthenticated: null,\n  authenticated: localStorage.getItem('Authenticated'),\n  isAuthenticated: null,\n  investigator_authenticated: localStorage.getItem(\n    'Investigator_Authenticated'\n  ),\n  isInvestigatorAuthenticated: null,\n  healthProfessional_authenticated: localStorage.getItem(\n    'HealthProfessional_Authenticated'\n  ),\n  isHealthProfessionalAuthenticated: null,\n  user: null,\n};\n\nexport default function reduce(state = initialState, action) {\n  const { type, payload } = action;\n\n  const investigator_authenticated = true;\n  const healthProfessional_authenticated = true;\n  const authenticated = true;\n  const superuser_authenticated = true;\n\n  switch (type) {\n    case UPDATE_TOKEN:\n      localStorage.setItem('access', payload.access);\n      localStorage.setItem('refresh', payload.refresh);\n      return {\n        ...state,\n        access: payload.access,\n        refresh: payload.refresh,\n      };\n\n    case INVESTIGATOR_LOGIN:\n      localStorage.setItem(\n        'Investigator_Authenticated',\n        investigator_authenticated\n      );\n      return {\n        ...state,\n        isInvestigatorAuthenticated: true,\n        isAuthenticated: true,\n      };\n    case HEALTHPROFESSIONAL_LOGIN:\n      localStorage.setItem(\n        'HealthProfessional_Authenticated',\n        healthProfessional_authenticated\n      );\n      return {\n        ...state,\n        isHealthProfessionalAuthenticated: true,\n        isAuthenticated: true,\n      };\n    case SUPERUSER_AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        isSuperuserAuthenticated: true,\n        isAuthenticated: true,\n      };\n    case AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case SUPERUSER_LOGIN_SUCCESS:\n      localStorage.setItem('access', payload.access);\n      localStorage.setItem('refresh', payload.refresh);\n      localStorage.setItem('Superuser_Authenticated', superuser_authenticated);\n      return {\n        ...state,\n        isSuperuserAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem('access', payload.access);\n      localStorage.setItem('refresh', payload.refresh);\n      localStorage.setItem('Authenticated', authenticated);\n      return {\n        ...state,\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh,\n      };\n    case GOOGLE_AUTH_SUCCESS:\n    case FACEBOOK_AUTH_SUCCESS:\n    case GITHUB_AUTH_SUCCESS:\n    case LINKEDIN_AUTH_SUCCESS:\n    case SPOTIFY_AUTH_SUCCESS:\n      localStorage.setItem('access', payload.access);\n      localStorage.setItem('refresh', payload.refresh);\n      return {\n        ...state,\n        isAuthenticated: false,\n        access: payload.access,\n        refresh: payload.refresh,\n      };\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case USER_LOADED_SUCCESS:\n      return {\n        ...state,\n        user: payload,\n      };\n    case USER_LOADED_APPS_SUCCESS:\n      localStorage.setItem('Authenticated', authenticated);\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case SUPERUSER_AUTHENTICATED_FAIL:\n      return {\n        ...state,\n        isSuperuserAuthenticated: false,\n      };\n    case USER_LOADED_APPS_FAIL:\n    case AUTHENTICATED_FAIL:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case USER_LOADED_FAIL:\n      return {\n        ...state,\n        user: null,\n      };\n    case SUPERUSER_LOGIN_FAIL:\n      localStorage.removeItem('access');\n      localStorage.removeItem('refresh');\n      localStorage.removeItem('Superuser_Authenticated');\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isSuperuserAuthenticated: false,\n        user: null,\n      };\n    case LOGIN_FAIL:\n      localStorage.removeItem('access');\n      localStorage.removeItem('refresh');\n      localStorage.removeItem('Authenticated');\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      };\n    case GOOGLE_AUTH_FAIL:\n    case FACEBOOK_AUTH_FAIL:\n    case GITHUB_AUTH_FAIL:\n    case LINKEDIN_AUTH_FAIL:\n    case SPOTIFY_AUTH_FAIL:\n    case SIGNUP_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('access');\n      localStorage.removeItem('refresh');\n      localStorage.removeItem('Authenticated');\n      localStorage.removeItem('Superuser_Authenticated');\n      localStorage.removeItem('Investigator_Authenticated');\n      localStorage.removeItem('HealthProfessional_Authenticated');\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isSuperuserAuthenticated: false,\n        isAuthenticated: false,\n        isInvestigatorAuthenticated: false,\n        isHealthProfessionalAuthenticated: false,\n        user: null,\n      };\n    case PASSWORD_RESET_SUCCESS:\n    case PASSWORD_RESET_FAIL:\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\n    case PASSWORD_RESET_CONFIRM_FAIL:\n    case ACTIVATION_SUCCESS:\n    case ACTIVATION_FAIL:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n","import auth from './auth';\n\nexport default auth;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","/* eslint-disable no-console */\n/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport { connect } from 'react-redux';\nimport {\n  checkAuthenticated_Superuser,\n  checkAuthenticated,\n  load_user,\n} from '../actions/auth';\n\nconst Layout = ({\n  isAuthenticated,\n  isSuperuserAuthenticated,\n  checkAuthenticated_Superuser,\n  checkAuthenticated,\n  load_user,\n  children,\n}) => {\n  useEffect(() => {\n    console.log(isAuthenticated);\n    console.log(isSuperuserAuthenticated);\n    if (localStorage.getItem('Superuser_Authenticated')) {\n      checkAuthenticated_Superuser();\n    } else {\n      checkAuthenticated();\n    }\n    load_user();\n  }, [\n    checkAuthenticated,\n    checkAuthenticated_Superuser,\n    isAuthenticated,\n    isSuperuserAuthenticated,\n    load_user,\n  ]);\n\n  return (\n    <div>\n      <Navbar />\n      {children}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isSuperuserAuthenticated: state.auth.isSuperuserAuthenticated,\n});\n\nexport default connect(\n  mapStateToProps,\n  { checkAuthenticated_Superuser, checkAuthenticated, load_user }\n)(Layout);\n","/* eslint-disable no-console */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  checkAuthenticated_Superuser,\n  checkAuthenticated,\n  load_user,\n  updateToken,\n} from '../actions/auth';\n\nconst LayoutRefresh = ({ updateToken, children }) => {\n  const [authTokens, setAuthTokens] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (loading) {\n      console.log('updatetoken');\n      updateToken();\n      setLoading(false);\n    }\n\n    const fourMinutes = 1000 * 60 * 4;\n\n    const interval = setInterval(() => {\n      if (localStorage.getItem('access') && localStorage.getItem('refresh')) {\n        updateToken();\n        setAuthTokens(localStorage.getItem('access'));\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading, updateToken]);\n\n  return <div>{children}</div>;\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isSuperuserAuthenticated: state.auth.isSuperuserAuthenticated,\n});\n\nexport default connect(\n  mapStateToProps,\n  { checkAuthenticated_Superuser, checkAuthenticated, load_user, updateToken }\n)(LayoutRefresh);\n","export default '0.0.50';\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\n\nlet initialized = false;\n\nconst MAX_CONCURRENCY = 6;\n\nexport default function initWebWorkers() {\n  const config = {\n    maxWebWorkers: Math.max(Math.min(navigator.hardwareConcurrency - 1, MAX_CONCURRENCY), 1),\n    startWebWorkersOnDemand: true,\n    taskConfiguration: {\n      decodeTask: {\n        initializeCodecsOnStartup: false,\n        usePDFJS: false,\n        strict: false,\n      },\n    },\n  };\n\n  if (!initialized) {\n    cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\n    initialized = true;\n  }\n}\n","import {\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  compose,\n} from 'redux/es/redux.js';\n\nimport { redux } from '@ohif/core';\nimport thunkMiddleware from 'redux-thunk';\nimport auth from '../../../auth/src/reducers/index.js';\n\n// Combine our @ohif/core and oidc reducers\n// Set init data, using values found in localStorage\nconst { reducers, localStorage, sessionStorage } = redux;\nconst middleware = [thunkMiddleware];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nreducers.auth = auth;\n\nconst rootReducer = combineReducers(reducers);\nconst preloadedState = {\n  ...localStorage.loadState(),\n  ...sessionStorage.loadState(),\n};\n\nif (window.config && window.config.disableServersCache === true) {\n  delete preloadedState.servers;\n}\n\nconst store = createStore(\n  rootReducer,\n  preloadedState,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\n// When the store's preferences change,\n// Update our cached preferences in localStorage\nstore.subscribe(() => {\n  sessionStorage.saveState({\n    servers: store.getState().servers,\n  });\n});\n\nexport default store;\n","import { redux } from '@ohif/core';\nimport store from './../../store';\n\nconst commandsModule = ({ commandsManager }) => {\n  const { setViewportActive, setActiveViewportSpecificData } = redux.actions;\n\n  const actions = {\n    updateActiveViewport: ({ viewports, direction }) => {\n      const { viewportSpecificData, activeViewportIndex } = viewports;\n      const maxIndex = Object.keys(viewportSpecificData).length - 1;\n\n      let newIndex = activeViewportIndex + direction;\n      newIndex = newIndex > maxIndex ? 0 : newIndex;\n      newIndex = newIndex < 0 ? maxIndex : newIndex;\n\n      store.dispatch(setViewportActive(newIndex));\n    },\n    setWindowLevelPreset: ({ viewports, preset }) => {\n      const state = store.getState();\n      const { preferences = {} } = state;\n      const { window, level } =\n        preferences.windowLevelData && preferences.windowLevelData[preset];\n\n      if (window && level) {\n        commandsManager.runCommand('setWindowLevel', {\n          viewports,\n          window,\n          level,\n        });\n      }\n    },\n    updateViewportDisplaySet: ({ viewports, direction }) => {\n      const viewportSpecificData = { ...viewports.viewportSpecificData };\n      const activeViewport =\n        viewportSpecificData[viewports.activeViewportIndex];\n      const studyMetadata = utils.studyMetadataManager.get(\n        activeViewport.StudyInstanceUID\n      );\n\n      if (!studyMetadata) {\n        return;\n      }\n\n      const allDisplaySets = studyMetadata.getDisplaySets();\n      const currentDisplaySetIndex = allDisplaySets.findIndex(\n        displaySet =>\n          displaySet.displaySetInstanceUID ===\n          activeViewport.displaySetInstanceUID\n      );\n      if (currentDisplaySetIndex < 0) {\n        return;\n      }\n\n      const newDisplaySetIndex = currentDisplaySetIndex + direction;\n      const newDisplaySetData = allDisplaySets[newDisplaySetIndex];\n      if (!newDisplaySetData) {\n        return;\n      }\n\n      store.dispatch(setActiveViewportSpecificData(newDisplaySetData));\n    },\n  };\n\n  const definitions = {\n    // Next/Previous active viewport\n    incrementActiveViewport: {\n      commandFn: actions.updateActiveViewport,\n      storeContexts: ['viewports'],\n      options: { direction: 1 },\n    },\n    decrementActiveViewport: {\n      commandFn: actions.updateActiveViewport,\n      storeContexts: ['viewports'],\n      options: { direction: -1 },\n    },\n    // Window level Presets\n    windowLevelPreset1: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 1 },\n    },\n    windowLevelPreset2: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 2 },\n    },\n    windowLevelPreset3: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 3 },\n    },\n    windowLevelPreset4: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 4 },\n    },\n    windowLevelPreset5: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 5 },\n    },\n    windowLevelPreset6: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 6 },\n    },\n    windowLevelPreset7: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 7 },\n    },\n    windowLevelPreset8: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 8 },\n    },\n    windowLevelPreset9: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 9 },\n    },\n    nextViewportDisplaySet: {\n      commandFn: actions.updateViewportDisplaySet,\n      storeContexts: ['viewports'],\n      options: { direction: 1 },\n    },\n    previousViewportDisplaySet: {\n      commandFn: actions.updateViewportDisplaySet,\n      storeContexts: ['viewports'],\n      options: { direction: -1 },\n    },\n  };\n\n  return {\n    definitions,\n    defaultContext: 'VIEWER',\n  };\n};\n\nexport default commandsModule;\n","import commandsModule from './commandsModule.js';\n\nexport default {\n  id: 'generic-viewer-commands',\n  get version() {\n    return window.version;\n  },\n  getCommandsModule({ commandsManager }) {\n    return commandsModule({ commandsManager });\n  },\n};\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@ohif/ui';\nimport { TableListItem } from '@ohif/ui';\n\nimport './MeasurementTableItem.styl';\n\nclass MeasurementTableItem extends Component {\n  static propTypes = {\n    measurementData: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n    onRelabel: PropTypes.func,\n    onDelete: PropTypes.func,\n    onEditDescription: PropTypes.func,\n    itemClass: PropTypes.string,\n    itemIndex: PropTypes.number,\n    onMeasurementDelete: PropTypes.func,\n    onReport: PropTypes.func,\n    canEditStudy: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      delete: false,\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <React.Fragment>{this.getTableListItem()}</React.Fragment>\n      </React.Fragment>\n    );\n  }\n\n  getActionButton = (btnLabel, onClickCallback) => {\n    return (\n      <button key={btnLabel} className=\"btnAction\" onClick={onClickCallback}>\n        <span style={{ marginRight: '4px' }}>\n          <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\n        </span>\n        {btnLabel}\n      </button>\n    );\n  };\n\n  measurementDelete = measurement_number => {\n    this.props.onMeasurementDelete(measurement_number);\n\n    this.setState({ delete: false });\n  };\n\n  getTableListItem = () => {\n    const actionButtons = [];\n\n    if (typeof this.props.onRelabel === 'function') {\n      const relabelButton = this.getActionButton(\n        'Relabel',\n        this.onRelabelClick\n      );\n      if (\n        (this.props.measurementData.created_by && this.props.canEditStudy) ||\n        !this.props.measurementData.created_by\n      ) {\n        actionButtons.push(relabelButton);\n      }\n    }\n\n    if (typeof this.props.onDelete === 'function') {\n      const deleteButton = this.getActionButton('Clear', this.onDeleteClick);\n      if (!this.props.measurementData.created_by) {\n        actionButtons.push(deleteButton);\n      }\n    }\n\n    if (this.state.delete) {\n      return (\n        <div style={{ marginTop: '15px' }}>\n          <p\n            style={{\n              backgroundColor: 'transparent',\n              color: 'red',\n              textAlign: 'center',\n            }}\n          >\n            Are you sure you want do delete this measurement?\n          </p>\n          <div className=\"footer\">\n            <div>\n              <div\n                onClick={() =>\n                  this.setState({\n                    delete: false,\n                  })\n                }\n                data-cy=\"cancel-btn\"\n                className=\"btn btn-default\"\n              >\n                {'No'}\n              </div>\n              <button\n                className=\"btn btn-primary\"\n                data-cy=\"save-btn\"\n                onClick={() =>\n                  this.measurementDelete(\n                    this.props.measurementData.measurement_number\n                  )\n                }\n              >\n                {'Yes'}\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <TableListItem\n        itemKey={this.props.measurementData.measurementNumber}\n        itemClass={`measurementItem ${this.props.itemClass} `}\n        itemIndex={this.props.itemIndex}\n        onItemClick={this.onItemClick}\n      >\n        <div>\n          <div className=\"measurementLocation\">\n            {this.props.measurementData.created_by &&\n            this.props.canEditStudy ? (\n              <button\n                className=\"btn btn-danger\"\n                title=\"Delete Measurement\"\n                onClick={() => this.setState({ delete: true })}\n                style={{\n                  float: 'right',\n                  borderRadius: '6px',\n                  fontSize: '11px',\n                }}\n              >\n                {'x'}\n              </button>\n            ) : (\n              <Fragment></Fragment>\n            )}\n            {this.props.measurementData.label}{' '}\n            {this.props.measurementData.description\n              ? `(${this.props.measurementData.description})`\n              : ''}\n            <p></p>\n          </div>\n          <div className=\"djangoData\">\n            {this.props.measurementData.created_by ? (\n              <>\n                <p>\n                  <i>Created By:</i> {this.props.measurementData.created_by}\n                </p>\n                <p>\n                  <i>Created At:</i> {this.props.measurementData.created_at}\n                </p>\n                <p>\n                  <i>Last Modification By:</i>{' '}\n                  {this.props.measurementData.last_modification_by}\n                </p>\n                <p>\n                  <i>Last Modification At:</i>{' '}\n                  {this.props.measurementData.last_modification_at}\n                </p>\n              </>\n            ) : null}\n          </div>\n          <div className=\"displayTexts\">\n            {this.props.measurementData.toolType}\n            {` `}\n            {this.getDataDisplayText()}\n          </div>\n\n          <div className=\"rowActions\">\n            {actionButtons}\n            {this.props.measurementData.created_by ? (\n              <button\n                key={'Report'}\n                className=\"btnAction\"\n                onClick={() =>\n                  this.props.onReport(\n                    this.props.measurementData.measurementNumber,\n                    true\n                  )\n                }\n              >\n                <span style={{ marginRight: '4px' }}>\n                  <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\n                </span>\n                {'Report'}\n              </button>\n            ) : (\n              <button\n                key={'Report'}\n                className=\"btnAction\"\n                onClick={() =>\n                  this.props.onReport(\n                    this.props.measurementData.measurementNumber,\n                    false\n                  )\n                }\n              >\n                <span style={{ marginRight: '4px' }}>\n                  <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\n                </span>\n                {'Report'}\n              </button>\n            )}\n          </div>\n        </div>\n      </TableListItem>\n    );\n  };\n\n  onItemClick = event => {\n    this.props.onItemClick(event, this.props.measurementData);\n  };\n\n  onRelabelClick = event => {\n    // Prevent onItemClick from firing\n    event.stopPropagation();\n\n    this.props.onRelabel(event, this.props.measurementData);\n  };\n\n  onEditDescriptionClick = event => {\n    // Prevent onItemClick from firing\n    event.stopPropagation();\n\n    this.props.onEditDescription(event, this.props.measurementData);\n  };\n\n  onDeleteClick = event => {\n    // Prevent onItemClick from firing\n    event.stopPropagation();\n\n    this.props.onDelete(event, this.props.measurementData);\n  };\n\n  getDataDisplayText = () => {\n    return this.props.measurementData.data.map((data, index) => {\n      return (\n        <div key={`displayText_${index}`} className=\"measurementDisplayText\">\n          {data.displayText ? data.displayText : ''}\n        </div>\n      );\n    });\n  };\n}\n\nconst connectedComponent = MeasurementTableItem;\nexport { connectedComponent as MeasurementTableItem };\nexport default connectedComponent;\n","/**\n * Should find the most recent Structured Report metadata\n *\n * @param {Array} studies\n * @returns {Object} Series\n */\nconst findMostRecentStructuredReport = studies => {\n  let mostRecentStructuredReport;\n\n  studies.forEach(study => {\n    const allSeries = study.getSeries ? study.getSeries() : [];\n    allSeries.forEach(series => {\n      // Skip series that may not have instances yet\n      // This can happen if we have retrieved just the initial\n      // details about the series via QIDO-RS, but not the full metadata\n      if (!series || series.getInstanceCount() === 0) {\n        return;\n      }\n\n      if (isStructuredReportSeries(series)) {\n        if (\n          !mostRecentStructuredReport ||\n          compareSeriesDate(series, mostRecentStructuredReport)\n        ) {\n          mostRecentStructuredReport = series;\n        }\n      }\n    });\n  });\n\n  return mostRecentStructuredReport;\n};\n\n/**\n *  Checks if series sopClassUID matches with the supported Structured Reports sopClassUID\n *\n * @param {Object} series - Series metadata\n * @returns {boolean}\n */\nconst isStructuredReportSeries = series => {\n  const supportedSopClassUIDs = [\n    '1.2.840.10008.5.1.4.1.1.88.22',\n    '1.2.840.10008.5.1.4.1.1.11.1',\n    '1.2.840.10008.5.1.4.1.1.88.34', // COMPREHENSIVE_3D_SR\n  ];\n\n  const firstInstance = series.getFirstInstance();\n  const SOPClassUID = firstInstance.getData().metadata.SOPClassUID;\n\n  return supportedSopClassUIDs.includes(SOPClassUID);\n};\n\n/**\n *  Checkes if series1 is newer than series2\n *\n * @param {Object} series1 - Series Metadata 1\n * @param {Object} series2 - Series Metadata 2\n * @returns {boolean} true/false if series1 is newer than series2\n */\nconst compareSeriesDate = (series1, series2) => {\n  return (\n    series1._data.SeriesDate > series2._data.SeriesDate ||\n    (series1._data.SeriesDate === series2._data.SeriesDate &&\n      series1._data.SeriesTime > series2._data.SeriesTime)\n  );\n};\n\nexport default findMostRecentStructuredReport;\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from '@progress/kendo-react-form';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/snippets/python';\nimport 'ace-builds/src-noconflict/theme-dracula';\nimport './Report.styl';\nimport { FormElement } from '@progress/kendo-react-form';\n\nclass Report extends Component {\n  state = {\n    report: this.props.report,\n  };\n\n  onClose = () => {\n    this.props.hide();\n  };\n\n  onSubmit = () => {\n    //alert(this.state.report);\n    this.props.saveReport(\n      this.state.report,\n      this.props.measurementNumber,\n      this.props.isEditingDjango\n    );\n\n    this.props.hide();\n  };\n\n  onReset = () => {\n    this.setState({\n      report: this.props.report,\n    });\n  };\n\n  handleChange = newValue => {\n    //console.log(newValue);\n\n    this.setState({\n      report: newValue,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"ReportContent\">\n          <Form\n            initialValues={{\n              report: '',\n            }}\n            //onSubmit={this.onSubmit}\n            render={formRenderProps => (\n              <>\n                <FormElement\n                  style={{\n                    width: 575,\n                  }}\n                  className=\"formReport\"\n                  //onSubmit={this.onSubmit}\n                >\n                  <fieldset className={'k-form-fieldset'}>\n                    <AceEditor\n                      mode=\"python\"\n                      theme=\"dracula\"\n                      name=\"editor\"\n                      onChange={this.handleChange}\n                      value={this.state.report}\n                      enableBasicAutocompletion={false}\n                      enableLiveAutocompletion={false}\n                      enableSnippets={false}\n                      fontSize={14}\n                      width=\"150%\"\n                      height=\"500px\"\n                      showPrintMargin={false}\n                      highlightActiveLine={true}\n                    />\n                  </fieldset>\n                </FormElement>\n\n                <div className=\"footer\">\n                  <div>\n                    <div\n                      onClick={() => this.onReset()}\n                      data-cy=\"cancel-btn\"\n                      className=\"btn btn-default\"\n                    >\n                      Reset to default\n                    </div>\n                    <button\n                      data-cy=\"cancel-btn\"\n                      className=\"btn btn-default\"\n                      onClick={this.onClose}\n                      style={{ marginRight: '5px' }}\n                    >\n                      Cancel\n                    </button>\n                  </div>\n\n                  {this.props.isEditingDjango && this.props.canEditStudy ? (\n                    <button\n                      className=\"btn btn-primary\"\n                      data-cy=\"save-btn\"\n                      onClick={() => this.onSubmit()}\n                    >\n                      Ok\n                    </button>\n                  ) : !this.props.isEditingDjango ? (\n                    <button\n                      className=\"btn btn-primary\"\n                      data-cy=\"save-btn\"\n                      onClick={() => this.onSubmit()}\n                    >\n                      Ok\n                    </button>\n                  ) : null}\n                </div>\n              </>\n            )}\n          ></Form>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nconst ConnectedReport = connect(\n  mapStateToProps,\n  null\n)(Report);\n\nexport default ConnectedReport;\n","/* eslint-disable react/prop-types */\nimport './MeasurementTable.styl';\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { Icon } from '@ohif/ui';\nimport MeasurementTableItem from './MeasurementTableItem.js';\nimport PropTypes from 'prop-types';\nimport { ScrollableArea } from '@ohif/ui';\nimport { TableList } from '@ohif/ui';\nimport axiosInstance from 'axios';\nimport { UINotificationService } from '@ohif/core';\nimport { utils } from '@ohif/core';\nimport findMostRecentStructuredReport from '../../../../core/src/DICOMSR/utils/findMostRecentStructuredReport.js';\nimport Report from './Report.js';\nimport { withModal } from '@ohif/ui';\n\nfunction MeasurementTable(props) {\n  const {\n    measurementCollection,\n    selectedMeasurementNumber,\n    timepoints,\n    onItemClick,\n    onDeleteClick,\n    onRelabelClick,\n    onEditDescriptionClick,\n    saveFunction,\n    onSaveComplete,\n    user,\n    modal: { show, hide },\n    studies,\n  } = props;\n\n  const [selectedKey, setSelectedKey] = useState(null);\n  const [info, setInfo] = useState(null);\n  const [canEditStudy, setCanEditStudy] = useState(false);\n\n  useEffect(() => {\n    const fetchInfo = async () => {\n      try {\n        const response = await onInfo(user, studies[0].StudyInstanceUID);\n\n        response.forEach(djangoMeasurement => {\n          let collectionMeasurement = measurementCollection[0].measurements.filter(\n            function(el) {\n              return (\n                el.wadorsURI !== undefined &&\n                el.data[0].displayText === djangoMeasurement.displayText &&\n                el.toolType === djangoMeasurement.toolType\n              );\n            }\n          );\n          if (collectionMeasurement.length !== 0) {\n            collectionMeasurement[0].measurementNumber =\n              djangoMeasurement.measurement_number;\n            // os números das medições têm de coincidir na Collection e no Django\n            if (\n              collectionMeasurement[0].label === '...' &&\n              collectionMeasurement[0].description === undefined\n            ) {\n              Object.keys(collectionMeasurement[0]).forEach(key => {\n                if (!['label', 'description'].includes(key))\n                  djangoMeasurement[key] = collectionMeasurement[0][key];\n              });\n            } else {\n              if (collectionMeasurement[0].label.split(' ').length === 2) {\n                djangoMeasurement[\n                  'label'\n                ] = collectionMeasurement[0].label.split(' ')[0];\n\n                let description = collectionMeasurement[0].label.split(' ')[1];\n\n                description = description.replace('(', '');\n                description = description.replace(')', '');\n\n                djangoMeasurement['description'] = description;\n                Object.keys(collectionMeasurement[0]).forEach(key => {\n                  if (!['label', 'description'].includes(key))\n                    djangoMeasurement[key] = collectionMeasurement[0][key];\n                });\n              } else {\n                Object.keys(collectionMeasurement[0]).forEach(key => {\n                  djangoMeasurement[key] = collectionMeasurement[0][key];\n                });\n              }\n            }\n          }\n        });\n        setInfo(response);\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    fetchInfo();\n    const studiesEditControl = localStorage.getItem('studyEditControl');\n    let studiesMap = JSON.parse(studiesEditControl);\n    if (studiesMap[studies[0].StudyInstanceUID] === 0) {\n      setCanEditStudy(true);\n    }\n  }, [measurementCollection, studies, user]);\n\n  function report(measurementNumber, isEditingDjango) {\n    let report = '';\n\n    if (isEditingDjango) {\n      let measurementData = info.filter(function(el) {\n        return el.measurement_number === measurementNumber;\n      });\n\n      if (measurementData.length !== 0) {\n        report = measurementData[0]['report'];\n      }\n    } else {\n      let filtered = measurementCollection[0].measurements.filter(function(el) {\n        return el.measurementNumber === selectedKey;\n      });\n\n      report = filtered[0]['report'];\n    }\n\n    show({\n      content: Report,\n      contentProps: {\n        report,\n        measurementNumber,\n        isEditingDjango,\n        canEditStudy,\n        saveReport,\n        hide,\n      },\n      title: 'Measurement Report',\n      //fullscreen: true,\n    });\n  }\n\n  function saveReport(report, measurementNumber, isEditingDjango) {\n    if (isEditingDjango) {\n      let measurementData = info.filter(function(el) {\n        return el.measurement_number === measurementNumber;\n      });\n      if (measurementData.length !== 0) {\n        // está guardada na base de dados\n        measurementData[0]['report'] = report;\n      }\n    } else {\n      // NÃO está guardada na base de dados\n      let filtered = measurementCollection[0].measurements.filter(function(el) {\n        return el.measurementNumber === selectedKey;\n      });\n\n      filtered[0]['report'] = report;\n\n      let updatedMeasurement = filtered[0];\n\n      const index = measurementCollection[0].measurements.indexOf(filtered[0]);\n\n      if (index !== -1) {\n        measurementCollection[0].measurements[index] = updatedMeasurement;\n      }\n    }\n  }\n\n  if (info === null) {\n    return (\n      <div className=\"measurementTable\">\n        <div className=\"measurementTableHeader\">\n          {\n            <div className=\"measurementTableHeaderItem\">\n              <div className=\"timepointLabel\">{timepoints[0].key}</div>\n              <div className=\"timepointDate\">{timepoints[0].date}</div>\n            </div>\n          }\n        </div>\n        <ScrollableArea>\n          <div>\n            <TableList\n              customHeader={\n                <React.Fragment>\n                  <div className=\"tableListHeaderTitle\">Study Measurements</div>\n                  <div className=\"numberOfItems\">\n                    {measurementCollection[0].measurements.length}\n                  </div>\n                </React.Fragment>\n              }\n            >\n              {<Fragment></Fragment>}\n            </TableList>\n          </div>\n        </ScrollableArea>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"measurementTable\">\n        <div className=\"measurementTableHeader\">\n          {\n            <div className=\"measurementTableHeaderItem\">\n              <div className=\"timepointLabel\">{timepoints[0].key}</div>\n              <div className=\"timepointDate\">{timepoints[0].date}</div>\n            </div>\n          }\n        </div>\n        <ScrollableArea>\n          <div>\n            <TableList\n              customHeader={\n                <React.Fragment>\n                  <div className=\"tableListHeaderTitle\">Study Measurements</div>\n                  <div className=\"numberOfItems\">\n                    {measurementCollection[0].measurements.length}\n                  </div>\n                </React.Fragment>\n              }\n            >\n              {getMeasurements()}\n            </TableList>\n          </div>\n        </ScrollableArea>\n        <div className=\"measurementTableFooter\">\n          {saveFunction &&\n          canEditStudy &&\n          measurementCollection[0].measurements.length !== 0 &&\n          localStorage.getItem('HealthProfessional_Authenticated') ? (\n            <button\n              onClick={save}\n              className=\"saveBtn\"\n              data-cy=\"save-measurements-btn\"\n            >\n              <Icon name=\"save\" width=\"14px\" height=\"14px\" />\n              Save measurements\n            </button>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  async function save() {\n    if (saveFunction) {\n      let notification = UINotificationService.create({});\n\n      let form_data = new FormData();\n\n      measurementCollection[0].measurements.map((measurement, index) => {\n        let measurementData = {};\n        if (measurement.wadorsURI !== undefined) {\n          if (info.length !== 0) {\n            // significa que é uma medição que JÁ ESTÁ guardada, por isso estamos a edita-la!\n            console.log(\n              '\\n--------------- Medição guardada no Django. A editar... ----------------------'\n            );\n            let djangoMeasurement = info.filter(function(el) {\n              return (\n                el.toolType === measurement.toolType &&\n                el.displayText === measurement.data[0].displayText &&\n                el.wadorsURI !== undefined &&\n                el.measurement_number === measurement.measurementNumber\n              );\n            });\n\n            measurementData['measurement_number'] =\n              djangoMeasurement[0].measurement_number;\n            measurementData['instance_uid'] = djangoMeasurement[0].instance_uid;\n            measurementData['study'] = djangoMeasurement[0].study;\n            measurementData['displayText'] =\n              djangoMeasurement[0].data[0].displayText;\n            measurementData['toolType'] = djangoMeasurement[0].toolType;\n            measurementData['report'] = djangoMeasurement[0].report;\n            if (measurement.label.split(' ').length === 2) {\n              measurementData['label'] = measurement.label.split(' ')[0];\n\n              let description = measurement.label.split(' ')[1];\n\n              description = description.replace('(', '');\n              description = description.replace(')', '');\n\n              measurementData['description'] = description;\n            } else {\n              measurementData['label'] = djangoMeasurement[0].label;\n              measurementData['description'] = djangoMeasurement[0].description;\n            }\n          } else {\n            return;\n          }\n        } else {\n          console.log(\n            '\\n--------------- Medição nova. A guardar... ----------------------'\n          );\n          // significa que é uma medição que ainda NÃO ESTÁ guardada\n          measurementData['measurement_number'] = measurement.measurementNumber;\n          measurementData['instance_uid'] = measurement.SOPInstanceUID;\n          measurementData['study'] = measurement.StudyInstanceUID;\n          measurementData['displayText'] = measurement.data[0].displayText;\n          measurementData['toolType'] = measurement.toolType;\n\n          if (measurement.label.split(' ').length === 2) {\n            measurementData['label'] = measurement.label.split(' ')[0];\n\n            let description = measurement.label.split(' ')[1];\n\n            description = description.replace('(', '');\n            description = description.replace(')', '');\n\n            measurementData['description'] = description;\n          } else {\n            measurementData['label'] = measurement.label;\n            measurementData['description'] = '';\n          }\n\n          if (measurement['report'] !== undefined) {\n            measurementData['report'] = measurement.report;\n          } else {\n            measurementData['report'] = '';\n          }\n        }\n\n        form_data.append(index, JSON.stringify(measurementData));\n      });\n\n      const myNewMeasurement = await axiosInstance\n        .post(\n          `/api/measurement/?user=${user.email}`,\n          form_data,\n          {\n            headers: {\n              Authorization: `JWT ${localStorage.getItem('access')}`,\n              'Content-Type': 'multipart/form-data',\n            },\n          }\n        )\n        .then(res => {\n          return res;\n        })\n        .catch(error => {\n          return error.response;\n        });\n\n      if (myNewMeasurement.status === 201) {\n        let m = info.filter(function(el) {\n          return el.measurement_number === selectedKey;\n        });\n        if (m.length === 0) {\n          // se ela não existe no Orthanc\n          try {\n            const result = await saveFunction();\n\n            if (onSaveComplete) {\n              localStorage.setItem('saved', true);\n              location.reload(false);\n              onSaveComplete({\n                title: 'Measurements - Success!',\n                message: result.message,\n                type: 'success',\n              });\n            }\n          } catch (error) {\n            if (onSaveComplete) {\n              onSaveComplete({\n                title: 'Measurements - Failure!',\n                message: error.message,\n                type: 'error',\n              });\n            }\n          }\n        } else {\n          if (myNewMeasurement.status === 201) {\n            //já existe, logo estamos simplesmente a editar\n            location.reload(false);\n            notification.show({\n              title: 'Measurements - Success!',\n              message: 'Measurement edited - Success',\n              type: 'success',\n              duration: 8000,\n            });\n          } else {\n            notification.show({\n              title: 'Measurements - Failure!',\n              message: 'Measurement edited - Failure',\n              type: 'error',\n              duration: 8000,\n            });\n          }\n        }\n      } else {\n        notification.show({\n          title: 'Measurements - Failure!',\n          message: 'Measurement saved - Failure',\n          type: 'error',\n          duration: 8000,\n        });\n      }\n    }\n  }\n\n  function getMeasurements() {\n    const selected = selectedMeasurementNumber\n      ? selectedMeasurementNumber\n      : selectedKey;\n    return measurementCollection[0].measurements.map((measurement, index) => {\n      const key = measurement.measurementNumber;\n      const itemIndex = index + 1;\n      const itemClass = selected === key ? 'selected' : '';\n\n      if (measurement.wadorsURI !== undefined) {\n        if (info.length !== 0) {\n          // significa que é uma medição que JÁ ESTÁ guardada\n          console.log(\n            '\\n--------------- Está guardada no Django ----------------------'\n          );\n          let djangoMeasurement = info.filter(function(el) {\n            return (\n              el.toolType === measurement.toolType &&\n              el.displayText === measurement.data[0].displayText &&\n              el.wadorsURI !== undefined &&\n              el.measurement_number === measurement.measurementNumber\n            );\n          });\n\n          if (djangoMeasurement[0]) {\n            measurement = djangoMeasurement[0];\n\n            measurement['created_by'] = djangoMeasurement[0]['user'];\n          } else {\n            return;\n          }\n        } else {\n          return;\n        }\n      } else {\n        console.log(\n          '\\n---------------- NÃO está guardada no Django ------------------'\n        );\n        let isRepeated = measurementCollection[0].measurements.filter(function(\n          el\n        ) {\n          return (\n            el.toolType === measurement.toolType &&\n            el.data[0].displayText === measurement.data[0].displayText &&\n            el.wadorsURI === undefined &&\n            el.label === measurement.label\n          );\n        });\n\n        if (isRepeated.length > 1) {\n          console.log(\n            '\\n---------------- A eliminar repetidos... ------------------'\n          );\n          isRepeated.forEach(rep => {\n            const index = measurementCollection[0].measurements.indexOf(rep);\n\n            measurementCollection[0].measurements.splice(index, 1);\n          });\n          return;\n        }\n      }\n\n      return (\n        <MeasurementTableItem\n          key={key}\n          itemIndex={itemIndex}\n          itemClass={itemClass}\n          measurementData={measurement}\n          onItemClick={onClick}\n          onRelabel={onRelabelClick}\n          onDelete={onDeleteClick}\n          onEditDescription={onEditDescriptionClick}\n          onMeasurementDelete={deleteMeasurement}\n          onReport={report}\n          canEditStudy={canEditStudy}\n        />\n      );\n    });\n  }\n\n  function onClick(event, measurementData) {\n    setSelectedKey(measurementData.measurementNumber);\n\n    if (onItemClick) {\n      onItemClick(event, measurementData);\n    }\n  }\n\n  async function deleteMeasurement(measurement_number) {\n    const studies = utils.studyMetadataManager.all();\n\n    const latestSeries = findMostRecentStructuredReport(studies);\n\n    const instance = latestSeries.getFirstInstance();\n\n    let notification = UINotificationService.create({});\n    let form_data = new FormData();\n\n    if (info.length !== 0) {\n      // significa que é uma medição que JÁ ESTÁ guardada. Vamos elimina-la!\n      console.log(\n        '\\n--------------- Medição guardada no Django. A eliminar... ----------------------'\n      );\n      let djangoMeasurement = info.filter(function(el) {\n        return (\n          el.wadorsURI !== undefined &&\n          el.measurement_number === measurement_number\n        );\n      });\n\n      if (djangoMeasurement.length === 1) {\n        let measurementData = {};\n\n        measurementData['created_by'] = djangoMeasurement[0].created_by;\n        measurementData['measurement_number'] =\n          djangoMeasurement[0].measurement_number;\n        measurementData['patient_id'] =\n          instance._instance.metadata.PatientID || '';\n        measurementData['instance_uid'] = djangoMeasurement[0].instance_uid;\n        measurementData['study'] = djangoMeasurement[0].study;\n        measurementData['wadorsURI'] = djangoMeasurement[0].wadorsURI;\n\n        form_data.append('measurement', JSON.stringify(measurementData));\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n\n    const deleteMeasurement = await axiosInstance\n      .post(\n        `/api/measurement_delete/?user=${user.email}`,\n        form_data,\n        {\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('access')}`,\n            'Content-Type': 'multipart/form-data',\n          },\n        }\n      )\n      .then(res => {\n        return res;\n      })\n      .catch(error => {\n        return error.response;\n      });\n\n    if (deleteMeasurement.status === 200) {\n      location.reload(false);\n      notification.show({\n        title: 'Measurements - Success!',\n        message: 'Measurement deleted - Success',\n        type: 'success',\n        duration: 8000,\n      });\n    } else {\n      notification.show({\n        title: 'Measurements - Failure!',\n        message: 'Measurement deleted - Failure',\n        type: 'error',\n        duration: 8000,\n      });\n    }\n  }\n}\n\nMeasurementTable.propTypes = {\n  measurementCollection: PropTypes.array.isRequired,\n  timepoints: PropTypes.array.isRequired,\n  onItemClick: PropTypes.func,\n  onDeleteClick: PropTypes.func,\n  selectedMeasurementNumber: PropTypes.number,\n  saveFunction: PropTypes.func,\n  onSaveComplete: PropTypes.func,\n  user: PropTypes.object.isRequired,\n};\n\nasync function onInfo(user, study) {\n  let notification = UINotificationService.create({});\n  const response = await axiosInstance\n    .get(\n      `/api/measurement/?user=${user.email}&study=${study}`,\n      {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n        },\n      }\n    )\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      return error.response;\n    });\n\n  if (response.status !== 200) {\n    notification.show({\n      title: 'Measurements - Failure!',\n      message: 'Failed to Connect to Server',\n      type: 'error',\n      duration: 6000,\n    });\n  } else {\n    return response.data;\n  }\n}\n\nexport default withModal(MeasurementTable);\n","import { measurements, utils } from '@ohif/core';\n\nconst { MeasurementApi } = measurements;\nconst { studyMetadataManager } = utils;\n\n// TODO: Move this function to OHIF itself so we can use it on the OHIF measurment table (when it is finished)\n\n/**\n * Activates a set of measurements\n *\n * @param measurementData\n * @param viewportsState\n * @param timepointManagerState\n * @param options\n */\nexport default function jumpToRowItem(\n  measurementData,\n  viewportsState,\n  timepointManagerState,\n  options = { invertViewportTimepointsOrder: false, childToolKey: null }\n) {\n  const numViewports = viewportsState.layout.viewports.length;\n  const numTimepoints = timepointManagerState.timepoints.length;\n  const { measurements, timepoints } = timepointManagerState;\n  const numViewportsToUpdate = Math.min(numTimepoints, numViewports);\n  const { toolType, measurementNumber } = measurementData;\n\n  if (options.invertViewportTimepointsOrder) {\n    timepoints.reverse();\n  }\n\n  const measurementsForToolGroup = measurements[toolType];\n\n  // Retrieve the measurements data\n  const measurementsToJumpTo = [];\n  for (let i = 0; i < numViewportsToUpdate; i++) {\n    const { timepointId } = timepoints[i];\n\n    const dataAtThisTimepoint = measurementsForToolGroup.find(entry => {\n      return (\n        entry.timepointId === timepointId &&\n        entry.measurementNumber === measurementNumber\n      );\n    });\n\n    if (!dataAtThisTimepoint) {\n      measurementsToJumpTo.push(null);\n      continue;\n    }\n\n    let measurement = dataAtThisTimepoint;\n\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\n    if (options.childToolKey) {\n      measurement = dataAtThisTimepoint[options.childToolKey];\n    } else if (Array.isArray(tool.childTools)) {\n      const key = tool.childTools.find(key => !!dataAtThisTimepoint[key]);\n      measurement = dataAtThisTimepoint[key];\n    }\n\n    measurementsToJumpTo.push(measurement);\n  }\n\n  // TODO: Add a single viewports state action which allows\n  // - viewportData to be set\n  // - layout to be set\n  // - activeViewport to be set\n\n  // Needs to update viewports.viewportData state to set image set data\n\n  const displaySetContainsSopInstance = (displaySet, SOPInstanceUID) => {\n    if (!displaySet.images || !displaySet.images.length) {\n      return;\n    }\n\n    return displaySet.images.find(\n      image => image.getSOPInstanceUID() === SOPInstanceUID\n    );\n  };\n\n  const viewportSpecificData = [];\n  measurementsToJumpTo.forEach((data, viewportIndex) => {\n    // Skip if there is no measurement to jump\n    if (!data) {\n      return;\n    }\n\n    const study = studyMetadataManager.get(data.StudyInstanceUID);\n    if (!study) {\n      throw new Error('Study not found.');\n    }\n\n    const displaySet = study.findDisplaySet(displaySet => {\n      return displaySetContainsSopInstance(displaySet, data.SOPInstanceUID);\n    });\n\n    if (!displaySet) {\n      throw new Error('Display set not found.');\n    }\n\n    displaySet.SOPInstanceUID = data.SOPInstanceUID;\n    if (data.frameIndex) {\n      displaySet.frameIndex = data.frameIndex;\n    }\n\n    viewportIndex =\n      (viewportIndex + viewportsState.activeViewportIndex) % numViewports;\n    viewportSpecificData.push({\n      viewportIndex,\n      displaySet,\n    });\n  });\n\n  return {\n    viewportSpecificData,\n    layout: [], // TODO: if we need to change layout, we should return this here\n  };\n}\n","import { connect } from 'react-redux';\nimport MeasurementTable from './MeasurementTable.js';\nimport OHIF, { DICOMSR } from '@ohif/core';\nimport moment from 'moment';\nimport cornerstone from 'cornerstone-core';\nimport jumpToRowItem from './jumpToRowItem.js';\n\nconst { setViewportSpecificData } = OHIF.redux.actions;\nconst { MeasurementApi } = OHIF.measurements;\n\n/**\n * Takes a list of objects and a property and return the list grouped by the property\n *\n * @param {Array} list - The objects to be grouped by\n * @param {string} props - The property to group the objects\n * @returns {Object}\n */\nfunction groupBy(list, props) {\n  return list.reduce((a, b) => {\n    (a[b[props]] = a[b[props]] || []).push(b);\n    return a;\n  }, {});\n}\n\n/**\n *  Takes a list of tools grouped and return all tools separately\n *\n * @param {Array} [toolGroups=[]] - The grouped tools\n * @returns {Array} - The list of all tools on all groups\n */\nfunction getAllTools(toolGroups = []) {\n  let tools = [];\n  toolGroups.forEach(toolGroup => (tools = tools.concat(toolGroup.childTools)));\n\n  return tools;\n}\n\n/**\n * Takes measurementData and build the measurement text to be used into the table\n *\n * @param {Object} [measurementData={}]\n * @param {string} measurementData.location - The measurement location\n * @param {string} measurementData.description - The measurement description\n * @returns {string}\n */\nfunction getMeasurementText(measurementData = {}) {\n  const defaultText = '...';\n  const { location = '', description = '' } = measurementData;\n  const result = location + (description ? ` (${description})` : '');\n\n  return result || defaultText;\n}\n\n/**\n * Takes a list of measurements grouped by measurement numbers and return each measurement data by available timepoint\n *\n * @param {Array} measurementNumberList - The list of measurements\n * @param {Array} timepoints - The list of available timepoints\n * @param {Function} displayFunction - The function that builds the display text by each tool\n * @returns\n */\nfunction getDataForEachMeasurementNumber(\n  measurementNumberList,\n  timepoints,\n  displayFunction\n) {\n  const data = [];\n  // on each measurement number we should get each measurement data by available timepoint\n  measurementNumberList.forEach(measurement => {\n    timepoints.forEach(timepoint => {\n      const eachData = {\n        displayText: '...',\n      };\n      if (measurement.timepointId === timepoint.timepointId) {\n        eachData.displayText = displayFunction(measurement);\n      }\n      data.push(eachData);\n    });\n  });\n\n  return data;\n}\n\n/**\n * Take a measurement toolName and return if any warnings\n *\n * @param {string} toolName - The tool name\n * @returns {string}\n */\nfunction getWarningsForMeasurement(toolName) {\n  const isToolSupported = DICOMSR.isToolSupported(toolName);\n\n  return {\n    hasWarnings: !isToolSupported,\n    warningTitle: isToolSupported ? '' : 'Unsupported Tool',\n    warningList: isToolSupported\n      ? []\n      : [`${toolName} cannot be persisted at this time`],\n  };\n}\n\n/**\n * Take measurements from MeasurementAPI structure and convert into a measurementTable structure\n *\n * @param {Object} toolCollections - The list of all measurement grouped by groupTool and toolName\n * @param {Array} timepoints - The list of available timepoints\n * @returns\n */\nfunction convertMeasurementsToTableData(toolCollections, timepoints) {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  const toolGroups = config.measurementTools;\n  const tools = getAllTools(toolGroups);\n\n  const tableMeasurements = toolGroups.map(toolGroup => {\n    return {\n      groupName: toolGroup.name,\n      groupId: toolGroup.id,\n      measurements: [],\n    };\n  });\n\n  Object.keys(toolCollections).forEach(toolId => {\n    const toolMeasurements = toolCollections[toolId];\n    const tool = tools.find(tool => tool.id === toolId);\n    const { displayFunction } = tool.options.measurementTable;\n\n    // Group by measurementNumber so we can display then all in the same line\n    const groupedMeasurements = groupBy(toolMeasurements, 'measurementNumber');\n\n    Object.keys(groupedMeasurements).forEach(groupedMeasurementsIndex => {\n      const measurementNumberList =\n        groupedMeasurements[groupedMeasurementsIndex];\n      const measurementData = measurementNumberList[0];\n      const {\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n        SOPInstanceUID,\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        wadorsURI,\n        isReadOnly,\n      } = measurementData;\n      const measurementId = measurementData._id;\n\n      const {\n        hasWarnings,\n        warningTitle,\n        warningList,\n      } = getWarningsForMeasurement(toolType);\n\n      //check if all measurements with same measurementNumber will have same LABEL\n      const tableMeasurement = {\n        itemNumber: lesionNamingNumber,\n        label: getMeasurementText(measurementData),\n        measurementId,\n        measurementNumber,\n        lesionNamingNumber,\n        SOPInstanceUID,\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        wadorsURI,\n        toolType,\n        hasWarnings,\n        isReadOnly,\n        warningTitle,\n        warningList,\n        isSplitLesion: false, //TODO\n        data: getDataForEachMeasurementNumber(\n          measurementNumberList,\n          timepoints,\n          displayFunction\n        ),\n      };\n\n      // find the group object for the tool\n      const toolGroupMeasurements = tableMeasurements.find(group => {\n        return group.groupId === tool.toolGroup;\n      });\n      // inject the new measurement for this measurementNumer\n      toolGroupMeasurements.measurements.push(tableMeasurement);\n    });\n  });\n\n  // Sort measurements by lesion naming number\n  tableMeasurements.forEach(tm => {\n    tm.measurements.sort((m1, m2) =>\n      m1.lesionNamingNumber > m2.lesionNamingNumber ? 1 : -1\n    );\n  });\n\n  return tableMeasurements;\n}\n\n/**\n * Take a list of available timepoints and return a list header information for each timepoint\n *\n * @param {Array} timepoints - The list of available timepoints\n * @param {string} timepoints[].latestDate - The date of the last study taken on the timepoint\n * @returns {{label: string, key: string, date: string}[]}\n */\nfunction convertTimepointsToTableData(timepoints) {\n  if (!timepoints || !timepoints.length) {\n    return [];\n  }\n\n  return [\n    {\n      label: 'Study date:',\n      key: 'StudyDate',\n      date: moment(timepoints[0].latestDate).format('DD-MMM-YY'),\n    },\n  ];\n}\n\n/**\n *  Takes server type and return a function or undefined\n *\n * @param {string} serverType - The server type\n * @returns {undefined|Function}\n */\nfunction getSaveFunction(serverType) {\n  if (serverType === 'dicomWeb') {\n    return () => {\n      const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n      const promise = measurementApi.storeMeasurements();\n      return promise;\n    };\n  }\n}\n\nconst mapStateToProps = state => {\n  const { timepointManager, servers } = state;\n  const { timepoints, measurements } = timepointManager;\n  //console.log(state);\n  const activeServer = servers.servers.find(a => a.active === true);\n  const saveFunction = getSaveFunction(activeServer.type);\n\n  return {\n    timepoints: convertTimepointsToTableData(timepoints),\n    measurementCollection: convertMeasurementsToTableData(\n      measurements,\n      timepoints\n    ),\n    timepointManager: state.timepointManager,\n    viewports: state.viewports,\n    saveFunction,\n    user: state.auth.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    dispatchRelabel: (event, measurementData, viewportsState) => {\n      event.persist();\n\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      // Clone the tool not to set empty location initially\n      const toolForLocation = Object.assign({}, tool, { location: null });\n\n      if (ownProps.onRelabel) {\n        ownProps.onRelabel(toolForLocation);\n      }\n    },\n    dispatchEditDescription: (event, measurementData, viewportsState) => {\n      event.persist();\n\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      if (ownProps.onEditDescription) {\n        ownProps.onEditDescription(tool);\n      }\n    },\n    dispatchJumpToRowItem: (\n      measurementData,\n      viewportsState,\n      timepointManagerState,\n      options\n    ) => {\n      const actionData = jumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        dispatch,\n        options\n      );\n\n      actionData.viewportSpecificData.forEach(viewportSpecificData => {\n        const { viewportIndex, displaySet } = viewportSpecificData;\n\n        dispatch(setViewportSpecificData(viewportIndex, displaySet));\n      });\n\n      const { toolType, measurementNumber } = measurementData;\n      const measurementApi = MeasurementApi.Instance;\n\n      Object.keys(measurementApi.tools).forEach(toolType => {\n        const measurements = measurementApi.tools[toolType];\n\n        measurements.forEach(measurement => {\n          measurement.active = false;\n        });\n      });\n\n      const measurementsToActive = measurementApi.tools[toolType].filter(\n        measurement => {\n          return measurement.measurementNumber === measurementNumber;\n        }\n      );\n\n      measurementsToActive.forEach(measurementToActive => {\n        measurementToActive.active = true;\n      });\n\n      measurementApi.syncMeasurementsAndToolData();\n\n      cornerstone.getEnabledElements().forEach(enabledElement => {\n        if (enabledElement.image) {\n          cornerstone.updateImage(enabledElement.element);\n        }\n      });\n\n      // Needs to update viewports.layout state to set layout\n      //const layout = actionData.layout;\n      //dispatch(setLayout(layout))\n\n      // Needs to update viewports.activeViewportIndex to the first updated viewport\n      //const viewportIndex = actionData.viewportIndex;\n      //dispatch(setViewportActive(viewportIndex));\n\n      // Needs to update timepointsManager.measurements state to set active measurementId\n      // TODO: Not yet implemented\n      //dispatch(setActiveMeasurement(measurementData.measurementId))\n\n      // (later): Needs to set some property on state.extensions.cornerstone to synchronize viewport scrolling\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const {\n    timepoints,\n    saveFunction,\n    measurementCollection,\n    user,\n  } = propsFromState;\n  //console.log(ownProps);\n\n  const {\n    onSaveComplete,\n    selectedMeasurementNumber,\n    studies,\n    canEditStudy,\n  } = ownProps;\n\n  return {\n    timepoints,\n    saveFunction,\n    user,\n    measurementCollection,\n    onSaveComplete,\n    selectedMeasurementNumber,\n    studies,\n    canEditStudy,\n    ...propsFromDispatch,\n    onItemClick: (event, measurementData) => {\n      // TODO: Add timepointId to .data for measurementData?\n      // TODO: Tooltype should be on the level below? This should\n      // provide the entire row item?\n\n      const viewportsState = propsFromState.viewports;\n      const timepointManagerState = propsFromState.timepointManager;\n\n      // TODO: invertViewportTimepointsOrder should be stored in / read from user preferences\n      // TODO: childToolKey should come from the measurement table when it supports child tools\n      const options = {\n        invertViewportTimepointsOrder: false,\n        childToolKey: null,\n      };\n\n      propsFromDispatch.dispatchJumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        options\n      );\n    },\n    onRelabelClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchRelabel(event, measurementData, viewportsState);\n    },\n    onEditDescriptionClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchEditDescription(\n        event,\n        measurementData,\n        viewportsState\n      );\n    },\n    onDeleteClick: (event, measurementData) => {\n      const { MeasurementHandlers } = OHIF.measurements;\n\n      MeasurementHandlers.onRemoved({\n        detail: {\n          toolType: measurementData.toolType,\n          measurementData: {\n            _id: measurementData.measurementId,\n            lesionNamingNumber: measurementData.lesionNamingNumber,\n            measurementNumber: measurementData.measurementNumber,\n          },\n        },\n      });\n    },\n  };\n};\n\nconst ConnectedMeasurementTable = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(MeasurementTable);\n\nexport default ConnectedMeasurementTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './LabellingTransition.css';\n\n// If these variables changes, CSS must be updated\nconst transitionDuration = 500;\nconst transitionClassName = 'labelling';\nconst transitionOnAppear = true;\n\nexport default class LabellingTransition extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    displayComponent: PropTypes.bool.isRequired,\n    onTransitionExit: PropTypes.func.isRequired,\n  };\n  render() {\n    return (\n      <CSSTransition\n        in={this.props.displayComponent}\n        appear={transitionOnAppear}\n        timeout={transitionDuration}\n        classNames={transitionClassName}\n        onExited={this.props.onTransitionExit}\n      >\n        {this.props.children}\n      </CSSTransition>\n    );\n  }\n}\n","const items = [\n  'Abdomen/Chest_Wall',\n  'Adrenal',\n  'Bladder',\n  'Bone',\n  'Brain',\n  'Breast',\n  'Colon',\n  'Esophagus',\n  'Extremities',\n  'Gallbladder',\n  'Kidney',\n  'Knee',\n  'Liver',\n  'Lung',\n  'Lymph_Node',\n  'Mediastinum/Hilum',\n  'Muscle',\n  'Neck',\n  'Other_Soft_Tissue',\n  'Ovary',\n  'Pancreas',\n  'Pelvis',\n  'Peritoneum/Omentum',\n  'Prostate',\n  'Retroperitoneum',\n  'Small_Bowel',\n  'Spleen',\n  'Stomach',\n  'Subcutaneous',\n];\n\nconst OHIFLabellingData = items.map(item => {\n  return {\n    label: item,\n    value: item,\n  };\n});\n\nexport default OHIFLabellingData;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SimpleDialog.css';\n\nclass SimpleDialog extends Component {\n  static defaultProps = {\n    componentStyle: {},\n    rootClass: '',\n  };\n\n  render() {\n    return (\n      <div\n        className={`simpleDialog ${this.props.rootClass}`}\n        ref={this.props.componentRef}\n        style={this.props.componentStyle}\n      >\n        <form onSubmit={this.props.onConfirm}>\n          <div className=\"header\">\n            <span className=\"closeBtn\" onClick={this.props.onClose}>\n              <span className=\"closeIcon\">x</span>\n            </span>\n            <h4 className=\"title\">{this.props.headerTitle}</h4>\n          </div>\n          <div className=\"content\">{this.props.children}</div>\n          <div className=\"footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-cancel\"\n              onClick={this.props.onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-confirm\"\n              onClick={this.props.onConfirm}\n            >\n              Confirm\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  headerTitle: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default SimpleDialog;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\nimport './EditDescriptionDialog.css';\n\nexport default class EditDescriptionDialog extends Component {\n  static propTypes = {\n    description: PropTypes.string,\n    measurementData: PropTypes.object.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    onUpdate: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      description: props.measurementData.description || '',\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({\n        description: this.props.description,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <SimpleDialog\n        headerTitle=\"Edit Description\"\n        onClose={this.onClose}\n        onConfirm={this.onConfirm}\n        rootClass=\"editDescriptionDialog\"\n      >\n        <input\n          value={this.state.description}\n          className=\"simpleDialogInput\"\n          id=\"description\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={this.handleChange}\n        />\n      </SimpleDialog>\n    );\n  }\n\n  onClose = () => {\n    this.props.onCancel();\n  };\n\n  onConfirm = e => {\n    e.preventDefault();\n    this.props.onUpdate(this.state.description);\n  };\n\n  handleChange = event => {\n    this.setState({ description: event.target.value });\n  };\n}\n","import { Icon, SelectTree } from '@ohif/ui';\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport LabellingTransition from './LabellingTransition.js';\nimport OHIFLabellingData from './OHIFLabellingData.js';\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\nimport './LabellingFlow.css';\n\nconst LabellingFlow = ({\n  measurementData,\n  editLocation,\n  editDescription,\n  skipAddLabelButton,\n  updateLabelling,\n  labellingDoneCallback,\n  editDescriptionOnDialog,\n}) => {\n  const [fadeOutTimer, setFadeOutTimer] = useState();\n  const [showComponent, setShowComponent] = useState(true);\n  const descriptionInput = useRef();\n  const [state, setState] = useState({\n    measurementData,\n    editLocation,\n    editDescription,\n    skipAddLabelButton,\n  });\n\n  useEffect(() => {\n    const newMeasurementData = cloneDeep(measurementData);\n\n    if (editDescription) {\n      newMeasurementData.description = undefined;\n    }\n\n    if (editLocation) {\n      newMeasurementData.location = undefined;\n    }\n\n    let newEditLocation = editLocation;\n    if (!editDescription && !editLocation) {\n      newEditLocation = true;\n    }\n\n    setState(state => ({\n      ...state,\n      editLocation: newEditLocation,\n      measurementData: newMeasurementData,\n    }));\n  }, [editDescription, editLocation, measurementData]);\n\n  useEffect(() => {\n    if (descriptionInput.current) {\n      descriptionInput.current.focus();\n    }\n  }, [state]);\n\n  const relabel = event =>\n    setState(state => ({ ...state, editLocation: true }));\n\n  const setDescriptionUpdateMode = () => {\n    descriptionInput.current.focus();\n    setState(state => ({ ...state, editDescription: true }));\n  };\n\n  const descriptionCancel = () => {\n    const { description = '' } = cloneDeep(state);\n    descriptionInput.current.value = description;\n    setState(state => ({ ...state, editDescription: false }));\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      descriptionSave();\n    }\n  };\n\n  const descriptionSave = () => {\n    const description = descriptionInput.current.value;\n    updateLabelling({ description });\n\n    setState(state => ({\n      ...state,\n      description,\n      editDescription: false,\n    }));\n  };\n\n  const selectTreeSelectCallback = (event, itemSelected) => {\n    const location = itemSelected.value;\n    const locationLabel = itemSelected.label;\n    updateLabelling({ location });\n\n    setState(state => ({\n      ...state,\n      editLocation: false,\n      measurementData: {\n        ...state.measurementData,\n        location,\n        locationLabel,\n      },\n    }));\n  };\n\n  const showLabelling = () => {\n    setState(state => ({\n      ...state,\n      skipAddLabelButton: true,\n      editLocation: false,\n    }));\n  };\n\n  /*\n   * Waits for 1 sec to dismiss the labelling component.\n   *\n   */\n  const fadeOutAndLeave = () =>\n    setFadeOutTimer(setTimeout(fadeOutAndLeaveFast, 1000));\n\n  const fadeOutAndLeaveFast = () => setShowComponent(false);\n\n  const clearFadeOutTimer = () => {\n    if (fadeOutTimer) {\n      clearTimeout(fadeOutTimer);\n      setFadeOutTimer(null);\n    }\n  };\n\n  const descriptionDialogUpdate = description => {\n    updateLabelling({ description });\n    labellingDoneCallback();\n  };\n\n  const labellingStateFragment = () => {\n    const { skipAddLabelButton, editLocation, measurementData } = state;\n    const { description, locationLabel, location } = measurementData;\n\n    if (!skipAddLabelButton) {\n      return (\n        <button\n          type=\"button\"\n          className=\"addLabelButton\"\n          onClick={showLabelling}\n        >\n          {location ? 'Edit' : 'Add'} Label\n        </button>\n      );\n    } else {\n      if (editLocation) {\n        return (\n          <SelectTree\n            items={OHIFLabellingData}\n            columns={1}\n            onSelected={selectTreeSelectCallback}\n            selectTreeFirstTitle=\"Assign Label\"\n          />\n        );\n      } else {\n        return (\n          <>\n            <div className=\"checkIconWrapper\" onClick={fadeOutAndLeaveFast}>\n              <Icon name=\"check\" className=\"checkIcon\" />\n            </div>\n            <div className=\"locationDescriptionWrapper\">\n              <div className=\"location\">{locationLabel}</div>\n              <div className=\"description\">\n                <input\n                  id=\"descriptionInput\"\n                  ref={descriptionInput}\n                  defaultValue={description || ''}\n                  autoComplete=\"off\"\n                  onKeyPress={handleKeyPress}\n                />\n              </div>\n            </div>\n            <div className=\"commonButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={relabel}\n              >\n                Relabel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={setDescriptionUpdateMode}\n              >\n                {description ? 'Edit ' : 'Add '}\n                Description\n              </button>\n            </div>\n            <div className=\"editDescriptionButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={descriptionCancel}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={descriptionSave}\n              >\n                Save\n              </button>\n            </div>\n          </>\n        );\n      }\n    }\n  };\n\n  if (editDescriptionOnDialog) {\n    return (\n      <EditDescriptionDialog\n        onCancel={labellingDoneCallback}\n        onUpdate={descriptionDialogUpdate}\n        measurementData={state.measurementData}\n      />\n    );\n  }\n\n  return (\n    <LabellingTransition\n      displayComponent={showComponent}\n      onTransitionExit={labellingDoneCallback}\n    >\n      <>\n        <div\n          className={`labellingComponent ${state.editDescription &&\n            'editDescription'}`}\n          onMouseLeave={fadeOutAndLeave}\n          onMouseEnter={clearFadeOutTimer}\n        >\n          {labellingStateFragment()}\n        </div>\n      </>\n    </LabellingTransition>\n  );\n};\n\nLabellingFlow.propTypes = {\n  measurementData: PropTypes.object.isRequired,\n  labellingDoneCallback: PropTypes.func.isRequired,\n  updateLabelling: PropTypes.func.isRequired,\n  initialTopDistance: PropTypes.number,\n  skipAddLabelButton: PropTypes.bool,\n  editLocation: PropTypes.bool,\n  editDescription: PropTypes.bool,\n  editDescriptionOnDialog: PropTypes.bool,\n};\n\nLabellingFlow.defaultProps = {\n  skipAddLabelButton: false,\n  editLocation: false,\n  editDescription: false,\n  editDescriptionOnDialog: false,\n};\n\nexport default LabellingFlow;\n","import { ContextMenu } from '@ohif/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { commandsManager } from './../App.js';\n\nconst toolTypes = [\n  'Angle',\n  'Bidirectional',\n  'Length',\n  'FreehandMouse',\n  'EllipticalRoi',\n  'CircleRoi',\n  'RectangleRoi',\n];\n\nconst ToolContextMenu = ({\n  onSetLabel,\n  onSetDescription,\n  isTouchEvent,\n  eventData,\n  onClose,\n  onDelete,\n}) => {\n  const defaultDropdownItems = [\n    {\n      label: 'Delete measurement',\n      actionType: 'Delete',\n      action: ({ nearbyToolData, eventData }) =>\n        onDelete(nearbyToolData, eventData),\n    },\n    {\n      label: 'Relabel',\n      actionType: 'setLabel',\n      action: ({ nearbyToolData, eventData }) => {\n        const { tool: measurementData } = nearbyToolData;\n        onSetLabel(eventData, measurementData);\n      },\n    },\n    {\n      actionType: 'setDescription',\n      action: ({ nearbyToolData, eventData }) => {\n        const { tool: measurementData } = nearbyToolData;\n        onSetDescription(eventData, measurementData);\n      },\n    },\n  ];\n\n  const getDropdownItems = (eventData, isTouchEvent = false) => {\n    const nearbyToolData = commandsManager.runCommand('getNearbyToolData', {\n      element: eventData.element,\n      canvasCoordinates: eventData.currentPoints.canvas,\n      availableToolTypes: toolTypes,\n    });\n\n    /*\n     * Annotate tools for touch events already have a press handle to edit it,\n     * has a better UX for deleting it.\n     */\n    if (\n      isTouchEvent &&\n      nearbyToolData &&\n      nearbyToolData.toolType === 'arrowAnnotate'\n    ) {\n      return;\n    }\n\n    let dropdownItems = [];\n    if (nearbyToolData) {\n      defaultDropdownItems.forEach(item => {\n        item.params = { eventData, nearbyToolData };\n\n        if (item.actionType === 'setDescription') {\n          item.label = `${\n            nearbyToolData.tool.description ? 'Edit' : 'Add'\n          } Description`;\n        }\n\n        dropdownItems.push(item);\n      });\n    }\n\n    return dropdownItems;\n  };\n\n  const onClickHandler = ({ action, params }) => {\n    action(params);\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  const dropdownItems = getDropdownItems(eventData, isTouchEvent);\n\n  return (\n    <div className=\"ToolContextMenu\">\n      <ContextMenu items={dropdownItems} onClick={onClickHandler} />\n    </div>\n  );\n};\n\nToolContextMenu.propTypes = {\n  isTouchEvent: PropTypes.bool.isRequired,\n  eventData: PropTypes.object,\n  onClose: PropTypes.func,\n  onSetDescription: PropTypes.func,\n  onSetLabel: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n\nToolContextMenu.defaultProps = {\n  isTouchEvent: false,\n};\n\nexport default ToolContextMenu;\n","import OHIF from '@ohif/core';\nimport cornerstone from 'cornerstone-core';\nimport csTools from 'cornerstone-tools';\nimport throttle from 'lodash.throttle';\n\nimport LabellingFlow from '../../components/Labelling/LabellingFlow';\nimport ToolContextMenu from '../../connectedComponents/ToolContextMenu';\n\nconst {\n  onAdded,\n  onRemoved,\n  onModified,\n} = OHIF.measurements.MeasurementHandlers;\n\nconst MEASUREMENT_ACTION_MAP = {\n  added: onAdded,\n  removed: onRemoved,\n  modified: throttle(event => {\n    return onModified(event);\n  }, 300),\n};\n\n/**\n *\n *\n * @export\n * @param {Object} servicesManager\n * @param {Object} configuration\n */\nexport default function init({\n  servicesManager,\n  commandsManager,\n  configuration,\n}) {\n  const { UIDialogService } = servicesManager.services;\n\n  // TODO: MEASUREMENT_COMPLETED (not present in initial implementation)\n  const onMeasurementsChanged = (action, event) => {\n    return MEASUREMENT_ACTION_MAP[action](event);\n  };\n  const onMeasurementAdded = onMeasurementsChanged.bind(this, 'added');\n  const onMeasurementRemoved = onMeasurementsChanged.bind(this, 'removed');\n  const onMeasurementModified = onMeasurementsChanged.bind(this, 'modified');\n  const onLabelmapModified = onMeasurementsChanged.bind(\n    this,\n    'labelmapModified'\n  );\n\n  const _getDefaultPosition = event => ({\n    x: (event && event.currentPoints.client.x) || 0,\n    y: (event && event.currentPoints.client.y) || 0,\n  });\n\n  const _updateLabellingHandler = (labellingData, measurementData) => {\n    const { location, description, response } = labellingData;\n\n    if (location) {\n      measurementData.location = location;\n    }\n\n    measurementData.description = description || '';\n\n    if (response) {\n      measurementData.response = response;\n    }\n\n    commandsManager.runCommand(\n      'updateTableWithNewMeasurementData',\n      measurementData\n    );\n  };\n\n  const showLabellingDialog = (props, contentProps, measurementData) => {\n    if (!UIDialogService) {\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\n      return;\n    }\n\n    UIDialogService.create({\n      id: 'labelling',\n      isDraggable: false,\n      showOverlay: true,\n      centralize: true,\n      content: LabellingFlow,\n      contentProps: {\n        measurementData,\n        labellingDoneCallback: () =>\n          UIDialogService.dismiss({ id: 'labelling' }),\n        updateLabelling: labellingData =>\n          _updateLabellingHandler(labellingData, measurementData),\n        ...contentProps,\n      },\n      ...props,\n    });\n  };\n\n  const onRightClick = event => {\n    if (!UIDialogService) {\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\n      return;\n    }\n\n    UIDialogService.dismiss({ id: 'context-menu' });\n    UIDialogService.create({\n      id: 'context-menu',\n      isDraggable: false,\n      preservePosition: false,\n      defaultPosition: _getDefaultPosition(event.detail),\n      content: ToolContextMenu,\n      contentProps: {\n        eventData: event.detail,\n        onDelete: (nearbyToolData, eventData) => {\n          const element = eventData.element;\n          commandsManager.runCommand('removeToolState', {\n            element,\n            toolType: nearbyToolData.toolType,\n            tool: nearbyToolData.tool,\n          });\n        },\n        onClose: () => UIDialogService.dismiss({ id: 'context-menu' }),\n        onSetLabel: (eventData, measurementData) => {\n          showLabellingDialog(\n            { centralize: true, isDraggable: false },\n            { skipAddLabelButton: true, editLocation: true },\n            measurementData\n          );\n        },\n        onSetDescription: (eventData, measurementData) => {\n          showLabellingDialog(\n            { defaultPosition: _getDefaultPosition(eventData) },\n            { editDescriptionOnDialog: true },\n            measurementData\n          );\n        },\n      },\n    });\n  };\n\n  const onTouchPress = event => {\n    if (!UIDialogService) {\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\n      return;\n    }\n\n    UIDialogService.create({\n      eventData: event.detail,\n      content: ToolContextMenu,\n      contentProps: {\n        isTouchEvent: true,\n      },\n    });\n  };\n\n  const onTouchStart = () => resetLabelligAndContextMenu();\n\n  const onMouseClick = () => resetLabelligAndContextMenu();\n\n  const resetLabelligAndContextMenu = () => {\n    if (!UIDialogService) {\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\n      return;\n    }\n\n    UIDialogService.dismiss({ id: 'context-menu' });\n    UIDialogService.dismiss({ id: 'labelling' });\n  };\n\n  // TODO: This makes scrolling painfully slow\n  // const onNewImage = ...\n\n  /*\n   * Because click gives us the native \"mouse up\", buttons will always be `0`\n   * Need to fallback to event.which;\n   *\n   */\n  const handleClick = cornerstoneMouseClickEvent => {\n    const mouseUpEvent = cornerstoneMouseClickEvent.detail.event;\n    const isRightClick = mouseUpEvent.which === 3;\n\n    if (isRightClick) {\n      onRightClick(cornerstoneMouseClickEvent);\n    } else {\n      onMouseClick(cornerstoneMouseClickEvent);\n    }\n  };\n\n  function elementEnabledHandler(evt) {\n    const element = evt.detail.element;\n\n    element.addEventListener(\n      csTools.EVENTS.MEASUREMENT_ADDED,\n      onMeasurementAdded\n    );\n    element.addEventListener(\n      csTools.EVENTS.MEASUREMENT_REMOVED,\n      onMeasurementRemoved\n    );\n    element.addEventListener(\n      csTools.EVENTS.MEASUREMENT_MODIFIED,\n      onMeasurementModified\n    );\n    element.addEventListener(\n      csTools.EVENTS.LABELMAP_MODIFIED,\n      onLabelmapModified\n    );\n\n    element.addEventListener(csTools.EVENTS.TOUCH_PRESS, onTouchPress);\n    element.addEventListener(csTools.EVENTS.MOUSE_CLICK, handleClick);\n    element.addEventListener(csTools.EVENTS.TOUCH_START, onTouchStart);\n\n    // TODO: This makes scrolling painfully slow\n    // element.addEventListener(cornerstone.EVENTS.NEW_IMAGE, onNewImage);\n  }\n\n  function elementDisabledHandler(evt) {\n    const element = evt.detail.element;\n\n    element.removeEventListener(\n      csTools.EVENTS.MEASUREMENT_ADDED,\n      onMeasurementAdded\n    );\n    element.removeEventListener(\n      csTools.EVENTS.MEASUREMENT_REMOVED,\n      onMeasurementRemoved\n    );\n    element.removeEventListener(\n      csTools.EVENTS.MEASUREMENT_MODIFIED,\n      onMeasurementModified\n    );\n    element.removeEventListener(\n      csTools.EVENTS.LABELMAP_MODIFIED,\n      onLabelmapModified\n    );\n\n    element.removeEventListener(csTools.EVENTS.TOUCH_PRESS, onTouchPress);\n    element.removeEventListener(csTools.EVENTS.MOUSE_CLICK, handleClick);\n    element.removeEventListener(csTools.EVENTS.TOUCH_START, onTouchStart);\n\n    // TODO: This makes scrolling painfully slow\n    // element.removeEventListener(cornerstone.EVENTS.NEW_IMAGE, onNewImage);\n  }\n\n  cornerstone.events.addEventListener(\n    cornerstone.EVENTS.ELEMENT_ENABLED,\n    elementEnabledHandler\n  );\n  cornerstone.events.addEventListener(\n    cornerstone.EVENTS.ELEMENT_DISABLED,\n    elementDisabledHandler\n  );\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport ConnectedMeasurementTable from './ConnectedMeasurementTable.js';\nimport init from './init.js';\n\nimport LabellingFlow from '../../components/Labelling/LabellingFlow';\n\nexport default {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'measurements-table',\n  get version() {\n    return window.version;\n  },\n\n  preRegistration({ servicesManager, commandsManager, configuration = {} }) {\n    init({ servicesManager, commandsManager, configuration });\n  },\n\n  getPanelModule({ servicesManager, commandsManager }) {\n    const { UINotificationService, UIDialogService } = servicesManager.services;\n\n    const showLabellingDialog = (props, measurementData) => {\n      if (!UIDialogService) {\n        return;\n      }\n\n      UIDialogService.dismiss({ id: 'labelling' });\n      UIDialogService.create({\n        id: 'labelling',\n        centralize: true,\n        isDraggable: true,\n        showOverlay: true,\n        content: LabellingFlow,\n        contentProps: {\n          measurementData,\n          labellingDoneCallback: () =>\n            UIDialogService.dismiss({ id: 'labelling' }),\n          updateLabelling: ({ location, description, response }) => {\n            measurementData.location = location || measurementData.location;\n            measurementData.description = description || '';\n            measurementData.response = response || measurementData.response;\n\n            commandsManager.runCommand(\n              'updateTableWithNewMeasurementData',\n              measurementData\n            );\n          },\n          ...props,\n        },\n      });\n    };\n\n    const ExtendedConnectedMeasurementTable = props => (\n      <ConnectedMeasurementTable\n        onRelabel={tool =>\n          showLabellingDialog(\n            { editLocation: true, skipAddLabelButton: true },\n            tool\n          )\n        }\n        studies={props.studies}\n        onEditDescription={tool =>\n          showLabellingDialog({ editDescriptionOnDialog: true }, tool)\n        }\n        onSaveComplete={message => {\n          if (UINotificationService) {\n            UINotificationService.show(message);\n          }\n        }}\n      />\n    );\n    return {\n      menuOptions: [\n        {\n          icon: 'measure-target',\n          label: 'Measurements',\n          target: 'measurement-panel',\n        },\n      ],\n      components: [\n        {\n          id: 'measurement-panel',\n          component: ExtendedConnectedMeasurementTable,\n        },\n      ],\n      defaultContext: ['VIEWER'],\n    };\n  },\n};\n","import React from 'react';\n\nconst Bar = ({ progress, animationDuration }) => (\n  <div\n    style={{\n      background: '#29d',\n      height: 2,\n      left: 0,\n      marginLeft: `${(-1 + progress) * 100}%`,\n      position: 'fixed',\n      top: 0,\n      transition: `margin-left ${animationDuration}ms linear`,\n      width: '100%',\n      zIndex: 1031,\n    }}\n  >\n    <div\n      style={{\n        boxShadow: '0 0 10px #29d, 0 0 5px #29d',\n        display: 'block',\n        height: '100%',\n        opacity: 1,\n        position: 'absolute',\n        right: 0,\n        transform: 'rotate(3deg) translate(0px, -4px)',\n        width: 100,\n      }}\n    />\n  </div>\n);\n\nexport default Bar;\n","import React from 'react';\n\nconst Container = ({ children, isFinished, animationDuration }) => (\n  <div\n    style={{\n      opacity: isFinished ? 0 : 1,\n      pointerEvents: 'none',\n      transition: `opacity ${animationDuration}ms linear`,\n    }}\n  >\n    {children}\n  </div>\n);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, matchPath } from 'react-router';\nimport { Route } from 'react-router-dom';\nimport { NProgress } from '@tanem/react-nprogress';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { ViewerbaseDragDropContext, ErrorBoundary } from '@ohif/ui';\nimport * as RoutesUtil from './routes/routesUtil';\nimport NotFound from './routes/NotFound.js';\nimport { Bar, Container } from './components/LoadingBar/';\nimport './OHIFStandaloneViewer.css';\nimport './variables.css';\nimport './theme-tide.css';\nimport AppContext from './context/AppContext';\n\nclass OHIFStandaloneViewer extends Component {\n  static contextType = AppContext;\n  state = {\n    isLoading: false,\n  };\n\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n    user: PropTypes.object,\n    isAuthenticated: PropTypes.bool,\n    setContext: PropTypes.func,\n    userManager: PropTypes.object,\n    location: PropTypes.object,\n  };\n\n  componentDidMount() {\n    this.unlisten = this.props.history.listen(() => {\n      if (this.props.setContext) {\n        this.props.setContext(window.location.pathname);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    const { user, isAuthenticated } = this.props;\n    const { appConfig = {} } = this.context;\n    if (user != null && isAuthenticated) {\n      const routes = RoutesUtil.getRoutes(appConfig);\n\n      const currentPath = this.props.location.pathname;\n\n      const noMatchingRoutes = !routes.find(r =>\n        matchPath(currentPath, {\n          path: r.path,\n          exact: true,\n        })\n      );\n\n      return (\n        <>\n          <NProgress isAnimating={this.state.isLoading}>\n            {({ isFinished, progress, animationDuration }) => (\n              <Container\n                isFinished={isFinished}\n                animationDuration={animationDuration}\n              >\n                <Bar\n                  progress={progress}\n                  animationDuration={animationDuration}\n                />\n              </Container>\n            )}\n          </NProgress>\n          <Route\n            exact\n            path=\"/silent-refresh.html\"\n            onEnter={RoutesUtil.reload}\n          />\n          <Route\n            exact\n            path=\"/logout-redirect.html\"\n            onEnter={RoutesUtil.reload}\n          />\n          {!noMatchingRoutes &&\n            routes.map(({ path, Component }) => (\n              <Route key={path} exact path={path}>\n                {({ match }) => (\n                  <CSSTransition\n                    in={match !== null}\n                    timeout={300}\n                    classNames=\"fade\"\n                    unmountOnExit\n                    onEnter={() => {\n                      this.setState({\n                        isLoading: true,\n                      });\n                    }}\n                    onEntered={() => {\n                      this.setState({\n                        isLoading: false,\n                      });\n                    }}\n                  >\n                    {match === null ? (\n                      <></>\n                    ) : (\n                      <ErrorBoundary context={match.url}>\n                        <Component\n                          match={match}\n                          location={this.props.location}\n                        />\n                      </ErrorBoundary>\n                    )}\n                  </CSSTransition>\n                )}\n              </Route>\n            ))}\n          {noMatchingRoutes && <NotFound />}\n        </>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    isAuthenticated: state.auth.isAuthenticated,\n  };\n};\n\nconst ConnectedOHIFStandaloneViewer = connect(\n  mapStateToProps,\n  null\n)(OHIFStandaloneViewer);\n\nexport default ViewerbaseDragDropContext(\n  withRouter(ConnectedOHIFStandaloneViewer)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { hot } from 'react-hot-loader/root';\nimport OHIFCornerstoneExtension from '@ohif/extension-cornerstone';\n\nimport {\n  SnackbarProvider,\n  ModalProvider,\n  DialogProvider,\n  OHIFModal,\n  LoggerProvider,\n  ErrorBoundary,\n} from '@ohif/ui';\n\nimport {\n  CommandsManager,\n  ExtensionManager,\n  ServicesManager,\n  UINotificationService,\n  UIModalService,\n  UIDialogService,\n  LoggerService,\n  MeasurementService,\n  utils,\n} from '@ohif/core';\n\nimport {\n  Layout,\n  LayoutRefresh,\n  Home,\n  Login,\n  Signup,\n  Google,\n  Activate,\n  ResetPassword,\n  ResetPasswordConfirm,\n  Add_description,\n  Linkedin,\n  Spotify,\n  Facebook,\n  Github,\n} from '../../auth/src/index.js';\n\nimport { setConfiguration } from './config';\n\n/** Utils */\nimport { initWebWorkers } from './utils/index.js';\n\n/** Extensions */\nimport { GenericViewerCommands, MeasurementsPanel } from './appExtensions';\n\n/** Viewer */\nimport OHIFStandaloneViewer from './OHIFStandaloneViewer';\n\n/** Store */\nimport { getActiveContexts } from './store/layout/selectors.js';\nimport store from './store';\n\n/** Contexts */\nimport { AppProvider, useAppContext, CONTEXTS } from './context/AppContext';\n\nlocalStorage.setItem('debug', 'cornerstoneTools');\n\n/** ~~~~~~~~~~~~~ Application Setup */\nconst commandsManagerConfig = {\n  getAppState: () => store.getState(),\n  getActiveContexts: () => getActiveContexts(store.getState()),\n};\n\n/** Managers */\nconst commandsManager = new CommandsManager(commandsManagerConfig);\nconst servicesManager = new ServicesManager();\nlet extensionManager;\n/** ~~~~~~~~~~~~~ End Application Setup */\n\nwindow.store = store;\n\nwindow.ohif = window.ohif || {};\nwindow.ohif.app = {\n  commandsManager,\n  servicesManager,\n  extensionManager,\n};\n\nclass App extends Component {\n  static propTypes = {\n    config: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({\n        routerBasename: PropTypes.string.isRequired,\n        extensions: PropTypes.array,\n      }),\n    ]).isRequired,\n    defaultExtensions: PropTypes.array,\n  };\n\n  static defaultProps = {\n    config: {\n      showStudyList: true,\n      extensions: [],\n    },\n    defaultExtensions: [],\n  };\n\n  _appConfig;\n\n  constructor(props) {\n    super(props);\n\n    const { config, defaultExtensions } = props;\n\n    const appDefaultConfig = {\n      showStudyList: true,\n      cornerstoneExtensionConfig: {},\n      extensions: [],\n      routerBasename: '/',\n    };\n\n    this._appConfig = {\n      ...appDefaultConfig,\n      ...(typeof config === 'function' ? config({ servicesManager }) : config),\n    };\n\n    const { servers, cornerstoneExtensionConfig, extensions } = this._appConfig;\n\n    setConfiguration(this._appConfig);\n\n    _initServices([\n      UINotificationService,\n      UIModalService,\n      UIDialogService,\n      MeasurementService,\n      LoggerService,\n    ]);\n    _initExtensions(\n      [...defaultExtensions, ...extensions],\n      cornerstoneExtensionConfig,\n      this._appConfig\n    );\n\n    _initServers(servers);\n    initWebWorkers();\n  }\n\n  render() {\n    const { routerBasename } = this._appConfig;\n    const {\n      UINotificationService,\n      UIDialogService,\n      UIModalService,\n      LoggerService,\n    } = servicesManager.services;\n\n    return (\n      <ErrorBoundary context=\"App\">\n        <Provider store={store}>\n          <AppProvider config={this._appConfig}>\n            <Router basename={routerBasename}>\n              <LoggerProvider service={LoggerService}>\n                <SnackbarProvider service={UINotificationService}>\n                  <DialogProvider service={UIDialogService}>\n                    <ModalProvider modal={OHIFModal} service={UIModalService}>\n                      <LayoutRefresh>\n                        <Layout>\n                          <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/signup\" component={Signup} />\n                            <Route\n                              exact\n                              path=\"/add_description/:email\"\n                              component={Add_description}\n                            />\n                            <Route\n                              exact\n                              path=\"/facebook\"\n                              component={Facebook}\n                            />\n                            <Route exact path=\"/google\" component={Google} />\n                            <Route\n                              exact\n                              path=\"/complete/github/\"\n                              component={Github}\n                            />\n                            <Route\n                              exact\n                              path=\"/complete/linkedin/\"\n                              component={Linkedin}\n                            />\n                            <Route\n                              exact\n                              path=\"/callback/spotify/\"\n                              component={Spotify}\n                            />\n                            <Route\n                              exact\n                              path=\"/reset-password\"\n                              component={ResetPassword}\n                            />\n                            <Route\n                              exact\n                              path=\"/password/reset/confirm/:uid/:token\"\n                              component={ResetPasswordConfirm}\n                            />\n                            <Route\n                              exact\n                              path=\"/activate/:uid/:token\"\n                              component={Activate}\n                            />\n                          </Switch>\n                          <OHIFStandaloneViewer />\n                        </Layout>\n                      </LayoutRefresh>\n                    </ModalProvider>\n                  </DialogProvider>\n                </SnackbarProvider>\n              </LoggerProvider>\n            </Router>\n          </AppProvider>\n        </Provider>\n      </ErrorBoundary>\n    );\n  }\n}\n\nfunction _initServices(services) {\n  servicesManager.registerServices(services);\n}\n\nfunction _initExtensions(extensions, cornerstoneExtensionConfig, appConfig) {\n  extensionManager = new ExtensionManager({\n    commandsManager,\n    servicesManager,\n    appConfig,\n    api: {\n      contexts: CONTEXTS,\n      hooks: {\n        useAppContext,\n      },\n    },\n  });\n\n  const requiredExtensions = [\n    GenericViewerCommands,\n    [OHIFCornerstoneExtension, cornerstoneExtensionConfig],\n  ];\n\n  /* WARNING: MUST BE REGISTERED _AFTER_ OHIFCornerstoneExtension */\n  requiredExtensions.push(MeasurementsPanel);\n\n  const mergedExtensions = requiredExtensions.concat(extensions);\n  extensionManager.registerExtensions(mergedExtensions);\n}\n\nfunction _initServers(servers) {\n  if (servers) {\n    utils.addServers(servers, store);\n  }\n}\n\n/*\n * Only wrap/use hot if in dev.\n */\nconst ExportedApp = process.env.NODE_ENV === 'development' ? hot(App) : App;\n\nexport default ExportedApp;\nexport { commandsManager, extensionManager, servicesManager };\n","import OHIF from '@ohif/core';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport dicomParser from 'dicom-parser';\nimport version from './version.js';\n\nexport function setConfiguration(appConfig) {\n  let homepage;\n  const { process } = window;\n  if (process && process.env && process.env.PUBLIC_URL) {\n    homepage = process.env.PUBLIC_URL;\n  }\n\n  window.info = {\n    version,\n    homepage,\n  };\n\n  window.cornerstone = cornerstone;\n  window.cornerstoneWADOImageLoader = cornerstoneWADOImageLoader;\n\n  cornerstoneWADOImageLoader.external.cornerstone = cornerstone;\n  cornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n\n  OHIF.user.getAccessToken = () => {\n    const state = window.store.getState();\n    if (!state.oidc || !state.oidc.user) {\n      return;\n    }\n\n    return state.oidc.user.access_token;\n  };\n\n  OHIF.errorHandler.getHTTPErrorHandler = () => {\n    return appConfig.httpErrorHandler;\n  };\n\n  cornerstoneWADOImageLoader.configure({\n    beforeSend: function(xhr) {\n      const headers = OHIF.DICOMWeb.getAuthorizationHeader();\n\n      if (headers.Authorization) {\n        xhr.setRequestHeader('Authorization', headers.Authorization);\n      }\n    },\n    errorInterceptor: error => {\n      if (typeof appConfig.httpErrorHandler === 'function') {\n        appConfig.httpErrorHandler(error);\n      }\n    },\n  });\n}\n","import 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport './CustomDateRangePicker.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DateRangePicker } from 'react-dates';\nimport moment from 'moment';\n\nfunction CustomDateRangePicker(props) {\n  const {\n    onDatesChange,\n    startDate,\n    endDate,\n    presets,\n    ...dateRangePickerProps\n  } = props;\n\n  const renderDatePresets = () => {\n    const { presets } = props;\n\n    return (\n      <div className=\"PresetDateRangePicker_panel\">\n        {presets.map(({ text, start, end }) => {\n          const isSelected = startDate === start && endDate === end;\n\n          return (\n            <button\n              key={text}\n              type=\"button\"\n              className={`PresetDateRangePicker_button ${\n                isSelected ? 'PresetDateRangePicker_button__selected' : ''\n              }`}\n              onClick={() =>\n                onDatesChange({\n                  startDate: start,\n                  endDate: end,\n                  preset: true,\n                })\n              }\n            >\n              {text}\n            </button>\n          );\n        })}\n      </div>\n    );\n  };\n  const renderMonthElement = ({ month, onMonthSelect, onYearSelect }) => {\n    const containerStyle = {\n      margin: '0 5px',\n    };\n\n    const renderYearsOptions = () => {\n      const yearsRange = 20;\n      const options = [];\n\n      for (let i = 0; i < yearsRange; i++) {\n        const year = moment().year() - i;\n        options.push(<option value={year}>{year}</option>);\n      }\n\n      return options;\n    };\n\n    renderMonthElement.propTypes = {\n      onMonthSelect: PropTypes.func,\n      onYearSelect: PropTypes.func,\n    };\n\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <div style={containerStyle}>\n          <select\n            className=\"DateRangePicker_select\"\n            value={month.month()}\n            onChange={e => onMonthSelect(month, e.target.value)}\n          >\n            {moment.months().map((label, value) => (\n              <option key={value} value={value}>\n                {label}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div style={containerStyle}>\n          {}\n          <select\n            className=\"DateRangePicker_select\"\n            value={month.year()}\n            onChange={e => onYearSelect(month, e.target.value)}\n          >\n            {renderYearsOptions()}\n          </select>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <DateRangePicker\n      {...dateRangePickerProps}\n      startDate={startDate}\n      endDate={endDate}\n      renderCalendarInfo={renderDatePresets}\n      onDatesChange={onDatesChange}\n      renderMonthElement={renderMonthElement}\n      startDatePlaceholderText={'Start Date'}\n      endDatePlaceholderText={'End Date'}\n      phrases={{\n        closeDatePicker: 'Common:Close',\n        clearDates: 'Clear dates',\n      }}\n    />\n  );\n}\n\nCustomDateRangePicker.propTypes = {\n  presets: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      start: PropTypes.required,\n      end: PropTypes.required,\n    })\n  ),\n  onDatesChange: PropTypes.func.isRequired,\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date),\n  month: PropTypes.instanceOf(Date),\n};\n\nexport default CustomDateRangePicker;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport CustomDateRangePicker from './CustomDateRangePicker.js';\nimport { Icon } from '@ohif/ui';\n\nconst getDateEntry = (datePicked, rangeDatePicked) => {\n  return rangeDatePicked || datePicked || null;\n};\n\nconst getDateEntryFromRange = (today, numOfDays, edge = 'start') => {\n  if (typeof numOfDays !== 'number') {\n    return;\n  }\n\n  if (edge === 'end') {\n    return today;\n  } else {\n    today.subtract(numOfDays, 'days');\n  }\n};\n\nfunction TableSearchFilter(props) {\n  const {\n    meta,\n    values,\n    onSort,\n    onValueChange,\n    sortFieldName,\n    sortDirection,\n    studyListDateFilterNumDays,\n  } = props;\n\n  const { modelDateTo, modelDateFrom } = values || {};\n  const [focusedInput, setFocusedInput] = useState(null);\n\n  const sortIcons = ['sort', 'sort-up', 'sort-down'];\n  const sortIconForSortField =\n    sortDirection === 'asc' ? sortIcons[1] : sortIcons[2];\n\n  const today = moment();\n  const lastWeek = moment().subtract(7, 'day');\n  const lastMonth = moment().subtract(1, 'month');\n\n  const defaultStartDate = getDateEntryFromRange(\n    today,\n    studyListDateFilterNumDays,\n    'start'\n  );\n  const defaultEndDate = getDateEntryFromRange(\n    today,\n    studyListDateFilterNumDays,\n    'end'\n  );\n\n  const datePresets = [\n    {\n      text: 'Today',\n      start: today,\n      end: today,\n    },\n    {\n      text: 'Last 7 days',\n      start: lastWeek,\n      end: today,\n    },\n    {\n      text: 'Last 30 days',\n      start: lastMonth,\n      end: today,\n    },\n  ];\n\n  return meta.map((field, i) => {\n    const { displayText, fieldName, inputType } = field;\n    const isSortField = sortFieldName === fieldName;\n    const sortIcon = isSortField ? sortIconForSortField : sortIcons[0];\n\n    return (\n      <th key={`${fieldName}-${i}`}>\n        <label\n          htmlFor={`filter-${fieldName}`}\n          onClick={() => onSort(fieldName)}\n        >\n          {`${displayText}`}\n          <Icon name={sortIcon} style={{ fontSize: '12px' }} />\n        </label>\n        {inputType === 'text' && (\n          <input\n            type=\"text\"\n            id={`filter-${fieldName}`}\n            className=\"form-control studylist-search\"\n            value={values[fieldName]}\n            onChange={e => onValueChange(fieldName, e.target.value)}\n          />\n        )}\n        {inputType === 'date-range' && (\n          // https://github.com/airbnb/react-dates\n          <CustomDateRangePicker\n            startDate={getDateEntry(modelDateFrom, defaultStartDate)}\n            startDateId=\"start-date\"\n            endDate={getDateEntry(modelDateTo, defaultEndDate)}\n            endDateId=\"end-date\"\n            onDatesChange={({ startDate, endDate, preset = false }) => {\n              onValueChange('modelDateFrom', startDate);\n              onValueChange('modelDateTo', endDate);\n            }}\n            focusedInput={focusedInput}\n            onFocusChange={updatedVal => setFocusedInput(updatedVal)}\n            // Optional\n            numberOfMonths={1} // For med and small screens? 2 for large?\n            showClearDates={true}\n            anchorDirection=\"left\"\n            presets={datePresets}\n            hideKeyboardShortcutsPanel={true}\n            isOutsideRange={day => !isInclusivelyBeforeDay(day, moment())}\n          />\n        )}\n      </th>\n    );\n  });\n}\n\nTableSearchFilter.propTypes = {\n  meta: PropTypes.arrayOf(\n    PropTypes.shape({\n      displayText: PropTypes.string.isRequired,\n      fieldName: PropTypes.string.isRequired,\n      inputType: PropTypes.oneOf(['text', 'date-range']).isRequired,\n      size: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  values: PropTypes.object.isRequired,\n  onSort: PropTypes.func.isRequired,\n  sortFieldName: PropTypes.string,\n  sortDirection: PropTypes.oneOf([null, 'asc', 'desc']),\n};\n\nTableSearchFilter.defaultProps = {};\n\nexport { TableSearchFilter };\nexport default TableSearchFilter;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport classNames from 'classnames';\nimport TableSearchFilter from './TableSearchFilter';\nimport { StudyListLoadingText } from '../../../ui/src/components/studyList/StudyListLoadingText.js';\nimport './ModelList.styl';\n\nfunction ModelList(props) {\n  const {\n    isLoading,\n    hasError,\n    models,\n    sort,\n    onSort: handleSort,\n    filterValues,\n    onFilterChange: handleFilterChange,\n    onSelectItem: handleSelectItem,\n    studyListDateFilterNumDays,\n    displaySize,\n  } = props;\n\n  const mediumTableMeta = [\n    {\n      displayText: 'ModelName',\n      fieldName: 'name',\n      inputType: 'text',\n      size: 200,\n    },\n    {\n      displayText: 'Version',\n      fieldName: 'version',\n      inputType: 'text',\n      size: 100,\n    },\n    {\n      displayText: 'Task',\n      fieldName: 'task',\n      inputType: 'text',\n      size: 200,\n    },\n    {\n      displayText: 'CreatedAt',\n      fieldName: 'created_at',\n      inputType: 'date-range',\n      size: 200,\n    },\n  ];\n\n  const totalSize = mediumTableMeta\n    .map(field => field.size)\n    .reduce((prev, next) => prev + next);\n\n  return (\n    <table className=\"modeltable table--striped table--hoverable\">\n      <colgroup>\n        {mediumTableMeta.map((field, i) => {\n          const size = field.size;\n          const percentWidth = (size / totalSize) * 100.0;\n\n          return <col key={i} style={{ width: `${percentWidth}%` }} />;\n        })}\n      </colgroup>\n      <thead className=\"table-head\">\n        <tr className=\"filters\">\n          <TableSearchFilter\n            meta={mediumTableMeta}\n            values={filterValues}\n            onSort={handleSort}\n            onValueChange={handleFilterChange}\n            sortFieldName={sort.fieldName}\n            sortDirection={sort.direction}\n            studyListDateFilterNumDays={studyListDateFilterNumDays}\n          />\n        </tr>\n      </thead>\n      <tbody className=\"table-body\">\n        {/* LOADING */}\n        {isLoading && (\n          <tr className=\"no-hover\">\n            <td colSpan={mediumTableMeta.length}>\n              <StudyListLoadingText />\n            </td>\n          </tr>\n        )}\n        {!isLoading && hasError && (\n          <tr className=\"no-hover\">\n            <td colSpan={mediumTableMeta.length}>\n              <div className=\"notFound\">\n                {'There was an error fetching models'}\n              </div>\n            </td>\n          </tr>\n        )}\n        {/* EMPTY */}\n        {!isLoading && !models.length && (\n          <tr className=\"no-hover\">\n            <td colSpan={mediumTableMeta.length}>\n              <div className=\"notFound\">{'No matching results'}</div>\n            </td>\n          </tr>\n        )}\n        {!isLoading &&\n          models.map((model, index) => (\n            <TableRow\n              key={`${model.name}-${index}`}\n              onClick={name => handleSelectItem(name)}\n              name={model.name}\n              version={model.version}\n              port={model.port || ''}\n              created_at={model.created_at}\n              task={model.task}\n              displaySize={displaySize}\n            />\n          ))}\n      </tbody>\n    </table>\n  );\n}\n\nfunction TableRow(props) {\n  const {\n    name,\n    version,\n    created_at,\n    task,\n    isHighlighted,\n    onClick: handleClick,\n  } = props;\n\n  const mediumRowTemplate = (\n    <tr\n      onClick={() => handleClick(name)}\n      className={classNames({ active: isHighlighted })}\n    >\n      <td\n        style={{\n          textAlign: 'center',\n        }}\n      >\n        {name}\n      </td>\n      <td>\n        <div\n          style={{\n            textAlign: 'center',\n            display: 'flex',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div\n            className=\"hide-xs\"\n            style={{\n              whiteSpace: 'pre-wrap',\n              flexGrow: 1,\n            }}\n          >\n            {version}\n          </div>\n        </div>\n      </td>\n      <td>\n        <div\n          style={{\n            textAlign: 'center',\n            display: 'flex',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div\n            className=\"hide-xs\"\n            style={{\n              whiteSpace: 'pre-wrap',\n              flexGrow: 1,\n            }}\n          >\n            {task}\n          </div>\n        </div>\n      </td>\n      {/* DATE */}\n      <td style={{ textAlign: 'center' }}>{created_at}</td>\n    </tr>\n  );\n\n  return mediumRowTemplate;\n}\n\nTableRow.defaultProps = {\n  isHighlighted: false,\n};\n\nexport { ModelList };\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './PaginationArea.styl';\n\nclass TablePagination extends PureComponent {\n  static defaultProps = {\n    pageOptions: [5, 10, 25, 50, 100],\n    rowsPerPage: 25,\n    currentPage: 0,\n  };\n\n  static propTypes = {\n    /* Values to show in \"Rows per page\" select dropdown */\n    pageOptions: PropTypes.array,\n    rowsPerPage: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    nextPageFunc: PropTypes.func,\n    prevPageFunc: PropTypes.func,\n    onRowsPerPageChange: PropTypes.func,\n    recordCount: PropTypes.number.isRequired,\n  };\n\n  nextPage = () => {\n    this.props.nextPageFunc(this.props.currentPage);\n  };\n\n  prevPage = () => {\n    this.props.prevPageFunc(this.props.currentPage);\n  };\n\n  onRowsPerPageChange = event => {\n    this.props.onRowsPerPageChange(parseInt(event.target.value));\n  };\n\n  renderPaginationButtons() {\n    return (\n      <div className=\"col-xs-8 col-sm-9 col-md-9\">\n        <div className=\"form-inline form-group page-buttons noselect\">\n          <React.Fragment>\n            <ul className=\"pagination-control no-margins\">\n              <li className=\"page-item prev\">\n                <button\n                  onClick={this.prevPage}\n                  disabled={this.props.currentPage === 0}\n                  className=\"btn page-link\"\n                >\n                  {'Previous'}\n                </button>\n              </li>\n              <li className=\"page-item next\">\n                <button\n                  onClick={this.nextPage}\n                  disabled={\n                    this.props.recordCount === 0 ||\n                    this.props.rowsPerPage > this.props.recordCount\n                  }\n                  className=\"btn page-link\"\n                >\n                  Next\n                </button>\n              </li>\n            </ul>\n          </React.Fragment>\n        </div>\n      </div>\n    );\n  }\n\n  renderRowsPerPageDropdown() {\n    return (\n      <div className=\"form-inline form-group rows-per-page\">\n        <span>Show</span>\n        <select\n          onChange={this.onRowsPerPageChange}\n          defaultValue={this.props.rowsPerPage}\n        >\n          {this.props.pageOptions.map(pageNumber => {\n            return (\n              <option key={pageNumber} value={pageNumber}>\n                {pageNumber}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"modelpagination-area\">\n        <div className=\"rows-dropdown\">{this.renderRowsPerPageDropdown()}</div>\n        <div className=\"pagination-buttons\">\n          <div className=\"form-inline form-group page-number pull-right\">\n            {this.renderPaginationButtons()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst connectedComponent = TablePagination;\nexport { connectedComponent as TablePagination };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TabFooter } from '@ohif/ui';\nimport { Form, Field } from '@progress/kendo-react-form';\nimport { Input, TextArea } from '@progress/kendo-react-inputs';\nimport axiosInstance from 'axios';\nimport { UINotificationService } from '@ohif/core';\nimport './ModelContent.styl';\n\nclass ModelContent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: false,\n      name: this.props.info[0].name,\n      version: this.props.info[0].version,\n      port: this.props.info[0].port,\n      algorithm_overview: this.props.info[0].algorithm_overview,\n      model_architecture: this.props.info[0].model_architecture,\n      model_performance: this.props.info[0].model_performance,\n      data_description: this.props.info[0].data_description,\n      input: this.props.info[0].input,\n      inputModality: this.props.info[0].inputModality,\n      output: this.props.info[0].output,\n      references: this.props.info[0].references,\n      additional_info: this.props.info[0].additional_info,\n      user: this.props.info[0].user,\n      task: this.props.info[0].task,\n      created_at: this.props.info[0].created_at,\n      last_modification_at: this.props.info[0].last_modification_at,\n      last_modification_by: this.props.info[0].last_modification_by,\n      visibility: this.props.info[0].visibility,\n      file: this.props.info[0].file,\n      bodyPart: this.props.info[0].bodyPart,\n    };\n  }\n\n  static propTypes = {\n    user: PropTypes.object,\n    info: PropTypes.array,\n    onClose: PropTypes.func,\n    history: PropTypes.object,\n  };\n\n  FormTextArea = fieldRenderProps => {\n    const { max, value, ...others } = fieldRenderProps;\n\n    return (\n      <div className={'k-form-field-wrap'}>\n        <TextArea\n          autoSize={true}\n          value={value}\n          maxLength={max}\n          rows={3}\n          {...others}\n        />\n\n        <div className=\"counter\">\n          {value.length} / {max}\n        </div>\n      </div>\n    );\n  };\n\n  CustomInput = ({ fieldType, ...others }) => {\n    return (\n      <div>\n        <Input type={fieldType} {...others} />\n        <this.ValidationMessage {...others} />\n      </div>\n    );\n  };\n\n  ValidationMessage = ({ valid, visited, validationMessage }) => {\n    return (\n      <>\n        {!valid && visited && (\n          <div className=\"required\">{validationMessage}</div>\n        )}\n      </>\n    );\n  };\n\n  requiredValidator = value => {\n    return value ? '' : 'This field is required';\n  };\n\n  onResetPreferences = () => {\n    this.setState({\n      redirect: false,\n      name: this.props.info[0].name,\n      version: this.props.info[0].version,\n      port: this.props.info[0].port,\n      algorithm_overview: this.props.info[0].algorithm_overview,\n      model_architecture: this.props.info[0].model_architecture,\n      model_performance: this.props.info[0].model_performance,\n      data_description: this.props.info[0].data_description,\n      input: this.props.info[0].input,\n      inputModality: this.props.info[0].inputModality,\n      output: this.props.info[0].output,\n      references: this.props.info[0].references,\n      additional_info: this.props.info[0].additional_info,\n      user: this.props.info[0].user,\n      task: this.props.info[0].task,\n      created_at: this.props.info[0].created_at,\n      visibility: this.props.info[0].visibility,\n      last_modification_at: this.props.info[0].last_modification_at,\n      last_modification_by: this.props.info[0].last_modification_by,\n      bodyPart: this.props.info[0].bodyPart,\n    });\n  };\n\n  onClose = () => {\n    this.props.onClose();\n  };\n\n  goToEditor = () => {\n    this.setState({ redirect: true });\n  };\n\n  deleteRecord = async () => {\n    let notification = UINotificationService.create({});\n    const response = await axiosInstance\n      .get(\n        `/api/model_delete/?algorithm=${this.state.name}`,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `JWT ${localStorage.getItem('access')}`,\n          },\n        }\n      )\n      .then(res => {\n        return res;\n      })\n      .catch(error => {\n        return error.response;\n      });\n\n    if (response.status === 200) {\n      notification.show({\n        title: 'Delete Algorithm',\n        message: 'Algorithm deleted - Success!',\n        type: 'success',\n        duration: 6000,\n      });\n      this.props.onClose();\n    } else if (response.status === 500) {\n      notification.show({\n        title: 'Delete Algorithm',\n        message: 'Failed to delete algorithm!',\n        type: 'error',\n        duration: 10000,\n      });\n    }\n  };\n\n  onSave = async formRenderProps => {\n    let notification = UINotificationService.create({});\n\n    let url = `/api/model/?user=${this.props.user.email}`;\n\n    let form_data = new FormData();\n\n    form_data.append('name', formRenderProps['name']);\n    form_data.append('port', formRenderProps['port']);\n    form_data.append('version', formRenderProps['version']);\n    form_data.append(\n      'algorithm_overview',\n      formRenderProps['algorithm_overview']\n    );\n    form_data.append(\n      'model_architecture',\n      formRenderProps['model_architecture']\n    );\n    form_data.append('model_performance', formRenderProps['model_performance']);\n    form_data.append('data_description', formRenderProps['data_description']);\n    form_data.append('input', formRenderProps['input']);\n    form_data.append('inputModality', formRenderProps['inputModality']);\n    form_data.append('output', formRenderProps['output']);\n    form_data.append('references', formRenderProps['references']);\n    form_data.append('additional_info', formRenderProps['additional_info']);\n    form_data.append('bodyPart', formRenderProps['bodyPart']);\n\n    const response = await axiosInstance\n      .put(url, form_data, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n        },\n      })\n      .then(res => {\n        return res;\n      })\n      .catch(error => {\n        return error.response;\n      });\n\n    if (response.status === 200) {\n      notification.show({\n        title: 'Edit Algorithm',\n        message: 'Algorithm edited - Success!',\n        type: 'success',\n        duration: 6000,\n      });\n    } else if (response.status === 500) {\n      notification.show({\n        title: 'Edit Algorithm',\n        message: 'Failed to edit algorithm!',\n        type: 'error',\n        duration: 10000,\n      });\n    }\n  };\n\n  render() {\n    let visibility = this.state.visibility;\n    let caption = '';\n    if (visibility === true) {\n      caption = 'Public';\n    } else if (visibility === false) {\n      caption = 'Private';\n    }\n    return (\n      <>\n        <div className=\"ModelContent\" data-cy=\"about-modal\">\n          <Form\n            initialValues={{\n              name: this.state.name,\n              version: this.state.version,\n              bodyPart: this.state.bodyPart,\n              algorithm_overview: this.state.algorithm_overview,\n              model_architecture: this.state.model_architecture,\n              model_performance: this.state.model_performance,\n              data_description: this.state.data_description,\n              input: this.state.input,\n              inputModality: this.state.inputModality,\n              output: this.state.output,\n              references: this.state.references,\n              additional_info: this.state.additional_info,\n              user: this.state.user,\n              task: this.state.task,\n              created_at: this.state.created_at,\n              visibility: this.state.visibility,\n              last_modification_at: this.state.last_modification_at,\n              last_modification_by: this.state.last_modification_by,\n            }}\n            onSubmit={this.onSave}\n            render={formRenderProps => (\n              <form className=\"formModel\" onSubmit={formRenderProps.onSubmit}>\n                <div className=\"header\">\n                  <button\n                    className=\"btn btn-danger pull-left\"\n                    onClick={this.goToEditor}\n                    title=\"Go to Code Editor\"\n                  >\n                    {'Edit code'}\n                  </button>\n\n                  <button\n                    className=\"btn btn-default\"\n                    onClick={this.deleteRecord}\n                    title=\"Delete Algorithm\"\n                  >\n                    {'Delete'}\n                  </button>\n                </div>\n                <table className=\"table table-responsive\">\n                  <tbody>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"title\">{'Algorithm Name'}</td>\n                      <td>\n                        <input\n                          style={{ textAlign: 'center' }}\n                          readOnly={true}\n                          type=\"text\"\n                          value={formRenderProps.valueGetter('name')}\n                          className={'preferencesInput'}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"title\">{'Task'}</td>\n                      <td>\n                        <input\n                          style={{ textAlign: 'center' }}\n                          readOnly={true}\n                          type=\"text\"\n                          value={formRenderProps.valueGetter('task')}\n                          className={'preferencesInput'}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"title\">{'Body Part Examined'}</td>\n                      <td>\n                        <input\n                          style={{ textAlign: 'center' }}\n                          readOnly={true}\n                          type=\"text\"\n                          value={formRenderProps.valueGetter('bodyPart')}\n                          className={'preferencesInput'}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"title\">{'Visibility'}</td>\n                      <td>\n                        <input\n                          style={{ textAlign: 'center' }}\n                          readOnly={true}\n                          type=\"text\"\n                          value={caption}\n                          className={'preferencesInput'}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"title\">{'Created At'}</td>\n                      <td>\n                        <input\n                          style={{ textAlign: 'center' }}\n                          readOnly={true}\n                          type=\"text\"\n                          value={formRenderProps.valueGetter('created_at')}\n                          className={'preferencesInput'}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"title\">{'Last Modification At'}</td>\n                      <td>\n                        <input\n                          style={{ textAlign: 'center' }}\n                          readOnly={true}\n                          type=\"text\"\n                          value={formRenderProps.valueGetter(\n                            'last_modification_at'\n                          )}\n                          className={'preferencesInput'}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"title\">{'Last Modification By'}</td>\n                      <td>\n                        <input\n                          style={{ textAlign: 'center' }}\n                          readOnly={true}\n                          type=\"text\"\n                          value={formRenderProps.valueGetter(\n                            'last_modification_by'\n                          )}\n                          className={'preferencesInput'}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"title\">{'Created By'}</td>\n                      <td>\n                        <input\n                          style={{ textAlign: 'center' }}\n                          readOnly={true}\n                          type=\"text\"\n                          value={formRenderProps.valueGetter('user')}\n                          className={'preferencesInput'}\n                        />\n                      </td>\n                    </tr>\n\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"title\">{'Version'}</td>\n                      <td>\n                        <input\n                          style={{ textAlign: 'center' }}\n                          readOnly={true}\n                          type=\"text\"\n                          value={formRenderProps.valueGetter('version')}\n                          className={'preferencesInput'}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"titleText\">{'Algorithm Overview'}</td>\n                      <td>\n                        <Field\n                          name=\"algorithm_overview\"\n                          max={500}\n                          value={formRenderProps.valueGetter(\n                            'algorithm_overview'\n                          )}\n                          component={this.FormTextArea}\n                          validator={[this.requiredValidator]}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"titleText\">{'Model Architecture'}</td>\n                      <td>\n                        <Field\n                          name=\"model_architecture\"\n                          max={500}\n                          value={formRenderProps.valueGetter(\n                            'model_architecture'\n                          )}\n                          component={this.FormTextArea}\n                          validator={[this.requiredValidator]}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"titleText\">{'Model Performance'}</td>\n\n                      <td>\n                        <Field\n                          name=\"model_performance\"\n                          max={500}\n                          value={formRenderProps.valueGetter(\n                            'model_performance'\n                          )}\n                          component={this.FormTextArea}\n                          validator={[this.requiredValidator]}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"titleText\">{'Data Description'}</td>\n\n                      <td>\n                        <Field\n                          name=\"data_description\"\n                          max={500}\n                          value={formRenderProps.valueGetter(\n                            'data_description'\n                          )}\n                          component={this.FormTextArea}\n                          validator={[this.requiredValidator]}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"titleText\">{'Input'}</td>\n\n                      <td>\n                        <Field\n                          name=\"input\"\n                          max={500}\n                          value={formRenderProps.valueGetter('input')}\n                          component={this.FormTextArea}\n                          validator={[this.requiredValidator]}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"title\">{'Input Modality'}</td>\n                      <td>\n                        <input\n                          style={{ textAlign: 'center' }}\n                          readOnly={true}\n                          type=\"text\"\n                          value={formRenderProps.valueGetter('inputModality')}\n                          className={'preferencesInput'}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"titleText\">{'References'}</td>\n\n                      <td>\n                        <Field\n                          name=\"references\"\n                          max={500}\n                          optional={true}\n                          value={formRenderProps.valueGetter('references')}\n                          component={this.FormTextArea}\n                          validator={[]}\n                        />\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: 'transparent' }}>\n                      <td className=\"titleText\">{'Additional Information'}</td>\n                      <td>\n                        <Field\n                          name=\"additional_info\"\n                          max={500}\n                          optional={true}\n                          value={formRenderProps.valueGetter('additional_info')}\n                          component={this.FormTextArea}\n                          validator={[]}\n                        />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n\n                <TabFooter\n                  onResetPreferences={formRenderProps.onFormReset}\n                  onSave={formRenderProps.onSubmit}\n                  hasErrors={!formRenderProps.allowSubmit}\n                  onCancel={this.onClose}\n                />\n                {this.state.redirect\n                  ? this.props.history.push({\n                      pathname: '/editor',\n                      state: {\n                        name: formRenderProps.valueGetter('name'),\n                        port: this.state.port,\n                        version: formRenderProps.valueGetter('version'),\n                        algorithm_overview: formRenderProps.valueGetter(\n                          'algorithm_overview'\n                        ),\n                        model_architecture: formRenderProps.valueGetter(\n                          'model_architecture'\n                        ),\n                        model_performance: formRenderProps.valueGetter(\n                          'model_performance'\n                        ),\n                        data_description: formRenderProps.valueGetter(\n                          'data_description'\n                        ),\n                        input: formRenderProps.valueGetter('input'),\n                        output: formRenderProps.valueGetter('output'),\n                        references: formRenderProps.valueGetter('references'),\n                        additional_info: formRenderProps.valueGetter(\n                          'additional_info'\n                        ),\n                        user: this.props.user.email,\n                        task: formRenderProps.valueGetter('task'),\n                        visibility: formRenderProps.valueGetter('visibility'),\n                        file: this.state.file,\n                        inputModality: formRenderProps.valueGetter(\n                          'inputModality'\n                        ),\n                        bodyPart: formRenderProps.valueGetter('bodyPart'),\n                      },\n                    })\n                  : null}\n              </form>\n            )}\n          ></Form>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nconst ConnectedModelContent = connect(\n  mapStateToProps,\n  null\n)(ModelContent);\n\nexport default ConnectedModelContent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Form, Field } from '@progress/kendo-react-form';\n\nimport { TextArea } from '@progress/kendo-react-inputs';\n\nclass ModelContentNoEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: false,\n      name: this.props.info[0].name,\n      version: this.props.info[0].version,\n      port: this.props.info[0].port,\n      algorithm_overview: this.props.info[0].algorithm_overview,\n      model_architecture: this.props.info[0].model_architecture,\n      model_performance: this.props.info[0].model_performance,\n      data_description: this.props.info[0].data_description,\n      input: this.props.info[0].input,\n      output: this.props.info[0].output,\n      references: this.props.info[0].references,\n      additional_info: this.props.info[0].additional_info,\n      user: this.props.info[0].user,\n      task: this.props.info[0].task,\n      created_at: this.props.info[0].created_at,\n      last_modification_at: this.props.info[0].last_modification_at,\n      last_modification_by: this.props.info[0].last_modification_by,\n      visibility: this.props.info[0].visibility,\n      file: this.props.info[0].file,\n    };\n  }\n\n  static propTypes = {\n    user: PropTypes.object,\n    info: PropTypes.array,\n    onClose: PropTypes.func,\n    history: PropTypes.object,\n  };\n\n  onClose = () => {\n    this.props.onClose();\n  };\n\n  FormTextArea = fieldRenderProps => {\n    const { max, value, ...others } = fieldRenderProps;\n\n    return (\n      <div className={'k-form-field-wrap'}>\n        <TextArea\n          readOnly={true}\n          autoSize={true}\n          value={value}\n          maxLength={max}\n          rows={3}\n          {...others}\n        />\n\n        <div className=\"counter\">\n          {value.length} / {max}\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    let visibility = this.state.visibility;\n    let caption = '';\n    if (visibility === true) {\n      caption = 'Public';\n    } else if (visibility === false) {\n      caption = 'Private';\n    }\n    return (\n      <>\n        <div className=\"ModelContent\" data-cy=\"about-modal\">\n          <Form\n            initialValues={{\n              name: this.state.name,\n              version: this.state.version,\n              port: this.state.port,\n              algorithm_overview: this.state.algorithm_overview,\n              model_architecture: this.state.model_architecture,\n              model_performance: this.state.model_performance,\n              data_description: this.state.data_description,\n              input: this.state.input,\n              output: this.state.output,\n              references: this.state.references,\n              additional_info: this.state.additional_info,\n              user: this.state.user,\n              task: this.state.task,\n              created_at: this.state.created_at,\n              visibility: this.state.visibility,\n              last_modification_at: this.state.last_modification_at,\n              last_modification_by: this.state.last_modification_by,\n            }}\n            render={formRenderProps => (\n              <table className=\"table table-responsive\">\n                <tbody>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"title\">{'Algorithm Name'}</td>\n                    <td>\n                      <input\n                        style={{ textAlign: 'center' }}\n                        readOnly={true}\n                        type=\"text\"\n                        value={formRenderProps.valueGetter('name')}\n                        className={'preferencesInput'}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"title\">{'Task'}</td>\n                    <td>\n                      <input\n                        style={{ textAlign: 'center' }}\n                        readOnly={true}\n                        type=\"text\"\n                        value={formRenderProps.valueGetter('task')}\n                        className={'preferencesInput'}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"title\">{'Visibility'}</td>\n                    <td>\n                      <input\n                        style={{ textAlign: 'center' }}\n                        readOnly={true}\n                        type=\"text\"\n                        value={caption}\n                        className={'preferencesInput'}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"title\">{'Created At'}</td>\n                    <td>\n                      <input\n                        style={{ textAlign: 'center' }}\n                        readOnly={true}\n                        type=\"text\"\n                        value={formRenderProps.valueGetter('created_at')}\n                        className={'preferencesInput'}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"title\">{'Last Modification At'}</td>\n                    <td>\n                      <input\n                        style={{ textAlign: 'center' }}\n                        readOnly={true}\n                        type=\"text\"\n                        value={formRenderProps.valueGetter(\n                          'last_modification_at'\n                        )}\n                        className={'preferencesInput'}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"title\">{'Last Modification By'}</td>\n                    <td>\n                      <input\n                        style={{ textAlign: 'center' }}\n                        readOnly={true}\n                        type=\"text\"\n                        value={formRenderProps.valueGetter(\n                          'last_modification_by'\n                        )}\n                        className={'preferencesInput'}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"title\">{'Created By'}</td>\n                    <td>\n                      <input\n                        style={{ textAlign: 'center' }}\n                        readOnly={true}\n                        type=\"text\"\n                        value={formRenderProps.valueGetter('user')}\n                        className={'preferencesInput'}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"title\">{'Port'}</td>\n                    <td>\n                      <input\n                        style={{ textAlign: 'center' }}\n                        readOnly={true}\n                        type=\"text\"\n                        value={formRenderProps.valueGetter('port')}\n                        className={'preferencesInput'}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"title\">{'Version'}</td>\n                    <td>\n                      <input\n                        style={{ textAlign: 'center' }}\n                        readOnly={true}\n                        type=\"text\"\n                        value={formRenderProps.valueGetter('version')}\n                        className={'preferencesInput'}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"titleText\">{'Algorithm Overview'}</td>\n                    <td>\n                      <Field\n                        name=\"algorithm_overview\"\n                        max={500}\n                        value={formRenderProps.valueGetter(\n                          'algorithm_overview'\n                        )}\n                        component={this.FormTextArea}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"titleText\">{'Model Architecture'}</td>\n                    <td>\n                      <Field\n                        name=\"model_architecture\"\n                        max={500}\n                        value={formRenderProps.valueGetter(\n                          'model_architecture'\n                        )}\n                        component={this.FormTextArea}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"titleText\">{'Model Performance'}</td>\n\n                    <td>\n                      <Field\n                        name=\"model_performance\"\n                        max={500}\n                        value={formRenderProps.valueGetter('model_performance')}\n                        component={this.FormTextArea}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"titleText\">{'Data Description'}</td>\n\n                    <td>\n                      <Field\n                        name=\"data_description\"\n                        max={500}\n                        value={formRenderProps.valueGetter('data_description')}\n                        component={this.FormTextArea}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"titleText\">{'Input'}</td>\n\n                    <td>\n                      <Field\n                        name=\"input\"\n                        max={500}\n                        value={formRenderProps.valueGetter('input')}\n                        component={this.FormTextArea}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"titleText\">{'References'}</td>\n\n                    <td>\n                      <Field\n                        name=\"references\"\n                        max={500}\n                        optional={true}\n                        value={formRenderProps.valueGetter('references')}\n                        component={this.FormTextArea}\n                      />\n                    </td>\n                  </tr>\n                  <tr style={{ backgroundColor: 'transparent' }}>\n                    <td className=\"titleText\">{'Additional Information'}</td>\n                    <td>\n                      <Field\n                        name=\"additional_info\"\n                        max={500}\n                        optional={true}\n                        value={formRenderProps.valueGetter('additional_info')}\n                        component={this.FormTextArea}\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            )}\n          ></Form>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nconst ConnectedModelContentNoEdit = connect(\n  mapStateToProps,\n  null\n)(ModelContentNoEdit);\n\nexport default ConnectedModelContentNoEdit;\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { ModelList } from './ModelList';\nimport { TablePagination } from './TablePagination';\nimport { useDebounce, useMedia, withModal } from '@ohif/ui';\nimport moment from 'moment';\nimport AppContext from '../context/AppContext';\nimport axiosInstance from 'axios';\nimport ModelContent from './ModelContent';\nimport ModelContentNoEdit from './ModelContentNoEdit';\n\nfunction ModelListRoute(props) {\n  const {\n    title,\n    group,\n    history,\n    user,\n    modal: { show, hide },\n  } = props;\n  const [sort, setSort] = useState({\n    fieldName: 'name',\n    direction: 'desc',\n  });\n  const [filterValues, setFilterValues] = useState({\n    modelDateTo: null,\n    modelDateFrom: null,\n    name: '',\n    version: '',\n    task: '',\n    group: group,\n  });\n  const [models, setModels] = useState([]);\n\n  const [searchStatus, setSearchStatus] = useState({\n    isSearchingForModels: false,\n    error: null,\n  });\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [pageNumber, setPageNumber] = useState(0);\n  const appContext = useContext(AppContext);\n  const displaySize = useMedia(\n    [\n      '(min-width: 1750px)',\n      '(min-width: 1000px) and (max-width: 1749px)',\n      '(max-width: 999px)',\n    ],\n    ['large', 'medium', 'small'],\n    'medium'\n  );\n\n  const debouncedSort = useDebounce(sort, 200);\n  const debouncedFilters = useDebounce(filterValues, 250);\n  const { appConfig = {} } = appContext;\n\n  useEffect(() => {\n    const fetchModels = async () => {\n      try {\n        setSearchStatus({ error: null, isSearchingForModels: true });\n\n        const response = await getModelList(\n          user,\n          debouncedFilters,\n          debouncedSort,\n          rowsPerPage\n        );\n\n        setModels(response);\n        setSearchStatus({ error: null, isSearchingForModels: false });\n      } catch (error) {\n        setSearchStatus({ error: true, isFetching: false });\n      }\n    };\n\n    fetchModels();\n  }, [\n    debouncedFilters,\n    debouncedSort,\n    rowsPerPage,\n    pageNumber,\n    displaySize,\n    user,\n  ]);\n\n  if (searchStatus.error) {\n    return <div>Error: {JSON.stringify(searchStatus.error)}</div>;\n  } else if (models === []) {\n    return <div>Loading...</div>;\n  }\n\n  function handleSort(fieldName) {\n    let sortFieldName = fieldName;\n    let sortDirection = 'asc';\n\n    if (fieldName === sort.fieldName) {\n      if (sort.direction === 'asc') {\n        sortDirection = 'desc';\n      } else {\n        sortFieldName = null;\n        sortDirection = null;\n      }\n    }\n\n    setSort({\n      fieldName: sortFieldName,\n      direction: sortDirection,\n    });\n  }\n\n  function handleFilterChange(fieldName, value) {\n    setFilterValues(state => {\n      return {\n        ...state,\n        [fieldName]: value,\n      };\n    });\n  }\n\n  function onClose() {\n    hide();\n  }\n\n  async function modelInfo(name) {\n    let url = `/api/model/?user=${user.email}&name=${name}`;\n\n    const response = await axiosInstance\n      .get(url, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n        },\n      })\n      .then(res => {\n        return res;\n      })\n      .catch(error => {\n        return error.response;\n      });\n\n    let info = response.data;\n\n    console.log(info);\n\n    let modelOwner = info[0]['user'];\n    let userPermissionsOnModel = info[0]['user_permissions'];\n\n    if (\n      modelOwner === user.email ||\n      userPermissionsOnModel.includes('Edit Models')\n    ) {\n      show({\n        content: ModelContent,\n        contentProps: {\n          info,\n          onClose,\n          history,\n        },\n        title: `${name}`,\n      });\n    } else {\n      show({\n        content: ModelContentNoEdit,\n        contentProps: {\n          info,\n          onClose,\n          history,\n        },\n        title: `${name}`,\n      });\n    }\n  }\n\n  return (\n    <>\n      <div className=\"model-list-header\">\n        <div className=\"header\">\n          {title ? (\n            <h1 style={{ fontWeight: 300, fontSize: '22px' }}>\n              {title}{' '}\n              <b>\n                <i>{group}</i>\n              </b>\n            </h1>\n          ) : (\n            <h1 style={{ fontWeight: 300, fontSize: '22px' }}>\n              <b>{user.email}</b>'s ModelList\n            </h1>\n          )}\n        </div>\n        <div className=\"actions\">\n          <span className=\"model-count\">{models.length}</span>\n        </div>\n      </div>\n      <div className=\"table-head-background\" />\n      <div className=\"model-list-container\">\n        <ModelList\n          isLoading={searchStatus.isSearchingForModels}\n          hasError={searchStatus.error === true}\n          models={models}\n          onSelectItem={name => {\n            modelInfo(name);\n          }}\n          // Table Header\n          sort={sort}\n          onSort={handleSort}\n          filterValues={filterValues}\n          onFilterChange={handleFilterChange}\n          modelListDateFilterNumDays={appConfig.studyListDateFilterNumDays}\n          displaySize={displaySize}\n        />\n        {/* PAGINATION FOOTER */}\n        <TablePagination\n          currentPage={pageNumber}\n          nextPageFunc={() => setPageNumber(pageNumber + 1)}\n          prevPageFunc={() => setPageNumber(pageNumber - 1)}\n          onRowsPerPageChange={Rows => setRowsPerPage(Rows)}\n          rowsPerPage={rowsPerPage}\n          recordCount={models.length}\n        />\n      </div>\n    </>\n  );\n}\n\nModelListRoute.propTypes = {\n  filters: PropTypes.object,\n  group: PropTypes.string,\n  user: PropTypes.object,\n  history: PropTypes.object,\n  modal: PropTypes.object,\n  title: PropTypes.string,\n};\n\nModelListRoute.defaultProps = {\n  group: '',\n};\n\nexport async function getModelList(user, filters, sort, rowsPerPage) {\n  const sortFieldName = sort.fieldName || 'name';\n  const sortDirection = sort.direction || 'desc';\n\n  const mappedFilters = {\n    name: filters.name,\n    version: filters.version,\n    task: filters.task,\n    modelDateFrom: filters.modelDateFrom,\n    modelDateTo: filters.modelDateTo,\n    group: filters.group,\n  };\n\n  const models = await _fetchModels(user, mappedFilters);\n\n  const sortedModels = _sortModels(models, sortFieldName, sortDirection);\n\n  const numToTake =\n    sortedModels.length < rowsPerPage ? sortedModels.length : rowsPerPage;\n  const result = sortedModels.slice(0, numToTake);\n\n  return result;\n}\n\nfunction _sortModels(models, field, order) {\n  const sortedModels = models.map(model => {\n    if (!moment(model.created_at, 'MMM DD, YYYY', true).isValid()) {\n      model.created_at = moment(model.created_at, 'YYYY-MM-DD').format(\n        'MMM DD, YYYY'\n      );\n    }\n    return model;\n  });\n\n  sortedModels.sort(function(a, b) {\n    let fieldA = a[field];\n    let fieldB = b[field];\n    if (field === 'created_at') {\n      fieldA = moment(fieldA).toISOString();\n      fieldB = moment(fieldB).toISOString();\n    }\n\n    // Order\n    if (order === 'desc') {\n      if (fieldA < fieldB) {\n        return -1;\n      }\n      if (fieldA > fieldB) {\n        return 1;\n      }\n      return 0;\n    } else {\n      if (fieldA > fieldB) {\n        return -1;\n      }\n      if (fieldA < fieldB) {\n        return 1;\n      }\n      return 0;\n    }\n  });\n\n  return sortedModels;\n}\n\nasync function _fetchModels(user, filters) {\n  let url = `/api/model/?user=${user.email}`;\n\n  Object.keys(filters).forEach(field => {\n    if (\n      filters[field] !== null &&\n      filters[field] !== '' &&\n      filters[field] !== undefined\n    ) {\n      let param = filters[field];\n      if (field === 'modelDateTo' || field === 'modelDateFrom') {\n        param = moment(param, 'MMM DD, YYYY').format('YYYY-MM-DD');\n      }\n      url = url + `&${field}=${param}`;\n    }\n  });\n\n  const response = await axiosInstance\n    .get(url, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n      },\n    })\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      return error.response;\n    });\n\n  return response.data;\n}\n\nexport default withRouter(withModal(ModelListRoute));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function ViewportErrorIndicator(props) {\n  return (\n    <div\n      className=\"loadingIndicator\"\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        margin: 'auto',\n        textAlign: 'center',\n        pointerEvents: 'none',\n      }}\n    >\n      <p>Error</p>\n      <p className=\"description\">An error has occurred.</p>\n      <p className=\"details\">{props.details}</p>\n    </div>\n  );\n}\n\nViewportErrorIndicator.propTypes = {\n  details: PropTypes.string,\n};\n\nexport default ViewportErrorIndicator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function ViewportLoadingIndicator(props) {\n  return (\n    <div\n      className=\"loading-indicator\"\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        margin: 'auto',\n        textAlign: 'center',\n        pointerEvents: 'none',\n      }}\n    >\n      Loading {props.percentComplete}\n    </div>\n  );\n}\n\nViewportLoadingIndicator.propTypes = {\n  percentComplete: PropTypes.number,\n};\n\nexport default ViewportLoadingIndicator;\n","/* global cornerstone */\nimport './ImageThumbnail.styl';\n\nimport { utils } from '@ohif/core';\nimport React, { useState, useEffect, createRef, useCallback } from 'react';\nimport classNames from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport ViewportErrorIndicator from '../../viewer/ViewportErrorIndicator';\nimport ViewportLoadingIndicator from '../../viewer/ViewportLoadingIndicator';\n\n// TODO: How should we have this component depend on Cornerstone?\n// - Passed in as a prop?\n// - Set as external dependency?\n// - Pass in the entire load and render function as a prop?\n//import cornerstone from 'cornerstone-core';\nfunction ImageThumbnail(props) {\n  const {\n    active,\n    width,\n    height,\n    imageSrc,\n    imageId,\n    stackPercentComplete,\n    error: propsError,\n    showProgressBar,\n  } = props;\n\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [image, setImage] = useState({});\n  const canvasRef = createRef();\n\n  let loadingOrError;\n  let cancelablePromise;\n\n  if (propsError || error) {\n    loadingOrError = <ViewportErrorIndicator />;\n  } else if (isLoading) {\n    loadingOrError = <ViewportLoadingIndicator />;\n  }\n\n  const showStackLoadingProgressBar =\n    showProgressBar && stackPercentComplete !== undefined;\n\n  const shouldRenderToCanvas = () => {\n    return imageId && !imageSrc;\n  };\n\n  const fetchImagePromise = () => {\n    if (!cancelablePromise) {\n      return;\n    }\n\n    setLoading(true);\n    cancelablePromise\n      .then(response => {\n        setImage(response);\n      })\n      .catch(error => {\n        if (error.isCanceled) return;\n        // setLoading(false);\n        // setError(true);\n        // throw new Error(error);\n      });\n  };\n\n  const setImagePromise = () => {\n    if (shouldRenderToCanvas()) {\n      cancelablePromise = utils.makeCancelable(\n        cornerstone.loadAndCacheImage(imageId)\n      );\n    }\n  };\n\n  const purgeCancelablePromise = useCallback(() => {\n    if (cancelablePromise) {\n      cancelablePromise.cancel();\n    }\n  });\n\n  useEffect(() => {\n    return () => {\n      purgeCancelablePromise();\n    };\n  }, [purgeCancelablePromise]);\n\n  useEffect(() => {\n    if (image.imageId) {\n      cornerstone.renderToCanvas(canvasRef.current, image);\n      setLoading(false);\n    }\n  }, [canvasRef, image, image.imageId]);\n\n  useEffect(() => {\n    if (!image.imageId || image.imageId !== imageId) {\n      purgeCancelablePromise();\n      setImagePromise();\n      fetchImagePromise();\n    }\n  }, [\n    fetchImagePromise,\n    image.imageId,\n    imageId,\n    purgeCancelablePromise,\n    setImagePromise,\n  ]);\n\n  return (\n    <div className={classNames('ImageThumbnail', { active: active })}>\n      <div className=\"image-thumbnail-canvas\">\n        {shouldRenderToCanvas() ? (\n          <canvas ref={canvasRef} width={width} height={height} />\n        ) : (\n          <img\n            className=\"static-image\"\n            src={imageSrc}\n            //width={this.props.width}\n            height={height}\n            alt={''}\n          />\n        )}\n      </div>\n      {loadingOrError}\n      {showStackLoadingProgressBar && (\n        <div className=\"image-thumbnail-progress-bar\">\n          <div\n            className=\"image-thumbnail-progress-bar-inner\"\n            style={{ width: `${stackPercentComplete}%` }}\n          />\n        </div>\n      )}\n      {isLoading && <div className=\"image-thumbnail-loading-indicator\"></div>}\n    </div>\n  );\n}\n\nImageThumbnail.propTypes = {\n  active: PropTypes.bool,\n  imageSrc: PropTypes.string,\n  imageId: PropTypes.string,\n  error: PropTypes.bool,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  stackPercentComplete: PropTypes.number.isRequired,\n  showProgressBar: PropTypes.bool,\n};\n\nImageThumbnail.defaultProps = {\n  active: false,\n  error: false,\n  stackPercentComplete: 0,\n  width: 217,\n  height: 123,\n  showProgressBar: true,\n};\n\nexport default ImageThumbnail;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport throttle from 'lodash.throttle';\nimport { useDrag } from 'react-dnd';\nimport { classes } from '@ohif/core';\nimport ImageThumbnail from './ImageThumbnail';\nimport classNames from 'classnames';\nimport { Icon } from './../../elements/Icon';\nimport { Tooltip } from './../tooltip';\nimport { OverlayTrigger } from './../overlayTrigger';\nimport './Thumbnail.styl';\n\nconst StudyLoadingListener = classes.StudyLoadingListener;\n\nfunction ThumbnailFooter({\n  SeriesDescription,\n  SeriesNumber,\n  numImageFrames,\n  hasWarnings,\n  hasDerivedDisplaySets,\n}) {\n  const [inconsistencyWarnings, inconsistencyWarningsSet] = useState([]);\n  const [derivedDisplaySetsActive, derivedDisplaySetsActiveSet] = useState([]);\n\n  useEffect(() => {\n    let unmounted = false;\n    hasWarnings.then(response => {\n      if (!unmounted) {\n        inconsistencyWarningsSet(response);\n      }\n    });\n    hasDerivedDisplaySets.then(response => {\n      if (!unmounted) {\n        derivedDisplaySetsActiveSet(response);\n      }\n    });\n    return () => {\n      unmounted = true;\n    };\n  }, [hasWarnings, hasDerivedDisplaySets]);\n\n  const infoOnly = !SeriesDescription;\n\n  const getInfo = (value, icon, className = '') => {\n    return (\n      <div className={classNames('item item-series', className)}>\n        <div className=\"icon\">{icon}</div>\n        <div className=\"value\">{value}</div>\n      </div>\n    );\n  };\n\n  const getWarningContent = inconsistencyWarnings => {\n    if (Array.isArray(inconsistencyWarnings)) {\n      const listedWarnings = inconsistencyWarnings.map((warn, index) => {\n        return <li key={index}>{warn}</li>;\n      });\n\n      return <ol>{listedWarnings}</ol>;\n    } else {\n      return <React.Fragment>{inconsistencyWarnings}</React.Fragment>;\n    }\n  };\n\n  const getWarningInfo = (SeriesNumber, inconsistencyWarnings) => {\n    return (\n      <React.Fragment>\n        {inconsistencyWarnings && inconsistencyWarnings.length != 0 ? (\n          <OverlayTrigger\n            key={SeriesNumber}\n            placement=\"left\"\n            overlay={\n              <Tooltip\n                placement=\"left\"\n                className=\"in tooltip-warning\"\n                id=\"tooltip-left\"\n              >\n                <div className=\"warningTitle\">Series Inconsistencies</div>\n                <div className=\"warningContent\">\n                  {getWarningContent(inconsistencyWarnings)}\n                </div>\n              </Tooltip>\n            }\n          >\n            <div className={classNames('warning')}>\n              <span className=\"warning-icon\">\n                <Icon name=\"exclamation-triangle\" />\n              </span>\n            </div>\n          </OverlayTrigger>\n        ) : (\n          <React.Fragment></React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  const getDerivedInfo = derivedDisplaySetsActive => {\n    return (\n      <React.Fragment>\n        {derivedDisplaySetsActive ? (\n          <div className=\"derived\">\n            <Icon name=\"link\" />\n          </div>\n        ) : (\n          <React.Fragment></React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  const getSeriesInformation = (\n    SeriesNumber,\n    numImageFrames,\n    inconsistencyWarnings,\n    derivedDisplaySetsActive\n  ) => {\n    if (!SeriesNumber && !numImageFrames) {\n      return;\n    }\n    const seriesInformation = (\n      <div className=\"series-information\">\n        <React.Fragment>\n          {SeriesNumber !== undefined ? (\n            getInfo(SeriesNumber, 'S:')\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n        </React.Fragment>\n        <React.Fragment>\n          {numImageFrames !== undefined ? (\n            getInfo(numImageFrames, '', 'image-frames')\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n        </React.Fragment>\n        {getDerivedInfo(derivedDisplaySetsActive)}\n        {getWarningInfo(SeriesNumber, inconsistencyWarnings)}\n      </div>\n    );\n\n    return seriesInformation;\n  };\n\n  return (\n    <div className={classNames('series-details', { 'info-only': infoOnly })}>\n      <div className=\"series-description\">{SeriesDescription}</div>\n      {getSeriesInformation(\n        SeriesNumber,\n        numImageFrames,\n        inconsistencyWarnings,\n        derivedDisplaySetsActive\n      )}\n    </div>\n  );\n}\n\nfunction Thumbnail(props) {\n  const {\n    active,\n    altImageText,\n    error,\n    displaySetInstanceUID,\n    imageId,\n    imageSrc,\n    StudyInstanceUID,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    supportsDrag,\n    showProgressBar,\n  } = props;\n\n  const [stackPercentComplete, setStackPercentComplete] = useState(0);\n  useEffect(() => {\n    const onProgressChange = throttle(({ detail }) => {\n      const { progressId, progressData } = detail;\n      if (`StackProgress:${displaySetInstanceUID}` === progressId) {\n        const percent = progressData ? progressData.percentComplete : 0;\n        if (percent > stackPercentComplete) {\n          setStackPercentComplete(percent);\n        }\n      }\n    }, 100);\n\n    document.addEventListener(\n      StudyLoadingListener.events.OnProgress,\n      onProgressChange\n    );\n\n    return () => {\n      document.removeEventListener(\n        StudyLoadingListener.events.OnProgress,\n        onProgressChange\n      );\n    };\n  }, [displaySetInstanceUID]);\n\n  const [collectedProps, drag, dragPreview] = useDrag({\n    // `droppedItem` in `dropTarget`\n    // The only data it will have access to\n    item: {\n      StudyInstanceUID,\n      displaySetInstanceUID,\n      type: 'thumbnail', // Has to match `dropTarget`'s type\n    },\n    canDrag: function(monitor) {\n      return supportsDrag;\n    },\n  });\n\n  const hasImage = imageSrc || imageId;\n  const hasAltText = altImageText !== undefined;\n\n  return (\n    <div\n      ref={drag}\n      className={classNames('thumbnail', { active: active })}\n      onClick={onClick}\n      onDoubleClick={onDoubleClick}\n      onMouseDown={onMouseDown}\n    >\n      {/* SHOW IMAGE */}\n      {hasImage && (\n        <ImageThumbnail\n          active={active}\n          imageSrc={imageSrc}\n          imageId={imageId}\n          error={error}\n          stackPercentComplete={stackPercentComplete}\n          showProgressBar={showProgressBar}\n        />\n      )}\n      {/* SHOW TEXT ALTERNATIVE */}\n      {!hasImage && hasAltText && (\n        <div className={'alt-image-text p-x-1'}>\n          <h1>{altImageText}</h1>\n        </div>\n      )}\n      {ThumbnailFooter(props)}\n    </div>\n  );\n}\n\nconst noop = () => {};\n\nThumbnail.propTypes = {\n  supportsDrag: PropTypes.bool,\n  id: PropTypes.string.isRequired,\n  displaySetInstanceUID: PropTypes.string.isRequired,\n  StudyInstanceUID: PropTypes.string.isRequired,\n  imageSrc: PropTypes.string,\n  imageId: PropTypes.string,\n  error: PropTypes.bool,\n  active: PropTypes.bool,\n  stackPercentComplete: PropTypes.number,\n  /**\n  altImageText will be used when no imageId or imageSrc is provided.\n  It will be displayed inside the <div>. This is useful when it is difficult\n  to make a preview for a type of DICOM series (e.g. DICOM-SR)\n  */\n  altImageText: PropTypes.string,\n  SeriesDescription: PropTypes.string,\n  SeriesNumber: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  hasWarnings: PropTypes.instanceOf(Promise),\n  hasDerivedDisplaySets: PropTypes.instanceOf(Promise),\n  numImageFrames: PropTypes.number,\n  onDoubleClick: PropTypes.func,\n  onClick: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  showProgressBar: PropTypes.bool,\n};\n\nThumbnail.defaultProps = {\n  supportsDrag: false,\n  active: false,\n  error: false,\n  stackPercentComplete: 0,\n  onDoubleClick: noop,\n  onClick: noop,\n  onMouseDown: noop,\n};\n\nexport { Thumbnail };\n","import { api } from 'dicomweb-client';\n\n/**\n * An implementation of the static wado client, that fetches data from\n * a static response rather than actually doing real queries.  This allows\n * fast encoding of test data, but because it is static, anything actually\n * performing searches doesn't work.  This version fixes the query issue\n * by manually implementing a query option.\n */\nexport default class StaticWadoClient extends api.DICOMwebClient {\n  static filterKeys = {\n    \"StudyInstanceUID\": \"0020000D\",\n    \"PatientName\": \"00100010\",\n    \"00100020\": \"mrn\",\n    \"PatientID\": \"00100020\",\n    \"StudyDescription\": \"00081030\",\n    \"StudyDate\": \"00080020\",\n    \"ModalitiesInStudy\": \"00080061\",\n    AccessionNumber: \"00080050\",\n  };\n\n  constructor(qidoConfig) {\n    super(qidoConfig);\n    this.staticWado = qidoConfig.staticWado;\n  }\n\n  /**\n   * Replace the search for studies remote query with a local version which\n   * retrieves a complete query list and then sub-selects from it locally.\n   * @param {*} options\n   * @returns\n   */\n  async searchForStudies(options) {\n    if (!this.staticWado) return super.searchForStudies(options);\n\n    let searchResult = await super.searchForStudies(options);\n    const { queryParams } = options;\n    if (!queryParams) return searchResult;\n    const filtered = searchResult.filter(study => {\n      for (const key of Object.keys(StaticWadoClient.filterKeys)) {\n        if (!this.filterItem(key, queryParams, study)) return false;\n      }\n      return true;\n    });\n    return filtered;\n  }\n\n  /**\n   * Compares values, matching any instance of desired to any instance of\n   * actual by recursively go through the paired set of values.  That is,\n   * this is O(m*n) where m is how many items in desired and n is the length of actual\n   * Then, at the individual item node, compares the Alphabetic name if present,\n   * and does a sub-string matching on string values, and otherwise does an\n   * exact match comparison.\n   *\n   * @param {*} desired\n   * @param {*} actual\n   * @returns true if the values match\n   */\n  compareValues(desired, actual) {\n    if (Array.isArray(desired)) {\n      return desired.find(item => this.compareValues(item, actual));\n    }\n    if (Array.isArray(actual)) {\n      return actual.find(actualItem => this.compareValues(desired, actualItem));\n    }\n    if (actual && actual.Alphabetic) {\n      actual = actual.Alphabetic;\n    }\n    if (typeof (actual) == 'string') {\n      if (actual.length === 0) return true;\n      if (desired.length === 0 || desired === '*') return true;\n      if (desired[0] === '*' && desired[desired.length - 1] === '*') {\n        console.log(`Comparing ${actual} to ${desired.substring(1, desired.length - 1)}`)\n        return actual.indexOf(desired.substring(1, desired.length - 1)) != -1;\n      } else if (desired[desired.length - 1] === '*') {\n        return actual.indexOf(desired.substring(0, desired.length - 1)) != -1;\n      } else if (desired[0] === '*') {\n        return actual.indexOf(desired.substring(1)) === actual.length - desired.length + 1;\n      }\n    }\n    return desired === actual;\n  }\n\n  /** Compares a pair of dates to see if the value is within the range */\n  compareDateRange(range, value) {\n    if (!value) return true;\n    const dash = range.indexOf('-');\n    if (dash === -1) return this.compareValues(range, value);\n    const start = range.substring(0, dash);\n    const end = range.substring(dash + 1);\n    return (!start || value >= start) &&\n      (!end || value <= end);\n  }\n\n  /**\n   * Filters the return list by the query parameters.\n   *\n   * @param {*} key\n   * @param {*} queryParams\n   * @param {*} study\n   * @returns\n   */\n  filterItem(key, queryParams, study) {\n    const altKey = StaticWadoClient.filterKeys[key] || key;\n    if (!queryParams) return true;\n    const testValue = queryParams[key] || queryParams[altKey];\n    if (!testValue) return true;\n    const valueElem = study[key] || study[altKey];\n    if (!valueElem) return false;\n    if (valueElem.vr == 'DA') return this.compareDateRange(testValue, valueElem.Value[0]);\n    const value = valueElem.Value;\n    return this.compareValues(testValue, value) && true;\n  }\n}\n","import React from 'react';\nimport { Icon } from './../../elements/Icon';\n\nfunction StudyListLoadingText() {\n  return (\n    <div className=\"loading-text\">\n      Loading... <Icon name=\"circle-notch\" animation=\"pulse\" />\n    </div>\n  );\n}\n\nconst connectedComponent = StudyListLoadingText;\n\nexport { connectedComponent as StudyListLoadingText };\n","import { createSelector } from 'reselect';\n\nconst getActiveViewportIndex = state => state.viewports.activeViewportIndex;\nconst getLayoutViewports = state => state.viewports.layout.viewports;\nconst getViewportSpecificData = state => state.viewports.viewportSpecificData;\n\n/**\n * Think of this as a computed getter for our store. It lets us watch parts of\n * our redux state, and only update/recalculate when those values change.\n */\nexport const getActiveContexts = createSelector(\n  [getActiveViewportIndex, getLayoutViewports, getViewportSpecificData],\n  (activeViewportIndex, layoutViewports, viewportSpecificData) => {\n    const activeContexts = ['VIEWER'];\n    const activeLayoutViewport = layoutViewports[activeViewportIndex] || {};\n    const activeViewportSpecificData =\n      viewportSpecificData[activeViewportIndex] || {};\n    const activeViewportPluginName =\n      activeLayoutViewport.plugin || activeViewportSpecificData.plugin;\n\n    if (activeViewportPluginName) {\n      const activeViewportExtension = `ACTIVE_VIEWPORT::${activeViewportPluginName.toUpperCase()}`;\n      activeContexts.push(activeViewportExtension);\n    }\n\n    return activeContexts;\n  }\n);\n","/* eslint-disable no-console */\nimport React from 'react';\nimport axios from 'axios';\n\nimport {\n  UPDATE_TOKEN,\n  INVESTIGATOR_LOGIN,\n  HEALTHPROFESSIONAL_LOGIN,\n  SUPERUSER_LOGIN_SUCCESS,\n  SUPERUSER_LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  SUPERUSER_AUTHENTICATED_SUCCESS,\n  SUPERUSER_AUTHENTICATED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  AUTHENTICATED_FAIL,\n  PASSWORD_RESET_SUCCESS,\n  PASSWORD_RESET_FAIL,\n  PASSWORD_RESET_CONFIRM_SUCCESS,\n  PASSWORD_RESET_CONFIRM_FAIL,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  GOOGLE_AUTH_SUCCESS,\n  GOOGLE_AUTH_FAIL,\n  FACEBOOK_AUTH_SUCCESS,\n  FACEBOOK_AUTH_FAIL,\n  GITHUB_AUTH_SUCCESS,\n  GITHUB_AUTH_FAIL,\n  LINKEDIN_AUTH_SUCCESS,\n  LINKEDIN_AUTH_FAIL,\n  SPOTIFY_AUTH_SUCCESS,\n  SPOTIFY_AUTH_FAIL,\n  USER_LOADED_APPS_SUCCESS,\n  USER_LOADED_APPS_FAIL,\n  LOGOUT,\n} from './types';\nimport Cookies from 'js-cookie';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst csrftoken = Cookies.get('csrftoken');\n\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        Accept: 'application/json',\n      },\n    };\n    try {\n      const res = await axios.get(\n        `/auth/users/me/`,\n        config\n      );\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL,\n    });\n  }\n};\n\nexport const updateToken = () => async dispatch => {\n  if (localStorage.getItem('access') && localStorage.getItem('refresh')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    };\n    const body = JSON.stringify({ refresh: localStorage.getItem('refresh') });\n\n    try {\n      const res = await axios.post(\n        `/auth/jwt/refresh/`,\n        body,\n        config\n      );\n\n      if (res.status === 200) {\n        dispatch({\n          type: UPDATE_TOKEN,\n          payload: res.data,\n        });\n      } else {\n        dispatch(logout());\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n};\n\nexport const load_user_apps = email => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n    },\n  };\n  if (localStorage.getItem('access')) {\n    dispatch({\n      type: USER_LOADED_APPS_SUCCESS,\n    });\n    try {\n      const res = await axios.get(\n        `/api/check_main_group?email=${email}`,\n        config\n      );\n      if (res.data.Group == 'investigators') {\n        try {\n          console.log('Sou investigator');\n          dispatch(loginInvestigator());\n          dispatch(load_user());\n        } catch (err) {\n          console.log(err);\n        }\n      } else {\n        try {\n          console.log('Sou médico');\n          dispatch(loginHealthProfessional());\n          dispatch(load_user());\n        } catch (err) {\n          console.log(err.message);\n        }\n      }\n\n      try {\n        const options = {\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            HTTP_X_CSRFTOKEN: csrftoken,\n          },\n        };\n\n        await axios.post(\n          `/api/set_social_apps/${email}`,\n          options\n        );\n      } catch (err) {\n        console.log(err.message);\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_APPS_FAIL,\n    });\n  }\n};\n\nexport const googleAuthenticate = (state, code) => async dispatch => {\n  if (state && code && !localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    };\n\n    const details = {\n      state: state,\n      code: code,\n    };\n\n    const formBody = Object.keys(details)\n      .map(\n        key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])\n      )\n      .join('&');\n\n    try {\n      const res = await axios.post(\n        `/auth/o/google-oauth2/?${formBody}`,\n        config\n      );\n\n      dispatch({\n        type: GOOGLE_AUTH_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(load_user());\n    } catch (err) {\n      dispatch({\n        type: GOOGLE_AUTH_FAIL,\n      });\n    }\n  }\n};\n\nexport const facebookAuthenticate = (state, code) => async dispatch => {\n  if (state && code && !localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    };\n\n    const details = {\n      state: state,\n      code: code,\n    };\n\n    const formBody = Object.keys(details)\n      .map(\n        key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])\n      )\n      .join('&');\n\n    try {\n      const res = await axios.post(\n        `/auth/o/facebook/?${formBody}`,\n        config\n      );\n\n      dispatch({\n        type: FACEBOOK_AUTH_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(load_user());\n    } catch (err) {\n      dispatch({\n        type: FACEBOOK_AUTH_FAIL,\n      });\n    }\n  }\n};\n\nexport const githubAuthenticate = (state, code) => async dispatch => {\n  if (state && code && !localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    };\n\n    const details = {\n      state: state,\n      code: code,\n    };\n\n    const formBody = Object.keys(details)\n      .map(\n        key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])\n      )\n      .join('&');\n\n    try {\n      const res = await axios.post(\n        `/auth/o/github/?${formBody}`,\n        config\n      );\n\n      dispatch({\n        type: GITHUB_AUTH_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(load_user());\n    } catch (err) {\n      dispatch({\n        type: GITHUB_AUTH_FAIL,\n      });\n    }\n  }\n};\n\nexport const linkedinAuthenticate = (state, code) => async dispatch => {\n  if (state && code && !localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    };\n\n    const details = {\n      state: state,\n      code: code,\n    };\n\n    const formBody = Object.keys(details)\n      .map(\n        key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])\n      )\n      .join('&');\n\n    try {\n      const res = await axios.post(\n        `/auth/o/linkedin-oauth2/?${formBody}`,\n        config\n      );\n      dispatch({\n        type: LINKEDIN_AUTH_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(load_user());\n    } catch (err) {\n      dispatch({\n        type: LINKEDIN_AUTH_FAIL,\n      });\n    }\n  }\n};\n\nexport const spotifyAuthenticate = (state, code) => async dispatch => {\n  if (state && code && !localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    };\n\n    const details = {\n      state: state,\n      code: code,\n    };\n\n    const formBody = Object.keys(details)\n      .map(\n        key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])\n      )\n      .join('&');\n\n    try {\n      const res = await axios.post(\n        `/auth/o/spotify/?${formBody}`,\n        config\n      );\n\n      dispatch({\n        type: SPOTIFY_AUTH_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(load_user());\n    } catch (err) {\n      dispatch({\n        type: SPOTIFY_AUTH_FAIL,\n      });\n    }\n  }\n};\n\nexport const checkAuthenticated = () => async dispatch => {\n  if (\n    localStorage.getItem('access') &&\n    localStorage.getItem('Authenticated') &&\n    localStorage.getItem('Investigator_Authenticated')\n  ) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    };\n\n    const body = JSON.stringify({ token: localStorage.getItem('access') });\n\n    try {\n      const res = await axios.post(\n        `/auth/jwt/verify/`,\n        body,\n        config\n      );\n\n      if (res.data.code !== 'token_not_valid') {\n        dispatch({\n          type: AUTHENTICATED_SUCCESS,\n        });\n        dispatch(loginInvestigator());\n      } else {\n        dispatch({\n          type: AUTHENTICATED_FAIL,\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n      });\n    }\n  } else if (\n    localStorage.getItem('access') &&\n    localStorage.getItem('Authenticated') &&\n    localStorage.getItem('HealthProfessional_Authenticated')\n  ) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    };\n\n    const body = JSON.stringify({ token: localStorage.getItem('access') });\n\n    try {\n      const res = await axios.post(\n        `/auth/jwt/verify/`,\n        body,\n        config\n      );\n\n      if (res.data.code !== 'token_not_valid') {\n        dispatch({\n          type: AUTHENTICATED_SUCCESS,\n        });\n        dispatch(loginHealthProfessional());\n      } else {\n        dispatch({\n          type: AUTHENTICATED_FAIL,\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n    });\n  }\n};\n\nexport const checkAuthenticated_Superuser = () => async dispatch => {\n  if (\n    localStorage.getItem('access') &&\n    localStorage.getItem('Superuser_Authenticated')\n  ) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    };\n\n    const body = JSON.stringify({ token: localStorage.getItem('access') });\n\n    try {\n      const res = await axios.post(\n        `/auth/jwt/verify/`,\n        body,\n        config\n      );\n\n      if (res.data.code !== 'token_not_valid') {\n        dispatch({\n          type: SUPERUSER_AUTHENTICATED_SUCCESS,\n        });\n      } else {\n        dispatch({\n          type: SUPERUSER_AUTHENTICATED_FAIL,\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: SUPERUSER_AUTHENTICATED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: SUPERUSER_AUTHENTICATED_FAIL,\n    });\n  }\n};\n\nexport const loginSuperuser = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\n      `/auth/jwt/create/`,\n      body,\n      config\n    );\n    dispatch({\n      type: SUPERUSER_LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: SUPERUSER_LOGIN_FAIL,\n    });\n    toast.error('Incorrect password! Please, try again.', {\n      position: 'top-right',\n      autoClose: 4000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    return (\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={10000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    );\n  }\n};\n\nexport const loginInvestigator = () => dispatch => {\n  dispatch({\n    type: INVESTIGATOR_LOGIN,\n  });\n};\n\nexport const loginHealthProfessional = () => dispatch => {\n  dispatch({\n    type: HEALTHPROFESSIONAL_LOGIN,\n  });\n};\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.get(\n      `/api/check_main_group_login/${email}`,\n      config\n    );\n    console.log('Pertenço ao grupo dos', res.data.Group);\n    if (res.data.Group == 'investigators') {\n      try {\n        const res = await axios.post(\n          `/auth/jwt/create/`,\n          body,\n          config\n        );\n        dispatch(loginInvestigator());\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: res.data,\n        });\n        dispatch(load_user());\n      } catch (err) {\n        dispatch({\n          type: LOGIN_FAIL,\n        });\n        toast.error('Incorrect password! Please, try again.', {\n          position: 'top-right',\n          autoClose: 4000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        return (\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={10000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        );\n      }\n    } else {\n      try {\n        const res = await axios.post(\n          `/auth/jwt/create/`,\n          body,\n          config\n        );\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: res.data,\n        });\n        dispatch(loginHealthProfessional());\n        dispatch(load_user());\n      } catch (err) {\n        dispatch({\n          type: LOGIN_FAIL,\n        });\n        toast.error('Incorrect password! Please, try again.', {\n          position: 'top-right',\n          autoClose: 4000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        return (\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={10000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        );\n      }\n    }\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\nexport const signup = (\n  first_name,\n  last_name,\n  email,\n  password,\n  re_password,\n  profession,\n  medical_certificate\n) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  };\n\n  let form_data = new FormData();\n  form_data.append('first_name', first_name);\n  form_data.append('last_name', last_name);\n  form_data.append('email', email);\n  form_data.append('password', password);\n  form_data.append('re_password', re_password);\n  form_data.append('profession', profession);\n\n  if (profession === 'Health Professional') {\n    form_data.append(\n      'medical_certificate',\n      medical_certificate,\n      medical_certificate.name\n    );\n  }\n  try {\n    const res = await axios.post(\n      `/auth/users/`,\n      form_data,\n      config\n    );\n    console.log('Post to Djoser users status:', res.status);\n    if (res.status === 201) {\n      const requestOptions = {\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          HTTP_X_CSRFTOKEN: csrftoken,\n        },\n        body: JSON.stringify({\n          email: email,\n          profession: profession,\n        }),\n      };\n\n      const options = {\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          HTTP_X_CSRFTOKEN: csrftoken,\n        },\n      };\n\n      try {\n        await axios.post(\n          `/api/add_main_group`,\n          requestOptions\n        );\n      } catch (err) {\n        alert(err.message);\n      }\n\n      try {\n        await axios.post(\n          `/api/encrypt_db/${email}`,\n          options\n        );\n      } catch (err) {\n        alert(err.message);\n      }\n\n      dispatch({\n        type: SIGNUP_SUCCESS,\n        payload: res.data,\n      });\n\n      toast.success(\n        'An account verification email was sent to ' +\n          email +\n          '. Please, check it!',\n        {\n          position: 'top-right',\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      return (\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      );\n    } else {\n      dispatch({\n        type: SIGNUP_FAIL,\n      });\n\n      toast.error('Failed to create an account with the email ' + email + '.', {\n        position: 'top-right',\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      return (\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      );\n    }\n  } catch (err) {\n    alert(err);\n    dispatch({\n      type: SIGNUP_FAIL,\n    });\n    toast.error('Failed to create an account with the email ' + email + '.', {\n      position: 'top-right',\n      autoClose: 10000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    return (\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    );\n  }\n};\n\nexport const verify = (uid, token) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ uid, token });\n\n  try {\n    await axios.post(\n      `/auth/users/activation/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: ACTIVATION_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIVATION_FAIL,\n    });\n  }\n};\n\nexport const reset_password = email => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email });\n\n  try {\n    await axios.post(\n      `/auth/users/reset_password/`,\n      body,\n      config\n    );\n    dispatch({\n      type: PASSWORD_RESET_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: PASSWORD_RESET_FAIL,\n    });\n  }\n};\n\nexport const reset_password_confirm = (\n  uid,\n  token,\n  new_password,\n  re_new_password\n) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n  try {\n    await axios.post(\n      `/auth/users/reset_password_confirm/`,\n      body,\n      config\n    );\n    dispatch({\n      type: PASSWORD_RESET_CONFIRM_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: PASSWORD_RESET_CONFIRM_FAIL,\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import React from 'react';\nimport adjust from './icons/adjust.svg';\n// Icons\nimport angleDoubleDown from './icons/angle-double-down.svg';\nimport angleDoubleUp from './icons/angle-double-up.svg';\nimport angleLeft from './icons/angle-left.svg';\nimport arrows from './icons/arrows.svg';\nimport arrowsAltH from './icons/arrows-alt-h.svg';\nimport arrowsAltV from './icons/arrows-alt-v.svg';\nimport bars from './icons/bars.svg';\nimport brain from './icons/brain.svg';\nimport brush from './icons/brush.svg';\nimport caretDown from './icons/caret-down.svg';\nimport caretUp from './icons/caret-up.svg';\nimport check from './icons/check.svg';\nimport checkCircle from './icons/check-circle.svg';\nimport checkCircleO from './icons/check-circle-o.svg';\nimport chevronDown from './icons/chevron-down.svg';\nimport circle from './icons/circle.svg';\nimport circleNotch from './icons/circle-notch.svg';\nimport circleO from './icons/circle-o.svg';\nimport clipboard from './icons/clipboard.svg';\nimport cog from './icons/cog.svg';\nimport createComment from './icons/create-comment.svg';\nimport createScreenCapture from './icons/create-screen-capture.svg';\nimport crosshairs from './icons/crosshairs.svg';\nimport cube from './icons/cube.svg';\nimport d3Rotate from './icons/3d-rotate.svg';\nimport database from './icons/database.svg';\nimport dotCircle from './icons/dot-circle.svg';\nimport edit from './icons/edit.svg';\nimport ellipseCircle from './icons/ellipse-circle.svg';\nimport ellipseH from './icons/ellipse-h.svg';\nimport ellipseV from './icons/ellipse-v.svg';\nimport exclamationCircle from './icons/exclamation-circle.svg';\nimport exclamationTriangle from './icons/exclamation-triangle.svg';\nimport fastBackward from './icons/fast-backward.svg';\nimport fastForward from './icons/fast-forward.svg';\nimport stop from './icons/stop.svg';\nimport info from './icons/info.svg';\nimport inlineEdit from './icons/inline-edit.svg';\nimport level from './icons/level.svg';\nimport link from './icons/link.svg';\nimport linkCircles from './icons/link-circles.svg';\nimport list from './icons/list.svg';\nimport liver from './icons/liver.svg';\nimport lock from './icons/lock.svg';\nimport lockAlt from './icons/lock-alt.svg';\nimport lung from './icons/lung.svg';\nimport measureNonTarget from './icons/measure-non-target.svg';\nimport measureTarget from './icons/measure-target.svg';\nimport measureTargetCr from './icons/measure-target-cr.svg';\nimport measureTargetNe from './icons/measure-target-ne.svg';\nimport measureTargetUn from './icons/measure-target-un.svg';\nimport measureTemp from './icons/measure-temp.svg';\nimport objectGroup from './icons/object-group.svg';\nimport ohifLogo from './icons/ohif-logo.svg';\nimport ohifTextLogo from './icons/ohif-text-logo.svg';\nimport oval from './icons/oval.svg';\nimport palette from './icons/palette.svg';\nimport play from './icons/play.svg';\nimport plus from './icons/plus.svg';\nimport powerOff from './icons/power-off.svg';\nimport reset from './icons/reset.svg';\nimport rotate from './icons/rotate.svg';\nimport rotateRight from './icons/rotate-right.svg';\nimport saveRegular from './icons/save-regular.svg';\nimport scissors from './icons/scissors.svg';\nimport search from './icons/search.svg';\nimport searchPlus from './icons/search-plus.svg';\nimport softTissue from './icons/soft-tissue.svg';\nimport sort from './icons/sort.svg';\nimport sortDown from './icons/sort-down.svg';\nimport sortUp from './icons/sort-up.svg';\nimport sphere from './icons/sphere.svg';\nimport squareO from './icons/square-o.svg';\nimport star from './icons/star.svg';\nimport stepBackward from './icons/step-backward.svg';\nimport stepForward from './icons/step-forward.svg';\nimport sun from './icons/sun.svg';\nimport th from './icons/th.svg';\nimport thLarge from './icons/th-large.svg';\nimport thList from './icons/th-list.svg';\nimport times from './icons/times.svg';\nimport trash from './icons/trash.svg';\nimport unlink from './icons/unlink.svg';\nimport user from './icons/user.svg';\nimport youtube from './icons/youtube.svg';\nimport eye from './icons/eye.svg';\nimport eyeClosed from './icons/eye-closed.svg';\nimport envelopeSquare from './icons/envelope-square.svg';\n\nconst ICONS = {\n  eye,\n  'eye-closed': eyeClosed,\n  brush,\n  scissors,\n  user,\n  sort,\n  th,\n  star,\n  'sort-up': sortUp,\n  sphere,\n  'sort-down': sortDown,\n  info,\n  cube,\n  crosshairs,\n  'dot-circle': dotCircle,\n  'angle-left': angleLeft,\n  '3d-rotate': d3Rotate,\n  plus,\n  'chevron-down': chevronDown,\n  'angle-double-down': angleDoubleDown,\n  'angle-double-up': angleDoubleUp,\n  'arrows-alt-h': arrowsAltH,\n  'arrows-alt-v': arrowsAltV,\n  bars,\n  'caret-down': caretDown,\n  'caret-up': caretUp,\n  'check-circle-o': checkCircleO,\n  check,\n  circle,\n  'circle-o': circleO,\n  times,\n  'create-comment': createComment,\n  'create-screen-capture': createScreenCapture,\n  edit,\n  'fast-backward': fastBackward,\n  'fast-forward': fastForward,\n  'object-group': objectGroup,\n  search,\n  'power-off': powerOff,\n  'inline-edit': inlineEdit,\n  list,\n  'ohif-logo': ohifLogo,\n  'ohif-text-logo': ohifTextLogo,\n  lock,\n  play,\n  database,\n  cog,\n  'circle-notch': circleNotch,\n  'square-o': squareO,\n  'check-circle': checkCircle,\n  'lock-alt': lockAlt,\n  'step-backward': stepBackward,\n  'step-forward': stepForward,\n  clipboard: clipboard,\n  stop,\n  'th-large': thLarge,\n  'th-list': thList,\n  sun,\n  palette,\n  youtube,\n  oval,\n  'ellipse-h': ellipseH,\n  'ellipse-v': ellipseV,\n  adjust,\n  level,\n  'link-circles': linkCircles,\n  'search-plus': searchPlus,\n  'measure-non-target': measureNonTarget,\n  'measure-target': measureTarget,\n  'measure-target-cr': measureTargetCr,\n  'measure-target-un': measureTargetUn,\n  'measure-target-ne': measureTargetNe,\n  'measure-temp': measureTemp,\n  'ellipse-circle': ellipseCircle,\n  arrows,\n  reset,\n  rotate,\n  'rotate-right': rotateRight,\n  trash,\n  unlink,\n  'exclamation-circle': exclamationCircle,\n  link,\n  'exclamation-triangle': exclamationTriangle,\n  brain,\n  'soft-tissue': softTissue,\n  lung,\n  liver,\n  save: saveRegular,\n  'envelope-square': envelopeSquare,\n};\n\n/**\n * Return the matching SVG Icon as a React Component.\n * Results in an inlined SVG Element. If there's no match,\n * return `null`\n */\nexport default function getIcon(key, props) {\n  if (!key || !ICONS[key]) {\n    return React.createElement('div', null, 'Missing Icon');\n  }\n\n  return React.createElement(ICONS[key], props);\n}\n\nexport { ICONS };\n","import './Icon.styl';\n\nimport PropTypes from 'prop-types';\nimport getIcon from './getIcon.js';\n\nconst Icon = props => {\n  return getIcon(props.name, props);\n};\n\nIcon.propTypes = {\n  /** The string name of the icon to display */\n  name: PropTypes.string.isRequired,\n};\n\nexport default Icon;\n","import { ICONS } from './getIcon.js';\nimport Icon from './Icon.js';\n\nexport { Icon, ICONS };\n","/* eslint-disable jsx-a11y/alt-text */\nimport React, { useState } from 'react';\nimport axios from 'axios';\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst Superuser = () => {\n  const [approval, setApproval] = React.useState('');\n  const [formData, setFormData] = useState({\n    img_data: '',\n    hasMedicalCertificate: false,\n    email: '',\n  });\n\n  const { img_data, hasMedicalCertificate, email } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    };\n    try {\n      const res = await axios.get(\n        `/api/get_url_medicalcertificate?email=${email}`,\n        config\n      );\n\n      if (res) {\n        setFormData({\n          ...formData,\n          hasMedicalCertificate: true,\n          img_data: res.data.Img,\n        });\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const onSubmit2 = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    };\n\n    let form_data = new FormData();\n    form_data.append('email', email);\n    form_data.append('approval', approval);\n    try {\n      const res = await axios.post(\n        `/api/change_approval`,\n        form_data,\n        config\n      );\n      alert(res.data['Status']);\n      location.reload();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  if (hasMedicalCertificate) {\n    return (\n      <div className=\"container\">\n        <h1>User {email} medical certificate:</h1>\n        <div\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n          style={{ marginTop: '80px' }}\n        >\n          <img src={img_data} />\n          <form onSubmit={e => onSubmit2(e)}>\n            <div className=\"form-group\">\n              <label style={{ marginTop: '20px' }}>\n                Medical certificate is:\n              </label>\n              <select\n                className=\"selectAlgorithm\"\n                name=\"task\"\n                value={approval}\n                onChange={e => setApproval(e.target.value)}\n                required\n              >\n                <option key=\"\"></option>\n                {['Approved', 'Not Approved'].map(type => (\n                  <option key={type}>{type}</option>\n                ))}\n              </select>\n            </div>\n            <button className=\"btn btn-primary\" type=\"submit\">\n              Register\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\">\n      <div\n        className=\"d-flex flex-column justify-content-center align-items-center\"\n        style={{ marginTop: '150px' }}\n      >\n        <h1>Please, enter the email of the user.</h1>\n        <br></br>\n        <form onSubmit={e => onSubmit(e)}>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Email*\"\n              name=\"email\"\n              value={email}\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>\n          <button\n            style={{ marginTop: '30px' }}\n            type=\"submit\"\n            className=\"btn btn-primary\"\n          >\n            Verify\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Superuser;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst TwoFA = ({ user }) => {\n  const [formData, setFormData] = useState({\n    status: false,\n    secret_key: '',\n  });\n\n  const { status, secret_key } = formData;\n\n  const getCode = async () => {\n    const config = {\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    };\n\n    let form_data = new FormData();\n    form_data.append('email', user.email);\n    try {\n      const res = await axios.post(\n        `/api/change_to2FA`,\n        form_data,\n        config\n      );\n\n      if (res.data.Status === true) {\n        setFormData({ ...formData, status: true });\n      } else {\n        setFormData({ ...formData, secret_key: res.data.secret_key });\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  if (status) {\n    return <h1 style={{ textAlign: 'center' }}>You already have a code!</h1>;\n  }\n\n  if (secret_key !== '') {\n    return (\n      <h1 style={{ textAlign: 'center' }}>\n        This is your secret key: {secret_key}. You must put it on Google\n        Authenticator. Save it in a <b>safe place</b>, because it will not\n        appear again!\n      </h1>\n    );\n  }\n  return (\n    <div style={{ margin: 'auto', padding: '10px' }} className=\"container mt-5\">\n      <h1>Change to 2 Factor Authentication?</h1>\n      <button\n        style={{ margin: 'auto', padding: '10px' }}\n        className=\"btn btn-danger mt-3\"\n        onClick={getCode}\n      >\n        Yes, get secret.\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(TwoFA);\n","/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst View_groups = ({ user }) => {\n  const [formData, setFormData] = useState({\n    seeGroups: true,\n    groupName: '',\n  });\n\n  const [groups, setGroups] = useState([]);\n\n  const { groupName } = formData;\n\n  useEffect(() => {\n    viewGroups();\n  }, [user, viewGroups]);\n\n  const viewGroups = async () => {\n    const config = {\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    };\n\n    const res = await axios.get(\n      `/api/check_user_groups?email=${user.email}`,\n      config\n    );\n    setGroups(res.data.Groups);\n    setFormData({ ...formData, seeGroups: false });\n  };\n\n  const groupDetails = name => {\n    setFormData({ ...formData, groupName: name });\n  };\n\n  if (groupName) {\n    const url = '/group_details/' + groupName + '/' + user['email'];\n    return <Redirect to={url} />;\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\n        <h1>{user.email}'s Groups</h1>\n        <br></br>\n        <Link title=\"Create New Group\" className=\"nav-link\" to=\"/add_group\">\n          Add Group\n        </Link>\n        <br></br>\n        {groups &&\n          groups.map((group, index) => {\n            return (\n              <div\n                key={index}\n                style={{ alignItems: 'center', margin: '20px 40px' }}\n              >\n                <button\n                  className=\"btn btn-primary\"\n                  title=\"View Group Details\"\n                  onClick={() => groupDetails(group.name)}\n                >\n                  {group.name}\n                </button>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(View_groups);\n","/* eslint-disable react/jsx-key */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst Group_details = ({ match, user }) => {\n  const [formData, setFormData] = useState({\n    seeDetails: true,\n    badUser: false,\n    userName: '',\n    mainUser: '',\n    groupName: match.params.name,\n    appUser: match.params.userName,\n  });\n\n  const {\n    seeDetails,\n    badUser,\n    userName,\n    mainUser,\n    groupName,\n    appUser,\n  } = formData;\n  const [users, setUsers] = useState([]);\n  const [permissions, setPermissions] = useState([]);\n  const [userSpecificPerms, setUserSpecificPerms] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    if (user && seeDetails) {\n      groupDetails();\n      if (\n        groupName !== 'health_professionals' &&\n        groupName !== 'investigators'\n      ) {\n        userDetails();\n      }\n    }\n  }, [user, seeDetails, groupDetails, userDetails]);\n\n  const userDetails = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n      };\n\n      const res = await axios.get(\n        `/api/see_permissions?group=${groupName}&email=${\n          user['email']\n        }&user=${user['email']}`,\n        config\n      );\n\n      if (res.data.Perms === \"You don't belong to this group!\") {\n        alert(\"You don't belong to this group!\");\n      } else {\n        setUserSpecificPerms(res.data.Perms);\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const groupDetails = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n      };\n\n      const res = await axios.get(\n        `/api/group_details?group=${groupName}&user=${\n          user['email']\n        }`,\n        config\n      );\n\n      if (res.data === \"You don't belong to this group!\") {\n        setFormData({ ...formData, badUser: true });\n      } else {\n        if (\n          groupName === 'health_professionals' ||\n          groupName === 'investigators'\n        ) {\n          setUsers(res.data.Users);\n          setFormData({ ...formData, seeDetails: false });\n        }\n        if (\n          groupName !== 'health_professionals' &&\n          groupName !== 'investigators' &&\n          res.data.mainUser !== appUser\n        ) {\n          setUsers(res.data.Users);\n          setPermissions(res.data.Permissions);\n          setFormData({\n            ...formData,\n            seeDetails: false,\n            mainUser: res.data.mainUser,\n          });\n        }\n        if (\n          groupName !== 'health_professionals' &&\n          groupName !== 'investigators' &&\n          res.data.mainUser === appUser\n        ) {\n          setUsers(res.data.Users);\n          setPermissions(res.data.Permissions);\n          setFormData({\n            ...formData,\n            seeDetails: false,\n            mainUser: res.data.mainUser,\n          });\n        }\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  if (badUser === true) {\n    return null;\n  }\n\n  const refresh = () => {\n    window.location.reload(false);\n  };\n\n  const deleteGroup = async groupName => {\n    if (user['email'] === mainUser) {\n      try {\n        const config = {\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('access')}`,\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n        };\n        let form_data = new FormData();\n        form_data.append('groupName', groupName);\n        form_data.append('mainUser', mainUser);\n        const res = await axios.post(\n          `/api/remove_group`,\n          form_data,\n          config\n        );\n        if (res.data.Status === true) {\n          alert(`Group ${groupName} was eliminated!`);\n          setRedirect(true);\n        } else {\n          alert(\"You can't delete this group!\");\n        }\n      } catch (err) {\n        alert(err);\n      }\n    } else {\n      alert(\"You can't delete this group!\");\n    }\n  };\n\n  const deleteRecord = async email => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n      };\n      let form_data = new FormData();\n      form_data.append('groupName', groupName);\n      form_data.append('users', JSON.stringify([email]));\n      form_data.append('appUser', JSON.stringify(user['email']));\n      const res = await axios.post(\n        `/api/remove_elements`,\n        form_data,\n        config\n      );\n\n      if (res.data.Status === true) {\n        alert(`User ${email} was/were eliminated!`);\n        refresh();\n      } else {\n        toast.error(`You don't belong to this group!`, {\n          position: 'top-right',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const add = () => (\n    <div\n      className=\"btn-toolbar\"\n      role=\"toolbar\"\n      aria-label=\"Toolbar with button groups\"\n      style={{\n        display: 'inline-block',\n        float: 'right',\n        marginTop: '-10px',\n      }}\n    >\n      <div className=\"btn-group btn-group-sm\" role=\"group\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n          style={{\n            borderRadius: '4px',\n            backgroundColor: 'white',\n          }}\n        >\n          {localStorage.getItem('Investigator_Authenticated') ? (\n            <Link\n              className=\"nav-link\"\n              to={{ pathname: '/add_models/' + groupName, state: groupName }}\n            >\n              Add/Remove models\n            </Link>\n          ) : localStorage.getItem('HealthProfessional_Authenticated') ? (\n            <Link\n              className=\"nav-link\"\n              to={{\n                pathname: '/add_remove_studies/' + groupName,\n                state: groupName,\n              }}\n            >\n              Add/Remove studies\n            </Link>\n          ) : null}\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n          style={{\n            borderRadius: '4px',\n            backgroundColor: 'white',\n            marginRight: '15px',\n          }}\n        >\n          <Link\n            className=\"nav-link\"\n            to={{ pathname: '/add_elements/' + groupName, state: users }}\n          >\n            Add users\n          </Link>\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n          style={{\n            borderRadius: '4px',\n            paddingTop: '12px',\n            paddingBottom: '12px',\n            paddingRight: '10px',\n            paddingLeft: '10px',\n            borderColor: '#708090',\n          }}\n          onClick={() => removeGroup(groupName)}\n        >\n          Remove Group{' '}\n        </button>\n      </div>\n    </div>\n  );\n\n  if (userName) {\n    const url = '/see_permissions/' + groupName + '/' + userName;\n    return <Redirect to={url} />;\n  }\n\n  const Msg = ({ closeToast, email }) => (\n    <Fragment>\n      <div\n        style={{\n          fontSize: '14px',\n          fontFamily: 'Helvetica',\n        }}\n      >\n        Are you sure you want to remove user <b>{email}</b> from group{' '}\n        <b>{groupName}</b>?\n      </div>\n      <div>\n        <button\n          style={{\n            fontSize: '14px',\n            fontFamily: 'Helvetica',\n            display: 'inline-block',\n            marginTop: '10px',\n            margin: '7px',\n            background: '#FFD700',\n            borderRadius: '6px',\n            padding: '8px 16px',\n          }}\n          onClick={() => deleteRecord(email)}\n        >\n          Yes\n        </button>\n        <button\n          style={{\n            fontSize: '14px',\n            fontFamily: 'Helvetica',\n            display: 'inline-block',\n            marginTop: '10px',\n            margin: '7px' /* space between buttons */,\n            background: '#FFD700' /* background color */,\n            borderRadius: '6px' /* rounded corners */,\n            padding: '8px 16px' /* space around text */,\n          }}\n          onClick={closeToast}\n        >\n          No\n        </button>\n      </div>\n    </Fragment>\n  );\n\n  const Msg2 = ({ closeToast, group }) => (\n    <Fragment>\n      <div\n        style={{\n          fontSize: '14px',\n          fontFamily: 'Helvetica',\n        }}\n      >\n        Are you sure you want to remove group <b>{group}</b>?\n      </div>\n      <div>\n        <button\n          style={{\n            fontSize: '14px',\n            fontFamily: 'Helvetica',\n            display: 'inline-block',\n            marginTop: '10px',\n            margin: '7px' /* space between buttons */,\n            background: '#FFD700' /* background color */,\n            borderRadius: '6px' /* rounded corners */,\n            padding: '8px 16px' /* space around text */,\n          }}\n          onClick={() => deleteGroup(group)}\n        >\n          Yes\n        </button>\n        <button\n          style={{\n            fontSize: '14px',\n            fontFamily: 'Helvetica',\n            display: 'inline-block',\n            marginTop: '10px',\n            margin: '7px' /* space between buttons */,\n            background: '#FFD700' /* background color */,\n            borderRadius: '6px' /* rounded corners */,\n            padding: '8px 16px' /* space around text */,\n          }}\n          onClick={closeToast}\n        >\n          No\n        </button>\n      </div>\n    </Fragment>\n  );\n\n  const removeGroup = groupName => {\n    toast.warn(<Msg2 group={groupName} />, {\n      position: 'top-right',\n      autoClose: 10000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  const remove = user => {\n    toast.warn(<Msg email={user} />, {\n      position: 'top-right',\n      autoClose: 10000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      {redirect ? <Redirect to={`/view_groups`} /> : <Fragment></Fragment>}\n      <div>\n        <h1 style={{ display: 'inline-block', marginTop: '-12px' }}>\n          <span style={{ fontFamily: 'Georgia', color: '#708090' }}>\n            Details of Group:{' '}\n          </span>\n          <span style={{ fontFamily: 'Georgia' }}>{groupName} </span>\n        </h1>\n        {groupName !== 'health_professionals' &&\n        groupName !== 'investigators' &&\n        mainUser === appUser\n          ? add()\n          : null}\n      </div>\n      <hr></hr>\n      {groupName !== 'health_professionals' &&\n      groupName !== 'investigators' &&\n      mainUser === appUser ? (\n        <div>\n          <br></br>\n          <h5\n            style={{\n              fontFamily: 'Georgia',\n              display: 'inline-block',\n              color: 'dodgerblue',\n            }}\n          >\n            Group Permissions:\n          </h5>\n\n          {permissions &&\n            permissions.map((permission, key) => {\n              return (\n                <b\n                  style={{\n                    display: 'inline-block',\n                    marginLeft: '10px',\n                  }}\n                  key={key}\n                >\n                  {permission.name}\n                  {permissions.length > 1 && key !== permissions.length - 1\n                    ? ','\n                    : '.'}\n                </b>\n              );\n            })}\n        </div>\n      ) : groupName !== 'health_professionals' &&\n        groupName !== 'investigators' &&\n        mainUser !== appUser ? (\n        <div>\n          <br></br>\n          <h5\n            style={{\n              fontFamily: 'Georgia',\n              display: 'inline-block',\n              color: 'dodgerblue',\n            }}\n          >\n            User Permissions:\n          </h5>\n\n          {userSpecificPerms &&\n            userSpecificPerms.map((permission, key) => {\n              return (\n                <>\n                  <b\n                    style={{\n                      display: 'inline-block',\n                      marginLeft: '10px',\n                    }}\n                    key={key}\n                  >\n                    {permission.name}{' '}\n                  </b>{' '}\n                  {permission.givenByGroup\n                    ? '(Group Permission)'\n                    : '(Individual Permission)'}\n                  {userSpecificPerms.length > 1 &&\n                  key !== userSpecificPerms.length - 1\n                    ? ','\n                    : '.'}\n                </>\n              );\n            })}\n        </div>\n      ) : null}\n      <br></br>\n      {localStorage.getItem('Investigator_Authenticated') ? (\n        <Link to={'/view_models/' + groupName}>Models shared</Link>\n      ) : (\n        <Link to={'/view_studies/' + groupName}>Studies shared</Link>\n      )}\n\n      <div\n        className=\"d-flex flex-column justify-content-center align-items-center\"\n        style={{\n          marginTop: '210px',\n          alignItems: 'center',\n          margin: '20px 60px',\n        }}\n      >\n        <div>\n          <h3 style={{ fontFamily: 'Georgia', textAlign: 'center' }}>Users:</h3>\n          <br></br>\n\n          <table className=\"table table-responsive\">\n            <thead className=\"table-head\">\n              <tr className=\"filters\">\n                <th style={{ textAlign: 'center' }}>\n                  <label>{'Name'}</label>\n                </th>\n                <th style={{ textAlign: 'center' }}>\n                  <label>{'Email'}</label>\n                </th>\n                {groupName !== 'health_professionals' &&\n                groupName !== 'investigators' ? (\n                  <>\n                    <th style={{ textAlign: 'center' }}>\n                      <label>{'Main User'}</label>\n                    </th>\n                    {mainUser === appUser && users.length > 1 ? (\n                      <th style={{ textAlign: 'center' }}>\n                        <label>{'Manage'}</label>\n                      </th>\n                    ) : null}\n                  </>\n                ) : null}\n              </tr>\n            </thead>\n            {users &&\n              users.map(userr => {\n                return (mainUser || userr.email === appUser) &&\n                  (groupName !== 'health_professionals' &&\n                    groupName !== 'investigators') ? (\n                  <tbody style={{ textAlign: 'center' }}>\n                    {userr.email === mainUser ? (\n                      <tr\n                        style={{\n                          fontFamily: 'Georgia',\n                          backgroundColor: '#708090',\n                        }}\n                      >\n                        <td className=\"title\">\n                          {userr.first_name} {userr.last_name}\n                        </td>\n                        <td>{mainUser}</td>\n                        <td>Yes</td>\n                      </tr>\n                    ) : (\n                      <tr\n                        style={{\n                          fontFamily: 'Georgia',\n                          backgroundColor: '#708090',\n                        }}\n                      >\n                        <td className=\"title\">\n                          {userr.first_name} {userr.last_name}\n                        </td>\n\n                        <td>{userr.email}</td>\n\n                        <td>No</td>\n                        {mainUser === appUser ? (\n                          <td style={{ backgroundColor: 'white' }}>\n                            <nav\n                              className=\"navbar navbar-expand-lg navbar-light\"\n                              style={{\n                                backgroundColor: '#ffffff',\n                                marginTop: '-35px',\n                              }}\n                            >\n                              <li className=\"nav-item\">\n                                <button\n                                  style={{\n                                    marginTop: '15px',\n                                    marginRight: '5px',\n                                  }}\n                                  onClick={() => remove(userr.email)}\n                                >\n                                  Remove from group\n                                </button>\n                              </li>\n\n                              <li className=\"nav-item\">\n                                <Link\n                                  className=\"nav-link\"\n                                  to={\n                                    '/add_permissions/' +\n                                    groupName +\n                                    '/' +\n                                    userr.email\n                                  }\n                                >\n                                  Add permissions\n                                </Link>\n                              </li>\n                              <li className=\"nav-item\">\n                                <Link\n                                  className=\"nav-link\"\n                                  to={\n                                    '/remove_permissions/' +\n                                    groupName +\n                                    '/' +\n                                    userr.email\n                                  }\n                                >\n                                  Remove permissions{' '}\n                                </Link>\n                              </li>\n                            </nav>\n                          </td>\n                        ) : null}\n                      </tr>\n                    )}\n                  </tbody>\n                ) : (\n                  <tbody>\n                    <tr\n                      style={{\n                        fontFamily: 'Georgia',\n                        backgroundColor: '#708090',\n                      }}\n                    >\n                      <td className=\"title\">\n                        {userr.first_name} {userr.last_name}\n                      </td>\n                      <td>{userr.email}</td>\n                    </tr>\n                  </tbody>\n                );\n              })}\n            ;\n          </table>\n        </div>\n      </div>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Group_details);\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ConnectedModelList from './../../../viewer/src/modelList/ConnectedModelList.js';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst View_models = ({ match }) => {\n  return (\n    <ConnectedModelList\n      title={'Models Shared By Group: '}\n      group={match.params.name}\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(View_models);\n","/* eslint-disable no-console */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst Add_permissions = ({ match, user }) => {\n  const [formData, setFormData] = useState({\n    seeDetails: true,\n    badUser: false,\n    userName: '',\n    name: match.params.name,\n    userEmail: match.params.user,\n  });\n\n  const { seeDetails, badUser, name, userEmail } = formData;\n  const [permissions, setPermissions] = useState([]);\n  const [selectedPermissions, setSelectedPermissions] = useState([]);\n\n  useEffect(() => {\n    if (user && seeDetails) {\n      userDetails(name, userEmail);\n    }\n  }, [seeDetails, user, userDetails]);\n\n  async function handleSubmit() {\n    if (selectedPermissions.length == 0) {\n      let text = document.getElementById('message1');\n      text.textContent = 'At least one permission must be selected!';\n    } else {\n      try {\n        const config = {\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('access')}`,\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n        };\n        let form_data = new FormData();\n        form_data.append('groupName', name);\n        form_data.append('user', userEmail);\n        form_data.append('permissions', JSON.stringify(selectedPermissions));\n        form_data.append('appUser', JSON.stringify(user['email']));\n        const res = await axios.post(\n          `/api/add_permissions`,\n          form_data,\n          config\n        );\n        if (res.data.Status === true) {\n          window.location.reload(false);\n          alert(userEmail + ' has now more permissions!');\n        } else {\n          alert(\"You don't belong to this group!\");\n        }\n      } catch (err) {\n        alert(err);\n      }\n    }\n  }\n\n  function handleChange(e, el) {\n    let inputElements = null;\n    let i = null;\n    if (e.target.name === 'permissions') {\n      inputElements = document.getElementsByClassName('permissions');\n      for (i = 0; inputElements[i]; ++i) {\n        if (inputElements[i].checked && !selectedPermissions.includes(el)) {\n          selectedPermissions.push(el);\n          break;\n        } else {\n          const index = selectedPermissions.indexOf(el);\n          if (index > -1) {\n            selectedPermissions.splice(index, 1);\n          }\n        }\n      }\n      setSelectedPermissions(selectedPermissions);\n      console.log(selectedPermissions);\n    }\n  }\n\n  const userDetails = async (name, userEmail) => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n      };\n      console.log(user['email']);\n      const res = await axios.get(\n        `/api/see_permissions?group=${name}&email=${userEmail}&user=${\n          user['email']\n        }`,\n        config\n      );\n\n      console.log(res.data.Perms);\n      if (res.data.Perms === \"You don't belong to this group!\") {\n        setFormData({ ...formData, badUser: true });\n      } else {\n        setPermissions(res.data.Perms);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (badUser === true) {\n    return null;\n  }\n\n  if (localStorage.getItem('Investigator_Authenticated')) {\n    let namePermissions = [];\n    permissions.forEach(permission => {\n      namePermissions.push(permission['name']);\n    });\n\n    let availablePerms = ['Test Models', 'Edit Models'];\n    return (\n      <div className=\"container\">\n        <div\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n          style={{ marginTop: '20px' }}\n        >\n          <h2 style={{ fontFamily: 'Georgia', color: 'dodgerblue' }}>\n            User Permissions:\n          </h2>\n          {userEmail &&\n            permissions &&\n            permissions.map((permission, i) => {\n              return (\n                <div\n                  key={i}\n                  style={{ alignItems: 'center', margin: '10px 40px' }}\n                >\n                  <p>\n                    <b>{permission['name']} </b>\n                    {permission['givenByGroup'] ? '(Group permission)' : null}\n                  </p>\n                </div>\n              );\n            })}\n          <div className=\"container mt-5\">\n            <h1 style={{ fontFamily: 'Georgia', color: 'dodgerblue ' }}>\n              Add permission/s to user: <i>{userEmail}</i>\n            </h1>\n            <hr></hr>\n            <div>\n              {userEmail &&\n                availablePerms.map((perm, i) => {\n                  return !namePermissions.includes(perm) ? (\n                    <div className=\"form-group\" key={i}>\n                      <label>{perm}</label>\n                      <input\n                        className=\"permissions\"\n                        name=\"permissions\"\n                        id=\"permissions\"\n                        type=\"checkbox\"\n                        onChange={e => {\n                          handleChange(e, perm);\n                        }}\n                      />\n                    </div>\n                  ) : null;\n                })}\n              <div\n                className=\"message\"\n                id=\"message1\"\n                style={{ color: 'red' }}\n              ></div>\n            </div>\n\n            <br></br>\n            <button onClick={() => handleSubmit()}>Add</button>\n          </div>\n        </div>\n      </div>\n    );\n  } else if (localStorage.getItem('HealthProfessional_Authenticated')) {\n    let namePermissions = [];\n    permissions.forEach(permission => {\n      namePermissions.push(permission['name']);\n    });\n\n    let availablePerms = ['View Studies Metadata', 'Edit Studies'];\n    return (\n      <div className=\"container\">\n        <div\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n          style={{ marginTop: '20px' }}\n        >\n          <h2 style={{ fontFamily: 'Georgia', color: 'dodgerblue ' }}>\n            User Permissions:\n          </h2>\n          {userEmail &&\n            permissions &&\n            permissions.map((permission, i) => {\n              return (\n                <div\n                  key={i}\n                  style={{ alignItems: 'center', margin: '10px 40px' }}\n                >\n                  <p>\n                    <b>{permission['name']} </b>\n                    {permission['givenByGroup'] ? '(Group permission)' : null}\n                  </p>\n                </div>\n              );\n            })}\n          <div className=\"container mt-5\">\n            <h1 style={{ fontFamily: 'Georgia', color: 'dodgerblue ' }}>\n              Add permission/s to user: <i>{userEmail}</i>\n            </h1>\n            <hr></hr>\n            <div>\n              {userEmail &&\n                availablePerms.map((perm, i) => {\n                  return !namePermissions.includes(perm) ? (\n                    <div className=\"form-group\" key={i}>\n                      <label>{perm}</label>\n                      <input\n                        className=\"permissions\"\n                        name=\"permissions\"\n                        id=\"permissions\"\n                        type=\"checkbox\"\n                        onChange={e => {\n                          handleChange(e, perm);\n                        }}\n                      />\n                    </div>\n                  ) : null;\n                })}\n              <div\n                className=\"message\"\n                id=\"message1\"\n                style={{ color: 'red' }}\n              ></div>\n            </div>\n\n            <br></br>\n            <button onClick={() => handleSubmit()}>Add</button>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Add_permissions);\n","/* eslint-disable no-console */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst Remove_permissions = ({ match, user }) => {\n  const [formData, setFormData] = useState({\n    seeDetails: true,\n    badUser: false,\n    userName: '',\n  });\n\n  const { seeDetails, badUser } = formData;\n\n  const [permissions, setPermissions] = useState([]);\n  const [selectedPermissions, setSelectedPermissions] = useState([]);\n\n  useEffect(() => {\n    const name = match.params.name;\n    const userEmail = match.params.user;\n    if (seeDetails) {\n      userDetails(name, userEmail);\n    }\n  }, [match.params.name, match.params.user, seeDetails, user, userDetails]);\n\n  async function handleSubmit() {\n    if (selectedPermissions.length == 0) {\n      let text = document.getElementById('message1');\n      text.textContent = 'At least one permission must be selected!';\n    } else {\n      const name = match.params.name;\n      const userEmail = match.params.user;\n\n      try {\n        const config = {\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('access')}`,\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n        };\n        let form_data = new FormData();\n        form_data.append('groupName', name);\n        form_data.append('user', userEmail);\n        form_data.append('permissions', JSON.stringify(selectedPermissions));\n        form_data.append('appUser', JSON.stringify(user['email']));\n        const res = await axios.post(\n          `/api/remove_permissions`,\n          form_data,\n          config\n        );\n        if (res.data.Status === true) {\n          window.location.reload(false);\n          alert(userEmail + ' has now less permissions!');\n        } else {\n          alert(\"You don't belong to this group!\");\n        }\n      } catch (err) {\n        alert(err);\n      }\n    }\n  }\n\n  function handleChange(e, el) {\n    let inputElements = null;\n    let i = null;\n    if (e.target.name === 'permissions') {\n      inputElements = document.getElementsByClassName('permissions');\n      for (i = 0; inputElements[i]; ++i) {\n        if (inputElements[i].checked && !selectedPermissions.includes(el)) {\n          selectedPermissions.push(el);\n          break;\n        } else {\n          const index = selectedPermissions.indexOf(el);\n          if (index > -1) {\n            selectedPermissions.splice(index, 1);\n          }\n        }\n      }\n      setSelectedPermissions(selectedPermissions);\n      console.log(selectedPermissions);\n    }\n  }\n\n  const userDetails = async (name, userEmail) => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n      };\n      console.log(user['email']);\n      const res = await axios.get(\n        `/api/see_permissions?group=${name}&email=${userEmail}&user=${\n          user['email']\n        }`,\n        config\n      );\n\n      console.log(res.data.Perms);\n      if (res.data.Perms === \"You don't belong to this group!\") {\n        setFormData({ ...formData, badUser: true });\n      } else {\n        setPermissions(res.data.Perms);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (badUser === true) {\n    return (\n      <div>\n        <h1>You do not belong to this group!</h1>\n      </div>\n    );\n  }\n\n  const userEmail = match.params.user;\n\n  if (localStorage.getItem('Investigator_Authenticated')) {\n    let namePermissions = [];\n    permissions.forEach(permission => {\n      if (!permission['givenByGroup']) {\n        namePermissions.push(permission['name']);\n      }\n    });\n\n    console.log(namePermissions);\n    let availablePerms = ['Test Models', 'Edit Models'];\n    return (\n      <div className=\"container\">\n        <div\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n          style={{ marginTop: '20px' }}\n        >\n          <h2 style={{ fontFamily: 'Georgia', color: 'dodgerblue ' }}>\n            User Permissions:\n          </h2>\n          {permissions &&\n            permissions.map((permission, i) => {\n              return (\n                <div\n                  key={i}\n                  style={{ alignItems: 'center', margin: '10px 40px' }}\n                >\n                  <p>\n                    <b>{permission['name']} </b>\n                    {permission['givenByGroup'] ? '(Group permission)' : null}\n                  </p>\n                </div>\n              );\n            })}\n          <div className=\"container mt-5\">\n            <h1 style={{ fontFamily: 'Georgia', color: 'dodgerblue ' }}>\n              Remove permission/s of user: <i>{userEmail}</i>\n            </h1>\n            <hr></hr>\n            <div>\n              {availablePerms.map((perm, i) => {\n                return namePermissions.includes(perm) ? (\n                  <div className=\"form-group\" key={i}>\n                    <label>{perm}</label>\n                    <input\n                      className=\"permissions\"\n                      name=\"permissions\"\n                      id=\"permissions\"\n                      type=\"checkbox\"\n                      onChange={e => {\n                        handleChange(e, perm);\n                      }}\n                    />\n                  </div>\n                ) : null;\n              })}\n              <div\n                className=\"message\"\n                id=\"message1\"\n                style={{ color: 'red' }}\n              ></div>\n            </div>\n\n            <br></br>\n            <button onClick={() => handleSubmit()}>Remove</button>\n          </div>\n        </div>\n      </div>\n    );\n  } else if (localStorage.getItem('HealthProfessional_Authenticated')) {\n    let namePermissions = [];\n    permissions.forEach(permission => {\n      if (!permission['givenByGroup']) {\n        namePermissions.push(permission['name']);\n      }\n    });\n\n    console.log(namePermissions);\n    let availablePerms = ['View Studies Metadata', 'Edit Studies'];\n    return (\n      <div className=\"container\">\n        <div\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n          style={{ marginTop: '20px' }}\n        >\n          <h2 style={{ fontFamily: 'Georgia', color: 'dodgerblue ' }}>\n            User Permissions:\n          </h2>\n          {permissions &&\n            permissions.map((permission, i) => {\n              return (\n                <div\n                  key={i}\n                  style={{ alignItems: 'center', margin: '10px 40px' }}\n                >\n                  <p>\n                    <b>{permission['name']} </b>\n                    {permission['givenByGroup'] ? '(Group permission)' : null}\n                  </p>\n                </div>\n              );\n            })}\n          <div className=\"container mt-5\">\n            <h1 style={{ fontFamily: 'Georgia', color: 'dodgerblue ' }}>\n              Remove permission/s of user: <i>{userEmail}</i>\n            </h1>\n            <hr></hr>\n            <div>\n              {availablePerms.map((perm, i) => {\n                return namePermissions.includes(perm) ? (\n                  <div className=\"form-group\" key={i}>\n                    <label>{perm}</label>\n                    <input\n                      className=\"permissions\"\n                      name=\"permissions\"\n                      id=\"permissions\"\n                      type=\"checkbox\"\n                      onChange={e => {\n                        handleChange(e, perm);\n                      }}\n                    />\n                  </div>\n                ) : null;\n              })}\n              <div\n                className=\"message\"\n                id=\"message1\"\n                style={{ color: 'red' }}\n              ></div>\n            </div>\n\n            <br></br>\n            <button onClick={() => handleSubmit()}>Remove</button>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Remove_permissions);\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axiosInstance from 'axios';\nimport axios from 'axios';\nimport { Form, Field } from '@progress/kendo-react-form';\nimport { Input } from '@progress/kendo-react-inputs';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { TableSearchFilter, TablePagination } from '@ohif/ui';\nimport './Add_group.css';\nimport { getModelList } from './../../../viewer/src/modelList/ModelListRoute.js';\nimport { useDebounce } from '@ohif/ui';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nfunction NewGroup(props) {\n  const { user } = props;\n  const [models, setModels] = useState([]);\n  const [selectedModels, setSelectedModels] = useState([]);\n  const [studies, setStudies] = useState([]);\n  const [selectedStudies, setSelectedStudies] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [permissions, setPermissions] = useState([]);\n  const [selectedPermissions, setSelectedPermissions] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [filterValues, setFilterValues] = useState({\n    patient_name: '',\n    patient_id: '',\n    study_date: '',\n  });\n\n  const [filterValuesUsers, setFilterValuesUsers] = useState({\n    email: '',\n    first_name: '',\n    last_name: '',\n  });\n\n  const [sort] = useState({\n    fieldName: 'name',\n    direction: 'desc',\n  });\n\n  const [filterValuesModels, setFilterValuesModels] = useState({\n    name: '',\n    version: '',\n    task: '',\n  });\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [pageNumber, setPageNumber] = useState(0);\n  const debouncedSort = useDebounce(sort, 200);\n  const debouncedFilters = useDebounce(filterValuesModels, 250);\n\n  useEffect(() => {\n    const fetchStudies = async () => {\n      try {\n        const response = await _fetchStudies(user, filterValues);\n\n        let studies = [];\n        response.forEach(function(study) {\n          if (!studies.includes(study) && study['user'] === user.email) {\n            studies.push(study);\n          }\n        });\n\n        setStudies(studies);\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    const fetchModels = async () => {\n      try {\n        const response = await getModelList(\n          user,\n          debouncedFilters,\n          debouncedSort,\n          rowsPerPage\n        );\n\n        let models = [];\n        response.forEach(function(model) {\n          if (!models.includes(model) && model['user'] === user.email) {\n            models.push(model);\n          }\n        });\n\n        setModels(models);\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    const fetchUsers = async group => {\n      try {\n        const response = await _getUsers(user, group, filterValuesUsers);\n\n        let users = [];\n        let mainUser = user.email;\n        response.forEach(function(person) {\n          let userData = {\n            email: person.email,\n            first_name: person.first_name,\n            last_name: person.last_name,\n          };\n          if (person.email !== mainUser && !users.includes(userData)) {\n            users.push(userData);\n          }\n        });\n        setUsers(users);\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    let group = '';\n    if (user && localStorage.getItem('HealthProfessional_Authenticated')) {\n      group = 'health_professionals';\n      fetchStudies();\n      fetchUsers(group);\n      setPermissions(['View Studies Metadata', 'Edit Studies']);\n    } else if (user && localStorage.getItem('Investigator_Authenticated')) {\n      group = 'investigators';\n      fetchModels();\n      fetchUsers(group);\n      setPermissions(['Test Models', 'Edit Models']);\n    }\n  }, [\n    debouncedFilters,\n    debouncedSort,\n    filterValues,\n    filterValuesModels,\n    filterValuesUsers,\n    rowsPerPage,\n    user,\n  ]);\n\n  const mediumTableMeta = [\n    {\n      displayText: 'PatientName',\n      fieldName: 'patient_name',\n      inputType: 'text',\n      size: 50,\n    },\n    {\n      displayText: 'PatientId',\n      fieldName: 'patient_id',\n      inputType: 'text',\n      size: 50,\n    },\n    {\n      displayText: 'StudyDate',\n      fieldName: 'study_date',\n      inputType: 'text',\n      size: 100,\n    },\n  ];\n\n  const mediumTableMetaUsers = [\n    {\n      displayText: 'First Name',\n      fieldName: 'first_name',\n      inputType: 'text',\n      size: 80,\n    },\n    {\n      displayText: 'Last Name',\n      fieldName: 'last_name',\n      inputType: 'text',\n      size: 80,\n    },\n    {\n      displayText: 'Email',\n      fieldName: 'email',\n      inputType: 'text',\n      size: 100,\n    },\n  ];\n\n  const mediumTableMetaModels = [\n    {\n      displayText: 'ModelName',\n      fieldName: 'name',\n      inputType: 'text',\n      size: 200,\n    },\n    {\n      displayText: 'Version',\n      fieldName: 'version',\n      inputType: 'text',\n      size: 100,\n    },\n    {\n      displayText: 'Task',\n      fieldName: 'task',\n      inputType: 'text',\n      size: 200,\n    },\n  ];\n\n  const totalSizeModels = mediumTableMetaModels\n    .map(field => field.size)\n    .reduce((prev, next) => prev + next);\n\n  const totalSize = mediumTableMeta\n    .map(field => field.size)\n    .reduce((prev, next) => prev + next);\n\n  const totalSizeUsers = mediumTableMetaUsers\n    .map(field => field.size)\n    .reduce((prev, next) => prev + next);\n\n  function CustomInput({ fieldType, ...others }) {\n    return (\n      <div>\n        <Input type={fieldType} {...others} />\n        <ValidationMessage {...others} />\n      </div>\n    );\n  }\n\n  function handleFilterChange(fieldName, value) {\n    setFilterValues(state => {\n      return {\n        ...state,\n        [fieldName]: value,\n      };\n    });\n  }\n\n  function handleModelsFilterChange(fieldName, value) {\n    setFilterValuesModels(state => {\n      return {\n        ...state,\n        [fieldName]: value,\n      };\n    });\n  }\n\n  function handleUsersFilterChange(fieldName, value) {\n    setFilterValuesUsers(state => {\n      return {\n        ...state,\n        [fieldName]: value,\n      };\n    });\n  }\n\n  function ValidationMessage({ valid, visited, validationMessage }) {\n    return (\n      <>\n        {!valid && visited && (\n          <div className=\"required\">{validationMessage}</div>\n        )}\n      </>\n    );\n  }\n\n  function requiredValidator(value) {\n    return value ? '' : <div className=\"required\">This field is required.</div>;\n  }\n\n  function handleChange(e, el) {\n    let inputElements = null;\n    let i = null;\n    if (e.target.name === 'permissions') {\n      inputElements = document.getElementsByClassName('permissions');\n      for (i = 0; inputElements[i]; ++i) {\n        if (inputElements[i].checked && !selectedPermissions.includes(el)) {\n          selectedPermissions.push(el);\n          break;\n        } else {\n          const index = selectedPermissions.indexOf(el);\n          if (index > -1) {\n            selectedPermissions.splice(index, 1);\n          }\n        }\n      }\n      setSelectedPermissions(selectedPermissions);\n    }\n  }\n\n  async function handleSubmit(formRenderProps) {\n    if (selectedUsers.length == 0 || selectedPermissions.length == 0) {\n      if (selectedUsers.length == 0) {\n        let text = document.getElementById('message1');\n        text.textContent = 'At least one user must be selected!';\n      } else {\n        let text = document.getElementById('message3');\n        text.textContent = 'At least one permission must be selected!';\n      }\n    } else {\n      if (localStorage.getItem('HealthProfessional_Authenticated')) {\n        if (selectedStudies.length == 0) {\n          let text = document.getElementById('message2');\n          text.textContent = 'At least one study must be selected!';\n        } else {\n          try {\n            const config = {\n              headers: {\n                Authorization: `JWT ${localStorage.getItem('access')}`,\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n              },\n            };\n            let form_data = new FormData();\n            form_data.append('groupName', formRenderProps['groupName']);\n            form_data.append('mainUser', user.email);\n            form_data.append('users', JSON.stringify(selectedUsers));\n            form_data.append(\n              'permissions',\n              JSON.stringify(selectedPermissions)\n            );\n            form_data.append('studies', JSON.stringify(selectedStudies));\n\n            const res = await axios.post(\n              `/api/health_professional_add_group`,\n              form_data,\n              config\n            );\n\n            if (res.data.Status === true) {\n              toast.success(\n                `Group ${formRenderProps['groupName']} was created!`,\n                {\n                  position: 'top-right',\n                  autoClose: 8000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: undefined,\n                }\n              );\n              setRedirect(true);\n            } else {\n              toast.error('You have no permissions on the studies selected!', {\n                position: 'top-right',\n                autoClose: 8000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n            }\n          } catch (err) {\n            toast.error('Error creating group! Please, try again.', {\n              position: 'top-right',\n              autoClose: 8000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n        }\n      } else if (localStorage.getItem('Investigator_Authenticated')) {\n        if (selectedModels.length == 0) {\n          let text = document.getElementById('message2');\n          text.textContent = 'At least one model must be selected!';\n        } else {\n          try {\n            const config = {\n              headers: {\n                Authorization: `JWT ${localStorage.getItem('access')}`,\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n              },\n            };\n            let form_data = new FormData();\n            form_data.append('groupName', formRenderProps['groupName']);\n            form_data.append('mainUser', user.email);\n            form_data.append('users', JSON.stringify(selectedUsers));\n            form_data.append(\n              'permissions',\n              JSON.stringify(selectedPermissions)\n            );\n            form_data.append('models', JSON.stringify(selectedModels));\n\n            const res = await axios.post(\n              `/api/investigator_add_group`,\n              form_data,\n              config\n            );\n\n            if (res.data.Status === true) {\n              setRedirect(true);\n              toast.success(\n                `Group ${formRenderProps['groupName']} was created!`,\n                {\n                  position: 'top-right',\n                  autoClose: 8000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: undefined,\n                }\n              );\n            } else {\n              toast.error('You have no permissions on the models selected!', {\n                position: 'top-right',\n                autoClose: 8000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n            }\n          } catch (err) {\n            toast.error('Error creating group! Please, try again.', {\n              position: 'top-right',\n              autoClose: 8000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n        }\n      } else {\n        return null;\n      }\n    }\n  }\n\n  const handleSelectUser = event => {\n    const email = event.target.value;\n\n    if (!selectedUsers.includes(email)) {\n      selectedUsers.push(email);\n    } else {\n      setSelectedUsers(\n        selectedUsers.filter(selectedUserEmail => {\n          return selectedUserEmail !== email;\n        })\n      );\n    }\n  };\n\n  const handleSelectAllUsers = () => {\n    if (selectedUsers.length < users.length) {\n      setSelectedUsers(users.map(({ email }) => email));\n    } else {\n      setSelectedUsers([]);\n    }\n  };\n\n  const handleSelectModel = event => {\n    const name = event.target.value;\n\n    if (!selectedModels.includes(name)) {\n      selectedModels.push(name);\n    } else {\n      setSelectedModels(\n        selectedModels.filter(selectedModelName => {\n          return selectedModelName !== name;\n        })\n      );\n    }\n  };\n\n  const handleSelectAllModels = () => {\n    if (selectedModels.length < models.length) {\n      setSelectedModels(models.map(({ name }) => name));\n    } else {\n      setSelectedModels([]);\n    }\n  };\n\n  const handleSelectStudy = event => {\n    const study_uid = event.target.value;\n\n    if (!selectedStudies.includes(study_uid)) {\n      selectedStudies.push(study_uid);\n    } else {\n      setSelectedStudies(\n        selectedStudies.filter(selectedStudyUID => {\n          return selectedStudyUID !== study_uid;\n        })\n      );\n    }\n  };\n\n  const handleSelectAllStudies = () => {\n    if (selectedStudies.length < studies.length) {\n      setSelectedStudies(studies.map(({ study_uid }) => study_uid));\n    } else {\n      setSelectedStudies([]);\n    }\n  };\n\n  if (localStorage.getItem('Investigator_Authenticated') && users && models) {\n    return (\n      <>\n        {redirect ? <Redirect to=\"/view_groups\" /> : <Fragment></Fragment>}\n        <div className=\"content\">\n          <Form\n            initialValues={{\n              groupName: '',\n            }}\n            className=\"addGroup\"\n            onSubmit={handleSubmit}\n            render={formRenderProps => (\n              <form\n                className=\"addGroup\"\n                style={{\n                  maxWidth: 650,\n                }}\n                onSubmit={formRenderProps.onSubmit}\n              >\n                <fieldset className={'k-form-fieldset'}>\n                  <legend\n                    className={'k-form-legend'}\n                    style={{ marginBottom: '15px', marginTop: '15px' }}\n                  >\n                    <b>Please fill in the fields:</b>\n                  </legend>\n                  <div className=\"mb-3\">\n                    <Field\n                      className=\"addGroup_input\"\n                      name={'groupName'}\n                      fieldType=\"text\"\n                      component={CustomInput}\n                      value={formRenderProps.valueGetter('groupName')}\n                      placeholder={'Group Name'}\n                      validator={[requiredValidator]}\n                    />\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <legend\n                      className={'k-form-legend'}\n                      style={{\n                        marginBottom: '5px',\n                        marginTop: '5px',\n                        fontSize: '14px',\n                      }}\n                    >\n                      <b>Add investigators:</b>\n                    </legend>\n                    <div className=\"form-group\">\n                      <div className=\"responsive-table\">\n                        <table className=\"table\">\n                          <colgroup>\n                            {mediumTableMetaUsers.map((field, i) => {\n                              const size = field.size;\n                              const percentWidth =\n                                (size / totalSizeUsers) * 100.0;\n\n                              return (\n                                <col\n                                  key={i}\n                                  style={{\n                                    width: `${percentWidth}%`,\n                                    textAlign: 'center',\n                                  }}\n                                />\n                              );\n                            })}\n                          </colgroup>\n                          <thead className=\"table-head\">\n                            <tr className=\"filters\">\n                              <TableSearchFilter\n                                meta={mediumTableMetaUsers}\n                                values={filterValuesUsers}\n                                onValueChange={handleUsersFilterChange}\n                                sortFieldName={'first_name'}\n                                sortDirection={'asc'}\n                              />\n                              <th\n                                style={{\n                                  color: 'black',\n                                  paddingBottom: '15px',\n                                  paddingLeft: '8px',\n                                }}\n                                className=\"text-left\"\n                              >\n                                <input\n                                  type=\"checkbox\"\n                                  checked={\n                                    selectedUsers.length === users.length\n                                  }\n                                  onChange={handleSelectAllUsers}\n                                />\n                              </th>\n                            </tr>\n                          </thead>\n\n                          <tbody>\n                            {!users.length && (\n                              <tr\n                                style={{\n                                  backgroundColor: 'rgba(54, 156, 199, 0.9)',\n                                }}\n                                className=\"no-hover\"\n                              >\n                                <td colSpan={mediumTableMetaUsers.length}>\n                                  <div className=\"notFound\">\n                                    {'No matching results'}\n                                  </div>\n                                </td>\n                              </tr>\n                            )}\n                            {users.map(({ email, first_name, last_name }) => {\n                              return (\n                                <tr\n                                  style={{\n                                    backgroundColor: 'rgba(54, 156, 199, 0.9)',\n                                  }}\n                                  key={email}\n                                >\n                                  <td className=\"text-center\">{first_name}</td>\n                                  <td className=\"text-center\">{last_name}</td>\n                                  <td className=\"text-center\">{email}</td>\n                                  <td\n                                    style={{\n                                      paddingLeft: '8px',\n                                    }}\n                                  >\n                                    <input\n                                      type=\"checkbox\"\n                                      value={email}\n                                      checked={selectedUsers.includes(email)}\n                                      onChange={handleSelectUser}\n                                    />\n                                  </td>\n                                </tr>\n                              );\n                            })}\n                          </tbody>\n                        </table>\n\n                        <TablePagination\n                          currentPage={pageNumber}\n                          pageOptions={[5, 10, 15]}\n                          nextPageFunc={() => setPageNumber(pageNumber + 1)}\n                          prevPageFunc={() => setPageNumber(pageNumber - 1)}\n                          onRowsPerPageChange={Rows => setRowsPerPage(Rows)}\n                          rowsPerPage={rowsPerPage}\n                          recordCount={users.length}\n                        />\n\n                        <div\n                          className=\"message\"\n                          id=\"message1\"\n                          style={{ color: 'red' }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <legend\n                      className={'k-form-legend'}\n                      style={{\n                        marginBottom: '10px',\n                        marginTop: '5px',\n                        fontSize: '14px',\n                      }}\n                    >\n                      <b>Share models:</b>\n                    </legend>\n\n                    <table className=\"table\">\n                      <colgroup>\n                        {mediumTableMetaModels.map((field, i) => {\n                          const size = field.size;\n                          const percentWidth = (size / totalSizeModels) * 100.0;\n\n                          return (\n                            <col\n                              key={i}\n                              style={{\n                                width: `${percentWidth}%`,\n                                textAlign: 'center',\n                              }}\n                            />\n                          );\n                        })}\n                      </colgroup>\n                      <thead className=\"table-head\">\n                        <tr className=\"filters\">\n                          <TableSearchFilter\n                            meta={mediumTableMetaModels}\n                            values={filterValuesModels}\n                            onValueChange={handleModelsFilterChange}\n                            sortFieldName={'name'}\n                            sortDirection={'asc'}\n                          />\n                          <th\n                            style={{\n                              color: 'black',\n                              paddingBottom: '15px',\n                              paddingLeft: '8px',\n                            }}\n                            className=\"text-left\"\n                          >\n                            <input\n                              type=\"checkbox\"\n                              checked={selectedModels.length === models.length}\n                              onChange={handleSelectAllModels}\n                            />\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"table-body\">\n                        {/* EMPTY */}\n                        {!models.length && (\n                          <tr style={{ backgroundColor: '#5F9EA0' }}>\n                            <td colSpan={mediumTableMetaModels.length}>\n                              <div>{'No matching results'}</div>\n                            </td>\n                          </tr>\n                        )}\n                        {models.map(({ name, version, task }) => {\n                          return (\n                            <tr\n                              style={{ backgroundColor: '#5F9EA0' }}\n                              key={name}\n                            >\n                              <td className=\"text-center\">{name}</td>\n                              <td className=\"text-center\">{version}</td>\n                              <td className=\"text-center\">{task}</td>\n                              <td\n                                style={{\n                                  paddingLeft: '8px',\n                                }}\n                              >\n                                <input\n                                  type=\"checkbox\"\n                                  value={name}\n                                  checked={selectedModels.includes(name)}\n                                  onChange={handleSelectModel}\n                                />\n                              </td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </table>\n\n                    <TablePagination\n                      currentPage={pageNumber}\n                      pageOptions={[5, 10, 15]}\n                      nextPageFunc={() => setPageNumber(pageNumber + 1)}\n                      prevPageFunc={() => setPageNumber(pageNumber - 1)}\n                      onRowsPerPageChange={Rows => setRowsPerPage(Rows)}\n                      rowsPerPage={rowsPerPage}\n                      recordCount={models.length}\n                    />\n\n                    <div\n                      className=\"message\"\n                      id=\"message2\"\n                      style={{ color: 'red' }}\n                    ></div>\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <legend\n                      className={'k-form-legend'}\n                      style={{\n                        marginBottom: '5px',\n                        marginTop: '5px',\n                        fontSize: '14px',\n                      }}\n                    >\n                      <b>Group permissions:</b>\n                    </legend>\n\n                    {permissions.map((el, i) => (\n                      <div className=\"form-group\" key={i}>\n                        <label>{el}</label>\n                        <input\n                          className=\"permissions\"\n                          name=\"permissions\"\n                          id=\"permissions\"\n                          type=\"checkbox\"\n                          onChange={e => {\n                            handleChange(e, el);\n                          }}\n                        />\n                      </div>\n                    ))}\n\n                    <div\n                      className=\"message\"\n                      id=\"message3\"\n                      style={{ color: 'red' }}\n                    ></div>\n                  </div>\n                </fieldset>\n                <div className=\"k-form-buttons\">\n                  <button\n                    type={'submit'}\n                    className=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\"\n                    disabled={!formRenderProps.allowSubmit}\n                  >\n                    Submit\n                  </button>\n                </div>\n              </form>\n            )}\n          />\n        </div>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={8000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </>\n    );\n  } else if (\n    localStorage.getItem('HealthProfessional_Authenticated') &&\n    users &&\n    studies\n  ) {\n    return (\n      <>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={8000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <div className=\"content\">\n          <Form\n            initialValues={{\n              groupName: '',\n            }}\n            className=\"addGroup\"\n            onSubmit={handleSubmit}\n            render={formRenderProps => (\n              <form\n                className=\"addGroup\"\n                style={{\n                  maxWidth: 650,\n                }}\n                onSubmit={formRenderProps.onSubmit}\n              >\n                <fieldset className={'k-form-fieldset'}>\n                  <legend\n                    className={'k-form-legend'}\n                    style={{ marginBottom: '15px', marginTop: '15px' }}\n                  >\n                    <b>Please fill in the fields:</b>\n                  </legend>\n                  <div className=\"mb-3\">\n                    <Field\n                      className=\"addGroup_input\"\n                      name={'groupName'}\n                      fieldType=\"text\"\n                      component={CustomInput}\n                      value={formRenderProps.valueGetter('groupName')}\n                      placeholder={'Group Name'}\n                      validator={[requiredValidator]}\n                    />\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <legend\n                      className={'k-form-legend'}\n                      style={{\n                        marginBottom: '5px',\n                        marginTop: '5px',\n                        fontSize: '14px',\n                      }}\n                    >\n                      <b>Add health professionals:</b>\n                    </legend>\n                    <div className=\"form-group\">\n                      <div className=\"responsive-table\">\n                        <table className=\"table\">\n                          <colgroup>\n                            {mediumTableMetaUsers.map((field, i) => {\n                              const size = field.size;\n                              const percentWidth =\n                                (size / totalSizeUsers) * 100.0;\n\n                              return (\n                                <col\n                                  key={i}\n                                  style={{\n                                    width: `${percentWidth}%`,\n                                    textAlign: 'center',\n                                  }}\n                                />\n                              );\n                            })}\n                          </colgroup>\n                          <thead className=\"table-head\">\n                            <tr className=\"filters\">\n                              <TableSearchFilter\n                                meta={mediumTableMetaUsers}\n                                values={filterValuesUsers}\n                                onValueChange={handleUsersFilterChange}\n                                sortFieldName={'first_name'}\n                                sortDirection={'asc'}\n                              />\n                              <th\n                                style={{\n                                  color: 'black',\n                                  paddingBottom: '15px',\n                                  paddingLeft: '8px',\n                                }}\n                                className=\"text-left\"\n                              >\n                                <input\n                                  type=\"checkbox\"\n                                  checked={\n                                    selectedUsers.length === users.length\n                                  }\n                                  onChange={handleSelectAllUsers}\n                                />\n                              </th>\n                            </tr>\n                          </thead>\n\n                          <tbody>\n                            {!users.length && (\n                              <tr\n                                style={{ backgroundColor: '#FF8C00' }}\n                                className=\"no-hover\"\n                              >\n                                <td colSpan={mediumTableMetaUsers.length}>\n                                  <div className=\"notFound\">\n                                    {'No matching results'}\n                                  </div>\n                                </td>\n                              </tr>\n                            )}\n                            {users.map(({ email, first_name, last_name }) => {\n                              return (\n                                <tr\n                                  style={{ backgroundColor: '#FF8C00' }}\n                                  key={email}\n                                >\n                                  <td className=\"text-center\">{first_name}</td>\n                                  <td className=\"text-center\">{last_name}</td>\n                                  <td className=\"text-center\">{email}</td>\n                                  <td\n                                    style={{\n                                      paddingLeft: '8px',\n                                    }}\n                                  >\n                                    <input\n                                      type=\"checkbox\"\n                                      value={email}\n                                      checked={selectedUsers.includes(email)}\n                                      onChange={handleSelectUser}\n                                    />\n                                  </td>\n                                </tr>\n                              );\n                            })}\n                          </tbody>\n                        </table>\n\n                        <TablePagination\n                          currentPage={pageNumber}\n                          pageOptions={[5, 10, 15]}\n                          nextPageFunc={() => setPageNumber(pageNumber + 1)}\n                          prevPageFunc={() => setPageNumber(pageNumber - 1)}\n                          onRowsPerPageChange={Rows => setRowsPerPage(Rows)}\n                          rowsPerPage={rowsPerPage}\n                          recordCount={users.length}\n                        />\n\n                        <div\n                          className=\"message\"\n                          id=\"message1\"\n                          style={{ color: 'red' }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <legend\n                      className={'k-form-legend'}\n                      style={{\n                        marginBottom: '5px',\n                        marginTop: '5px',\n                        fontSize: '14px',\n                      }}\n                    >\n                      <b>Share studies:</b>\n                    </legend>\n\n                    <table className=\"table\">\n                      <colgroup>\n                        {mediumTableMeta.map((field, i) => {\n                          const size = field.size;\n                          const percentWidth = (size / totalSize) * 100.0;\n\n                          return (\n                            <col\n                              key={i}\n                              style={{\n                                width: `${percentWidth}%`,\n                                textAlign: 'center',\n                              }}\n                            />\n                          );\n                        })}\n                      </colgroup>\n                      <thead className=\"table-head\">\n                        <tr className=\"filters\">\n                          <TableSearchFilter\n                            meta={mediumTableMeta}\n                            values={filterValues}\n                            onValueChange={handleFilterChange}\n                            sortFieldName={'patient_name'}\n                            sortDirection={'asc'}\n                          />\n                          <th\n                            style={{\n                              color: 'black',\n                              paddingBottom: '15px',\n                              paddingLeft: '8px',\n                            }}\n                            className=\"text-left\"\n                          >\n                            <input\n                              type=\"checkbox\"\n                              checked={\n                                selectedStudies.length === studies.length\n                              }\n                              onChange={handleSelectAllStudies}\n                            />\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"table-body\">\n                        {/* EMPTY */}\n                        {!studies.length && (\n                          <tr style={{ backgroundColor: '#5F9EA0' }}>\n                            <td colSpan={mediumTableMeta.length}>\n                              <div>{'No matching results'}</div>\n                            </td>\n                          </tr>\n                        )}\n                        {studies.map(\n                          ({\n                            study_uid,\n                            patient_name,\n                            patient_id,\n                            study_date,\n                          }) => {\n                            return (\n                              <tr\n                                style={{ backgroundColor: '#5F9EA0' }}\n                                key={study_uid}\n                              >\n                                <td className=\"text-center\">\n                                  {patient_name || 'Empty'}\n                                </td>\n                                <td className=\"text-center\">{patient_id}</td>\n                                <td className=\"text-center\">\n                                  {study_date || 'Invalid date'}\n                                </td>\n                                <td\n                                  style={{\n                                    paddingLeft: '8px',\n                                  }}\n                                >\n                                  <input\n                                    type=\"checkbox\"\n                                    value={study_uid}\n                                    checked={selectedStudies.includes(\n                                      study_uid\n                                    )}\n                                    onChange={handleSelectStudy}\n                                  />\n                                </td>\n                              </tr>\n                            );\n                          }\n                        )}\n                      </tbody>\n                    </table>\n\n                    <TablePagination\n                      currentPage={pageNumber}\n                      pageOptions={[5, 10, 15]}\n                      nextPageFunc={() => setPageNumber(pageNumber + 1)}\n                      prevPageFunc={() => setPageNumber(pageNumber - 1)}\n                      onRowsPerPageChange={Rows => setRowsPerPage(Rows)}\n                      rowsPerPage={rowsPerPage}\n                      recordCount={studies.length}\n                    />\n\n                    <div\n                      className=\"message\"\n                      id=\"message2\"\n                      style={{ color: 'red' }}\n                    ></div>\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <legend\n                      className={'k-form-legend'}\n                      style={{\n                        marginBottom: '5px',\n                        marginTop: '5px',\n                        fontSize: '14px',\n                      }}\n                    >\n                      <b>Group permissions:</b>\n                    </legend>\n\n                    {permissions.map((el, i) => (\n                      <div className=\"form-group\" key={i}>\n                        <label>{el}</label>\n                        <input\n                          className=\"permissions\"\n                          name=\"permissions\"\n                          id=\"permissions\"\n                          type=\"checkbox\"\n                          onChange={e => {\n                            handleChange(e, el);\n                          }}\n                        />\n                      </div>\n                    ))}\n\n                    <div\n                      className=\"message\"\n                      id=\"message3\"\n                      style={{ color: 'red' }}\n                    ></div>\n                  </div>\n                </fieldset>\n                <div className=\"k-form-buttons\">\n                  <button\n                    type={'submit'}\n                    className=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\"\n                    disabled={!formRenderProps.allowSubmit}\n                  >\n                    Submit\n                  </button>\n                </div>\n              </form>\n            )}\n          />\n        </div>\n        {redirect ? <Redirect to=\"/view_groups\" /> : <Fragment></Fragment>}\n      </>\n    );\n  } else {\n    return null;\n  }\n}\n\nNewGroup.propTypes = {\n  user: PropTypes.object,\n};\n\nasync function _getUsers(user, group, filters) {\n  const config = {\n    headers: {\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n  };\n\n  let url = `/api/group_details?group=${group}&user=${user.email}`;\n\n  Object.keys(filters).forEach(field => {\n    if (filters[field] !== null && filters[field] !== '') {\n      let param = filters[field];\n      url = url + `&${field}=${param}`;\n    }\n  });\n\n  const res = await axiosInstance.get(url, config);\n\n  if (res.data !== \"You don't belong to this group!\") {\n    return res.data.Users;\n  }\n}\n\nasync function _fetchStudies(user, filters) {\n  let url = `/api/image/?user=${user.email}`;\n\n  Object.keys(filters).forEach(field => {\n    if (filters[field] !== null && filters[field] !== '') {\n      let param = filters[field];\n      url = url + `&${field}=${param}`;\n    }\n  });\n\n  const accessStudies = await axiosInstance\n    .get(url, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n      },\n    })\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      return error.response;\n    });\n\n  let allowedStudies = [];\n\n  accessStudies.data.forEach(study => {\n    allowedStudies.push(study);\n  });\n\n  return allowedStudies;\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(NewGroup);\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport axiosInstance from 'axios';\nimport axios from 'axios';\nimport { Form } from '@progress/kendo-react-form';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { TableSearchFilter, TablePagination } from '@ohif/ui';\nimport { Redirect } from 'react-router-dom';\nimport { load_user } from '../actions/auth';\nimport './Add_group.css';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nfunction Add_elements(props) {\n  const { user } = props;\n  //console.log(props.location.state); //groupUsers\n\n  let groupUsersEmails = [];\n  props.location.state.forEach(function(user) {\n    if (!groupUsersEmails.includes(user.email)) {\n      groupUsersEmails.push(user.email);\n    }\n  });\n\n  const [groupUsers] = useState(groupUsersEmails);\n  const [redirect, setRedirect] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  const [filterValuesUsers, setFilterValuesUsers] = useState({\n    user: '',\n  });\n\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [pageNumber, setPageNumber] = useState(0);\n\n  // Called when relevant state/props are updated\n  useEffect(() => {\n    const fetchUsers = async group => {\n      try {\n        const response = await _getUsers(user, group, filterValuesUsers);\n\n        let users = [];\n        let mainUser = user.email;\n        response.forEach(function(person) {\n          let userData = {\n            email: person.email,\n            first_name: person.first_name,\n            last_name: person.last_name,\n          };\n          if (\n            person.email !== mainUser &&\n            !users.includes(userData) &&\n            !groupUsersEmails.includes(person.email)\n          ) {\n            users.push(userData);\n          }\n        });\n        setUsers(users);\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    let group = '';\n    if (user && localStorage.getItem('HealthProfessional_Authenticated')) {\n      group = 'health_professionals';\n\n      fetchUsers(group);\n    } else if (user && localStorage.getItem('Investigator_Authenticated')) {\n      group = 'investigators';\n\n      fetchUsers(group);\n    }\n  }, [\n    filterValuesUsers,\n    groupUsers,\n    groupUsersEmails,\n    pageNumber,\n    rowsPerPage,\n    user,\n  ]);\n\n  const mediumTableMetaUsers = [\n    {\n      displayText: 'First Name',\n      fieldName: 'first_name',\n      inputType: 'text',\n      size: 80,\n    },\n    {\n      displayText: 'Last Name',\n      fieldName: 'last_name',\n      inputType: 'text',\n      size: 80,\n    },\n    {\n      displayText: 'Email',\n      fieldName: 'email',\n      inputType: 'text',\n      size: 100,\n    },\n  ];\n\n  const totalSizeUsers = mediumTableMetaUsers\n    .map(field => field.size)\n    .reduce((prev, next) => prev + next);\n\n  function handleUsersFilterChange(fieldName, value) {\n    setFilterValuesUsers(state => {\n      return {\n        ...state,\n        [fieldName]: value,\n      };\n    });\n  }\n\n  async function handleSubmit() {\n    const name = props.match.params.name;\n    if (selectedUsers.length == 0) {\n      let text = document.getElementById('message1');\n      text.textContent = 'At least one user must be selected!';\n    } else {\n      if (localStorage.getItem('HealthProfessional_Authenticated')) {\n        try {\n          const config = {\n            headers: {\n              Authorization: `JWT ${localStorage.getItem('access')}`,\n              'Content-Type': 'application/json',\n              Accept: 'application/json',\n            },\n          };\n          let form_data = new FormData();\n          form_data.append('groupName', name);\n          form_data.append('users', JSON.stringify(selectedUsers));\n          form_data.append('appUser', JSON.stringify(user['email']));\n          const res = await axios.post(\n            `/api/add_elements`,\n            form_data,\n            config\n          );\n\n          if (res.data.Status === true) {\n            alert(\n              JSON.stringify(selectedUsers) + ` were added to group ${name}!`\n            );\n            setRedirect(true);\n          } else {\n            alert(\"You don't belong to this group!\");\n          }\n        } catch (err) {\n          alert(err);\n        }\n      } else if (localStorage.getItem('Investigator_Authenticated')) {\n        try {\n          const config = {\n            headers: {\n              Authorization: `JWT ${localStorage.getItem('access')}`,\n              'Content-Type': 'application/json',\n              Accept: 'application/json',\n            },\n          };\n          let form_data = new FormData();\n          form_data.append('groupName', name);\n          form_data.append('users', JSON.stringify(selectedUsers));\n          form_data.append('appUser', JSON.stringify(user['email']));\n          const res = await axios.post(\n            `/api/add_elements`,\n            form_data,\n            config\n          );\n\n          if (res.data.Status === true) {\n            alert(\n              JSON.stringify(selectedUsers) + ` were added to group ${name}!`\n            );\n            setRedirect(true);\n          } else {\n            alert(\"You don't belong to this group!\");\n          }\n        } catch (err) {\n          alert(err);\n        }\n      }\n    }\n  }\n\n  const handleSelectUser = event => {\n    const email = event.target.value;\n\n    if (!selectedUsers.includes(email)) {\n      selectedUsers.push(email);\n    } else {\n      setSelectedUsers(\n        selectedUsers.filter(selectedUserEmail => {\n          return selectedUserEmail !== email;\n        })\n      );\n    }\n  };\n\n  const handleSelectAllUsers = () => {\n    if (selectedUsers.length < users.length) {\n      setSelectedUsers(users.map(({ email }) => email));\n    } else {\n      setSelectedUsers([]);\n    }\n  };\n\n  if (localStorage.getItem('Investigator_Authenticated')) {\n    return (\n      <Fragment>\n        <div className=\"content\">\n          <Form\n            className=\"addGroup\"\n            onSubmit={handleSubmit}\n            render={formRenderProps => (\n              <form\n                className=\"addGroup\"\n                style={{\n                  maxWidth: 650,\n                }}\n                onSubmit={formRenderProps.onSubmit}\n              >\n                <fieldset className={'k-form-fieldset'}>\n                  <div className=\"mb-3\">\n                    <legend\n                      className={'k-form-legend'}\n                      style={{\n                        marginBottom: '5px',\n                        marginTop: '5px',\n                        fontSize: '14px',\n                      }}\n                    >\n                      <b>Add investigators:</b>\n                    </legend>\n                    <div className=\"form-group\">\n                      <div className=\"responsive-table\">\n                        <table className=\"table\">\n                          <colgroup>\n                            {mediumTableMetaUsers.map((field, i) => {\n                              const size = field.size;\n                              const percentWidth =\n                                (size / totalSizeUsers) * 100.0;\n\n                              return (\n                                <col\n                                  key={i}\n                                  style={{\n                                    width: `${percentWidth}%`,\n                                    textAlign: 'center',\n                                  }}\n                                />\n                              );\n                            })}\n                          </colgroup>\n                          <thead className=\"table-head\">\n                            <tr className=\"filters\">\n                              <TableSearchFilter\n                                meta={mediumTableMetaUsers}\n                                values={filterValuesUsers}\n                                onValueChange={handleUsersFilterChange}\n                                sortFieldName={'first_name'}\n                                sortDirection={'asc'}\n                              />\n                              <th\n                                style={{\n                                  color: 'black',\n                                  paddingBottom: '15px',\n                                  paddingLeft: '5px',\n                                }}\n                                className=\"text-left\"\n                              >\n                                <input\n                                  type=\"checkbox\"\n                                  checked={\n                                    selectedUsers.length === users.length\n                                  }\n                                  onChange={handleSelectAllUsers}\n                                />\n                              </th>\n                            </tr>\n                          </thead>\n\n                          <tbody>\n                            {!users.length && (\n                              <tr\n                                style={{\n                                  backgroundColor: 'rgba(54, 156, 199, 0.9)',\n                                }}\n                                className=\"no-hover\"\n                              >\n                                <td colSpan={mediumTableMetaUsers.length}>\n                                  <div className=\"notFound\">\n                                    {'No matching results'}\n                                  </div>\n                                </td>\n                              </tr>\n                            )}\n                            {users.map(({ email, first_name, last_name }) => {\n                              return (\n                                <tr\n                                  style={{\n                                    backgroundColor: 'rgba(54, 156, 199, 0.9)',\n                                  }}\n                                  key={email}\n                                >\n                                  <td className=\"text-center\">{first_name}</td>\n                                  <td className=\"text-center\">{last_name}</td>\n                                  <td className=\"text-center\">{email}</td>\n                                  <td>\n                                    <input\n                                      type=\"checkbox\"\n                                      value={email}\n                                      checked={selectedUsers.includes(email)}\n                                      onChange={handleSelectUser}\n                                    />\n                                  </td>\n                                </tr>\n                              );\n                            })}\n                          </tbody>\n                        </table>\n\n                        <TablePagination\n                          currentPage={pageNumber}\n                          pageOptions={[5, 10, 15]}\n                          nextPageFunc={() => setPageNumber(pageNumber + 1)}\n                          prevPageFunc={() => setPageNumber(pageNumber - 1)}\n                          onRowsPerPageChange={Rows => setRowsPerPage(Rows)}\n                          rowsPerPage={rowsPerPage}\n                          recordCount={users.length}\n                        />\n\n                        <div\n                          className=\"message\"\n                          id=\"message1\"\n                          style={{ color: 'red' }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                </fieldset>\n                <div className=\"k-form-buttons\">\n                  <button\n                    className=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\"\n                    onClick={() => handleSubmit()}\n                  >\n                    Add\n                  </button>\n                </div>\n              </form>\n            )}\n          />\n          {redirect ? (\n            <Redirect\n              to={`/group_details/${props.match.params.name}/${user['email']}`}\n            />\n          ) : (\n            <Fragment></Fragment>\n          )}\n        </div>\n      </Fragment>\n    );\n  } else if (localStorage.getItem('HealthProfessional_Authenticated')) {\n    return (\n      <Fragment>\n        <div className=\"content\">\n          <Form\n            className=\"addGroup\"\n            onSubmit={handleSubmit}\n            render={formRenderProps => (\n              <form\n                className=\"addGroup\"\n                style={{\n                  maxWidth: 650,\n                }}\n                onSubmit={formRenderProps.onSubmit}\n              >\n                <fieldset className={'k-form-fieldset'}>\n                  <legend\n                    className={'k-form-legend'}\n                    style={{ marginBottom: '15px', marginTop: '15px' }}\n                  >\n                    <b>Please fill in the fields:</b>\n                  </legend>\n\n                  <div className=\"mb-3\">\n                    <legend\n                      className={'k-form-legend'}\n                      style={{\n                        marginBottom: '5px',\n                        marginTop: '5px',\n                        fontSize: '14px',\n                      }}\n                    >\n                      <b>Add health professionals:</b>\n                    </legend>\n                    <div className=\"form-group\">\n                      <div className=\"responsive-table\">\n                        <table className=\"table\">\n                          <colgroup>\n                            {mediumTableMetaUsers.map((field, i) => {\n                              const size = field.size;\n                              const percentWidth =\n                                (size / totalSizeUsers) * 100.0;\n\n                              return (\n                                <col\n                                  key={i}\n                                  style={{\n                                    width: `${percentWidth}%`,\n                                    textAlign: 'center',\n                                  }}\n                                />\n                              );\n                            })}\n                          </colgroup>\n                          <thead className=\"table-head\">\n                            <tr className=\"filters\">\n                              <TableSearchFilter\n                                meta={mediumTableMetaUsers}\n                                values={filterValuesUsers}\n                                onValueChange={handleUsersFilterChange}\n                                sortFieldName={'first_name'}\n                                sortDirection={'asc'}\n                              />\n                              <th\n                                style={{\n                                  color: 'black',\n                                  paddingBottom: '15px',\n                                  paddingLeft: '5px',\n                                }}\n                                className=\"text-left\"\n                              >\n                                <input\n                                  type=\"checkbox\"\n                                  checked={\n                                    selectedUsers.length === users.length\n                                  }\n                                  onChange={handleSelectAllUsers}\n                                />\n                              </th>\n                            </tr>\n                          </thead>\n\n                          <tbody>\n                            {!users.length && (\n                              <tr\n                                style={{ backgroundColor: '#FF8C00' }}\n                                className=\"no-hover\"\n                              >\n                                <td colSpan={mediumTableMetaUsers.length}>\n                                  <div className=\"notFound\">\n                                    {'No matching results'}\n                                  </div>\n                                </td>\n                              </tr>\n                            )}\n                            {users.map(({ email, first_name, last_name }) => {\n                              return (\n                                <tr\n                                  style={{\n                                    backgroundColor: 'rgba(54, 156, 199, 0.9)',\n                                  }}\n                                  key={email}\n                                >\n                                  <td className=\"text-center\">{first_name}</td>\n                                  <td className=\"text-center\">{last_name}</td>\n                                  <td className=\"text-center\">{email}</td>\n                                  <td>\n                                    <input\n                                      type=\"checkbox\"\n                                      value={email}\n                                      checked={selectedUsers.includes(email)}\n                                      onChange={handleSelectUser}\n                                    />\n                                  </td>\n                                </tr>\n                              );\n                            })}\n                          </tbody>\n                        </table>\n\n                        <TablePagination\n                          currentPage={pageNumber}\n                          pageOptions={[5, 10, 15]}\n                          nextPageFunc={() => setPageNumber(pageNumber + 1)}\n                          prevPageFunc={() => setPageNumber(pageNumber - 1)}\n                          onRowsPerPageChange={Rows => setRowsPerPage(Rows)}\n                          rowsPerPage={rowsPerPage}\n                          recordCount={users.length}\n                        />\n\n                        <div\n                          className=\"message\"\n                          id=\"message1\"\n                          style={{ color: 'red' }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                </fieldset>\n                <div className=\"k-form-buttons\">\n                  <button\n                    className=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\"\n                    onClick={() => handleSubmit()}\n                  >\n                    Add\n                  </button>\n                </div>\n              </form>\n            )}\n          />\n          {redirect ? (\n            <Redirect\n              to={`/group_details/${props.match.params.name}/${user['email']}`}\n            />\n          ) : (\n            <Fragment></Fragment>\n          )}\n        </div>\n      </Fragment>\n    );\n  } else {\n    return null;\n  }\n}\n\nAdd_elements.propTypes = {\n  user: PropTypes.object,\n};\n\nasync function _getUsers(user, group, filters) {\n  const config = {\n    headers: {\n      Authorization: `JWT ${localStorage.getItem('access')}`,\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n  };\n\n  let url = `/api/group_details?group=${group}&user=${user.email}`;\n\n  if (filters['user'] !== null && filters['user'] !== '') {\n    let param = filters['user'];\n    url = url + `&filter=${param}`;\n  }\n\n  const res = await axiosInstance.get(url, config);\n\n  if (res.data !== \"You don't belong to this group!\") {\n    return res.data.Users;\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  { load_user }\n)(Add_elements);\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport { signup } from '../actions/auth';\n\nexport default class Secret_Key extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pin: '',\n    };\n\n    this.pinChange = this.pinChange.bind(this);\n    this.verify_pin = this.verify_pin.bind(this);\n  }\n\n  pinChange(e) {\n    this.setState({\n      pin: e.target.value,\n    });\n  }\n\n  verify_pin() {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', 'Authorization': 'Basic am9hbzpmMWRyaXZlcjE5OTk='},\n      body: JSON.stringify({\n        email: this.props.email,\n        pin: this.props.pin,\n      }),\n    };\n    fetch('/api/2FA_login', requestOptions).then(response => {\n      if (response.data.status === true) {\n        signup(\n          this.props.email,\n          this.props.first_name,\n          this.props.last_name,\n          this.props.password,\n          this.props.secret_key\n        );\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container mt-5\">\n        <h1>Put the pin which is on the Google Authenticator</h1>\n\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Pin*\"\n            name=\"pin\"\n            value={this.state.pin}\n            onChange={this.pinChange}\n            required\n          />\n        </div>\n        <button className=\"btn btn-primary\" onClick={this.verify_pin}>\n          Register\n        </button>\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport OHIF from '@ohif/core';\nimport { withRouter } from 'react-router-dom';\nimport {\n  StudyList,\n  PageToolbar,\n  TablePagination,\n  useDebounce,\n  useMedia,\n} from '@ohif/ui';\nimport ConnectedHeader from '../connectedComponents/ConnectedHeader.js';\nimport * as RoutesUtil from '../routes/routesUtil';\nimport moment from 'moment';\nimport ConnectedDicomFilesUploader from '../googleCloud/ConnectedDicomFilesUploader';\nimport AppContext from '../context/AppContext';\nimport axiosInstance from 'axios';\n\nfunction StudyListRoute(props) {\n  const { history, server, studyListFunctionsEnabled, user } = props;\n\n  const [sort, setSort] = useState({\n    fieldName: 'PatientName',\n    direction: 'desc',\n  });\n  const [filterValues, setFilterValues] = useState({\n    studyDateTo: null,\n    studyDateFrom: null,\n    PatientName: '',\n    PatientID: '',\n    AccessionNumber: '',\n    StudyDate: '',\n    modalities: '',\n    StudyDescription: '',\n    patientNameOrId: '',\n    accessionOrModalityOrDescription: '',\n    allFields: '',\n  });\n  const [studies, setStudies] = useState([]);\n\n  const [searchStatus, setSearchStatus] = useState({\n    isSearchingForStudies: false,\n    error: null,\n  });\n  const [activeModalId, setActiveModalId] = useState(null);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [pageNumber, setPageNumber] = useState(0);\n  const appContext = useContext(AppContext);\n\n  const displaySize = useMedia(\n    [\n      '(min-width: 1750px)',\n      '(min-width: 1000px) and (max-width: 1749px)',\n      '(max-width: 999px)',\n    ],\n    ['large', 'medium', 'small'],\n    'small'\n  );\n\n  const debouncedSort = useDebounce(sort, 200);\n  const debouncedFilters = useDebounce(filterValues, 250);\n\n  const { appConfig = {} } = appContext;\n\n  useEffect(() => {\n    const fetchStudies = async () => {\n      try {\n        setSearchStatus({ error: null, isSearchingForStudies: true });\n\n        const response = await getStudyList(\n          user,\n          props.group,\n          server,\n          debouncedFilters,\n          debouncedSort,\n          rowsPerPage,\n          pageNumber,\n          displaySize\n        );\n\n        setStudies(response);\n        setSearchStatus({ error: null, isSearchingForStudies: false });\n      } catch (error) {\n        setSearchStatus({ error: true, isFetching: false });\n      }\n    };\n\n    if (server) {\n      fetchStudies();\n    }\n  }, [\n    debouncedFilters,\n    debouncedSort,\n    rowsPerPage,\n    pageNumber,\n    displaySize,\n    server,\n    user,\n    props.group,\n  ]);\n\n  if (searchStatus.error) {\n    return <div>Error: {JSON.stringify(searchStatus.error)}</div>;\n  } else if (studies === [] && !activeModalId) {\n    return <div>Loading...</div>;\n  }\n\n  function handleSort(fieldName) {\n    let sortFieldName = fieldName;\n    let sortDirection = 'asc';\n\n    if (fieldName === sort.fieldName) {\n      if (sort.direction === 'asc') {\n        sortDirection = 'desc';\n      } else {\n        sortFieldName = null;\n        sortDirection = null;\n      }\n    }\n\n    setSort({\n      fieldName: sortFieldName,\n      direction: sortDirection,\n    });\n  }\n\n  function handleFilterChange(fieldName, value) {\n    setFilterValues(state => {\n      return {\n        ...state,\n        [fieldName]: value,\n      };\n    });\n  }\n\n  return (\n    <>\n      <ConnectedDicomFilesUploader\n        isOpen={activeModalId === 'DicomFilesUploader'}\n        onClose={() => setActiveModalId(null)}\n      />\n\n      <ConnectedHeader useLargeLogo={true}></ConnectedHeader>\n\n      <div className=\"study-list-header\">\n        <div className=\"header\">\n          {props.group ? (\n            <h1 style={{ fontWeight: 300, fontSize: '22px' }}>\n              <b>{props.group}</b>'s StudyList\n            </h1>\n          ) : (\n            <h1 style={{ fontWeight: 300, fontSize: '22px' }}>\n              <b>{user.email}</b>'s StudyList\n            </h1>\n          )}\n        </div>\n        <div className=\"actions\">\n          {!props.group && studyListFunctionsEnabled && (\n            <PageToolbar\n              onImport={() => setActiveModalId('DicomFilesUploader')}\n            />\n          )}\n          <span className=\"study-count\">{studies.length}</span>\n        </div>\n      </div>\n      <div className=\"table-head-background\" />\n      <div className=\"study-list-container\">\n        <StudyList\n          isLoading={searchStatus.isSearchingForStudies}\n          hasError={searchStatus.error === true}\n          // Rows\n          studies={studies}\n          onSelectItem={studyInstanceUID => {\n            const viewerPath = RoutesUtil.parseViewerPath(appConfig, server, {\n              studyInstanceUIDs: studyInstanceUID,\n            });\n            history.push({\n              pathname: viewerPath,\n            });\n          }}\n          // Table Header\n          sort={sort}\n          onSort={handleSort}\n          filterValues={filterValues}\n          onFilterChange={handleFilterChange}\n          studyListDateFilterNumDays={appConfig.studyListDateFilterNumDays}\n          displaySize={displaySize}\n        />\n        {/* PAGINATION FOOTER */}\n        <TablePagination\n          currentPage={pageNumber}\n          nextPageFunc={() => setPageNumber(pageNumber + 1)}\n          prevPageFunc={() => setPageNumber(pageNumber - 1)}\n          onRowsPerPageChange={Rows => setRowsPerPage(Rows)}\n          rowsPerPage={rowsPerPage}\n          recordCount={studies.length}\n        />\n      </div>\n    </>\n  );\n}\n\nStudyListRoute.propTypes = {\n  filters: PropTypes.object,\n  PatientID: PropTypes.string,\n  server: PropTypes.object,\n  user: PropTypes.object,\n  history: PropTypes.object,\n  studyListFunctionsEnabled: PropTypes.bool,\n  group: PropTypes.string,\n};\n\nStudyListRoute.defaultProps = {\n  studyListFunctionsEnabled: true,\n  group: '',\n};\n\nasync function getStudyList(\n  user,\n  group,\n  server,\n  filters,\n  sort,\n  rowsPerPage,\n  pageNumber,\n  displaySize\n) {\n  const {\n    allFields,\n    patientNameOrId,\n    accessionOrModalityOrDescription,\n  } = filters;\n  const sortFieldName = sort.fieldName || 'PatientName';\n  const sortDirection = sort.direction || 'desc';\n\n  const mappedFilters = {\n    PatientID: filters.PatientID,\n    PatientName: filters.PatientName,\n    AccessionNumber: filters.AccessionNumber,\n    StudyDescription: filters.StudyDescription,\n    ModalitiesInStudy: filters.modalities,\n\n    // NEVER CHANGE\n    studyDateFrom: filters.studyDateFrom,\n    studyDateTo: filters.studyDateTo,\n    limit: rowsPerPage,\n    offset: pageNumber * rowsPerPage,\n    fuzzymatching: server.supportsFuzzyMatching === true,\n  };\n\n  const studies = await _fetchStudies(\n    user,\n    group,\n    server,\n    mappedFilters,\n    displaySize,\n    {\n      allFields,\n      patientNameOrId,\n      accessionOrModalityOrDescription,\n    }\n  );\n\n  // Only the fields we use\n  const mappedStudies = studies.map(study => {\n    const PatientName =\n      typeof study.PatientName === 'string' ? study.PatientName : undefined;\n\n    return {\n      AccessionNumber: study.AccessionNumber, // \"1\"\n      modalities: study.modalities, // \"SEG\\\\MR\"\n      PatientID: study.PatientID, // \"NOID\"\n      PatientName, // \"NAME^NONE\"\n      StudyDate: study.StudyDate, // \"Jun 28, 2002\"\n      StudyDescription: study.StudyDescription, // \"BRAIN\"\n      StudyInstanceUID: study.StudyInstanceUID, // \"1.3.6.1.4.1.5962.99.1.3814087073.479799962.1489872804257.3.0\"\n    };\n  });\n\n  // For our smaller displays, map our field name to a single\n  // field we can actually sort by.\n  const sortFieldNameMapping = {\n    allFields: 'PatientName',\n    patientNameOrId: 'PatientName',\n    accessionOrModalityOrDescription: 'modalities',\n  };\n  const mappedSortFieldName =\n    sortFieldNameMapping[sortFieldName] || sortFieldName;\n\n  const sortedStudies = _sortStudies(\n    mappedStudies,\n    mappedSortFieldName,\n    sortDirection\n  );\n\n  // Because we've merged multiple requests, we may have more than\n  // our Rows per page. Let's `take` that number from our sorted array.\n  // This \"might\" cause paging issues.\n  const numToTake =\n    sortedStudies.length < rowsPerPage ? sortedStudies.length : rowsPerPage;\n  const result = sortedStudies.slice(0, numToTake);\n\n  return result;\n}\n\n/**\n *\n *\n * @param {object[]} studies - Array of studies to sort\n * @param {string} studies.StudyDate - Date in 'MMM DD, YYYY' format\n * @param {string} field - name of properties on study to sort by\n * @param {string} order - 'asc' or 'desc'\n * @returns\n */\nfunction _sortStudies(studies, field, order) {\n  // Make sure our StudyDate is in a valid format and create copy of studies array\n  const sortedStudies = studies.map(study => {\n    if (!moment(study.StudyDate, 'MMM DD, YYYY', true).isValid()) {\n      study.StudyDate = moment(study.StudyDate, 'YYYYMMDD').format(\n        'MMM DD, YYYY'\n      );\n    }\n    return study;\n  });\n\n  // Sort by field\n  sortedStudies.sort(function(a, b) {\n    let fieldA = a[field];\n    let fieldB = b[field];\n    if (field === 'StudyDate') {\n      fieldA = moment(fieldA).toISOString();\n      fieldB = moment(fieldB).toISOString();\n    }\n\n    // Order\n    if (order === 'desc') {\n      if (fieldA < fieldB) {\n        return -1;\n      }\n      if (fieldA > fieldB) {\n        return 1;\n      }\n      return 0;\n    } else {\n      if (fieldA > fieldB) {\n        return -1;\n      }\n      if (fieldA < fieldB) {\n        return 1;\n      }\n      return 0;\n    }\n  });\n\n  return sortedStudies;\n}\n\n/**\n * We're forced to do this because DICOMWeb does not support \"AND|OR\" searches\n * across multiple fields. This allows us to make multiple requests, remove\n * duplicates, and return the result set as if it were supported\n *\n * @param {object} server\n * @param {Object} filters\n * @param {string} displaySize - small, medium, or large\n * @param {string} multi.allFields\n * @param {string} multi.patientNameOrId\n * @param {string} multi.accessionOrModalityOrDescription\n */\nasync function _fetchStudies(\n  user,\n  group,\n  server,\n  filters,\n  displaySize,\n  { allFields, patientNameOrId, accessionOrModalityOrDescription }\n) {\n  let queryFiltersArray = [filters];\n\n  if (displaySize === 'small') {\n    const firstSet = _getQueryFiltersForValue(\n      filters,\n      [\n        'PatientID',\n        'PatientName',\n        'AccessionNumber',\n        'StudyDescription',\n        'ModalitiesInStudy',\n      ],\n      allFields\n    );\n\n    if (firstSet.length) {\n      queryFiltersArray = firstSet;\n    }\n  } else if (displaySize === 'medium') {\n    const firstSet = _getQueryFiltersForValue(\n      filters,\n      ['PatientID', 'PatientName'],\n      patientNameOrId\n    );\n\n    const secondSet = _getQueryFiltersForValue(\n      filters,\n      ['AccessionNumber', 'StudyDescription', 'ModalitiesInStudy'],\n      accessionOrModalityOrDescription\n    );\n\n    if (firstSet.length || secondSet.length) {\n      queryFiltersArray = firstSet.concat(secondSet);\n    }\n  }\n\n  const queryPromises = [];\n\n  queryFiltersArray.forEach(filter => {\n    const searchStudiesPromise = OHIF.studies.searchStudies(server, filter);\n    queryPromises.push(searchStudiesPromise);\n  });\n\n  const lotsOfStudies = await Promise.all(queryPromises);\n  const studies = [];\n  const allowedUIDs = [];\n\n  if (group !== '') {\n    const config = {\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('access')}`,\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    };\n    const res = await axiosInstance.get(\n      `/api/view_studies?groupName=${group}&user=${\n        user['email']\n      }`,\n      config\n    );\n    if (res.data.Studies === \"You don't belong to this group!\") {\n      alert(\"You don't belong to this group!\");\n    } else {\n      let studiesIDs = Object.keys(res.data.Studies);\n\n      lotsOfStudies.forEach(arrayOfStudies => {\n        if (arrayOfStudies) {\n          arrayOfStudies.forEach(study => {\n            if (\n              !studies.some(\n                s => s.StudyInstanceUID === study.StudyInstanceUID\n              ) &&\n              studiesIDs.includes(study.StudyInstanceUID) &&\n              study.modalities !== 'SR'\n            ) {\n              study['user_permissions'] =\n                res.data.Studies[study.StudyInstanceUID]['user_permissions'];\n              study['user'] = res.data.Studies[study.StudyInstanceUID]['user'];\n              studies.push(study);\n              allowedUIDs.push(study['StudyInstanceUID']);\n            }\n          });\n        }\n      });\n    }\n  } else {\n    const accessStudies = await axiosInstance\n      .get(`/api/image/?user=${user.email}`, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `JWT ${localStorage.getItem('access')}`,\n        },\n      })\n      .then(res => {\n        return res;\n      })\n      .catch(error => {\n        return error.response;\n      });\n\n    let allowedStudies = [];\n    let info = {};\n\n    accessStudies.data.forEach(study => {\n      info[study['study_uid']] = {\n        user: study['user'],\n        user_permissions: study['user_permissions'],\n      };\n      allowedStudies.push(study['study_uid']);\n    });\n\n    // Flatten and dedupe\n    lotsOfStudies.forEach(arrayOfStudies => {\n      if (arrayOfStudies) {\n        arrayOfStudies.forEach(study => {\n          if (\n            !studies.some(s => s.StudyInstanceUID === study.StudyInstanceUID) &&\n            allowedStudies.includes(study.StudyInstanceUID) &&\n            study.modalities !== 'SR'\n          ) {\n            study['user_permissions'] =\n              info[study.StudyInstanceUID]['user_permissions'];\n            study['user'] = info[study.StudyInstanceUID]['user'];\n            studies.push(study);\n            allowedUIDs.push(study['StudyInstanceUID']);\n          }\n        });\n      }\n    });\n  }\n\n  const studiesAccessControl = localStorage.getItem('studyAccessControl');\n  const studiesEditControl = localStorage.getItem('studyEditControl');\n\n  if (!studiesEditControl) {\n    let content = {};\n    studies.forEach(function(study) {\n      let studyUID = study['StudyInstanceUID'];\n      if (\n        localStorage.getItem('HealthProfessional_Authenticated') &&\n        !study['user_permissions'].includes('Edit Studies') &&\n        study['user'] !== user['email']\n      ) {\n        content[studyUID] = -1;\n      } else {\n        content[studyUID] = 0;\n      }\n    });\n    localStorage.setItem('studyEditControl', JSON.stringify(content));\n  } else {\n    let studiesMap = JSON.parse(studiesEditControl);\n    let studiesMapKeys = Object.keys(studiesMap);\n\n    studies.forEach(function(study) {\n      let studyUID = study['StudyInstanceUID'];\n      if (!studiesMapKeys.includes(studyUID)) {\n        if (\n          localStorage.getItem('HealthProfessional_Authenticated') &&\n          !study['user_permissions'].includes('Edit Studies') &&\n          study['user'] !== user['email']\n        ) {\n          studiesMap[studyUID] = -1;\n        } else {\n          studiesMap[studyUID] = 0;\n        }\n      }\n    });\n    studiesMapKeys.forEach(function(key) {\n      if (!allowedUIDs.includes(key)) {\n        delete studiesMap[key];\n      }\n    });\n    localStorage.setItem('studyEditControl', JSON.stringify(studiesMap));\n  }\n\n  if (!studiesAccessControl) {\n    let content = {};\n    studies.forEach(function(study) {\n      let studyUID = study['StudyInstanceUID'];\n      if (\n        localStorage.getItem('HealthProfessional_Authenticated') &&\n        !study['user_permissions'].includes('View Studies Metadata') &&\n        study['user'] !== user['email']\n      ) {\n        content[studyUID] = -1;\n      } else {\n        content[studyUID] = 0;\n      }\n    });\n    localStorage.setItem('studyAccessControl', JSON.stringify(content));\n  } else {\n    let studiesMap = JSON.parse(studiesAccessControl);\n    let studiesMapKeys = Object.keys(studiesMap);\n\n    studies.forEach(function(study) {\n      let studyUID = study['StudyInstanceUID'];\n      if (!studiesMapKeys.includes(studyUID)) {\n        if (\n          localStorage.getItem('HealthProfessional_Authenticated') &&\n          !study['user_permissions'].includes('View Studies Metadata') &&\n          study['user'] !== user['email']\n        ) {\n          studiesMap[studyUID] = -1;\n        } else {\n          studiesMap[studyUID] = 0;\n        }\n      }\n    });\n    studiesMapKeys.forEach(function(key) {\n      if (!allowedUIDs.includes(key)) {\n        delete studiesMap[key];\n      }\n    });\n    localStorage.setItem('studyAccessControl', JSON.stringify(studiesMap));\n  }\n\n  return studies;\n}\n\nfunction _getQueryFiltersForValue(filters, fields, value) {\n  const queryFilters = [];\n\n  if (value === '' || !value) {\n    return queryFilters;\n  }\n\n  fields.forEach(field => {\n    const filter = Object.assign(\n      {\n        PatientID: '',\n        PatientName: '',\n        AccessionNumber: '',\n        StudyDescription: '',\n        ModalitiesInStudy: '',\n      },\n      filters\n    );\n\n    filter[field] = value;\n    queryFilters.push(filter);\n  });\n\n  return queryFilters;\n}\n\nexport default withRouter(StudyListRoute);\n","import { connect } from 'react-redux';\n\nimport StudyListRoute from './StudyListRoute.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n    user: state.auth.user,\n  };\n};\n\nconst ConnectedStudyList = connect(\n  mapStateToProps,\n  null\n)(StudyListRoute);\n\nexport default ConnectedStudyList;\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport ConnectedStudyList from './../../../viewer/src/studyList/ConnectedStudyList.js';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.withCredentials = true;\n\nconst View_studies = ({ match }) => {\n  return <ConnectedStudyList group={match.params.name} />;\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(View_studies);\n","import log from '../log.js';\n\n/**\n * The definition of a command\n *\n * @typedef {Object} CommandDefinition\n * @property {Function} commandFn - Command to call\n * @property {Array} storeContexts - Array of string of modules required from store\n * @property {Object} options - Object of params to pass action\n */\n\n/**\n * The Commands Manager tracks named commands (or functions) that are scoped to\n * a context. When we attempt to run a command with a given name, we look for it\n * in our active contexts. If found, we run the command, passing in any application\n * or call specific data specified in the command's definition.\n *\n * NOTE: A more robust version of the CommandsManager lives in v1. If you're looking\n * to extend this class, please check it's source before adding new methods.\n */\nexport class CommandsManager {\n  constructor({ getAppState, getActiveContexts } = {}) {\n    this.contexts = {};\n\n    if (!getAppState || !getActiveContexts) {\n      log.warn(\n        'CommandsManager was instantiated without getAppState() or getActiveContexts()'\n      );\n    }\n\n    this._getAppState = getAppState;\n    this._getActiveContexts = getActiveContexts;\n  }\n\n  /**\n   * Allows us to create commands \"per context\". An example would be the \"Cornerstone\"\n   * context having a `SaveImage` command, and the \"VTK\" context having a `SaveImage`\n   * command. The distinction of a context allows us to call the command in either\n   * context, and have faith that the correct command will be run.\n   *\n   * @method\n   * @param {string} contextName - Namespace for commands\n   * @returns {undefined}\n   */\n  createContext(contextName) {\n    if (!contextName) {\n      return;\n    }\n\n    if (this.contexts[contextName]) {\n      return this.clearContext(contextName);\n    }\n\n    this.contexts[contextName] = {};\n  }\n\n  /**\n   * Returns all command definitions for a given context\n   *\n   * @method\n   * @param {string} contextName - Namespace for commands\n   * @returns {Object} - the matched context\n   */\n  getContext(contextName) {\n    const context = this.contexts[contextName];\n\n    if (!context) {\n      return;\n    }\n\n    return context;\n  }\n\n  /**\n   * Clears all registered commands for a given context.\n   *\n   * @param {string} contextName - Namespace for commands\n   * @returns {undefined}\n   */\n  clearContext(contextName) {\n    if (!contextName) {\n      return;\n    }\n\n    this.contexts[contextName] = {};\n  }\n\n  /**\n   * Register a new command with the command manager. Scoped to a context, and\n   * with a definition to assist command callers w/ providing the necessary params\n   *\n   * @method\n   * @param {string} contextName - Namespace for command; often scoped to the extension that added it\n   * @param {string} commandName - Unique name identifying the command\n   * @param {CommandDefinition} definition - {@link CommandDefinition}\n   */\n  registerCommand(contextName, commandName, definition) {\n    if (typeof definition !== 'object') {\n      return;\n    }\n\n    const context = this.getContext(contextName);\n    if (!context) {\n      return;\n    }\n\n    context[commandName] = definition;\n  }\n\n  /**\n   * Finds a command with the provided name if it exists in the specified context,\n   * or a currently active context.\n   *\n   * @method\n   * @param {String} commandName - Command to find\n   * @param {String} [contextName] - Specific command to look in. Defaults to current activeContexts\n   */\n  getCommand(commandName, contextName) {\n    let contexts = [];\n\n    if (contextName) {\n      const context = this.getContext(contextName);\n      if (context) {\n        contexts.push(context);\n      }\n    } else {\n      const activeContexts = this._getActiveContexts();\n      activeContexts.forEach(activeContext => {\n        const context = this.getContext(activeContext);\n        if (context) {\n          contexts.push(context);\n        }\n      });\n    }\n\n    if (contexts.length === 0) {\n      return;\n    }\n\n    let foundCommand;\n    contexts.forEach(context => {\n      if (context[commandName]) {\n        foundCommand = context[commandName];\n      }\n    });\n\n    return foundCommand;\n  }\n\n  /**\n   *\n   * @method\n   * @param {String} commandName\n   * @param {Object} [options={}] - Extra options to pass the command. Like a mousedown event\n   * @param {String} [contextName]\n   */\n  runCommand(commandName, options = {}, contextName) {\n    const definition = this.getCommand(commandName, contextName);\n    if (!definition) {\n      log.warn(`Command \"${commandName}\" not found in current context`);\n      return;\n    }\n\n    const { commandFn, storeContexts = [] } = definition;\n    const definitionOptions = definition.options;\n\n    let commandParams = {};\n    const appState = this._getAppState();\n    storeContexts.forEach(context => {\n      commandParams[context] = appState[context];\n    });\n\n    commandParams = Object.assign(\n      {},\n      commandParams, // Required store contexts\n      definitionOptions, // \"Command configuration\"\n      options // \"Time of call\" info\n    );\n\n    if (typeof commandFn !== 'function') {\n      log.warn(`No commandFn was defined for command \"${commandName}\"`);\n      return;\n    } else {\n      return commandFn(commandParams);\n    }\n  }\n}\n\nexport default CommandsManager;\n","import hotkeys from './../utils/hotkeys';\nimport log from './../log.js';\n\n/**\n *\n *\n * @typedef {Object} HotkeyDefinition\n * @property {String} commandName - Command to call\n * @property {String} label - Display name for hotkey\n * @property {String[]} keys - Keys to bind; Follows Mousetrap.js binding syntax\n */\n\nexport class HotkeysManager {\n  constructor(commandsManager, servicesManager) {\n    this.hotkeyDefinitions = {};\n    this.hotkeyDefaults = [];\n    this.isEnabled = true;\n\n    if (!commandsManager) {\n      log.warn(\n        'HotkeysManager instantiated without a commandsManager. Hotkeys will be unable to find and run commands.'\n      );\n    }\n\n    this._servicesManager = servicesManager;\n    this._commandsManager = commandsManager;\n  }\n\n  /**\n   * Exposes Mousetrap.js's `.record` method, added by the record plugin.\n   *\n   * @param {*} event\n   */\n  record(event) {\n    return hotkeys.record(event);\n  }\n\n  /**\n   * Disables all hotkeys. Hotkeys added while disabled will not listen for\n   * input.\n   */\n  disable() {\n    this.isEnabled = false;\n    hotkeys.pause();\n  }\n\n  /**\n   * Enables all hotkeys.\n   */\n  enable() {\n    this.isEnabled = true;\n    hotkeys.unpause();\n  }\n\n  /**\n   * Registers a list of hotkeydefinitions.\n   *\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions\n   */\n  setHotkeys(hotkeyDefinitions = []) {\n    try {\n      const definitions = this._getValidDefinitions(hotkeyDefinitions);\n\n      definitions.forEach(definition => this.registerHotkeys(definition));\n    } catch (error) {\n      const {\n        UINotificationService,\n        LoggerService,\n      } = this._servicesManager.services;\n      const message = 'Erro while setting hotkeys';\n      LoggerService.error({ error, message });\n      UINotificationService.show({\n        title: 'Hotkeys Manager',\n        message,\n        type: 'error',\n      });\n    }\n  }\n\n  /**\n   * Set default hotkey bindings. These\n   * values are used in `this.restoreDefaultBindings`.\n   *\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions\n   */\n  setDefaultHotKeys(hotkeyDefinitions = []) {\n    const definitions = this._getValidDefinitions(hotkeyDefinitions);\n\n    this.hotkeyDefaults = definitions;\n  }\n\n  /**\n   * Take hotkey definitions that can be an array or object and make sure that it\n   * returns an array of hotkeys\n   *\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions\n   */\n  _getValidDefinitions(hotkeyDefinitions) {\n    const definitions = Array.isArray(hotkeyDefinitions)\n      ? [...hotkeyDefinitions]\n      : this._parseToArrayLike(hotkeyDefinitions);\n\n    return definitions;\n  }\n\n  /**\n   * It parses given object containing hotkeyDefinition to array like.\n   * Each property of given object will be mapped to an object of an array. And its property name will be the value of a property named as commandName\n   *\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions={}] Contains hotkeys definitions\n   * @returns {HotkeyDefinition[]}\n   */\n  _parseToArrayLike(hotkeyDefinitionsObj = {}) {\n    const copy = { ...hotkeyDefinitionsObj };\n    return Object.entries(copy).map(entryValue =>\n      this._parseToHotKeyObj(entryValue[0], entryValue[1])\n    );\n  }\n\n  /**\n   * Return HotkeyDefinition object like based on given property name and property value\n   * @param {string} propertyName property name of hotkey definition object\n   * @param {object} propertyValue property value of hotkey definition object\n   *\n   * @example\n   *\n   * const hotKeyObj = {hotKeyDefA: {keys:[],....}}\n   *\n   * const parsed = _parseToHotKeyObj(Object.keys(hotKeyDefA)[0], hotKeyObj[hotKeyDefA]);\n   *  {\n   *   commandName: hotKeyDefA,\n   *   keys: [],\n   *   ....\n   *  }\n   *\n   */\n  _parseToHotKeyObj(propertyName, propertyValue) {\n    return {\n      commandName: propertyName,\n      ...propertyValue,\n    };\n  }\n\n  /**\n   * (unbinds and) binds the specified command to one or more key combinations.\n   * When a hotkey combination is triggered, the command name and active contexts\n   * are used to locate the correct command to call.\n   *\n   * @param {HotkeyDefinition} commandName\n   * @param {String} extension\n   * @returns {undefined}\n   */\n  registerHotkeys({ commandName, keys, label } = {}, extension) {\n    if (!commandName) {\n      log.warn(`No command was defined for hotkey \"${keys}\"`);\n      return;\n    }\n\n    const previouslyRegisteredDefinition = this.hotkeyDefinitions[commandName];\n\n    if (previouslyRegisteredDefinition) {\n      const previouslyRegisteredKeys = previouslyRegisteredDefinition.keys;\n      this._unbindHotkeys(commandName, previouslyRegisteredKeys);\n      log.info(`Unbinding ${commandName} from ${previouslyRegisteredKeys}`);\n    }\n\n    // Set definition & bind\n    this.hotkeyDefinitions[commandName] = { keys, label };\n    this._bindHotkeys(commandName, keys);\n    log.info(`Binding ${commandName} to ${keys}`);\n  }\n\n  /**\n   * Uses most recent\n   *\n   * @returns {undefined}\n   */\n  restoreDefaultBindings() {\n    this.setHotkeys(this.hotkeyDefaults);\n  }\n\n  /**\n   *\n   */\n  destroy() {\n    this.hotkeyDefaults = [];\n    this.hotkeyDefinitions = {};\n    hotkeys.reset();\n  }\n\n  /**\n   * Binds one or more set of hotkey combinations for a given command\n   *\n   * @private\n   * @param {string} commandName - The name of the command to trigger when hotkeys are used\n   * @param {string[]} keys - One or more key combinations that should trigger command\n   * @returns {undefined}\n   */\n  _bindHotkeys(commandName, keys) {\n    const isKeyDefined = keys === '' || keys === undefined;\n    if (isKeyDefined) {\n      return;\n    }\n\n    const isKeyArray = keys instanceof Array;\n    const combinedKeys = isKeyArray ? keys.join('+') : keys;\n\n    hotkeys.bind(combinedKeys, evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this._commandsManager.runCommand(commandName, { evt });\n    });\n  }\n\n  /**\n   * unbinds one or more set of hotkey combinations for a given command\n   *\n   * @private\n   * @param {string} commandName - The name of the previously bound command\n   * @param {string[]} keys - One or more sets of previously bound keys\n   * @returns {undefined}\n   */\n  _unbindHotkeys(commandName, keys) {\n    const isKeyDefined = keys !== '' && keys !== undefined;\n    if (!isKeyDefined) {\n      return;\n    }\n\n    const isKeyArray = keys instanceof Array;\n    if (isKeyArray) {\n      const combinedKeys = keys.join('+');\n      this._unbindHotkeys(commandName, combinedKeys);\n      return;\n    }\n\n    hotkeys.unbind(keys);\n  }\n}\n\nexport default HotkeysManager;\n\n// Commands Contexts:\n\n// --> Name and Priority\n// GLOBAL: 0\n// VIEWER::CORNERSTONE: 1\n// VIEWER::VTK: 1\n","export default {\r\n  Abdomen: 'ABDOMEN',\r\n  'Abdomen and Pelvis': 'ABDOMENPELVIS',\r\n  'Adrenal gland': 'ADRENAL',\r\n  'Ankle joint': 'ANKLE',\r\n  Aorta: 'AORTA',\r\n  Axilla: 'AXILLA',\r\n  Back: 'BACK',\r\n  Bladder: 'BLADDER',\r\n  Brain: 'BRAIN',\r\n  Breast: 'BREAST',\r\n  Bronchus: 'BRONCHUS',\r\n  Buttock: 'BUTTOCK',\r\n  Calcaneus: 'CALCANEUS',\r\n  'Calf of leg': 'CALF',\r\n  'Carotid Artery': 'CAROTID',\r\n  Cerebellum: 'CEREBELLUM',\r\n  'Cervical spine': 'CSPINE',\r\n  'Cervico-thoracic spine': 'CTSPINE',\r\n  Cervix: 'CERVIX',\r\n  Cheek: 'CHEEK',\r\n  Chest: 'CHEST',\r\n  'Chest, Abdomen and Pelvis': 'CHESTABDPELVIS',\r\n  'Chest and Abdomen': 'CHESTABDOMEN',\r\n  'Circle of Willis': 'CIRCLEOFWILLIS',\r\n  Clavicle: 'CLAVICLE',\r\n  Coccyx: 'COCCYX',\r\n  Colon: 'COLON',\r\n  Cornea: 'CORNEA',\r\n  'Coronary artery': 'CORONARYARTERY',\r\n  Duodenum: 'DUODENUM',\r\n  Ear: 'EAR',\r\n  'Elbow joint': 'ELBOW',\r\n  'Entire body': 'WHOLEBODY',\r\n  Esophagus: 'ESOPHAGUS',\r\n  Extremity: 'EXTREMITY',\r\n  Eye: 'EYE',\r\n  Eyelid: 'EYELID',\r\n  Face: 'FACE',\r\n  Femur: 'FEMUR',\r\n  Finger: 'FINGER',\r\n  Foot: 'FOOT',\r\n  Gallbladder: 'GALLBLADDER',\r\n  Hand: 'HAND',\r\n  Head: 'HEAD',\r\n  'Head and Neck': 'HEADNECK',\r\n  Heart: 'HEART',\r\n  'Hip joint': 'HIP',\r\n  Humerus: 'HUMERUS',\r\n  Ileum: 'ILEUM',\r\n  Ilium: 'ILIUM',\r\n  'Internal Auditory Canal': 'IAC',\r\n  'Jaw region': 'JAW',\r\n  Jejunum: 'JEJUNUM',\r\n  Kidney: 'KIDNEY',\r\n  Knee: 'KNEE',\r\n  Larynx: 'LARYNX',\r\n  Liver: 'LIVER',\r\n  'Lower leg': 'LEG',\r\n  'Lumbar spine': 'LSPINE',\r\n  'Lumbo-sacral spine': 'LSSPINE',\r\n  Lung: 'LUNG',\r\n  Mandible: 'JAW',\r\n  Maxilla: 'MAXILLA',\r\n  Mediastinum: 'MEDIASTINUM',\r\n  Mouth: 'MOUTH',\r\n  Neck: 'NECK',\r\n  'Neck, Chest, Abdomen and Pelvis': 'NECKCHESTABDPELV',\r\n  'Neck, Chest and Abdomen': 'NECKCHESTABDOMEN',\r\n  'Neck and Chest': 'NECKCHEST',\r\n  Nose: 'NOSE',\r\n  'Orbital structure': 'ORBIT',\r\n  Ovary: 'OVARY',\r\n  Pancreas: 'PANCREAS',\r\n  'Parotid gland': 'PAROTID',\r\n  Patella: 'PATELLA',\r\n  Pelvis: 'PELVIS',\r\n  Penis: 'PENIS',\r\n  Pharynx: 'PHARYNX',\r\n  Prostate: 'PROSTATE',\r\n  Radius: 'RADIUS',\r\n  'Radius and ulna': 'RADIUSULNA',\r\n  Rectum: 'RECTUM',\r\n  Rib: 'RIB',\r\n  Sacrum: 'SSPINE',\r\n  Scalp: 'SCALP',\r\n  Scapula: 'SCAPULA',\r\n  Sclera: 'SCLERA',\r\n  Scrotum: 'SCROTUM',\r\n  Shoulder: 'SHOULDER',\r\n  Skull: 'SKULL',\r\n  Spine: 'SPINE',\r\n  Spleen: 'SPLEEN',\r\n  Sternum: 'STERNUM',\r\n  Stomach: 'STOMACH',\r\n  'Submandibular gland': 'SUBMANDIBULAR',\r\n  'Temporomandibular joint': 'TMJ',\r\n  Testis: 'TESTIS',\r\n  Thigh: 'THIGH',\r\n  'Thoracic spine': 'TSPINE',\r\n  'Thoraco-lumbar spine': 'TLSPINE',\r\n  Thumb: 'THUMB',\r\n  Thymus: 'THYMUS',\r\n  Thyroid: 'THYROID',\r\n  Tibia: 'TIBIA',\r\n  'Tibia and fibula': 'TIBIAFIBULA',\r\n  Toe: 'TOE',\r\n  Tongue: 'TONGUE',\r\n  Trachea: 'TRACHEA',\r\n  Ulna: 'ULNA',\r\n  'Upper arm': 'ARM',\r\n  Ureter: 'URETER',\r\n  Urethra: 'URETHRA',\r\n  Uterus: 'UTERUS',\r\n  Vagina: 'VAGINA',\r\n  Vulva: 'VULVA',\r\n  'Wrist joint': 'WRIST',\r\n  Zygoma: 'ZYGOMA',\r\n};\r\n","export const CodeNameCodeSequenceValues = {\n  ImagingMeasurementReport: '126000',\n  ImageLibrary: '111028',\n  ImagingMeasurements: '126010',\n  MeasurementGroup: '125007',\n  ImageLibraryGroup: '126200',\n  TrackingUniqueIdentifier: '112040',\n  TrackingIdentifier: '112039',\n  Finding: '121071',\n  FindingSite: 'G-C0E3', // SRT\n  CornerstoneFreeText: 'CORNERSTONEFREETEXT', // CST4\n  Score: '246262008',\n};\n\nexport const RELATIONSHIP_TYPE = {\n  INFERRED_FROM: 'INFERRED FROM',\n  SELECTED_FROM: 'SELECTED FROM',\n};\n\nexport const CodingSchemeDesignators = {\n  SRT: 'SRT',\n  cornerstoneTools4: 'CST4',\n};\n\nexport default {\n  CodeNameCodeSequenceValues,\n  RELATIONSHIP_TYPE,\n  CodingSchemeDesignators,\n};\n","const getSequenceAsArray = sequence =>\n  Array.isArray(sequence) ? sequence : [sequence];\n\nexport default getSequenceAsArray;\n","import getSequenceAsArray from './getSequenceAsArray';\nimport { CodeNameCodeSequenceValues } from '../enums';\n\nconst getMergedContentSequencesByTrackingUniqueIdentifiers = MeasurementGroups => {\n  const mergedContentSequencesByTrackingUniqueIdentifiers = {};\n\n  MeasurementGroups.forEach(MeasurementGroup => {\n    const ContentSequence = getSequenceAsArray(\n      MeasurementGroup.ContentSequence\n    );\n\n    const TrackingUniqueIdentifierItem = ContentSequence.find(\n      item =>\n        item.ConceptNameCodeSequence.CodeValue ===\n        CodeNameCodeSequenceValues.TrackingUniqueIdentifier\n    );\n\n    if (!TrackingUniqueIdentifierItem) {\n      console.warn(\n        'No Tracking Unique Identifier, skipping ambiguous measurement.'\n      );\n    }\n\n    const trackingUniqueIdentifier = TrackingUniqueIdentifierItem.UID;\n\n    if (\n      mergedContentSequencesByTrackingUniqueIdentifiers[\n        trackingUniqueIdentifier\n      ] === undefined\n    ) {\n      // Add the full ContentSequence\n      mergedContentSequencesByTrackingUniqueIdentifiers[\n        trackingUniqueIdentifier\n      ] = [...ContentSequence];\n    } else {\n      // Add the ContentSequence minus the tracking identifier, as we have this\n      // Information in the merged ContentSequence anyway.\n      ContentSequence.forEach(item => {\n        if (\n          item.ConceptNameCodeSequence.CodeValue !==\n          CodeNameCodeSequenceValues.TrackingUniqueIdentifier\n        ) {\n          mergedContentSequencesByTrackingUniqueIdentifiers[\n            trackingUniqueIdentifier\n          ].push(item);\n        }\n      });\n    }\n  });\n\n  return mergedContentSequencesByTrackingUniqueIdentifiers;\n};\n\nexport default getMergedContentSequencesByTrackingUniqueIdentifiers;\n","const getLabelFromMeasuredValueSequence = (\n  ConceptNameCodeSequence,\n  MeasuredValueSequence\n) => {\n  const { CodeMeaning } = ConceptNameCodeSequence;\n  const { NumericValue, MeasurementUnitsCodeSequence } = MeasuredValueSequence;\n  const { CodeValue } = MeasurementUnitsCodeSequence;\n\n  const formatedNumericValue = NumericValue\n    ? Number(NumericValue).toFixed(1)\n    : '';\n\n  return {\n    label: CodeMeaning,\n    value: `${formatedNumericValue} ${CodeValue}`,\n  }; // E.g. Long Axis: 31.0 mm\n};\n\nexport default getLabelFromMeasuredValueSequence;\n","const getCoordsFromSCOORDOrSCOORD3D = (graphicItem, displaySet) => {\n  const { ValueType, RelationshipType, GraphicType, GraphicData } = graphicItem;\n\n  // if (RelationshipType !== RELATIONSHIP_TYPE.INFERRED_FROM) {\n  //   console.warn(\n  //     `Relationshiptype === ${RelationshipType}. Cannot deal with NON TID-1400 SCOORD group with RelationshipType !== \"INFERRED FROM.\"`\n  //   );\n  //   return;\n  // }\n\n  const coords = { ValueType, GraphicType, GraphicData };\n\n  // ContentSequence has length of 1 as RelationshipType === 'INFERRED FROM'\n  if (ValueType === 'SCOORD') {\n    const { ReferencedSOPSequence } = graphicItem.ContentSequence;\n    coords.ReferencedSOPSequence = ReferencedSOPSequence;\n  } else if (ValueType === 'SCOORD3D') {\n    if (graphicItem.ReferencedFrameOfReferenceUID) {\n      coords.ReferencedFrameOfReferenceSequence = graphicItem.ReferencedFrameOfReferenceUID;\n    } else if (graphicItem.ContentSequence) {\n      const {\n        ReferencedFrameOfReferenceSequence,\n      } = graphicItem.ContentSequence;\n      coords.ReferencedFrameOfReferenceSequence = ReferencedFrameOfReferenceSequence;\n    }\n  }\n\n  return coords;\n};\n\nexport default getCoordsFromSCOORDOrSCOORD3D;\n","import getLabelFromMeasuredValueSequence from './getLabelFromMeasuredValueSequence';\nimport getCoordsFromSCOORDOrSCOORD3D from './getCoordsFromSCOORDOrSCOORD3D';\nimport { RELATIONSHIP_TYPE, CodeNameCodeSequenceValues } from '../enums';\n\n/**\n * TID 1410 Planar ROI Measurements and Qualitative Evaluations.\n *\n * @param {*} mergedContentSequence\n * @returns\n */\nconst processTID1410Measurement = (mergedContentSequence, displaySet) => {\n  // Need to deal with TID 1410 style measurements, which will have a SCOORD or SCOORD3D at the top level,\n  // And non-geometric representations where each NUM has \"INFERRED FROM\" SCOORD/SCOORD3D\n\n  const graphicItem = mergedContentSequence.find(\n    group => group.ValueType === 'SCOORD' || group.ValueType === 'SCOORD3D'\n  );\n\n  if (!graphicItem) {\n    console.warn(\n      `graphic ValueType ${graphicItem.ValueType} not currently supported, skipping annotation.`\n    );\n    return;\n  }\n\n  const UIDREFContentItem = mergedContentSequence.find(\n    group => group.ValueType === 'UIDREF'\n  );\n\n  const TrackingIdentifierContentItem = mergedContentSequence.find(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.TrackingIdentifier\n  );\n\n  const NUMContentItems = mergedContentSequence.filter(\n    group => group.ValueType === 'NUM'\n  );\n\n  const measurement = {\n    loaded: false,\n    labels: [],\n    coords: [getCoordsFromSCOORDOrSCOORD3D(graphicItem, displaySet)],\n    TrackingUniqueIdentifier: UIDREFContentItem.UID,\n    TrackingIdentifier: TrackingIdentifierContentItem.TextValue,\n  };\n\n  NUMContentItems.forEach(item => {\n    const {\n      ConceptNameCodeSequence,\n      ContentSequence,\n      MeasuredValueSequence,\n    } = item;\n\n    if (\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.Score\n    ) {\n      ContentSequence.forEach(item => {\n        if (\n          [\n            RELATIONSHIP_TYPE.SELECTED_FROM,\n            RELATIONSHIP_TYPE.INFERRED_FROM,\n          ].includes(item.RelationshipType)\n        ) {\n          if (item.ReferencedSOPSequence) {\n            measurement.coords.forEach(coord => {\n              coord.ReferencedSOPSequence = item.ReferencedSOPSequence;\n            });\n          }\n        }\n      });\n    }\n\n    if (MeasuredValueSequence) {\n      measurement.labels.push(\n        getLabelFromMeasuredValueSequence(\n          ConceptNameCodeSequence,\n          MeasuredValueSequence\n        )\n      );\n    }\n  });\n\n  return measurement;\n};\n\nexport default processTID1410Measurement;\n","import getLabelFromMeasuredValueSequence from './getLabelFromMeasuredValueSequence';\nimport getCoordsFromSCOORDOrSCOORD3D from './getCoordsFromSCOORDOrSCOORD3D';\nimport { CodeNameCodeSequenceValues, CodingSchemeDesignators } from '../enums';\n\nconst CORNERSTONE_FREETEXT_CODE_VALUE = 'CORNERSTONEFREETEXT';\n\nconst processNonGeometricallyDefinedMeasurement = mergedContentSequence => {\n  const NUMContentItems = mergedContentSequence.filter(\n    group => group.ValueType === 'NUM'\n  );\n\n  const UIDREFContentItem = mergedContentSequence.find(\n    group => group.ValueType === 'UIDREF'\n  );\n\n  const TrackingIdentifierContentItem = mergedContentSequence.find(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.TrackingIdentifier\n  );\n\n  const Finding = mergedContentSequence.find(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.Finding\n  );\n\n  const FindingSites = mergedContentSequence.filter(\n    item =>\n      item.ConceptNameCodeSequence.CodingSchemeDesignator ===\n        CodingSchemeDesignators.SRT &&\n      item.ConceptNameCodeSequence.CodeValue ===\n        CodeNameCodeSequenceValues.FindingSite\n  );\n\n  const measurement = {\n    loaded: false,\n    labels: [],\n    coords: [],\n    TrackingUniqueIdentifier: UIDREFContentItem.UID,\n    TrackingIdentifier: TrackingIdentifierContentItem.TextValue,\n  };\n\n  if (\n    Finding &&\n    Finding.ConceptCodeSequence.CodingSchemeDesignator ===\n      CodingSchemeDesignators.cornerstoneTools4 &&\n    Finding.ConceptCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.CornerstoneFreeText\n  ) {\n    measurement.labels.push({\n      label: CORNERSTONE_FREETEXT_CODE_VALUE,\n      value: Finding.ConceptCodeSequence.CodeMeaning,\n    });\n  }\n\n  // TODO -> Eventually hopefully support SNOMED or some proper code library, just free text for now.\n  if (FindingSites.length) {\n    const cornerstoneFreeTextFindingSite = FindingSites.find(\n      FindingSite =>\n        FindingSite.ConceptCodeSequence.CodingSchemeDesignator ===\n          CodingSchemeDesignators.cornerstoneTools4 &&\n        FindingSite.ConceptCodeSequence.CodeValue ===\n          CodeNameCodeSequenceValues.CornerstoneFreeText\n    );\n\n    if (cornerstoneFreeTextFindingSite) {\n      measurement.labels.push({\n        label: CORNERSTONE_FREETEXT_CODE_VALUE,\n        value: cornerstoneFreeTextFindingSite.ConceptCodeSequence.CodeMeaning,\n      });\n    }\n  }\n\n  NUMContentItems.forEach(item => {\n    const {\n      ConceptNameCodeSequence,\n      ContentSequence,\n      MeasuredValueSequence,\n    } = item;\n\n    if (!ContentSequence) {\n      console.warn(`Graphic ${ContentSequence} missing, skipping annotation.`);\n\n      return;\n    }\n\n    const { ValueType } = ContentSequence;\n\n    if (!ValueType === 'SCOORD' && !ValueType === 'SCOORD3D') {\n      console.warn(\n        `Graphic ${ValueType} not currently supported, skipping annotation.`\n      );\n\n      return;\n    }\n\n    const coords = getCoordsFromSCOORDOrSCOORD3D(ContentSequence);\n\n    if (coords) {\n      measurement.coords.push(coords);\n    }\n\n    if (MeasuredValueSequence) {\n      measurement.labels.push(\n        getLabelFromMeasuredValueSequence(\n          ConceptNameCodeSequence,\n          MeasuredValueSequence\n        )\n      );\n    }\n  });\n\n  return measurement;\n};\n\nexport default processNonGeometricallyDefinedMeasurement;\n","import processTID1410Measurement from './processTID1410Measurement';\nimport processNonGeometricallyDefinedMeasurement from './processNonGeometricallyDefinedMeasurement';\n\nconst processMeasurement = (mergedContentSequence, displaySet) => {\n  if (\n    mergedContentSequence.some(\n      group => group.ValueType === 'SCOORD' || group.ValueType === 'SCOORD3D'\n    )\n  ) {\n    return processTID1410Measurement(mergedContentSequence, displaySet);\n  }\n\n  return processNonGeometricallyDefinedMeasurement(mergedContentSequence);\n};\n\nexport default processMeasurement;\n","import { CodeNameCodeSequenceValues } from '../enums';\nimport getSequenceAsArray from './getSequenceAsArray';\nimport getMergedContentSequencesByTrackingUniqueIdentifiers from './getMergedContentSequencesByTrackingUniqueIdentifiers';\nimport processMeasurement from './processMeasurement';\n\nconst getMeasurements = (\n  ImagingMeasurementReportContentSequence,\n  displaySet\n) => {\n  const ImagingMeasurements = ImagingMeasurementReportContentSequence.find(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.ImagingMeasurements\n  );\n\n  const MeasurementGroups = getSequenceAsArray(\n    ImagingMeasurements.ContentSequence\n  ).filter(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.MeasurementGroup\n  );\n\n  const mergedContentSequencesByTrackingUniqueIdentifiers = getMergedContentSequencesByTrackingUniqueIdentifiers(\n    MeasurementGroups\n  );\n\n  let measurements = [];\n\n  Object.keys(mergedContentSequencesByTrackingUniqueIdentifiers).forEach(\n    trackingUniqueIdentifier => {\n      const mergedContentSequence =\n        mergedContentSequencesByTrackingUniqueIdentifiers[\n          trackingUniqueIdentifier\n        ];\n\n      const measurement = processMeasurement(mergedContentSequence, displaySet);\n      if (measurement) {\n        measurements.push(measurement);\n      }\n    }\n  );\n\n  return measurements;\n};\n\nexport default getMeasurements;\n","import getSequenceAsArray from './getSequenceAsArray';\nimport { CodeNameCodeSequenceValues } from '../enums';\n\nconst getReferencedImagesList = ImagingMeasurementReportContentSequence => {\n  const referencedImages = [];\n\n  const ImageLibrary = ImagingMeasurementReportContentSequence.find(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.ImageLibrary\n  );\n\n  if (!ImageLibrary.ContentSequence) {\n    return referencedImages;\n  }\n\n  const ImageLibraryGroup = getSequenceAsArray(\n    ImageLibrary.ContentSequence\n  ).find(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.ImageLibraryGroup\n  );\n\n  getSequenceAsArray(ImageLibraryGroup.ContentSequence).forEach(item => {\n    const { ReferencedSOPSequence } = item;\n    if (ReferencedSOPSequence) {\n      const {\n        ReferencedSOPClassUID,\n        ReferencedSOPInstanceUID,\n      } = ReferencedSOPSequence;\n\n      referencedImages.push({\n        ReferencedSOPClassUID,\n        ReferencedSOPInstanceUID,\n      });\n    }\n  });\n\n  return referencedImages;\n};\n\nexport default getReferencedImagesList;\n","import { adapters } from 'dcmjs';\n\nconst cornerstoneAdapters = adapters.Cornerstone;\n\n/**\n * Checks if the given `displaySet`can be rehydrated into the `MeasurementService`.\n *\n * @param {object} displaySet The SR `displaySet` to check.\n * @param {object[]} mappings The CornerstoneTools 4 mappings to the `MeasurementService`.\n * @returns {boolean} True if the SR can be rehydrated into the `MeasurementService`.\n */\nexport default function isRehydratable(displaySet, mappings) {\n  if (!mappings || !mappings.length) {\n    return false;\n  }\n\n  const mappingDefinitions = mappings.map(m => m.definition);\n  const { measurements } = displaySet;\n\n  const adapterKeys = Object.keys(cornerstoneAdapters).filter(\n    adapterKey =>\n      typeof cornerstoneAdapters[adapterKey]\n        .isValidCornerstoneTrackingIdentifier === 'function'\n  );\n\n  const adapters = [];\n\n  adapterKeys.forEach(key => {\n    if (mappingDefinitions.includes(key)) {\n      // Must have both a dcmjs adapter and a MeasurementService\n      // Definition in order to be a candidate for import.\n      adapters.push(cornerstoneAdapters[key]);\n    }\n  });\n\n  for (let i = 0; i < measurements.length; i++) {\n    const TrackingIdentifier = measurements[i].TrackingIdentifier;\n    const hydratable = adapters.some(adapter =>\n      adapter.isValidCornerstoneTrackingIdentifier(TrackingIdentifier)\n    );\n\n    if (hydratable) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","const TOOL_NAMES = {\n  DICOM_SR_DISPLAY_TOOL: 'DICOMSRDisplayTool',\n};\n\nexport default TOOL_NAMES;\n","export default {\n  POINT: 'POINT',\n  MULTIPOINT: 'MULTIPOINT',\n  POLYLINE: 'POLYLINE',\n  CIRCLE: 'CIRCLE',\n  ELLIPSE: 'ELLIPSE',\n  POLYGON: 'POLYGON',\n};\n","import csMath from 'cornerstone-math';\nimport SCOORD_TYPES from '../constants/scoordTypes';\nimport { inv } from 'mathjs';\n\nconst getRenderableData = (\n  GraphicType,\n  GraphicData,\n  ValueType,\n  imageMetadata\n) => {\n  let renderableData;\n\n  const orientation = imageMetadata.ImageOrientationPatient;\n  const position = imageMetadata.ImagePositionPatient;\n  const pixelSpacing = imageMetadata.PixelSpacing;\n  const sliceSpacing = imageMetadata.SliceThickness\n    ? imageMetadata.SliceThickness\n    : 1;\n  //  https://nipy.org/nibabel/dicom/dicom_orientation.html\n  const M = [\n    [\n      orientation[0] * pixelSpacing[0],\n      orientation[3] * pixelSpacing[1],\n      sliceSpacing,\n      position[0],\n    ],\n    [\n      orientation[1] * pixelSpacing[0],\n      orientation[4] * pixelSpacing[1],\n      sliceSpacing,\n      position[1],\n    ],\n    [\n      orientation[2] * pixelSpacing[0],\n      orientation[5] * pixelSpacing[1],\n      sliceSpacing,\n      position[2],\n    ],\n    [0, 0, 0, 1],\n  ];\n\n  // we need to go from 3D to pixel (cornerstone2D works in pixel coordinates),\n  // we take the inverse.\n  const M1 = inv(M);\n\n  const worldToIJK = (point, M1) => {\n    const worldPoint = {\n      x:\n        M1[0][0] * point.x + M1[0][1] * point.y + M1[0][2] * point.z + M1[0][3],\n      y:\n        M1[1][0] * point.x + M1[1][1] * point.y + M1[1][2] * point.z + M1[1][3],\n      z:\n        M1[2][0] * point.x + M1[2][1] * point.y + M1[2][2] * point.z + M1[2][3],\n    };\n    return worldPoint;\n  };\n\n  // https://dicom.innolitics.com/ciods/procedure-log/sr-document-content/00700023\n  switch (GraphicType) {\n    case SCOORD_TYPES.POINT:\n      renderableData = [];\n\n      if (ValueType === 'SCOORD3D') {\n        for (let i = 0; i < GraphicData.length; i += 3) {\n          const point = {\n            x: GraphicData[i],\n            y: GraphicData[i + 1],\n            z: GraphicData[i + 2],\n          };\n\n          renderableData.push(worldToIJK(point, M1));\n        }\n      } else {\n        for (let i = 0; i < GraphicData.length; i += 2) {\n          renderableData.push({ x: GraphicData[i], y: GraphicData[i + 1] });\n        }\n      }\n\n      break;\n    case SCOORD_TYPES.MULTIPOINT:\n      renderableData = [];\n\n      if (ValueType === 'SCOORD3D') {\n        for (let i = 0; i < GraphicData.length; i += 3) {\n          const point = {\n            x: GraphicData[i],\n            y: GraphicData[i + 1],\n            z: GraphicData[i + 2],\n          };\n\n          renderableData.push(worldToIJK(point, M1));\n        }\n      } else {\n        for (let i = 0; i < GraphicData.length; i += 2) {\n          renderableData.push({ x: GraphicData[i], y: GraphicData[i + 1] });\n        }\n      }\n\n      break;\n    case SCOORD_TYPES.POLYLINE:\n      renderableData = [];\n\n      if (ValueType === 'SCOORD3D') {\n        for (let i = 0; i < GraphicData.length; i += 3) {\n          const point = {\n            x: GraphicData[i],\n            y: GraphicData[i + 1],\n            z: GraphicData[i + 2],\n          };\n\n          renderableData.push(worldToIJK(point, M1));\n        }\n      } else {\n        for (let i = 0; i < GraphicData.length; i += 2) {\n          renderableData.push({ x: GraphicData[i], y: GraphicData[i + 1] });\n        }\n      }\n\n      break;\n    case SCOORD_TYPES.POLYGON:\n      // this is only scoord3d\n      renderableData = [];\n      for (let i = 0; i < GraphicData.length; i += 3) {\n        const point = {\n          x: GraphicData[i],\n          y: GraphicData[i + 1],\n          z: GraphicData[i + 2],\n        };\n\n        renderableData.push(worldToIJK(point, M1));\n      }\n      break;\n    case SCOORD_TYPES.CIRCLE: {\n      // this is only scoord\n      const center = { x: GraphicData[0], y: GraphicData[1] };\n      const onPerimeter = { x: GraphicData[2], y: GraphicData[3] };\n\n      const radius = csMath.point.distance(center, onPerimeter);\n\n      renderableData = {\n        center,\n        radius,\n      };\n      break;\n    }\n    case SCOORD_TYPES.ELLIPSE: {\n      console.warn('ROTATED ELLIPSE NOT YET SUPPORTED!');\n      // To Do: scoord3d ellips, need data for testing\n      const majorAxis = [\n        { x: GraphicData[0], y: GraphicData[1] },\n        { x: GraphicData[2], y: GraphicData[3] },\n      ];\n      const minorAxis = [\n        { x: GraphicData[4], y: GraphicData[5] },\n        { x: GraphicData[6], y: GraphicData[7] },\n      ];\n\n      // Calculate two opposite corners of box defined by two axes.\n\n      const minorAxisLength = csMath.point.distance(minorAxis[0], minorAxis[1]);\n\n      const minorAxisDirection = {\n        x: (minorAxis[1].x - minorAxis[0].x) / minorAxisLength,\n        y: (minorAxis[1].y - minorAxis[0].y) / minorAxisLength,\n      };\n\n      const halfMinorAxisLength = minorAxisLength / 2;\n\n      // First end point of major axis + half minor axis vector\n      const corner1 = {\n        x: majorAxis[0].x + minorAxisDirection.x * halfMinorAxisLength,\n        y: majorAxis[0].y + minorAxisDirection.y * halfMinorAxisLength,\n      };\n\n      // Second end point of major axis - half of minor axis vector\n      const corner2 = {\n        x: majorAxis[1].x - minorAxisDirection.x * halfMinorAxisLength,\n        y: majorAxis[1].y - minorAxisDirection.y * halfMinorAxisLength,\n      };\n\n      renderableData = {\n        corner1,\n        corner2,\n      };\n      break;\n    }\n  }\n\n  return renderableData;\n};\n\nexport default getRenderableData;\n","import csTools from 'cornerstone-tools';\nimport OHIF from '../../../';\n\n/** Internal imports */\nimport TOOL_NAMES from '../constants/toolNames';\nimport getRenderableData from './getRenderableData';\n\nconst globalImageIdSpecificToolStateManager =\n  csTools.globalImageIdSpecificToolStateManager;\n\n/**\n * Add a measurement to a display set.\n *\n * @param {*} measurement\n * @param {*} imageId\n * @param {*} displaySetInstanceUID\n */\nexport default function addMeasurement(\n  measurement,\n  imageId,\n  imageMetadata,\n  displaySetInstanceUID\n) {\n  // TODO -> Render rotated ellipse .\n  const toolName = TOOL_NAMES.DICOM_SR_DISPLAY_TOOL;\n\n  const measurementData = {\n    TrackingUniqueIdentifier: measurement.TrackingUniqueIdentifier,\n    renderableData: {},\n    labels: measurement.labels,\n  };\n\n  measurement.coords.forEach(coord => {\n    const { GraphicType, GraphicData, ValueType } = coord;\n\n    if (measurementData.renderableData[GraphicType] === undefined) {\n      measurementData.renderableData[GraphicType] = [];\n    }\n    measurementData.renderableData[GraphicType].push(\n      getRenderableData(GraphicType, GraphicData, ValueType, imageMetadata)\n    );\n  });\n\n  const toolState = globalImageIdSpecificToolStateManager.saveToolState();\n\n  if (toolState[imageId] === undefined) {\n    toolState[imageId] = {};\n  }\n\n  const imageIdToolState = toolState[imageId];\n\n  // If we don't have tool state for this type of tool, add an empty object\n  if (imageIdToolState[toolName] === undefined) {\n    imageIdToolState[toolName] = {\n      data: [],\n    };\n  }\n\n  const toolData = imageIdToolState[toolName];\n\n  measurementData.description = `Read-only annotation`;\n  measurementData.isReadOnly = true;\n  toolData.data.push(measurementData);\n\n  addToMeasurementApi({ measurementData, toolName, imageId });\n\n  measurement.loaded = true;\n  measurement.imageId = imageId;\n  measurement.displaySetInstanceUID = displaySetInstanceUID;\n\n  // Remove the unneeded coord now its processed, but keep the SOPInstanceUID.\n  // NOTE: We assume that each SCOORD in the MeasurementGroup maps onto one frame,\n  // It'd be super werid if it didn't anyway as a SCOORD.\n  measurement.ReferencedSOPInstanceUID =\n    measurement.coords[0].ReferencedSOPSequence.ReferencedSOPInstanceUID;\n\n  return measurement;\n}\n\nconst addToMeasurementApi = ({ measurementData, toolName, imageId }) => {\n  const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n\n  const toolType = toolName;\n  const collection = measurementApi.tools[toolType];\n  if (!collection) return;\n  if (!measurementData || measurementData.cancelled) return;\n\n  const imageAttributes = OHIF.measurements.getImageAttributes(null, imageId);\n  const measurement = Object.assign({}, measurementData, imageAttributes, {\n    lesionNamingNumber: measurementData.lesionNamingNumber,\n    userId: OHIF.user.getUserId(),\n    toolType,\n  });\n\n  const addedMeasurement = measurementApi.addMeasurement(toolType, measurement);\n  Object.assign(measurementData, addedMeasurement);\n\n  const measurementLabel = OHIF.measurements.getLabel(measurementData);\n  if (measurementLabel) {\n    measurementData.labels = [measurementLabel];\n  }\n};\n","import { ImageSet } from '../../classes';\nimport getMeasurements from './utils/getMeasurements';\nimport getReferencedImagesList from './utils/getReferencedImagesList';\nimport isRehydratable from './utils/isRehydratable';\nimport addMeasurement from './utils/addMeasurement';\n\nconst parseSCOORD3D = ({ servicesManager, displaySets }) => {\n  const { MeasurementService } = servicesManager.services;\n\n  const srDisplaySets = displaySets.filter(ds => ds.Modality === 'SR');\n\n  srDisplaySets.forEach(srDisplaySet => {\n    const firstInstance = srDisplaySet.metadata;\n    if (!firstInstance) {\n      return;\n    }\n\n    const { ContentSequence } = firstInstance;\n\n    srDisplaySet.referencedImages = getReferencedImagesList(ContentSequence);\n    srDisplaySet.measurements = getMeasurements(ContentSequence, srDisplaySet);\n    const mappings = MeasurementService.getSourceMappings(\n      'CornerstoneTools',\n      '4'\n    );\n\n    srDisplaySet.isHydrated = false;\n    srDisplaySet.isRehydratable = isRehydratable(srDisplaySet, mappings);\n    srDisplaySet.isLoaded = true;\n\n    const imageDisplaySets = displaySets.filter(\n      ds =>\n        ds.Modality !== 'SR' &&\n        ds.Modality !== 'SEG' &&\n        ds.Modality !== 'RTSTRUCT' &&\n        ds.Modality !== 'RTDOSE'\n    );\n    imageDisplaySets.forEach(imageDisplaySet => {\n      // Check currently added displaySets and add measurements if the sources exist.\n      checkIfCanAddMeasurementsToDisplaySet(srDisplaySet, imageDisplaySet);\n    });\n  });\n};\n\nconst checkIfCanAddMeasurementsToDisplaySet = (\n  srDisplaySet,\n  imageDisplaySet\n) => {\n  let measurements = srDisplaySet.measurements;\n\n  /**\n   * Look for image sets.\n   * This also filters out _this_ displaySet, as it is not an image set.\n   */\n  if (!(imageDisplaySet instanceof ImageSet)) {\n    return;\n  }\n\n  const { sopClassUIDs, images } = imageDisplaySet;\n\n  /**\n   * Filter measurements that references the correct sop class.\n   */\n  measurements = measurements.filter(measurement => {\n    return measurement.coords.some(coord => {\n      if (coord.ReferencedSOPSequence === undefined) {\n        /** we miss the referenced information. We can compare the annotation SCOORD3D coordinates with\n         * the ImagePatientPosition of the frames. However (WARNING!!!),\n         * if more than a source series is present, this logic can find the wrong frame\n         * (i.e. two source series, with the same frameOfReferenceUID,\n         * that have each a frame with the same ImagePositionPatient of the annotation 3D coordinates)\n         */\n        for (let i = 0; i < images.length; ++i) {\n          const imageMetadata = images[i].getData().metadata;\n          if (\n            imageMetadata.FrameOfReferenceUID !==\n            coord.ReferencedFrameOfReferenceSequence\n          ) {\n            continue;\n          }\n\n          let sliceNormal = [0, 0, 0];\n          const orientation = imageMetadata.ImageOrientationPatient;\n          sliceNormal[0] =\n            orientation[1] * orientation[5] - orientation[2] * orientation[4];\n          sliceNormal[1] =\n            orientation[2] * orientation[3] - orientation[0] * orientation[5];\n          sliceNormal[2] =\n            orientation[0] * orientation[4] - orientation[1] * orientation[3];\n\n          let distanceAlongNormal = 0;\n          for (let j = 0; j < 3; ++j) {\n            distanceAlongNormal +=\n              sliceNormal[j] * imageMetadata.ImagePositionPatient[j];\n          }\n\n          // assuming 1 mm tolerance\n          if (Math.abs(distanceAlongNormal - coord.GraphicData[2]) > 1) {\n            continue;\n          }\n\n          coord.ReferencedSOPSequence = {\n            ReferencedSOPClassUID: imageMetadata.SOPClassUID,\n            ReferencedSOPInstanceUID: imageMetadata.SOPInstanceUID,\n          };\n\n          break;\n        }\n\n        if (coord.ReferencedSOPSequence === undefined) {\n          return false;\n        }\n      }\n\n      return sopClassUIDs.includes(\n        coord.ReferencedSOPSequence.ReferencedSOPClassUID\n      );\n    });\n  });\n\n  /**\n   * New display set doesn't have measurements that references the correct sop class.\n   */\n  if (measurements.length === 0) {\n    return;\n  }\n\n  const imageIds = images.map(i => i.getImageId());\n  const SOPInstanceUIDs = images.map(i => i.SOPInstanceUID);\n  measurements.forEach(measurement => {\n    const { coords } = measurement;\n\n    coords.forEach(coord => {\n      if (coord.ReferencedSOPSequence !== undefined) {\n        const imageIndex = SOPInstanceUIDs.findIndex(\n          SOPInstanceUID =>\n            SOPInstanceUID ===\n            coord.ReferencedSOPSequence.ReferencedSOPInstanceUID\n        );\n        if (imageIndex > -1) {\n          const imageId = imageIds[imageIndex];\n          const imageMetadata = images[imageIndex].getData().metadata;\n          addMeasurement(\n            measurement,\n            imageId,\n            imageMetadata,\n            imageDisplaySet.displaySetInstanceUID\n          );\n        }\n      }\n    });\n  });\n};\n\nexport default parseSCOORD3D;\n","/**\n *  Should Find the requested instance metadata into the displaySets and return\n *\n * @param {Array} displaySets - List of displaySets\n * @param {string} SOPInstanceUID - sopInstanceUID to look for\n * @returns {Object} - instance metadata found\n */\nconst findInstanceMetadataBySopInstanceUID = (displaySets, SOPInstanceUID) => {\n  let instanceFound;\n\n  displaySets.find(displaySet => {\n    if (!displaySet.images) return false;\n\n    instanceFound = displaySet.images.find(\n      instanceMetadata =>\n        instanceMetadata.getSOPInstanceUID() === SOPInstanceUID\n    );\n\n    return !!instanceFound;\n  });\n\n  return instanceFound;\n};\n\nexport default findInstanceMetadataBySopInstanceUID;\n","import dcmjs from 'dcmjs';\nimport classes from '../classes';\nimport parseSCOORD3D from './SCOORD3D/parseSCOORD3D';\n\nimport findInstanceMetadataBySopInstanceUID from './utils/findInstanceMetadataBySopInstanceUid';\n\nconst { LogManager } = classes;\n\n/**\n * Function to parse the part10 array buffer that comes from a DICOM Structured report into measurementData\n * measurementData format is a viewer specific format to be stored into the redux and consumed by other components\n * (e.g. measurement table)\n *\n * @param {ArrayBuffer} part10SRArrayBuffer\n * @param {Array} displaySets\n * @param {object} external\n * @returns\n */\nconst parseDicomStructuredReport = (\n  part10SRArrayBuffer,\n  displaySets,\n  external,\n  wadorsURI // acrescentei!\n) => {\n  if (external && external.servicesManager) {\n    parseSCOORD3D({ servicesManager: external.servicesManager, displaySets });\n  }\n\n  // Get the dicom data as an Object\n  const dicomData = dcmjs.data.DicomMessage.readFile(part10SRArrayBuffer);\n  const dataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\n    dicomData.dict\n  );\n\n  const { MeasurementReport } = dcmjs.adapters.Cornerstone;\n\n  let storedMeasurementByToolType;\n  try {\n    storedMeasurementByToolType = MeasurementReport.generateToolState(dataset);\n  } catch (error) {\n    const seriesDescription = dataset.SeriesDescription || '';\n    LogManager.publish(LogManager.EVENTS.OnLog, {\n      title: `Failed to parse ${seriesDescription} measurement report`,\n      type: 'warning',\n      message: error.message || '',\n      notify: true,\n    });\n    return;\n  }\n\n  let measurementNumber = 0;\n  let toolData = {};\n\n  Object.keys(storedMeasurementByToolType).forEach(toolName => {\n    const measurements = storedMeasurementByToolType[toolName];\n\n    measurements.forEach(measurement => {\n      const instanceMetadata = findInstanceMetadataBySopInstanceUID(\n        displaySets,\n        measurement.sopInstanceUid\n      );\n\n      const { _study: study, _series: series } = instanceMetadata;\n      const { StudyInstanceUID, PatientID } = study;\n      const { SeriesInstanceUID } = series;\n      const { sopInstanceUid, frameIndex } = measurement;\n      const imagePath = getImagePath(\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        sopInstanceUid,\n        frameIndex\n      );\n\n      const imageId = instanceMetadata.getImageId();\n      if (!imageId) {\n        return;\n      }\n\n      // TODO: We need the currentTimepointID set into the viewer\n      const currentTimepointId = 'TimepointId';\n\n      toolData = Object.assign({}, measurement, {\n        wadorsURI, // acrescentei!\n        imageId,\n        imagePath,\n        SOPInstanceUID: sopInstanceUid,\n        SeriesInstanceUID,\n        StudyInstanceUID,\n        PatientID,\n        measurementNumber: ++measurementNumber,\n        timepointId: currentTimepointId,\n        toolType: toolName,\n        _id: imageId + measurementNumber,\n      });\n    });\n  });\n  return [toolData, storedMeasurementByToolType];\n};\n\n/**\n * Function to create imagePath with all imageData related\n * @param {string} StudyInstanceUID\n * @param {string} SeriesInstanceUID\n * @param {string} SOPInstanceUID\n * @param {string} frameIndex\n * @returns\n */\nconst getImagePath = (\n  StudyInstanceUID,\n  SeriesInstanceUID,\n  SOPInstanceUID,\n  frameIndex\n) => {\n  return [StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, frameIndex].join(\n    '_'\n  );\n};\n\nexport default parseDicomStructuredReport;\n","import dcmjs from 'dcmjs';\n\n/**\n *  Checks if dcmjs has support to determined tool\n *\n * @param {string} toolName\n * @returns {boolean}\n */\nconst isToolSupported = toolName => {\n  const adapter = dcmjs.adapters.Cornerstone;\n  return !!adapter[toolName];\n};\n\nexport default isToolSupported;\n","import dcmjs from 'dcmjs';\nimport cornerstone from 'cornerstone-core';\n\nimport log from '../log';\nimport measurements from '../measurements';\nimport isToolSupported from './utils/isToolSupported';\n\n/**\n * Function to parse OHIF viewer measurementData into a dcmjs MeasurementReport\n *\n * @param {Object} measurementsData - OHIF measurementData object\n * @returns {Object} Dataset: measurement report from dcmjs\n */\nconst parseMeasurementsData = measurementsData => {\n  const { MeasurementReport } = dcmjs.adapters.Cornerstone;\n  const { getImageIdForImagePath } = measurements;\n\n  const toolState = {};\n  const unsupportedTools = [];\n\n  Object.keys(measurementsData).forEach(measurementType => {\n    const annotations = measurementsData[measurementType];\n\n    annotations.forEach(annotation => {\n      const { toolType, imagePath } = annotation;\n\n      if (isToolSupported(toolType)) {\n        const imageId = getImageIdForImagePath(imagePath);\n        toolState[imageId] = toolState[imageId] || {};\n        toolState[imageId][toolType] = toolState[imageId][toolType] || {\n          data: [],\n        };\n\n        toolState[imageId][toolType].data.push(annotation);\n      } else {\n        unsupportedTools.push(toolType);\n      }\n    });\n  });\n\n  if (unsupportedTools.length > 0) {\n    log.warn(\n      `[DICOMSR] Tooltypes not supported: ${unsupportedTools.join(', ')}`\n    );\n  }\n\n  const report = MeasurementReport.generateReport(\n    toolState,\n    cornerstone.metaData\n  );\n\n  return {\n    dataset: report.dataset,\n  };\n};\n\nexport default parseMeasurementsData;\n","/**\n * Retrieve a list of all displaySets of all studies\n *\n * @param {Object} studies - List of studies loaded into the viewer\n * @returns {Object} List of DisplaySets\n */\nconst getAllDisplaySets = studies => {\n  let allDisplaySets = [];\n\n  studies.forEach(study => {\n    if (study.getDisplaySets) {\n      allDisplaySets = allDisplaySets.concat(study.getDisplaySets());\n    }\n  });\n\n  return allDisplaySets;\n};\n\nexport default getAllDisplaySets;\n","import dcmjs from 'dcmjs';\nimport { api } from 'dicomweb-client';\n\nimport DICOMWeb from '../DICOMWeb';\nimport parseDicomStructuredReport from './parseDicomStructuredReport';\nimport parseMeasurementsData from './parseMeasurementsData';\nimport getAllDisplaySets from './utils/getAllDisplaySets';\nimport errorHandler from '../errorHandler';\nimport getXHRRetryRequestHook from '../utils/xhrRetryRequestHook';\n\nconst VERSION_NAME = 'dcmjs-0.0';\nconst TRANSFER_SYNTAX_UID = '1.2.840.10008.1.2.1';\n\n/**\n * Function to retrieve measurements from DICOM Structured Reports coming from determined server\n *\n * @param {Array} series - List of all series metaData loaded\n * @param {Array} studies - List of all studies metaData loaded\n * @param {string} serverUrl - Server URL to be used on request\n * @param {object} external\n * @returns {Object} MeasurementData\n */\nconst retrieveMeasurementFromSR = async (\n  measurementSeries,\n  studies,\n  serverUrl,\n  external\n) => {\n  const config = {\n    url: serverUrl,\n    headers: DICOMWeb.getAuthorizationHeader(),\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\n    requestHooks: [getXHRRetryRequestHook()],\n  };\n\n  const dicomWeb = new api.DICOMwebClient(config);\n\n  const instance = measurementSeries[0].getFirstInstance();\n  const options = {\n    studyInstanceUID: instance.getStudyInstanceUID(),\n    seriesInstanceUID: instance.getSeriesInstanceUID(),\n    sopInstanceUID: instance.getSOPInstanceUID(),\n  };\n\n  const part10SRArrayBuffer = await dicomWeb.retrieveInstance(options);\n\n  const displaySets = getAllDisplaySets(studies);\n  const measurementData = parseDicomStructuredReport(\n    part10SRArrayBuffer,\n    displaySets,\n    external,\n    instance._data.baseWadoRsUri // acrescentei!\n  );\n\n  let storedMeasurementByToolType = measurementData[1];\n\n  //console.log(measurementData[0]);\n  let toolType = measurementData[0]['toolType'];\n  storedMeasurementByToolType[toolType].splice(0, 1);\n  storedMeasurementByToolType[toolType].push(measurementData[0]);\n\n  for (let i = 1; i < measurementSeries.length; i++) {\n    const instance = measurementSeries[i].getFirstInstance();\n    const options = {\n      studyInstanceUID: instance.getStudyInstanceUID(),\n      seriesInstanceUID: instance.getSeriesInstanceUID(),\n      sopInstanceUID: instance.getSOPInstanceUID(),\n    };\n\n    const part10SRArrayBuffer = await dicomWeb.retrieveInstance(options);\n\n    const displaySets = getAllDisplaySets(studies);\n    const measurementData = parseDicomStructuredReport(\n      part10SRArrayBuffer,\n      displaySets,\n      external,\n      instance._data.baseWadoRsUri // acrescentei!\n    );\n\n    //console.log(measurementData[0]);\n    let toolType = measurementData[0]['toolType'];\n    storedMeasurementByToolType[toolType].push(measurementData[0]);\n  }\n\n  //storedMeasurementByToolType.push(measurementData);\n\n  //console.log(storedMeasurementByToolType);\n  return storedMeasurementByToolType;\n};\n\n/**\n * Function to store measurements to DICOM Structured Reports in determined server\n *\n * @param {Object} measurements - OHIF measurementData object\n * @param {string} serverUrl - Server URL to be used on request\n * @returns {Promise}\n */\n\n// alterei!!!\nconst stowSRFromMeasurements = async (measurements, serverUrl) => {\n  //console.log(measurements);\n  measurements['allTools'].forEach(async measurement => {\n    let data = { allTools: [] };\n    if (measurement.wadorsURI === undefined) {\n      // se ainda não está no Orthanc\n      data['allTools'].push(measurement);\n\n      const { dataset } = parseMeasurementsData(data);\n\n      const { DicomMetaDictionary, DicomDict } = dcmjs.data;\n      const meta = {\n        FileMetaInformationVersion:\n          dataset._meta.FileMetaInformationVersion.Value,\n        MediaStorageSOPClassUID: dataset.SOPClassUID,\n        MediaStorageSOPInstanceUID: dataset.SOPInstanceUID,\n        TransferSyntaxUID: TRANSFER_SYNTAX_UID,\n        ImplementationClassUID: DicomMetaDictionary.uid(),\n        ImplementationVersionName: VERSION_NAME,\n      };\n\n      const denaturalized = DicomMetaDictionary.denaturalizeDataset(meta);\n      const dicomDict = new DicomDict(denaturalized);\n\n      dicomDict.dict = DicomMetaDictionary.denaturalizeDataset(dataset);\n\n      const part10Buffer = dicomDict.write();\n\n      const config = {\n        url: serverUrl,\n        headers: DICOMWeb.getAuthorizationHeader(),\n        errorInterceptor: errorHandler.getHTTPErrorHandler(),\n        requestHooks: [getXHRRetryRequestHook()],\n      };\n\n      const dicomWeb = new api.DICOMwebClient(config);\n      const options = {\n        datasets: [part10Buffer],\n      };\n\n      await dicomWeb.storeInstances(options);\n    }\n  });\n};\n\nexport { retrieveMeasurementFromSR, stowSRFromMeasurements };\n","import log from '../log';\nimport studies from '../studies';\nimport utils from '../utils';\nimport {\n  retrieveMeasurementFromSR,\n  stowSRFromMeasurements,\n} from './handleStructuredReport';\n\n/**\n *\n * @typedef serverType\n * @property {string} type - type of the server\n * @property {string} wadoRoot - server wado root url\n *\n */\n\n/**\n * Function to be registered into MeasurementAPI to retrieve measurements from DICOM Structured Reports\n *\n * @param {serverType} server\n * @param {object} external\n * @returns {Promise} Should resolve with OHIF measurementData object\n */\n\n// alterei!!!\nconst retrieveMeasurements = (server, external = {}) => {\n  log.info('[DICOMSR] retrieveMeasurements');\n\n  if (!server || server.type !== 'dicomWeb') {\n    log.error('[DICOMSR] DicomWeb server is required!');\n    return Promise.reject({});\n  }\n\n  const serverUrl = server.wadoRoot;\n  const studies = utils.studyMetadataManager.all();\n  let measurementSeries = [];\n  studies.forEach(study => {\n    const allSeries = study.getSeries ? study.getSeries() : [];\n    allSeries.forEach(series => {\n      // Skip series that may not have instances yet\n      // This can happen if we have retrieved just the initial\n      // details about the series via QIDO-RS, but not the full metadata\n      if (!series || series.getInstanceCount() === 0) {\n        return;\n      }\n\n      const supportedSopClassUIDs = [\n        '1.2.840.10008.5.1.4.1.1.88.22',\n        '1.2.840.10008.5.1.4.1.1.11.1',\n        '1.2.840.10008.5.1.4.1.1.88.34', // COMPREHENSIVE_3D_SR\n      ];\n\n      const firstInstance = series.getFirstInstance();\n      const SOPClassUID = firstInstance.getData().metadata.SOPClassUID;\n\n      if (supportedSopClassUIDs.includes(SOPClassUID)) {\n        measurementSeries.push(series);\n      }\n    });\n  });\n\n  if (measurementSeries.length === 0) return Promise.resolve({});\n\n  //const latestSeries = findMostRecentStructuredReport(studies);\n\n  return retrieveMeasurementFromSR(\n    measurementSeries,\n    studies,\n    serverUrl,\n    external\n  );\n};\n\n/**\n *  Function to be registered into MeasurementAPI to store measurements into DICOM Structured Reports\n *\n * @param {Object} measurementData - OHIF measurementData object\n * @param {Object} filter\n * @param {serverType} server\n * @returns {Object} With message to be displayed on success\n */\nconst storeMeasurements = async (measurementData, filter, server) => {\n  log.info('[DICOMSR] storeMeasurements');\n\n  if (!server || server.type !== 'dicomWeb') {\n    log.error('[DICOMSR] DicomWeb server is required!');\n    return Promise.reject({});\n  }\n\n  const serverUrl = server.wadoRoot;\n  const firstMeasurementKey = Object.keys(measurementData)[0];\n  const firstMeasurement = measurementData[firstMeasurementKey][0];\n  const StudyInstanceUID =\n    firstMeasurement && firstMeasurement.StudyInstanceUID;\n\n  try {\n    await stowSRFromMeasurements(measurementData, serverUrl);\n    if (StudyInstanceUID) {\n      studies.deleteStudyMetadataPromise(StudyInstanceUID);\n    }\n\n    return {\n      message: 'Measurements saved successfully',\n    };\n  } catch (error) {\n    log.error(\n      `[DICOMSR] Error while saving the measurements: ${error.message}`\n    );\n    throw new Error('Error while saving the measurements.');\n  }\n};\n\nexport { retrieveMeasurements, storeMeasurements };\n","import { retrieveMeasurements, storeMeasurements } from './dataExchange';\nimport isToolSupported from './utils/isToolSupported';\n\nconst DICOMSR = {\n  retrieveMeasurements,\n  storeMeasurements,\n  isToolSupported,\n};\n\nexport default DICOMSR;\n","/**\n * VIEWPORT\n */\nexport const SET_VIEWPORT = 'VIEWPORT::SET';\nexport const SET_VIEWPORT_ACTIVE = 'VIEWPORT::SET_ACTIVE';\nexport const SET_VIEWPORT_LAYOUT = 'VIEWPORT::SET_LAYOUT';\nexport const SET_VIEWPORT_LAYOUT_AND_DATA =\n  'VIEWPORT::SET_VIEWPORT_LAYOUT_AND_DATA';\nexport const CLEAR_VIEWPORT = 'VIEWPORT::CLEAR';\nexport const SET_SPECIFIC_DATA = 'VIEWPORT::SET_SPECIFIC_DATA';\nexport const SET_ACTIVE_SPECIFIC_DATA = 'VIEWPORT::SET_ACTIVE_SPECIFIC_DATA';\n\n/**\n * SERVERS\n */\nexport const ADD_SERVER = 'ADD_SERVER';\nexport const SET_SERVERS = 'SET_SERVERS';\n\n/**\n * EXTENSIONS\n */\nexport const SET_EXTENSION_DATA = 'SET_EXTENSION_DATA';\n\n/**\n * PREFERENCES\n * */\nexport const SET_USER_PREFERENCES = 'SET_USER_PREFERENCES';\n","/** Action Creators:\n *  https://redux.js.org/basics/actions#action-creators\n */\n\nimport {\n  CLEAR_VIEWPORT,\n  SET_ACTIVE_SPECIFIC_DATA,\n  SET_SERVERS,\n  SET_VIEWPORT,\n  SET_VIEWPORT_ACTIVE,\n  SET_VIEWPORT_LAYOUT,\n  SET_VIEWPORT_LAYOUT_AND_DATA,\n  SET_USER_PREFERENCES,\n} from './constants/ActionTypes.js';\n\n/**\n * The definition of a viewport layout.\n *\n * @typedef {Object} ViewportLayout\n * @property {number} numRows -\n * @property {number} numColumns -\n * @property {array} viewports -\n */\n\n/**\n * VIEWPORT\n */\nexport const setViewportSpecificData = (\n  viewportIndex,\n  viewportSpecificData\n) => ({\n  type: SET_VIEWPORT,\n  viewportIndex,\n  viewportSpecificData,\n});\n\nexport const setViewportActive = viewportIndex => ({\n  type: SET_VIEWPORT_ACTIVE,\n  viewportIndex,\n});\n\n/**\n * @param {ViewportLayout} layout\n */\nexport const setLayout = ({ numRows, numColumns, viewports }) => ({\n  type: SET_VIEWPORT_LAYOUT,\n  numRows,\n  numColumns,\n  viewports,\n});\n\n/**\n * @param {number} layout.numRows\n * @param {number} layout.numColumns\n * @param {array} viewports\n */\nexport const setViewportLayoutAndData = (\n  { numRows, numColumns, viewports },\n  viewportSpecificData\n) => ({\n  type: SET_VIEWPORT_LAYOUT_AND_DATA,\n  numRows,\n  numColumns,\n  viewports,\n  viewportSpecificData,\n});\n\nexport const clearViewportSpecificData = viewportIndex => ({\n  type: CLEAR_VIEWPORT,\n  viewportIndex,\n});\n\nexport const setActiveViewportSpecificData = viewportSpecificData => ({\n  type: SET_ACTIVE_SPECIFIC_DATA,\n  viewportSpecificData,\n});\n\n/**\n * NOT-VIEWPORT\n */\nexport const setUserPreferences = state => ({\n  type: SET_USER_PREFERENCES,\n  state,\n});\n\nexport const setExtensionData = (extension, data) => ({\n  type: 'SET_EXTENSION_DATA',\n  extension,\n  data,\n});\n\nexport const setTimepoints = state => ({\n  type: 'SET_TIMEPOINTS',\n  state,\n});\n\nexport const setMeasurements = state => ({\n  type: 'SET_MEASUREMENTS',\n  state,\n});\n\nexport const setStudyData = (StudyInstanceUID, data) => ({\n  type: 'SET_STUDY_DATA',\n  StudyInstanceUID,\n  data,\n});\n\nexport const setServers = servers => ({\n  type: SET_SERVERS,\n  servers,\n});\n\nconst actions = {\n  /**\n   * VIEWPORT\n   */\n  setViewportActive,\n  setViewportSpecificData,\n  setViewportLayoutAndData,\n  setLayout,\n  clearViewportSpecificData,\n  setActiveViewportSpecificData,\n  /**\n   * NOT-VIEWPORT\n   */\n  setUserPreferences,\n  setExtensionData,\n  setTimepoints,\n  setMeasurements,\n  setStudyData,\n  setServers,\n};\n\nexport default actions;\n","export const defaultState = {};\n\nconst extensions = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_EXTENSION_DATA':\n      const extensionName = action.extension;\n      const currentData = state[extensionName] || {};\n\n      const incomingData = action.data;\n\n      const extension = {\n        [extensionName]: {\n          ...currentData,\n          ...incomingData,\n        },\n      };\n\n      return { ...state, ...extension };\n\n    default:\n      return state;\n  }\n};\n\nexport default extensions;\n","const defaultState = {\n  windowLevelData: {\n    1: { description: 'Soft tissue', window: '550', level: '40' },\n    2: { description: 'Lung', window: '150', level: '-600' },\n    3: { description: 'Liver', window: '150', level: '90' },\n    4: { description: 'Bone', window: '2500', level: '480' },\n    5: { description: 'Brain', window: '80', level: '40' },\n    6: { description: 'Trest', window: '1', level: '1' },\n    7: { description: '', window: '', level: '' },\n    8: { description: '', window: '', level: '' },\n    9: { description: '', window: '', level: '' },\n    10: { description: '', window: '', level: '' },\n  },\n  generalPreferences: {\n    // language: 'en-US'\n  },\n};\n\nconst preferences = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_USER_PREFERENCES': {\n      return Object.assign({}, state, action.state);\n    }\n    default:\n      return state;\n  }\n};\n\nexport { defaultState };\nexport default preferences;\n","import uniqBy from 'lodash/uniqBy';\n\nexport const defaultState = {\n  servers: [],\n};\n\nconst servers = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'ADD_SERVER':\n      let servers = uniqBy([...state.servers, action.server], 'id');\n      servers.forEach(s => (s.active = true));\n      return { ...state, servers };\n\n    case 'ACTIVATE_SERVER': {\n      const newServer = { ...action.server, active: true };\n      const newServers = state.servers;\n      newServers.forEach(s => (s.active = false));\n      return {\n        ...state,\n        servers: uniqBy([...newServers, newServer], 'wadoRoot'),\n      };\n    }\n\n    case 'SET_SERVERS':\n      return { ...state, servers: action.servers };\n\n    default:\n      return state;\n  }\n};\n\nexport default servers;\n","import cloneDeep from 'lodash.clonedeep';\n\nconst defaultState = {\n  studyData: {},\n};\n\nconst servers = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_STUDY_DATA': {\n      const updatedStudyData = cloneDeep(state.studyData);\n      updatedStudyData[action.StudyInstanceUID] = cloneDeep(action.data);\n\n      return Object.assign({}, state, { studyData: updatedStudyData });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default servers;\n","const defaultState = {\n  timepoints: [],\n  measurements: [],\n};\n\nconst timepointManager = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_TIMEPOINTS':\n      return Object.assign({}, state, { timepoints: action.state });\n    case 'SET_MEASUREMENTS':\n      return Object.assign({}, state, { measurements: action.state });\n    default:\n      return state;\n  }\n};\n\nexport default timepointManager;\n","import cloneDeep from 'lodash.clonedeep';\nimport produce, { setAutoFreeze } from 'immer';\n\nimport {\n  CLEAR_VIEWPORT,\n  SET_ACTIVE_SPECIFIC_DATA,\n  SET_SPECIFIC_DATA,\n  SET_VIEWPORT,\n  SET_VIEWPORT_ACTIVE,\n  SET_VIEWPORT_LAYOUT,\n  SET_VIEWPORT_LAYOUT_AND_DATA,\n} from './../constants/ActionTypes.js';\n\nsetAutoFreeze(false);\n\nexport const DEFAULT_STATE = {\n  numRows: 1,\n  numColumns: 1,\n  activeViewportIndex: 0,\n  layout: {\n    viewports: [{}],\n  },\n  viewportSpecificData: {},\n};\n\n/**\n *  Take the new number of Rows and Columns, delete all not used viewport data and also set\n *  active viewport as default in case current one is not available anymore.\n *\n * @param {Number} numRows\n * @param {Number} numColumns\n * @param {Object} currentViewportSpecificData\n * @returns\n */\nconst findActiveViewportSpecificData = (\n  numRows,\n  numColumns,\n  currentViewportSpecificData = {}\n) => {\n  const numberOfViewports = numRows * numColumns;\n  const viewportSpecificData = cloneDeep(currentViewportSpecificData);\n\n  if (numberOfViewports < Object.keys(viewportSpecificData).length) {\n    Object.keys(viewportSpecificData).forEach(key => {\n      if (key > numberOfViewports - 1) {\n        delete viewportSpecificData[key];\n      }\n    });\n  }\n\n  return viewportSpecificData;\n};\n/**\n *  Take new number of Rows and Columns and make sure the current active viewport index is still available, if not, return the default\n *\n * @param {Number} numRows\n * @param {Number} numColumns\n * @param {Number} currentActiveViewportIndex\n * @returns\n */\nconst getActiveViewportIndex = (\n  numRows,\n  numColumns,\n  currentActiveViewportIndex\n) => {\n  const numberOfViewports = numRows * numColumns;\n\n  return currentActiveViewportIndex > numberOfViewports - 1\n    ? DEFAULT_STATE.activeViewportIndex\n    : currentActiveViewportIndex;\n};\n\n/**\n * The definition of a viewport action.\n *\n * @typedef {Object} ViewportAction\n * @property {string} type -\n * @property {Object} data -\n * @property {Object} layout -\n * @property {number} viewportIndex -\n * @property {Object} viewportSpecificData -\n */\n\n/**\n * @param {Object} [state=DEFAULT_STATE] The current viewport state.\n * @param {ViewportAction} action A viewport action.\n */\nconst viewports = (state = DEFAULT_STATE, action) => {\n  let useActiveViewport = false;\n\n  switch (action.type) {\n    /**\n     * Sets the active viewport index.\n     *\n     * @return {Object} New state.\n     */\n    case SET_VIEWPORT_ACTIVE: {\n      return produce(state, draftState => {\n        draftState.activeViewportIndex = getActiveViewportIndex(\n          draftState.numRows,\n          draftState.numColumns,\n          action.viewportIndex\n        );\n      });\n    }\n\n    /**\n     * Sets viewport layout.\n     *\n     * @return {Object} New state.\n     */\n    case SET_VIEWPORT_LAYOUT: {\n      const { numRows, numColumns } = action;\n      const viewportSpecificData = findActiveViewportSpecificData(\n        numRows,\n        numColumns,\n        state.viewportSpecificData\n      );\n      const activeViewportIndex = getActiveViewportIndex(\n        numRows,\n        numColumns,\n        state.activeViewportIndex\n      );\n\n      return {\n        ...state,\n        numRows: action.numRows,\n        numColumns: action.numColumns,\n        layout: { viewports: [...action.viewports] },\n        viewportSpecificData,\n        activeViewportIndex,\n      };\n    }\n\n    /**\n     * Sets viewport layout and data.\n     *\n     * @return {Object} New state.\n     */\n    case SET_VIEWPORT_LAYOUT_AND_DATA: {\n      const { numRows, numColumns } = action;\n      const viewportSpecificData = findActiveViewportSpecificData(\n        numRows,\n        numColumns,\n        action.viewportSpecificData\n      );\n      const activeViewportIndex = getActiveViewportIndex(\n        numRows,\n        numColumns,\n        state.activeViewportIndex\n      );\n\n      return {\n        ...state,\n        numRows: action.numRows,\n        numColumns: action.numColumns,\n        layout: { viewports: [...action.viewports] },\n        viewportSpecificData,\n        activeViewportIndex,\n      };\n    }\n\n    /**\n     * Sets viewport specific data of active viewport.\n     *\n     * @return {Object} New state.\n     */\n    case SET_VIEWPORT: {\n      return produce(state, draftState => {\n        draftState.viewportSpecificData[action.viewportIndex] =\n          draftState.viewportSpecificData[action.viewportIndex] || {};\n\n        Object.keys(action.viewportSpecificData).forEach(key => {\n          draftState.viewportSpecificData[action.viewportIndex][key] =\n            action.viewportSpecificData[key];\n        });\n\n        if (action.viewportSpecificData && action.viewportSpecificData.plugin) {\n          draftState.layout.viewports[action.viewportIndex].plugin =\n            action.viewportSpecificData.plugin;\n        }\n      });\n    }\n\n    /**\n     * Sets viewport specific data of active/any viewport.\n     *\n     * @return {Object} New state.\n     */\n    case SET_ACTIVE_SPECIFIC_DATA:\n      useActiveViewport = true;\n    // Allow fall-through\n    // eslint-disable-next-line\n    case SET_SPECIFIC_DATA: {\n      const layout = cloneDeep(state.layout);\n      const viewportIndex = useActiveViewport\n        ? state.activeViewportIndex\n        : action.viewportIndex;\n\n      let viewportSpecificData = cloneDeep(state.viewportSpecificData);\n      viewportSpecificData[viewportIndex] = {\n        ...action.viewportSpecificData,\n      };\n\n      if (action.viewportSpecificData && action.viewportSpecificData.plugin) {\n        layout.viewports[viewportIndex].plugin =\n          action.viewportSpecificData.plugin;\n      }\n\n      return { ...state, layout, viewportSpecificData };\n    }\n\n    /**\n     * Clears viewport specific data of any viewport.\n     *\n     * @return {Object} New state.\n     */\n    case CLEAR_VIEWPORT: {\n      let viewportSpecificData = cloneDeep(state.viewportSpecificData);\n\n      if (action.viewportIndex) {\n        viewportSpecificData[action.viewportIndex] = {};\n        return { ...state, viewportSpecificData };\n      } else {\n        return DEFAULT_STATE;\n      }\n    }\n\n    /**\n     * Returns the current application state.\n     *\n     * @return {Object} The current state.\n     */\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default viewports;\n","import extensions from './extensions';\nimport preferences from './preferences';\nimport servers from './servers';\nimport studies from './studies';\nimport timepointManager from './timepointManager';\nimport viewports from './viewports';\n\nconst reducers = {\n  extensions,\n  preferences,\n  servers,\n  studies,\n  timepointManager,\n  viewports,\n};\n\nexport default reducers;\n","const LocalStorageApi = window.localStorage;\nconst localStorageKey = 'state';\nexport const loadState = () => {\n  try {\n    const serializedState = LocalStorageApi.getItem(localStorageKey);\n    if (!serializedState) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    LocalStorageApi.setItem(localStorageKey, serializedState);\n  } catch (e) {}\n};\n\nconst localStorage = {\n  saveState,\n  loadState,\n};\n\nexport default localStorage;\n","const SessionStorageApi = window.sessionStorage;\nconst sessionStorageKey = 'state';\nexport const loadState = () => {\n  try {\n    const serializedState = SessionStorageApi.getItem(sessionStorageKey);\n    if (!serializedState) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    SessionStorageApi.setItem(sessionStorageKey, serializedState);\n  } catch (e) {}\n};\n\nconst sessionStorage = {\n  saveState,\n  loadState,\n};\n\nexport default sessionStorage;\n","import actions from './actions.js';\nimport reducers from './reducers';\nimport localStorage from './localStorage.js';\nimport sessionStorage from './sessionStorage.js';\n\nconst redux = {\n  reducers,\n  actions,\n  localStorage,\n  sessionStorage,\n};\n\nexport default redux;\n","import metadataProvider from './classes/MetadataProvider';\nimport {\n  getBoundingBox,\n  pixelToPage,\n  repositionTextBox,\n} from './lib/cornerstone.js';\n\nconst cornerstone = {\n  metadataProvider,\n  getBoundingBox,\n  pixelToPage,\n  repositionTextBox,\n};\n\nexport default cornerstone;\n","import cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\n\nfunction getBoundingBox(context, textLines, x, y, options) {\n  if (Object.prototype.toString.call(textLines) !== '[object Array]') {\n    textLines = [textLines];\n  }\n\n  const padding = 5;\n  const font = cornerstoneTools.textStyle.getFont();\n  const fontSize = cornerstoneTools.textStyle.getFontSize();\n\n  context.save();\n  context.font = font;\n  context.textBaseline = 'top';\n\n  // Find the longest text width in the array of text data\n  let maxWidth = 0;\n\n  textLines.forEach(text => {\n    // Get the text width in the current font\n    const width = context.measureText(text).width;\n\n    // Find the maximum with for all the text Rows;\n    maxWidth = Math.max(maxWidth, width);\n  });\n\n  // Calculate the bounding box for this text box\n  const boundingBox = {\n    width: maxWidth + padding * 2,\n    height: padding + textLines.length * (fontSize + padding),\n  };\n\n  if (options && options.centering && options.centering.x === true) {\n    x -= boundingBox.width / 2;\n  }\n\n  if (options && options.centering && options.centering.y === true) {\n    y -= boundingBox.height / 2;\n  }\n\n  boundingBox.left = x;\n  boundingBox.top = y;\n\n  context.restore();\n\n  // Return the bounding box so it can be used for pointNearHandle\n  return boundingBox;\n}\n\nfunction pixelToPage(element, position) {\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const result = {\n    x: 0,\n    y: 0,\n  };\n\n  // Stop here if the cornerstone element is not enabled or position is not an object\n  if (!enabledElement || typeof position !== 'object') {\n    return result;\n  }\n\n  const canvas = enabledElement.canvas;\n\n  const canvasOffset = $(canvas).offset();\n  result.x += canvasOffset.left;\n  result.y += canvasOffset.top;\n\n  const canvasPosition = cornerstone.pixelToCanvas(element, position);\n  result.x += canvasPosition.x;\n  result.y += canvasPosition.y;\n\n  return result;\n}\n\nfunction repositionTextBox(eventData, measurementData, config) {\n  // Stop here if it's not a measurement creating\n  if (!measurementData.isCreating) {\n    return;\n  }\n\n  const element = eventData.element;\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const image = enabledElement.image;\n\n  const allowedBorders = OHIF.uiSettings.autoPositionMeasurementsTextCallOuts;\n  const allow = {\n    T: !allowedBorders || allowedBorders.includes('T'),\n    R: !allowedBorders || allowedBorders.includes('R'),\n    B: !allowedBorders || allowedBorders.includes('B'),\n    L: !allowedBorders || allowedBorders.includes('L'),\n  };\n\n  const getAvailableBlankAreas = (enabledElement, labelWidth, labelHeight) => {\n    const { element, canvas, image } = enabledElement;\n\n    const topLeft = cornerstone.pixelToCanvas(element, {\n      x: 0,\n      y: 0,\n    });\n\n    const bottomRight = cornerstone.pixelToCanvas(element, {\n      x: image.width,\n      y: image.height,\n    });\n\n    const $canvas = $(canvas);\n    const canvasWidth = $canvas.outerWidth();\n    const canvasHeight = $canvas.outerHeight();\n\n    const result = {};\n    result['x-1'] = allow.L && topLeft.x > labelWidth;\n    result['y-1'] = allow.T && topLeft.y > labelHeight;\n    result.x1 = allow.R && canvasWidth - bottomRight.x > labelWidth;\n    result.y1 = allow.B && canvasHeight - bottomRight.y > labelHeight;\n\n    return result;\n  };\n\n  const getRenderingInformation = (limits, tool) => {\n    const mid = {};\n    mid.x = limits.x / 2;\n    mid.y = limits.y / 2;\n\n    const directions = {};\n    directions.x = tool.x < mid.x ? -1 : 1;\n    directions.y = tool.y < mid.y ? -1 : 1;\n\n    const diffX = directions.x < 0 ? tool.x : limits.x - tool.x;\n    const diffY = directions.y < 0 ? tool.y : limits.y - tool.y;\n    let cornerAxis = diffY < diffX ? 'y' : 'x';\n\n    const map = {\n      'x-1': 'L',\n      'y-1': 'T',\n      x1: 'R',\n      y1: 'B',\n    };\n\n    let current = 0;\n    while (current < 4 && !allow[map[cornerAxis + directions[cornerAxis]]]) {\n      // Invert the direction for the next iteration\n      directions[cornerAxis] *= -1;\n\n      // Invert the tempCornerAxis\n      cornerAxis = cornerAxis === 'x' ? 'y' : 'x';\n\n      current++;\n    }\n\n    return {\n      directions,\n      cornerAxis,\n    };\n  };\n\n  const calculateAxisCenter = (axis, start, end) => {\n    const a = start[axis];\n    const b = end[axis];\n    const lowest = Math.min(a, b);\n    const highest = Math.max(a, b);\n    return lowest + (highest - lowest) / 2;\n  };\n\n  const getTextBoxSizeInPixels = (element, bounds) => {\n    const topLeft = cornerstone.pageToPixel(element, 0, 0);\n    const bottomRight = cornerstone.pageToPixel(element, bounds.x, bounds.y);\n    return {\n      x: bottomRight.x - topLeft.x,\n      y: bottomRight.y - topLeft.y,\n    };\n  };\n\n  function getTextBoxOffset(config, cornerAxis, toolAxis, boxSize) {\n    config = config || {};\n    const centering = config.centering || {};\n    const centerX = !!centering.x;\n    const centerY = !!centering.y;\n    const halfBoxSizeX = boxSize.x / 2;\n    const halfBoxSizeY = boxSize.y / 2;\n    const offset = {\n      x: [],\n      y: [],\n    };\n\n    if (cornerAxis === 'x') {\n      const offsetY = centerY ? 0 : halfBoxSizeY;\n\n      offset.x[-1] = centerX ? halfBoxSizeX : 0;\n      offset.x[1] = centerX ? -halfBoxSizeX : -boxSize.x;\n      offset.y[-1] = offsetY;\n      offset.y[1] = offsetY;\n    } else {\n      const offsetX = centerX ? 0 : halfBoxSizeX;\n\n      offset.x[-1] = offsetX;\n      offset.x[1] = offsetX;\n      offset.y[-1] = centerY ? halfBoxSizeY : 0;\n      offset.y[1] = centerY ? -halfBoxSizeY : -boxSize.y;\n    }\n\n    return offset;\n  }\n\n  const handles = measurementData.handles;\n  const textBox = handles.textBox;\n\n  const $canvas = $(enabledElement.canvas);\n  const canvasWidth = $canvas.outerWidth();\n  const canvasHeight = $canvas.outerHeight();\n  const offset = $canvas.offset();\n  const canvasDimensions = {\n    x: canvasWidth,\n    y: canvasHeight,\n  };\n\n  const bounds = {};\n  bounds.x = textBox.boundingBox.width;\n  bounds.y = textBox.boundingBox.height;\n\n  const getHandlePosition = key => {\n    const { x, y } = handles[key];\n\n    return { x, y };\n  };\n  const start = getHandlePosition('start');\n  const end = getHandlePosition('end');\n\n  const tool = {};\n  tool.x = calculateAxisCenter('x', start, end);\n  tool.y = calculateAxisCenter('y', start, end);\n\n  let limits = {};\n  limits.x = image.width;\n  limits.y = image.height;\n\n  let { directions, cornerAxis } = getRenderingInformation(limits, tool);\n\n  const availableAreas = getAvailableBlankAreas(\n    enabledElement,\n    bounds.x,\n    bounds.y\n  );\n  const tempDirections = Object.assign({}, directions);\n  let tempCornerAxis = cornerAxis;\n  let foundPlace = false;\n  let current = 0;\n  while (current < 4) {\n    if (availableAreas[tempCornerAxis + tempDirections[tempCornerAxis]]) {\n      foundPlace = true;\n      break;\n    }\n\n    // Invert the direction for the next iteration\n    tempDirections[tempCornerAxis] *= -1;\n\n    // Invert the tempCornerAxis\n    tempCornerAxis = tempCornerAxis === 'x' ? 'y' : 'x';\n\n    current++;\n  }\n\n  let cornerAxisPosition;\n  if (foundPlace) {\n    directions = Object.assign({}, directions, tempDirections);\n    cornerAxis = tempCornerAxis;\n    cornerAxisPosition = directions[cornerAxis] < 0 ? 0 : limits[cornerAxis];\n  } else {\n    limits = Object.assign({}, limits, canvasDimensions);\n\n    const toolPositionOnCanvas = cornerstone.pixelToCanvas(element, tool);\n    const renderingInformation = getRenderingInformation(\n      limits,\n      toolPositionOnCanvas\n    );\n    directions = renderingInformation.directions;\n    cornerAxis = renderingInformation.cornerAxis;\n\n    const position = {\n      x: directions.x < 0 ? offset.left : offset.left + canvasWidth,\n      y: directions.y < 0 ? offset.top : offset.top + canvasHeight,\n    };\n\n    const pixelPosition = cornerstone.pageToPixel(\n      element,\n      position.x,\n      position.y\n    );\n    cornerAxisPosition = pixelPosition[cornerAxis];\n  }\n\n  const toolAxis = cornerAxis === 'x' ? 'y' : 'x';\n  const boxSize = getTextBoxSizeInPixels(element, bounds);\n\n  textBox[cornerAxis] = cornerAxisPosition;\n  textBox[toolAxis] = tool[toolAxis];\n\n  // Adjust the text box position reducing its size from the corner axis\n  const textBoxOffset = getTextBoxOffset(config, cornerAxis, toolAxis, boxSize);\n  textBox[cornerAxis] += textBoxOffset[cornerAxis][directions[cornerAxis]];\n\n  // Preventing the text box from partially going outside the canvas area\n  const topLeft = cornerstone.pixelToCanvas(element, textBox);\n  const bottomRight = {\n    x: topLeft.x + bounds.x,\n    y: topLeft.y + bounds.y,\n  };\n  const canvasBorders = {\n    x0: offset.left,\n    y0: offset.top,\n    x1: offset.left + canvasWidth,\n    y1: offset.top + canvasHeight,\n  };\n  if (topLeft[toolAxis] < 0) {\n    const x = canvasBorders.x0;\n    const y = canvasBorders.y0;\n    const pixelPosition = cornerstone.pageToPixel(element, x, y);\n    textBox[toolAxis] = pixelPosition[toolAxis];\n  } else if (bottomRight[toolAxis] > canvasDimensions[toolAxis]) {\n    const x = canvasBorders.x1 - bounds.x;\n    const y = canvasBorders.y1 - bounds.y;\n    const pixelPosition = cornerstone.pageToPixel(element, x, y);\n    textBox[toolAxis] = pixelPosition[toolAxis];\n  }\n}\n\nexport { getBoundingBox, pixelToPage, repositionTextBox };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Thumbnail } from './Thumbnail.js';\nimport './StudyBrowser.styl';\n\nfunction StudyBrowser(props) {\n  const {\n    studies,\n    onThumbnailClick,\n    onThumbnailDoubleClick,\n    supportsDrag,\n    showThumbnailProgressBar,\n  } = props;\n\n  return (\n    <div className=\"study-browser\">\n      <div className=\"scrollable-study-thumbnails\">\n        {studies\n          .map((study, studyIndex) => {\n            const { StudyInstanceUID } = study;\n            return study.thumbnails.map((thumb, thumbIndex) => {\n              // TODO: Thumb has more props than we care about?\n              const {\n                active,\n                altImageText,\n                displaySetInstanceUID,\n                imageId,\n                derivedDisplaySetsNumber,\n                numImageFrames,\n                SeriesDescription,\n                SeriesNumber,\n                hasWarnings,\n                hasDerivedDisplaySets,\n              } = thumb;\n\n              return (\n                <div\n                  key={thumb.displaySetInstanceUID}\n                  className=\"thumbnail-container\"\n                  data-cy=\"thumbnail-list\"\n                >\n                  <Thumbnail\n                    active={active}\n                    supportsDrag={supportsDrag}\n                    key={`${studyIndex}_${thumbIndex}`}\n                    id={`${studyIndex}_${thumbIndex}`} // Unused?\n                    // Study\n                    StudyInstanceUID={StudyInstanceUID} // used by drop\n                    // Thumb\n                    altImageText={altImageText}\n                    imageId={imageId}\n                    derivedDisplaySetsNumber={derivedDisplaySetsNumber}\n                    displaySetInstanceUID={displaySetInstanceUID} // used by drop\n                    numImageFrames={numImageFrames}\n                    SeriesDescription={SeriesDescription}\n                    SeriesNumber={SeriesNumber}\n                    hasWarnings={hasWarnings}\n                    hasDerivedDisplaySets={hasDerivedDisplaySets}\n                    // Events\n                    onClick={onThumbnailClick.bind(\n                      undefined,\n                      displaySetInstanceUID\n                    )}\n                    onDoubleClick={onThumbnailDoubleClick}\n                    showProgressBar={showThumbnailProgressBar}\n                  />\n                </div>\n              );\n            });\n          })\n          .flat()}\n      </div>\n    </div>\n  );\n}\n\nconst noop = () => {};\n\nStudyBrowser.propTypes = {\n  studies: PropTypes.arrayOf(\n    PropTypes.shape({\n      StudyInstanceUID: PropTypes.string.isRequired,\n      thumbnails: PropTypes.arrayOf(\n        PropTypes.shape({\n          altImageText: PropTypes.string,\n          displaySetInstanceUID: PropTypes.string.isRequired,\n          imageId: PropTypes.string,\n          derivedDisplaySetsNumber: PropTypes.number,\n          numImageFrames: PropTypes.number,\n          SeriesDescription: PropTypes.string,\n          SeriesNumber: PropTypes.number,\n          stackPercentComplete: PropTypes.number,\n        })\n      ),\n    })\n  ).isRequired,\n  supportsDrag: PropTypes.bool,\n  onThumbnailClick: PropTypes.func,\n  onThumbnailDoubleClick: PropTypes.func,\n  showThumbnailProgressBar: PropTypes.bool,\n};\n\nStudyBrowser.defaultProps = {\n  studies: [],\n  supportsDrag: true,\n  onThumbnailClick: noop,\n  onThumbnailDoubleClick: noop,\n  showThumbnailProgressBar: true,\n};\n\nexport { StudyBrowser };\n","const id = 'org.ohif.dicom-sr';\n\nexport default id;\n\nconst SOPClassHandlerName = 'dicom-sr';\nconst SOPClassHandlerId = `${id}.sopClassHandlerModule.${SOPClassHandlerName}`;\nexport { SOPClassHandlerName, SOPClassHandlerId };\n","import './NotFound.css';\n\nexport default function NotFound() {\n  return null;\n}\n","/**\n * Create a random GUID\n *\n * @return {string}\n */\nconst guid = () => {\n  const getFourRandomValues = () => {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  };\n  return (\n    getFourRandomValues() +\n    getFourRandomValues() +\n    '-' +\n    getFourRandomValues() +\n    '-' +\n    getFourRandomValues() +\n    '-' +\n    getFourRandomValues() +\n    '-' +\n    getFourRandomValues() +\n    getFourRandomValues() +\n    getFourRandomValues()\n  );\n};\n\nexport default guid;\n","// These should be overridden by the implementation\nconst errorHandler = {\n  getHTTPErrorHandler: () => null,\n};\n\nexport default errorHandler;\n","// @TODO: improve this object\n/**\n * Objects to be used to throw errors\n */\nclass OHIFError extends Error {\n  constructor(message) {\n    super();\n    this.message = message;\n    this.stack = new Error().stack;\n    this.name = this.constructor.name;\n  }\n}\n\nexport default OHIFError;\n","import retry from 'retry';\n\nconst defaultRetryOptions = {\n  retries: 5,\n  factor: 3,\n  minTimeout: 1 * 1000,\n  maxTimeout: 60 * 1000,\n  randomize: true,\n  retryableStatusCodes: [429, 500],\n};\n\nlet retryOptions = { ...defaultRetryOptions };\n\n/**\n * Request hook used to add retry functionality to XHR requests.\n *\n * @param {XMLHttpRequest} request XHR request instance\n * @param {object} metadata Metadata about the request\n * @param {object} metadata.url URL\n * @param {object} metadata.method HTTP method\n * @returns {XMLHttpRequest} request instance optionally modified\n */\nconst xhrRetryRequestHook = (request, metadata) => {\n  const { url, method } = metadata;\n\n  function faultTolerantRequestSend(...args) {\n    const operation = retry.operation(retryOptions);\n\n    operation.attempt(function operationAttempt(currentAttempt) {\n      const originalOnReadyStateChange = request.onreadystatechange;\n\n      /** Overriding/extending XHR function */\n      request.onreadystatechange = function onReadyStateChange(...args) {\n        originalOnReadyStateChange.apply(request, args);\n\n        if (retryOptions.retryableStatusCodes.includes(request.status)) {\n          const errorMessage = `Attempt to request ${url} failed.`;\n          const attemptFailedError = new Error(errorMessage);\n          operation.retry(attemptFailedError);\n        }\n      };\n\n      /** Call open only on retry (after headers and other things were set in the xhr instance) */\n      if (currentAttempt > 1) {\n        console.warn(`Requesting ${url}... (attempt: ${currentAttempt})`);\n        request.open(method, url, true);\n      }\n    });\n\n    originalRequestSend.apply(request, args);\n  }\n\n  /** Overriding/extending XHR function */\n  const originalRequestSend = request.send;\n  request.send = faultTolerantRequestSend;\n\n  return request;\n};\n\n/**\n * Returns a configured retry request hook function\n * that can be used to add retry functionality to XHR request.\n *\n * Default options:\n *   retries: 5\n *   factor: 3\n *   minTimeout: 1 * 1000\n *   maxTimeout: 60 * 1000\n *   randomize: true\n *\n * @param {object} options\n * @param {number} options.retires number of retries\n * @param {number} options.factor factor\n * @param {number} options.minTimeout the min timeout\n * @param {number} options.maxTimeout the max timeout\n * @param {boolean} options.randomize randomize\n * @param {array} options.retryableStatusCodes status codes that can trigger retry\n * @returns {function} the configured retry request function\n */\nexport const getXHRRetryRequestHook = (options = {}) => {\n  retryOptions = { ...defaultRetryOptions };\n  if ('retries' in options) {\n    retryOptions.retries = options.retries;\n  }\n  if ('factor' in options) {\n    retryOptions.factor = options.factor;\n  }\n  if ('minTimeout' in options) {\n    retryOptions.minTimeout = options.minTimeout;\n  }\n  if ('maxTimeout' in options) {\n    retryOptions.maxTimeout = options.maxTimeout;\n  }\n  if ('randomize' in options) {\n    retryOptions.randomize = options.randomize;\n  }\n  if ('retryableStatusCodes' in options) {\n    retryOptions.retryableStatusCodes = options.retryableStatusCodes;\n  }\n  return xhrRetryRequestHook;\n};\n\nexport default getXHRRetryRequestHook;\n","/**\n * Constants\n */\n\nconst STRING = 'string';\nconst NUMBER = 'number';\nconst FUNCTION = 'function';\nconst OBJECT = 'object';\n\n/**\n * Class Definition\n */\n\nexport class Metadata {\n  /**\n   * Constructor and Instance Methods\n   */\n\n  constructor(data, uid) {\n    // Define the main \"_data\" private property as an immutable property.\n    // IMPORTANT: This property can only be set during instance construction.\n    Object.defineProperty(this, '_data', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: data,\n    });\n\n    // Define the main \"_uid\" private property as an immutable property.\n    // IMPORTANT: This property can only be set during instance construction.\n    Object.defineProperty(this, '_uid', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: uid,\n    });\n\n    // Define \"_custom\" properties as an immutable property.\n    // IMPORTANT: This property can only be set during instance construction.\n    Object.defineProperty(this, '_custom', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: Object.create(null),\n    });\n  }\n\n  getData() {\n    return this._data;\n  }\n\n  getDataProperty(propertyName) {\n    let propertyValue;\n    const _data = this._data;\n    if (\n      _data instanceof Object ||\n      (typeof _data === OBJECT && _data !== null)\n    ) {\n      propertyValue = _data[propertyName];\n    }\n    return propertyValue;\n  }\n\n  /**\n   * Get unique object ID\n   */\n  getObjectID() {\n    return this._uid;\n  }\n\n  /**\n   * Set custom attribute value\n   * @param {String} attribute Custom attribute name\n   * @param {Any} value     Custom attribute value\n   */\n  setCustomAttribute(attribute, value) {\n    this._custom[attribute] = value;\n  }\n\n  /**\n   * Get custom attribute value\n   * @param  {String} attribute Custom attribute name\n   * @return {Any}              Custom attribute value\n   */\n  getCustomAttribute(attribute) {\n    return this._custom[attribute];\n  }\n\n  /**\n   * Check if a custom attribute exists\n   * @param  {String} attribute Custom attribute name\n   * @return {Boolean}          True if custom attribute exists or false if not\n   */\n  customAttributeExists(attribute) {\n    return attribute in this._custom;\n  }\n\n  /**\n   * Set custom attributes in batch mode.\n   * @param {Object} attributeMap An object whose own properties will be used as custom attributes.\n   */\n  setCustomAttributes(attributeMap) {\n    const _hasOwn = Object.prototype.hasOwnProperty;\n    const _custom = this._custom;\n    for (let attribute in attributeMap) {\n      if (_hasOwn.call(attributeMap, attribute)) {\n        _custom[attribute] = attributeMap[attribute];\n      }\n    }\n  }\n\n  /**\n   * Static Methods\n   */\n\n  static isValidUID(uid) {\n    return typeof uid === STRING && uid.length > 0;\n  }\n\n  static isValidIndex(index) {\n    return typeof index === NUMBER && index >= 0 && (index | 0) === index;\n  }\n\n  static isValidCallback(callback) {\n    return typeof callback === FUNCTION;\n  }\n}\n","import React, {\n  useState,\n  createContext,\n  useContext,\n  useEffect,\n  useCallback,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst ModalContext = createContext(null);\nconst { Provider } = ModalContext;\n\nexport const useModal = () => useContext(ModalContext);\n\n/**\n * UI Modal\n *\n * @typedef {Object} ModalProps\n * @property {ReactElement|HTMLElement} [content=null] Modal content.\n * @property {Object} [contentProps=null] Modal content props.\n * @property {boolean} [shouldCloseOnEsc=false] Modal is dismissible via the esc key.\n * @property {boolean} [isOpen=true] Make the Modal visible or hidden.\n * @property {boolean} [closeButton=true] Should the modal body render the close button.\n * @property {string} [title=null] Should the modal render the title independently of the body content.\n * @property {string} [customClassName=null] The custom class to style the modal.\n */\n\nconst ModalProvider = ({ children, modal: Modal, service }) => {\n  const DEFAULT_OPTIONS = {\n    content: null,\n    contentProps: null,\n    shouldCloseOnEsc: false,\n    isOpen: true,\n    onClose: null,\n    closeButton: true,\n    showScrollbar: false,\n    title: null,\n    customClassName: '',\n    fullscreen: false,\n  };\n\n  const [options, setOptions] = useState(DEFAULT_OPTIONS);\n\n  /**\n   * Show the modal and override its configuration props.\n   *\n   * @param {ModalProps} props { content, contentProps, shouldCloseOnEsc, isOpen, closeButton, title, customClassName }\n   * @returns void\n   */\n  const show = useCallback(props => setOptions({ ...options, ...props }), [\n    options,\n  ]);\n\n  /**\n   * Hide the modal and set its properties to default.\n   *\n   * @returns void\n   */\n  const hide = useCallback(() => setOptions(DEFAULT_OPTIONS), [\n    DEFAULT_OPTIONS,\n  ]);\n\n  /**\n   * Sets the implementation of a modal service that can be used by extensions.\n   *\n   * @returns void\n   */\n  useEffect(() => {\n    if (service) {\n      service.setServiceImplementation({ hide, show });\n    }\n  }, [hide, service, show]);\n\n  const {\n    content: ModalContent,\n    contentProps,\n    isOpen,\n    onClose,\n    title,\n    customClassName,\n    shouldCloseOnEsc,\n    fullscreen,\n    closeButton,\n    showScrollbar,\n    noScroll,\n  } = options;\n\n  return (\n    <Provider value={{ show, hide }}>\n      {ModalContent && (\n        <Modal\n          className={classNames(\n            customClassName,\n            ModalContent.className,\n            { visibleScrollbar: showScrollbar },\n            { noScroll }\n          )}\n          shouldCloseOnEsc={shouldCloseOnEsc}\n          isOpen={isOpen}\n          title={title}\n          fullscreen={fullscreen}\n          closeButton={closeButton}\n          onClose={() => {\n            if (onClose) {\n              onClose();\n            }\n\n            hide();\n          }}\n        >\n          <ModalContent {...contentProps} show={show} hide={hide} />\n        </Modal>\n      )}\n      {children}\n    </Provider>\n  );\n};\n\n/**\n * Higher Order Component to use the modal methods through a Class Component.\n *\n * @returns\n */\nexport const withModal = Component => {\n  return function WrappedComponent(props) {\n    const { show, hide } = useModal();\n    return <Component {...props} modal={{ show, hide }} />;\n  };\n};\n\nModalProvider.defaultProps = {\n  service: null,\n};\n\nModalProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  modal: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.func,\n  ]).isRequired,\n  service: PropTypes.shape({\n    setServiceImplementation: PropTypes.func,\n  }),\n};\n\nexport default ModalProvider;\n\nexport const ModalConsumer = ModalContext.Consumer;\n","import React, { useEffect } from 'react';\n\nconst SnackbarItem = ({ options, onClose }) => {\n  const handleClose = () => {\n    onClose(options.id);\n  };\n\n  const handleClick = () => {\n    options.action.onClick({ ...options, close: handleClose });\n  };\n\n  useEffect(() => {\n    if (options.autoClose) {\n      setTimeout(() => {\n        handleClose();\n      }, options.duration);\n    }\n  }, []);\n\n  return (\n    <div\n      className={`${options.visible ? '' : 'sb-hidden'} sb-${\n        options.type\n      } sb-item`}\n    >\n      <span className=\"sb-closeBtn\" onClick={handleClose}>\n        <span className=\"sb-closeIcon\">x</span>\n      </span>\n      {options.title && <div className=\"sb-title\">{options.title}</div>}\n      {options.message && <div className=\"sb-message\">{options.message}</div>}\n      {options.action && (\n        <button className=\"sb-action\" onClick={handleClick}>\n          {options.action.label}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default SnackbarItem;\n","import React from 'react';\nimport SnackbarItem from './SnackbarItem';\nimport './Snackbar.css';\nimport { useSnackbarContext } from '../../contextProviders';\n\nconst SnackbarContainer = () => {\n  const { snackbarItems, hide } = useSnackbarContext();\n\n  const renderItem = item => {\n    return <SnackbarItem key={item.itemId} options={item} onClose={hide} />;\n  };\n\n  if (!snackbarItems) {\n    return null;\n  }\n\n  const renderItems = () => {\n    const items = {\n      topLeft: [],\n      topCenter: [],\n      topRight: [],\n      bottomLeft: [],\n      bottomCenter: [],\n      bottomRight: [],\n    };\n\n    snackbarItems.map(item => {\n      items[item.position].push(item);\n    });\n\n    return (\n      <div>\n        {Object.keys(items).map(pos => {\n          if (!items[pos].length) {\n            return null;\n          }\n\n          return (\n            <div key={pos} className={`sb-container sb-${pos}`}>\n              {items[pos].map((item, index) => (\n                <div key={item.id + index}>{renderItem(item)}</div>\n              ))}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return <>{renderItems()}</>;\n};\n\nexport default SnackbarContainer;\n","export default {\n  INFO: 'info',\n  WARNING: 'warning',\n  SUCCESS: 'success',\n  ERROR: 'error',\n};\n","import React, {\n  useState,\n  createContext,\n  useContext,\n  useCallback,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { classes } from '@ohif/core';\n\nimport SnackbarContainer from '../components/snackbar/SnackbarContainer';\nimport SnackbarTypes from '../components/snackbar/SnackbarTypes';\n\nconst { LogManager } = classes;\n\nconst SnackbarContext = createContext(null);\n\nexport const useSnackbarContext = () => useContext(SnackbarContext);\n\nconst SnackbarProvider = ({ children, service }) => {\n  const DEFAULT_OPTIONS = {\n    title: '',\n    message: '',\n    duration: 5000,\n    autoClose: true,\n    position: 'bottomRight',\n    type: SnackbarTypes.INFO,\n    action: null,\n  };\n\n  const [count, setCount] = useState(1);\n  const [snackbarItems, setSnackbarItems] = useState([]);\n\n  useEffect(() => {\n    const onLogHandler = ({ type, notify, title, message }) => {\n      if (notify) {\n        show({ type, title, message });\n      }\n    };\n\n    LogManager.subscribe(LogManager.EVENTS.OnLog, onLogHandler);\n\n    return () => {\n      LogManager.unsubscribe(LogManager.EVENTS.OnLog, onLogHandler);\n    };\n  }, [show]);\n\n  const show = useCallback(\n    options => {\n      if (!options || (!options.title && !options.message)) {\n        console.warn(\n          'Snackbar cannot be rendered without required parameters: title | message'\n        );\n\n        return null;\n      }\n\n      if (options.type === 'error') {\n        console.error(options.error);\n      }\n\n      const newItem = {\n        ...DEFAULT_OPTIONS,\n        ...options,\n        id: count,\n        visible: true,\n      };\n\n      setSnackbarItems(state => [...state, newItem]);\n      setCount(count + 1);\n    },\n    [count, DEFAULT_OPTIONS]\n  );\n\n  const hide = useCallback(\n    id => {\n      const hideItem = items => {\n        const newItems = items.map(item => {\n          if (item.id === id) {\n            item.visible = false;\n          }\n\n          return item;\n        });\n\n        return newItems;\n      };\n\n      setSnackbarItems(state => hideItem(state));\n\n      setTimeout(() => {\n        setSnackbarItems(state => [...state.filter(item => item.id !== id)]);\n      }, 1000);\n    },\n    [setSnackbarItems]\n  );\n\n  const hideAll = () => {\n    // reset count\n    setCount(1);\n\n    // remove all items from array\n    setSnackbarItems(() => []);\n  };\n\n  /**\n   * Sets the implementation of a notification service that can be used by extensions.\n   *\n   * @returns void\n   */\n  useEffect(() => {\n    if (service) {\n      service.setServiceImplementation({ hide, show });\n    }\n  }, [service, hide, show]);\n\n  /**\n   * expose snackbar methods to window for debug purposes\n   * TODO: Check if it's really necessary\n   */\n  window.snackbar = {\n    show,\n    hide,\n    hideAll,\n  };\n\n  return (\n    <SnackbarContext.Provider value={{ show, hide, hideAll, snackbarItems }}>\n      {!!snackbarItems && <SnackbarContainer />}\n      {children}\n    </SnackbarContext.Provider>\n  );\n};\n\nSnackbarProvider.defaultProps = {\n  service: null,\n};\n\nSnackbarProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.func,\n  ]).isRequired,\n  service: PropTypes.shape({\n    setServiceImplementation: PropTypes.func,\n  }),\n};\n\n/**\n *\n * High Order Component to use the snackbar methods through a Class Component\n *\n */\nexport const withSnackbar = Component => {\n  return function WrappedComponent(props) {\n    const snackbarContext = {\n      ...useSnackbarContext(),\n    };\n    return <Component {...props} snackbarContext={snackbarContext} />;\n  };\n};\n\nexport default SnackbarProvider;\n","// Reference > https://reactjs.org/docs/context.html\nimport React from 'react';\nimport {\n  withTranslation as I18NextWithTranslation,\n  I18nextProvider,\n} from 'react-i18next';\nimport i18n from '@ohif/i18n';\n\nconst WrapperI18n = Component => {\n  const WrapperComponent = props => (\n    <I18nextProvider i18n={i18n}>\n      <Component {...props} />\n    </I18nextProvider>\n  );\n\n  return WrapperComponent;\n};\n\nconst withTranslation = namespace => Component => {\n  const TranslatedComponent = props => {\n    return <Component {...props} />;\n  };\n\n  return WrapperI18n(I18NextWithTranslation(namespace)(TranslatedComponent));\n};\n\nexport { withTranslation };\nexport default withTranslation;\n","import React, {\n  useState,\n  createContext,\n  useContext,\n  useCallback,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Draggable from 'react-draggable';\nimport classNames from 'classnames';\n\nimport { utils } from '@ohif/core';\n\nimport './DialogProvider.styl';\n\nconst DialogContext = createContext(null);\n\nexport const useDialog = () => useContext(DialogContext);\n\nconst DialogProvider = ({ children, service }) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [dialogs, setDialogs] = useState([]);\n  const [lastDialogId, setLastDialogId] = useState(null);\n  const [lastDialogPosition, setLastDialogPosition] = useState(null);\n  const [centerPositions, setCenterPositions] = useState([]);\n\n  useEffect(() => {\n    setCenterPositions(\n      dialogs.map(dialog => ({\n        id: dialog.id,\n        ...getCenterPosition(dialog.id),\n      }))\n    );\n  }, [dialogs]);\n\n  const getCenterPosition = id => {\n    const root = document.querySelector('#root');\n    const centerX = root.offsetLeft + root.offsetWidth / 2;\n    const centerY = root.offsetTop + root.offsetHeight / 2;\n    const item = document.querySelector(`#draggableItem-${id}`);\n    const itemBounds = item.getBoundingClientRect();\n    return {\n      x: centerX - itemBounds.width / 2,\n      y: centerY - itemBounds.height / 2,\n    };\n  };\n\n  /**\n   * Creates a new dialog and return its id.\n   *\n   * @param {DialogProps} props The dialog props.\n   * @returns The new dialog id.\n   */\n  const create = useCallback(props => {\n    const { id } = props;\n\n    let dialogId = id;\n    if (!dialogId) {\n      dialogId = utils.guid();\n    }\n\n    setDialogs(dialogs => [...dialogs, { ...props, id: dialogId }]);\n    setLastDialogId(dialogId);\n\n    return dialogId;\n  }, []);\n\n  /**\n   * Dismisses the dialog with a given id.\n   *\n   * @param {Object} props -\n   * @property {string} props.id The dialog id.\n   * @returns void\n   */\n  const dismiss = useCallback(\n    ({ id }) =>\n      setDialogs(dialogs => dialogs.filter(dialog => dialog.id !== id)),\n    []\n  );\n\n  /**\n   * Sets the implementation of a dialog service that can be used by extensions.\n   *\n   * @returns void\n   */\n  useEffect(() => {\n    if (service) {\n      service.setServiceImplementation({ create, dismiss, dismissAll });\n    }\n  }, [create, dismiss, service]);\n\n  /**\n   * Moves the dialog to the foreground if clicked.\n   *\n   * @param {string} id The dialog id.\n   * @returns void\n   */\n  const _bringToFront = useCallback(id => {\n    setDialogs(dialogs => {\n      const topDialog = dialogs.find(dialog => dialog.id === id);\n      return topDialog\n        ? [...dialogs.filter(dialog => dialog.id !== id), topDialog]\n        : dialogs;\n    });\n  }, []);\n\n  /**\n   * UI Dialog\n   *\n   * @typedef {Object} DialogProps\n   * @property {string} id The dialog id.\n   * @property {DialogContent} content The dialog content.\n   * @property {Object} contentProps The dialog content props.\n   * @property {boolean} isDraggable Controls if dialog content is draggable or not.\n   * @property {boolean} showOverlay Controls dialog overlay.\n   * @property {boolean} centralize Center the dialog on the screen.\n   * @property {boolean} preservePosition Use last position instead of default.\n   * @property {ElementPosition} defaultPosition Specifies the `x` and `y` that the dragged item should start at.\n   * @property {Function} onStart Called when dragging starts. If `false` is returned any handler, the action will cancel.\n   * @property {Function} onStop Called when dragging stops.\n   * @property {Function} onDrag Called while dragging.\n   */\n\n  useEffect(() => _bringToFront(lastDialogId), [_bringToFront, lastDialogId]);\n\n  /**\n   * Dismisses all dialogs.\n   *\n   * @returns void\n   */\n  const dismissAll = () => {\n    setDialogs([]);\n  };\n\n  /**\n   * Indicate if there are no dialogs present.\n   *\n   * @returns True if no dialogs are present.\n   */\n  const isEmpty = () => dialogs && dialogs.length < 1;\n\n  const renderDialogs = () =>\n    dialogs.map(dialog => {\n      const {\n        id,\n        content: DialogContent,\n        contentProps,\n        defaultPosition,\n        centralize = false,\n        preservePosition = true,\n        isDraggable = true,\n        onStart,\n        onStop,\n        onDrag,\n        showOverlay,\n      } = dialog;\n\n      let position =\n        (preservePosition && lastDialogPosition) || defaultPosition;\n      if (centralize) {\n        position = centerPositions.find(position => position.id === id);\n      }\n\n      const dragableItem = () => (\n        <Draggable\n          key={id}\n          disabled={!isDraggable}\n          position={position}\n          defaultPosition={position}\n          bounds=\"parent\"\n          onStart={event => {\n            const e = event || window.event;\n            const target = e.target || e.srcElement;\n            const BLACKLIST = [\n              'SVG',\n              'BUTTON',\n              'PATH',\n              'INPUT',\n              'SPAN',\n              'LABEL',\n            ];\n            if (BLACKLIST.includes(target.tagName.toUpperCase())) {\n              return false;\n            }\n\n            if (validCallback(onStart)) {\n              return onStart(event);\n            }\n          }}\n          onStop={event => {\n            setIsDragging(false);\n\n            if (validCallback(onStop)) {\n              return onStop(event);\n            }\n          }}\n          onDrag={event => {\n            setIsDragging(true);\n            _bringToFront(id);\n            _updateLastDialogPosition(id);\n\n            if (validCallback(onDrag)) {\n              return onDrag(event);\n            }\n          }}\n        >\n          <div\n            id={`draggableItem-${id}`}\n            className={classNames(\n              'DraggableItem',\n              isDragging && 'dragging',\n              isDraggable && 'draggable'\n            )}\n            style={{ zIndex: '999', position: 'absolute' }}\n            onClick={() => _bringToFront(id)}\n          >\n            <DialogContent {...dialog} {...contentProps} />\n          </div>\n        </Draggable>\n      );\n\n      return showOverlay ? (\n        <div className=\"Overlay\" key={id}>\n          {dragableItem()}\n        </div>\n      ) : (\n        dragableItem()\n      );\n    });\n\n  /**\n   * Update the last dialog position to be used as the new default position.\n   *\n   * @returns void\n   */\n  const _updateLastDialogPosition = dialogId => {\n    const draggableItemBounds = document\n      .querySelector(`#draggableItem-${dialogId}`)\n      .getBoundingClientRect();\n    setLastDialogPosition({\n      x: draggableItemBounds.x,\n      y: draggableItemBounds.y,\n    });\n  };\n\n  const validCallback = callback => callback && typeof callback === 'function';\n\n  return (\n    <DialogContext.Provider value={{ create, dismiss, dismissAll, isEmpty }}>\n      {!isEmpty() && <div className=\"DraggableArea\">{renderDialogs()}</div>}\n      {children}\n    </DialogContext.Provider>\n  );\n};\n\n/**\n *\n * High Order Component to use the dialog methods through a Class Component\n *\n */\nexport const withDialog = Component => {\n  return function WrappedComponent(props) {\n    const { create, dismiss, dismissAll, isEmpty } = useDialog();\n    return (\n      <Component {...props} dialog={{ create, dismiss, dismissAll, isEmpty }} />\n    );\n  };\n};\n\nDialogProvider.defaultProps = {\n  service: null,\n};\n\nDialogProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.func,\n  ]).isRequired,\n  service: PropTypes.shape({\n    setServiceImplementation: PropTypes.func,\n  }),\n};\n\nexport default DialogProvider;\n","import React, { useState, createContext, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoggerContext = createContext(null);\nconst { Provider } = LoggerContext;\n\nexport const useLogger = () => useContext(LoggerContext);\n\nconst LoggerProvider = ({ children, service }) => {\n  const [state, setState] = useState({\n    errors: [],\n    infos: [],\n  });\n\n  useEffect(() => {\n    const onErrorHandler = ({ error: errorObject, message }) => {\n      error({ error: errorObject, message });\n    };\n    window.addEventListener('error', onErrorHandler);\n    return () => {\n      window.removeEventListener('error', onErrorHandler);\n    };\n  }, []);\n\n  /**\n   * Logs an error\n   *\n   * @param {object} props { error, stack, message, displayOnConsole }\n   * @returns void\n   */\n  const error = ({\n    error = {},\n    stack = '',\n    message = '',\n    displayOnConsole = true,\n  }) => {\n    const errorObject = { error, stack, message, displayOnConsole };\n    setState(state => ({ ...state, errors: [...state.errors, errorObject] }));\n\n    if (displayOnConsole) {\n      console.error(error);\n    }\n  };\n\n  /**\n   * Logs an info\n   *\n   * @param {object} props { message, displayOnConsole }\n   * @returns void\n   */\n  const info = ({ message = '', displayOnConsole = true }) => {\n    setState(state => ({\n      ...state,\n      infos: state.infos.push({ message, displayOnConsole }),\n    }));\n\n    if (displayOnConsole) {\n      console.info(message);\n    }\n  };\n\n  /**\n   * Sets the implementation of a log service that can be used by extensions\n   *\n   * @returns void\n   */\n  useEffect(() => {\n    if (service) {\n      service.setServiceImplementation({ error, info });\n    }\n  }, [error, service, info]);\n\n  return <Provider value={{ info, error, state }}>{children}</Provider>;\n};\n\n/**\n * Higher Order Component to use the log methods through a Class Component\n *\n * @returns\n */\nexport const withLogger = Component => {\n  return function WrappedComponent(props) {\n    const { error, info, state } = useLogger();\n    return <Component {...props} logger={{ error, info, state }} />;\n  };\n};\n\nLoggerProvider.defaultProps = {\n  service: null,\n};\n\nLoggerProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  service: PropTypes.shape({\n    setServiceImplementation: PropTypes.func,\n  }),\n};\n\nexport default LoggerProvider;\n\nexport const LogConsumer = LoggerContext.Consumer;\n","export {\n  default as ModalProvider,\n  useModal,\n  withModal,\n  ModalConsumer,\n} from './ModalProvider.js';\nexport {\n  default as SnackbarProvider,\n  useSnackbarContext,\n  withSnackbar,\n} from './SnackbarProvider.js';\nexport {\n  default as LanguageProvider,\n  withTranslation,\n} from './LanguageProvider.js';\nexport {\n  default as DialogProvider,\n  withDialog,\n  useDialog,\n} from './DialogProvider.js';\nexport {\n  default as LoggerProvider,\n  withLogger,\n  useLogger,\n} from './LoggerProvider.js';\n","// These should be overridden by the implementation\nlet user = {\n  userLoggedIn: () => false,\n  getUserId: () => null,\n  getName: () => null,\n  getAccessToken: () => null,\n  login: () => new Promise((resolve, reject) => reject()),\n  logout: () => new Promise((resolve, reject) => reject()),\n  getData: key => null,\n  setData: (key, value) => null,\n};\n\nexport default user;\n","import { connect } from 'react-redux';\nimport ModelListRoute from './ModelListRoute.js';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n  };\n};\n\nconst ConnectedModelList = connect(\n  mapStateToProps,\n  null\n)(ModelListRoute);\n\nexport default ConnectedModelList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatFileSize } from './utils/helpers';\n//import CancellationToken from './utils/CancellationToken';\n//import dicomUploader from './api/DicomUploadService';\nimport './DicomUploader.css';\nimport { connect } from 'react-redux';\nimport { UINotificationService } from '@ohif/core';\n\nclass DicomUploader extends Component {\n  state = {\n    status: 'Upload',\n    isCancelled: false,\n    errorsCount: 0,\n    files: null,\n    uploadedVolume: null,\n    wholeVolumeStr: null,\n    isFilesListHidden: true,\n    timeLeft: null,\n    uploadedList: null,\n    totalCount: 0,\n    successfullyUploadedCount: 0,\n    lastFile: '',\n    uploadContext: null, // this is probably not needed, but we use this variable to distinguish between different downloads\n  };\n\n  static propTypes = {\n    id: PropTypes.string,\n    event: PropTypes.string,\n    url: PropTypes.string,\n    retrieveAuthHeaderFunction: PropTypes.func,\n    user: PropTypes.object,\n  };\n\n  filesLeft() {\n    return (\n      this.state.uploadedList.length + ' of ' + this.state.totalCount + ' files'\n    );\n  }\n\n  volumeLeft() {\n    let left = formatFileSize(this.state.uploadedVolume);\n    return left + ' of ' + this.state.wholeVolumeStr;\n  }\n\n  percents() {\n    return parseInt(\n      (100 * this.state.uploadedList.length) /\n        Object.keys(this.state.files).length\n    );\n  }\n\n  isFinished() {\n    return (\n      this.state.isCancelled ||\n      Object.keys(this.state.files).length === this.state.uploadedList.length\n    );\n  }\n\n  errorsMessage() {\n    const errors = this.state.errorsCount === 1 ? ' error' : ' errors';\n    return (\n      this.state.errorsCount + errors + ' while uploading, click for more info'\n    );\n  }\n\n  uploadFiles = files => {\n    const { user } = this.props;\n    let notification = UINotificationService.create({});\n    const zip = require('jszip')();\n    let filesToSend = files.target.files;\n    for (let f = 0; f < filesToSend.length; f++) {\n      zip.file(filesToSend[f]['name'], filesToSend[f]);\n    }\n\n    var req = new XMLHttpRequest();\n    req.open(\n      'POST',\n      `/api/image_encrypt/?user=${user.email}`,\n      true\n    );\n    req.setRequestHeader(\n      'Authorization',\n      `JWT ${localStorage.getItem('access')}`\n    );\n    //req.responseType = 'blob';\n    req.responseType = 'json';\n    zip.generateAsync({ type: 'blob' }).then(content => {\n      let form_data = new FormData();\n      form_data.append('file', content, 'dicom_images' + '.zip');\n\n      req.send(form_data);\n    });\n\n    notification.show({\n      title: 'Upload DICOM',\n      message: 'Sending data to server, encrypting...This can take a bit...',\n      type: 'info',\n      duration: 12000,\n    });\n\n    req.onload = () => {\n      let response = req.response;\n      //console.log(response);\n      if (response['message'] === 'Study was uploaded!') {\n        notification.show({\n          title: 'Upload DICOM',\n          message: response['message'],\n          type: 'success',\n          duration: 12000,\n        });\n      } else {\n        notification.show({\n          title: 'Upload DICOM',\n          message: 'Failed to upload study - Error!',\n          type: 'error',\n          duration: 12000,\n        });\n      }\n    };\n\n    /*const uploadContext = Math.random();\n    const cancellationToken = new CancellationToken();\n    const uploadCallback = (fileId, error) =>\n      uploadContext === this.state.uploadContext &&\n      this.uploadCallback.call(this, fileId, error);\n\n    dicomUploader.setRetrieveAuthHeaderFunction(\n      this.props.retrieveAuthHeaderFunction\n    );\n    const filesDict = {};\n    var flist = [];\n    req.onload = async () => {\n      const zip = require('jszip')();\n      var blob = req.response;\n      var zipFile = await zip.loadAsync(blob);\n      for (let fileName in zipFile.files) {\n        var fileBlob = await zip.file(fileName).async('blob');\n        var file = new File([fileBlob], fileName, { type: 'application/dcm' });\n        flist.push(file);\n      }\n\n      flist.forEach((file, i) => {\n        const fileDesc = {\n          id: i,\n          name: file.name,\n          path: file.webkitRelativePath || file.name,\n          size: file.size,\n          error: null,\n          processed: false,\n          processedInUI: false,\n        };\n        filesDict[i] = fileDesc;\n        file.fileId = i;\n      });\n\n      this.setState({\n        status: 'Uploading...',\n        files: filesDict,\n        uploadedList: [],\n        uploadedVolume: 0,\n        lastFile: flist[0].name,\n        totalCount: flist.length,\n        wholeVolumeStr: null,\n        uploadContext: uploadContext,\n        cancellationToken: new CancellationToken(),\n      });\n\n      dicomUploader.smartUpload(\n        flist,\n        '/instances',\n        uploadCallback,\n        cancellationToken\n      );\n    };*/\n  };\n\n  uploadCallback(fileId, error) {\n    const file = this.state.files[fileId];\n    file.processed = true;\n    if (!error) {\n      let uploadedVolume = this.state.uploadedVolume + file.size;\n      this.setState({ uploadedVolume });\n    } else {\n      file.error = error;\n      this.setState({ errorsCount: this.state.errorsCount + 1 });\n    }\n    this.setState({ lastFile: file.name });\n    let uploadedList = this.state.uploadedList;\n    uploadedList.push(file);\n    this.setState({ uploadedList });\n  }\n\n  renderTableRow = file => {\n    let error = null;\n    if (file.error !== null) {\n      error = <p style={{ color: 'red' }}>{file.error}</p>;\n    }\n    return (\n      <tr key={file.id}>\n        <td className=\"project\">\n          {file.name} {error}\n        </td>\n      </tr>\n    );\n  };\n\n  render() {\n    if (this.state.files === null) {\n      return (\n        <div className=\"dicom-uploader\">\n          <div className=\"button\">\n            <label htmlFor=\"file\">\n              <img src=\"./assets/Button_File.svg\" alt=\"upload file\"></img>\n            </label>\n            <input\n              className=\"invisible-input\"\n              onChange={this.uploadFiles}\n              type=\"file\"\n              id=\"file\"\n              multiple\n            />\n          </div>\n\n          <div className=\"button\">\n            <label htmlFor=\"folder\">\n              <img src=\"./assets/Button_Folder.svg\" alt=\"upload folder\"></img>\n            </label>\n            <input\n              className=\"invisible-input\"\n              type=\"file\"\n              onChange={this.uploadFiles}\n              id=\"folder\"\n              webkitdirectory=\"true\"\n              mozdirectory=\"true\"\n              multiple\n            />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <table id=\"tblProjectList\" className=\"table noselect\">\n        <thead>\n          <tr>\n            <th className=\"table-header\">\n              {this.percents()}% {this.filesLeft()}\n            </th>\n          </tr>\n        </thead>\n        <tbody id=\"ProjectList\">\n          {this.state.uploadedList.map(this.renderTableRow)}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nconst ConnectedDicomUploader = connect(\n  mapStateToProps,\n  null\n)(DicomUploader);\n\nexport default ConnectedDicomUploader;\n","export function formatFileSize(size) {\n  if (size === 0) return '0 B';\n  const n = Math.floor(Math.log(size) / Math.log(1024));\n  return (\n    (size / Math.pow(1024, n)).toFixed(2) * 1 +\n    ' ' +\n    ['B', 'kB', 'MB', 'GB', 'TB'][n]\n  );\n}\n\nexport function httpErrorToStr(error) {\n  if (!error) return 'Unknown error';\n  if (error.response) {\n    try {\n      const jsonResponse = JSON.parse(error.response);\n      if (\n        jsonResponse.error &&\n        jsonResponse.error.code &&\n        jsonResponse.error.message\n      )\n        return jsonResponse.error.code + ' - ' + jsonResponse.error.message;\n    } catch (err) {\n      return error.response;\n    }\n  }\n  return error.message || 'Unknown error.';\n}\n\n/* eslint-disable */\nexport function checkDicomFile(arrayBuffer) {\n  if (arrayBuffer.length <= 132) return false;\n  const arr = new Uint8Array(arrayBuffer.slice(128, 132));\n  // bytes from 128 to 132 must be \"DICM\"\n  return Array.from('DICM').every((char, i) => char.charCodeAt(0) === arr[i]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedDicomUploader from './DicomUploader';\nimport { servicesManager } from './../App.js';\n\nfunction DicomFileUploaderModal({\n  isOpen = false,\n  onClose,\n  url,\n  retrieveAuthHeaderFunction,\n}) {\n  const { UIModalService } = servicesManager.services;\n\n  const showDicomStorePickerModal = () => {\n    if (!UIModalService) {\n      return;\n    }\n\n    UIModalService.show({\n      content: ConnectedDicomUploader,\n      title: 'Upload DICOM Files',\n      contentProps: {\n        url,\n        retrieveAuthHeaderFunction,\n      },\n      onClose,\n    });\n  };\n\n  return (\n    <React.Fragment>{isOpen && showDicomStorePickerModal()}</React.Fragment>\n  );\n}\n\nDicomFileUploaderModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  retrieveAuthHeaderFunction: PropTypes.func.isRequired,\n  onClose: PropTypes.func,\n  url: PropTypes.string,\n};\n\nexport default DicomFileUploaderModal;\n","import { connect } from 'react-redux';\nimport DicomFileUploaderModal from './DicomFileUploaderModal.js';\nimport OHIF from '@ohif/core';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  const retrieveAuthHeaderFunction = () =>\n    OHIF.DICOMWeb.getAuthorizationHeader(activeServer);\n\n  return {\n    retrieveAuthHeaderFunction,\n    url: activeServer && activeServer.qidoRoot,\n  };\n};\n\nconst ConnectedDicomFileUploader = connect(\n  mapStateToProps,\n  null\n)(DicomFileUploaderModal);\n\nexport default ConnectedDicomFileUploader;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport './OHIFLogo.css';\nimport { Icon } from '@ohif/ui';\nimport React from 'react';\n\nfunction OHIFLogo() {\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"header-brand\">\n      <Icon name=\"brain\" className=\"header-logo-image\" />\n      <h1 className=\"header-logo-text\">DICOM Image Viewer</h1>\n    </a>\n  );\n}\n\nexport default OHIFLogo;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withModal } from '@ohif/ui';\nimport OHIFLogo from '../OHIFLogo/OHIFLogo.js';\nimport './Header.css';\n\nfunction Header(props) {\n  const { useLargeLogo, linkPath, linkText, location, children } = props;\n\n  const hasLink = linkText && linkPath;\n\n  return (\n    <>\n      <div\n        className={classNames('entry-header', { 'header-big': useLargeLogo })}\n      >\n        <div className=\"header-left-box\">\n          {location && location.studyLink && (\n            <Link\n              to={location.studyLink}\n              className=\"header-btn header-viewerLink\"\n            >\n              {'Back to Viewer'}\n            </Link>\n          )}\n\n          {children}\n\n          {hasLink && (\n            <Link\n              className=\"header-btn header-studyListLinkSection\"\n              to={{\n                pathname: linkPath,\n                state: { studyLink: location.pathname },\n              }}\n            >\n              {linkText}\n            </Link>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nHeader.propTypes = {\n  linkText: PropTypes.string,\n  linkPath: PropTypes.string,\n  useLargeLogo: PropTypes.bool,\n  location: PropTypes.object.isRequired,\n  children: PropTypes.node,\n};\n\nHeader.defaultProps = {\n  useLargeLogo: false,\n  children: OHIFLogo(),\n};\n\nexport default withTranslation(['Header', 'AboutModal'])(\n  withRouter(withModal(Header))\n);\n","import Header from '../components/Header/Header.js';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.oidc && state.oidc.user,\n  };\n};\n\nconst ConnectedHeader = connect(mapStateToProps)(Header);\n\nexport default ConnectedHeader;\n","export default {\n  COMMANDS: 'commandsModule',\n  PANEL: 'panelModule',\n  SOP_CLASS_HANDLER: 'sopClassHandlerModule',\n  TOOLBAR: 'toolbarModule',\n  VIEWPORT: 'viewportModule',\n};\n","const state = {\n  enabledElements: {},\n};\n\n/**\n * Sets the enabled element `dom` reference for an active viewport.\n * @param {HTMLElement} dom Active viewport element.\n * @return void\n */\nconst setEnabledElement = (viewportIndex, element) =>\n  (state.enabledElements[viewportIndex] = element);\n\n/**\n * Grabs the enabled element `dom` reference of an active viewport.\n *\n * @return {HTMLElement} Active viewport element.\n */\nconst getEnabledElement = viewportIndex => state.enabledElements[viewportIndex];\n\nexport { setEnabledElement, getEnabledElement };\n","var map = {\n\t\"./af\": 445,\n\t\"./af.js\": 445,\n\t\"./ar\": 446,\n\t\"./ar-dz\": 447,\n\t\"./ar-dz.js\": 447,\n\t\"./ar-kw\": 448,\n\t\"./ar-kw.js\": 448,\n\t\"./ar-ly\": 449,\n\t\"./ar-ly.js\": 449,\n\t\"./ar-ma\": 450,\n\t\"./ar-ma.js\": 450,\n\t\"./ar-sa\": 451,\n\t\"./ar-sa.js\": 451,\n\t\"./ar-tn\": 452,\n\t\"./ar-tn.js\": 452,\n\t\"./ar.js\": 446,\n\t\"./az\": 453,\n\t\"./az.js\": 453,\n\t\"./be\": 454,\n\t\"./be.js\": 454,\n\t\"./bg\": 455,\n\t\"./bg.js\": 455,\n\t\"./bm\": 456,\n\t\"./bm.js\": 456,\n\t\"./bn\": 457,\n\t\"./bn.js\": 457,\n\t\"./bo\": 458,\n\t\"./bo.js\": 458,\n\t\"./br\": 459,\n\t\"./br.js\": 459,\n\t\"./bs\": 460,\n\t\"./bs.js\": 460,\n\t\"./ca\": 461,\n\t\"./ca.js\": 461,\n\t\"./cs\": 462,\n\t\"./cs.js\": 462,\n\t\"./cv\": 463,\n\t\"./cv.js\": 463,\n\t\"./cy\": 464,\n\t\"./cy.js\": 464,\n\t\"./da\": 465,\n\t\"./da.js\": 465,\n\t\"./de\": 466,\n\t\"./de-at\": 467,\n\t\"./de-at.js\": 467,\n\t\"./de-ch\": 468,\n\t\"./de-ch.js\": 468,\n\t\"./de.js\": 466,\n\t\"./dv\": 469,\n\t\"./dv.js\": 469,\n\t\"./el\": 470,\n\t\"./el.js\": 470,\n\t\"./en-SG\": 471,\n\t\"./en-SG.js\": 471,\n\t\"./en-au\": 472,\n\t\"./en-au.js\": 472,\n\t\"./en-ca\": 473,\n\t\"./en-ca.js\": 473,\n\t\"./en-gb\": 474,\n\t\"./en-gb.js\": 474,\n\t\"./en-ie\": 475,\n\t\"./en-ie.js\": 475,\n\t\"./en-il\": 476,\n\t\"./en-il.js\": 476,\n\t\"./en-nz\": 477,\n\t\"./en-nz.js\": 477,\n\t\"./eo\": 478,\n\t\"./eo.js\": 478,\n\t\"./es\": 479,\n\t\"./es-do\": 480,\n\t\"./es-do.js\": 480,\n\t\"./es-us\": 481,\n\t\"./es-us.js\": 481,\n\t\"./es.js\": 479,\n\t\"./et\": 482,\n\t\"./et.js\": 482,\n\t\"./eu\": 483,\n\t\"./eu.js\": 483,\n\t\"./fa\": 484,\n\t\"./fa.js\": 484,\n\t\"./fi\": 485,\n\t\"./fi.js\": 485,\n\t\"./fo\": 486,\n\t\"./fo.js\": 486,\n\t\"./fr\": 487,\n\t\"./fr-ca\": 488,\n\t\"./fr-ca.js\": 488,\n\t\"./fr-ch\": 489,\n\t\"./fr-ch.js\": 489,\n\t\"./fr.js\": 487,\n\t\"./fy\": 490,\n\t\"./fy.js\": 490,\n\t\"./ga\": 491,\n\t\"./ga.js\": 491,\n\t\"./gd\": 492,\n\t\"./gd.js\": 492,\n\t\"./gl\": 493,\n\t\"./gl.js\": 493,\n\t\"./gom-latn\": 494,\n\t\"./gom-latn.js\": 494,\n\t\"./gu\": 495,\n\t\"./gu.js\": 495,\n\t\"./he\": 496,\n\t\"./he.js\": 496,\n\t\"./hi\": 497,\n\t\"./hi.js\": 497,\n\t\"./hr\": 498,\n\t\"./hr.js\": 498,\n\t\"./hu\": 499,\n\t\"./hu.js\": 499,\n\t\"./hy-am\": 500,\n\t\"./hy-am.js\": 500,\n\t\"./id\": 501,\n\t\"./id.js\": 501,\n\t\"./is\": 502,\n\t\"./is.js\": 502,\n\t\"./it\": 503,\n\t\"./it-ch\": 504,\n\t\"./it-ch.js\": 504,\n\t\"./it.js\": 503,\n\t\"./ja\": 505,\n\t\"./ja.js\": 505,\n\t\"./jv\": 506,\n\t\"./jv.js\": 506,\n\t\"./ka\": 507,\n\t\"./ka.js\": 507,\n\t\"./kk\": 508,\n\t\"./kk.js\": 508,\n\t\"./km\": 509,\n\t\"./km.js\": 509,\n\t\"./kn\": 510,\n\t\"./kn.js\": 510,\n\t\"./ko\": 511,\n\t\"./ko.js\": 511,\n\t\"./ku\": 512,\n\t\"./ku.js\": 512,\n\t\"./ky\": 513,\n\t\"./ky.js\": 513,\n\t\"./lb\": 514,\n\t\"./lb.js\": 514,\n\t\"./lo\": 515,\n\t\"./lo.js\": 515,\n\t\"./lt\": 516,\n\t\"./lt.js\": 516,\n\t\"./lv\": 517,\n\t\"./lv.js\": 517,\n\t\"./me\": 518,\n\t\"./me.js\": 518,\n\t\"./mi\": 519,\n\t\"./mi.js\": 519,\n\t\"./mk\": 520,\n\t\"./mk.js\": 520,\n\t\"./ml\": 521,\n\t\"./ml.js\": 521,\n\t\"./mn\": 522,\n\t\"./mn.js\": 522,\n\t\"./mr\": 523,\n\t\"./mr.js\": 523,\n\t\"./ms\": 524,\n\t\"./ms-my\": 525,\n\t\"./ms-my.js\": 525,\n\t\"./ms.js\": 524,\n\t\"./mt\": 526,\n\t\"./mt.js\": 526,\n\t\"./my\": 527,\n\t\"./my.js\": 527,\n\t\"./nb\": 528,\n\t\"./nb.js\": 528,\n\t\"./ne\": 529,\n\t\"./ne.js\": 529,\n\t\"./nl\": 530,\n\t\"./nl-be\": 531,\n\t\"./nl-be.js\": 531,\n\t\"./nl.js\": 530,\n\t\"./nn\": 532,\n\t\"./nn.js\": 532,\n\t\"./pa-in\": 533,\n\t\"./pa-in.js\": 533,\n\t\"./pl\": 534,\n\t\"./pl.js\": 534,\n\t\"./pt\": 535,\n\t\"./pt-br\": 536,\n\t\"./pt-br.js\": 536,\n\t\"./pt.js\": 535,\n\t\"./ro\": 537,\n\t\"./ro.js\": 537,\n\t\"./ru\": 538,\n\t\"./ru.js\": 538,\n\t\"./sd\": 539,\n\t\"./sd.js\": 539,\n\t\"./se\": 540,\n\t\"./se.js\": 540,\n\t\"./si\": 541,\n\t\"./si.js\": 541,\n\t\"./sk\": 542,\n\t\"./sk.js\": 542,\n\t\"./sl\": 543,\n\t\"./sl.js\": 543,\n\t\"./sq\": 544,\n\t\"./sq.js\": 544,\n\t\"./sr\": 545,\n\t\"./sr-cyrl\": 546,\n\t\"./sr-cyrl.js\": 546,\n\t\"./sr.js\": 545,\n\t\"./ss\": 547,\n\t\"./ss.js\": 547,\n\t\"./sv\": 548,\n\t\"./sv.js\": 548,\n\t\"./sw\": 549,\n\t\"./sw.js\": 549,\n\t\"./ta\": 550,\n\t\"./ta.js\": 550,\n\t\"./te\": 551,\n\t\"./te.js\": 551,\n\t\"./tet\": 552,\n\t\"./tet.js\": 552,\n\t\"./tg\": 553,\n\t\"./tg.js\": 553,\n\t\"./th\": 554,\n\t\"./th.js\": 554,\n\t\"./tl-ph\": 555,\n\t\"./tl-ph.js\": 555,\n\t\"./tlh\": 556,\n\t\"./tlh.js\": 556,\n\t\"./tr\": 557,\n\t\"./tr.js\": 557,\n\t\"./tzl\": 558,\n\t\"./tzl.js\": 558,\n\t\"./tzm\": 559,\n\t\"./tzm-latn\": 560,\n\t\"./tzm-latn.js\": 560,\n\t\"./tzm.js\": 559,\n\t\"./ug-cn\": 561,\n\t\"./ug-cn.js\": 561,\n\t\"./uk\": 562,\n\t\"./uk.js\": 562,\n\t\"./ur\": 563,\n\t\"./ur.js\": 563,\n\t\"./uz\": 564,\n\t\"./uz-latn\": 565,\n\t\"./uz-latn.js\": 565,\n\t\"./uz.js\": 564,\n\t\"./vi\": 566,\n\t\"./vi.js\": 566,\n\t\"./x-pseudo\": 567,\n\t\"./x-pseudo.js\": 567,\n\t\"./yo\": 568,\n\t\"./yo.js\": 568,\n\t\"./zh-cn\": 569,\n\t\"./zh-cn.js\": 569,\n\t\"./zh-hk\": 570,\n\t\"./zh-hk.js\": 570,\n\t\"./zh-tw\": 571,\n\t\"./zh-tw.js\": 571\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 907;","import { Metadata } from './Metadata';\nimport OHIFError from '../OHIFError.js';\n\n/**\n * ATTENTION! This class should never depend on StudyMetadata or SeriesMetadata classes as this could\n * possibly cause circular dependency issues.\n */\n\nconst UNDEFINED = 'undefined';\nconst STRING = 'string';\n\nexport class InstanceMetadata extends Metadata {\n  constructor(data, uid) {\n    super(data, uid);\n    // Initialize Private Properties\n    Object.defineProperties(this, {\n      _imageId: {\n        configurable: true, // configurable so that it can be redefined in sub-classes...\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n    });\n    // Initialize Public Properties\n    this._definePublicProperties();\n  }\n\n  /**\n   * Private Methods\n   */\n\n  /**\n   * Define Public Properties\n   * This method should only be called during initialization (inside the class constructor)\n   */\n  _definePublicProperties() {\n    /**\n     * Property: this.SOPInstanceUID\n     * Same as this.getSOPInstanceUID()\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\n     * sopInstanceCollection.findBy({\n     *   SOPInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\n     * });\n     */\n    Object.defineProperty(this, 'SOPInstanceUID', {\n      configurable: false,\n      enumerable: false,\n      get: function() {\n        return this.getSOPInstanceUID();\n      },\n    });\n  }\n\n  /**\n   * Public Methods\n   */\n\n  /**\n   * Returns the StudyInstanceUID of the current instance. This method is basically a shorthand the full \"getTagValue\" method call.\n   */\n  getStudyInstanceUID() {\n    return this.getTagValue('StudyInstanceUID', null);\n  }\n\n  /**\n   * Returns the SeriesInstanceUID of the current instance. This method is basically a shorthand the full \"getTagValue\" method call.\n   */\n  getSeriesInstanceUID() {\n    return this.getTagValue('SeriesInstanceUID', null);\n  }\n\n  /**\n   * Returns the SOPInstanceUID of the current instance.\n   */\n  getSOPInstanceUID() {\n    return this.getTagValue('SOPInstanceUID', null);\n  }\n\n  // @TODO: Improve this... (E.g.: blob data)\n  getStringValue(tagOrProperty, index, defaultValue) {\n    let value = this.getTagValue(tagOrProperty, defaultValue);\n\n    if (typeof value !== STRING && typeof value !== UNDEFINED) {\n      value = value.toString();\n    }\n\n    return InstanceMetadata.getIndexedValue(value, index, defaultValue);\n  }\n\n  // @TODO: Improve this... (E.g.: blob data)\n  getFloatValue(tagOrProperty, index, defaultValue) {\n    let value = this.getTagValue(tagOrProperty, defaultValue);\n    value = InstanceMetadata.getIndexedValue(value, index, defaultValue);\n\n    if (value instanceof Array) {\n      value.forEach((val, idx) => {\n        value[idx] = parseFloat(val);\n      });\n\n      return value;\n    }\n\n    return typeof value === STRING ? parseFloat(value) : value;\n  }\n\n  // @TODO: Improve this... (E.g.: blob data)\n  getIntValue(tagOrProperty, index, defaultValue) {\n    let value = this.getTagValue(tagOrProperty, defaultValue);\n    value = InstanceMetadata.getIndexedValue(value, index, defaultValue);\n\n    if (value instanceof Array) {\n      value.forEach((val, idx) => {\n        value[idx] = parseFloat(val);\n      });\n\n      return value;\n    }\n\n    return typeof value === STRING ? parseInt(value) : value;\n  }\n\n  /**\n   * This function should be overriden by specialized classes in order to allow client libraries or viewers to take advantage of the Study Metadata API.\n   */\n  getTagValue(tagOrProperty, defaultValue) {\n    /**\n     * Please override this method on a specialized class.\n     */\n    throw new OHIFError(\n      'InstanceMetadata::getTagValue is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\n    );\n  }\n\n  /**\n   * Compares the current instance with another one.\n   * @param {InstanceMetadata} instance An instance of the InstanceMetadata class.\n   * @returns {boolean} Returns true if both instances refer to the same instance.\n   */\n  equals(instance) {\n    const self = this;\n    return (\n      instance === self ||\n      (instance instanceof InstanceMetadata &&\n        instance.getSOPInstanceUID() === self.getSOPInstanceUID())\n    );\n  }\n\n  /**\n   * Check if the tagOrProperty exists\n   * @param  {String} tagOrProperty tag or property be checked\n   * @return {Boolean}   True if the tag or property exists or false if doesn't\n   */\n  tagExists(tagOrProperty) {\n    /**\n     * Please override this method\n     */\n    throw new OHIFError(\n      'InstanceMetadata::tagExists is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\n    );\n  }\n\n  /**\n   * Get custom image id of a sop instance\n   * @return {Any}          sop instance image id\n   */\n  getImageId(frame) {\n    /**\n     * Please override this method\n     */\n    throw new OHIFError(\n      'InstanceMetadata::getImageId is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\n    );\n  }\n\n  /**\n   * Static Methods\n   */\n\n  /**\n   * Get an value based that can be index based. This function is called by all getters. See above functions.\n   *     - If value is a String and has indexes:\n   *         - If undefined index: returns an array of the split values.\n   *         - If defined index:\n   *             - If invalid: returns defaultValue\n   *             - If valid: returns the indexed value\n   *      - If value is not a String, returns default value.\n   */\n  static getIndexedValue(value, index, defaultValue) {\n    let result = defaultValue;\n\n    if (typeof value === STRING) {\n      const hasIndexValues = value.indexOf('\\\\') !== -1;\n\n      result = value;\n\n      if (hasIndexValues) {\n        const splitValues = value.split('\\\\');\n        if (Metadata.isValidIndex(index)) {\n          const indexedValue = splitValues[index];\n\n          result = typeof indexedValue !== STRING ? defaultValue : indexedValue;\n        } else {\n          result = splitValues;\n        }\n      }\n    }\n\n    return result;\n  }\n}\n","import { Metadata } from './Metadata';\nimport { InstanceMetadata } from './InstanceMetadata';\n\nexport class SeriesMetadata extends Metadata {\n  constructor(data, uid) {\n    super(data, uid);\n    // Initialize Private Properties\n    Object.defineProperties(this, {\n      _seriesInstanceUID: {\n        configurable: true, // configurable so that it can be redefined in sub-classes...\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n      _instances: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: [],\n      },\n      _firstInstance: {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n    });\n    // Initialize Public Properties\n    this._definePublicProperties();\n  }\n\n  /**\n   * Private Methods\n   */\n\n  /**\n   * Define Public Properties\n   * This method should only be called during initialization (inside the class constructor)\n   */\n  _definePublicProperties() {\n    /**\n     * Property: this.seriesInstanceUID\n     * Same as this.getSeriesInstanceUID()\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\n     * seriesCollection.findBy({\n     *   seriesInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\n     * });\n     */\n    Object.defineProperty(this, 'seriesInstanceUID', {\n      configurable: false,\n      enumerable: false,\n      get: function() {\n        return this.getSeriesInstanceUID();\n      },\n    });\n  }\n\n  /**\n   * Public Methods\n   */\n\n  /**\n   * Returns the SeriesInstanceUID of the current series.\n   */\n  getSeriesInstanceUID() {\n    return this._seriesInstanceUID;\n  }\n\n  /**\n   * Append an instance to the current series.\n   * @param {InstanceMetadata} instance The instance to be added to the current series.\n   * @returns {boolean} Returns true on success, false otherwise.\n   */\n  addInstance(instance) {\n    let result = false;\n    if (\n      instance instanceof InstanceMetadata &&\n      this.getInstanceByUID(instance.getSOPInstanceUID()) === void 0\n    ) {\n      this._instances.push(instance);\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Get the first instance of the current series retaining a consistent result across multiple calls.\n   * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.\n   */\n  getFirstInstance() {\n    let instance = this._firstInstance;\n    if (!(instance instanceof InstanceMetadata)) {\n      instance = null;\n      const found = this.getInstanceByIndex(0);\n      if (found instanceof InstanceMetadata) {\n        this._firstInstance = found;\n        instance = found;\n      }\n    }\n    return instance;\n  }\n\n  /**\n   * Find an instance by index.\n   * @param {number} index An integer representing a list index.\n   * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.\n   */\n  getInstanceByIndex(index) {\n    let found; // undefined by default...\n    if (Metadata.isValidIndex(index)) {\n      found = this._instances[index];\n    }\n    return found;\n  }\n\n  /**\n   * Find an instance by SOPInstanceUID.\n   * @param {string} uid An UID string.\n   * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.\n   */\n  getInstanceByUID(uid) {\n    let found; // undefined by default...\n    if (Metadata.isValidUID(uid)) {\n      found = this._instances.find(instance => {\n        return instance.getSOPInstanceUID() === uid;\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Retrieve the number of instances within the current series.\n   * @returns {number} The number of instances in the current series.\n   */\n  getInstanceCount() {\n    return this._instances.length;\n  }\n\n  /**\n   * Invokes the supplied callback for each instance in the current series passing\n   * two arguments: instance (an InstanceMetadata instance) and index (the integer\n   * index of the instance within the current series)\n   * @param {function} callback The callback function which will be invoked for each instance in the series.\n   * @returns {undefined} Nothing is returned.\n   */\n  forEachInstance(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      this._instances.forEach((instance, index) => {\n        callback.call(null, instance, index);\n      });\n    }\n  }\n\n  /**\n   * Find the index of an instance inside the series.\n   * @param {InstanceMetadata} instance An instance of the SeriesMetadata class.\n   * @returns {number} The index of the instance inside the series or -1 if not found.\n   */\n  indexOfInstance(instance) {\n    return this._instances.indexOf(instance);\n  }\n\n  /**\n   * Search the associated instances using the supplied callback as criteria. The callback is passed\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer\n   * index of the instance within its series)\n   * @param {function} callback The callback function which will be invoked for each instance.\n   * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it\n   *                                     returns a InstanceMetadata. \"undefined\" is returned otherwise\n   */\n  findInstance(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      return this._instances.find((instance, index) => {\n        return callback.call(null, instance, index);\n      });\n    }\n  }\n\n  /**\n   * Compares the current series with another one.\n   * @param {SeriesMetadata} series An instance of the SeriesMetadata class.\n   * @returns {boolean} Returns true if both instances refer to the same series.\n   */\n  equals(series) {\n    const self = this;\n    return (\n      series === self ||\n      (series instanceof SeriesMetadata &&\n        series.getSeriesInstanceUID() === self.getSeriesInstanceUID())\n    );\n  }\n}\n"],"sourceRoot":""}