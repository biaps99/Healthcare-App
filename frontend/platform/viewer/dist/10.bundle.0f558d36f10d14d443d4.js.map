{"version":3,"sources":["webpack:///./connectedComponents/ViewerNrrd.js","webpack:///./connectedComponents/ViewerLocalFileData.js"],"names":["larvitar","require","ViewerNrrd","props","e","viewport","cornerstone","getViewport","state","element","image","getImage","imageDimensions","width","height","windowWidth","voi","windowCenter","wwwc","toFixed","stackData","cornerstoneTools","getToolState","data","setState","scale","size","slice","currentImageIdIndex","stackSize","imageIds","length","this","nrrdFile","oneFile","reader","FileReader","readAsArrayBuffer","document","getElementsByClassName","innerText","enable","addEventListener","logMouseButton","logScrollButton","scope","onload","volume","importNRRDImage","result","serie","buildNrrdImage","renderImage","series","isMultiframe","numberOfSlices","imageIndex","imageId","Math","floor","isColor","color","isTimeserie","rows","instances","metadata","cols","thickness","spacing_x","spacing_y","wc","ww","defaultWW","defaultWC","alert","getEnabledElement","seriesStack","getSeriesData","StackScrollTool","stack","loadImage","then","displayImage","updateData","addStackStateManager","addToolState","addTool","colormap","colors","getColormap","style","resize","invert","setViewport","fitToWindow","zoomPercentage","parseFloat","marginLeft","float","marginBottom","xmlns","fill","className","viewBox","d","getEnabledElements","marginRight","classNames","ErrorBoundaryDialog","context","ConnectedViewerMain","studies","isStudyLoaded","Component","PropTypes","array","bool","object","withDialog","OHIFStudyMetadata","studyMetadataManager","utils","dropZoneLinkDialog","onDrop","dir","noDrag","getRootProps","getInputProps","webkitdirectory","mozdirectory","ViewerLocalFileData","purge","updatedStudies","map","study","studyMetadata","StudyInstanceUID","sopClassHandlerModules","extensionManager","modules","displaySets","createDisplaySets","forEachDisplaySet","displayset","localFile","add","loading","error","acceptedFiles","includes","isNrrdImage","filesToStudies","updateStudies","JSON","stringify","noClick","ConnectedViewer","studyInstanceUIDs","a","linksDialogMessage"],"mappings":"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","file":"10.bundle.0f558d36f10d14d443d4.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withDialog } from '@ohif/ui';\nimport ConnectedViewerMain from './ConnectedViewerMain.js';\nimport ErrorBoundaryDialog from './../components/ErrorBoundaryDialog';\nimport './Viewer.css';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nconst larvitar = require('D:/tese/Bia_final/frontend_bia/node_modules/larvitar/index.js');\n\nclass ViewerNrrd extends Component {\n  static propTypes = {\n    studies: PropTypes.array,\n    // window.store.getState().viewports.viewportSpecificData\n    // window.store.getState().viewports.activeViewportIndex\n    isStudyLoaded: PropTypes.bool,\n    nrrdFile: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      scale: null,\n      stackSize: null,\n      element: null,\n      imageDimensions: null,\n      slice: null,\n    };\n  }\n\n  logMouseButton = e => {\n    if (typeof e === 'object') {\n      let viewport = cornerstone.getViewport(this.state.element);\n\n      let image = cornerstone.getImage(this.state.element);\n\n      const imageDimensions = `${image.width} x ${image.height}`;\n\n      let windowWidth = viewport.voi.windowWidth;\n      let windowCenter = viewport.voi.windowCenter;\n\n      const wwwc = `W: ${\n        windowWidth.toFixed ? windowWidth.toFixed(0) : windowWidth\n      } L: ${windowWidth.toFixed ? windowCenter.toFixed(0) : windowCenter}`;\n\n      const stackState = cornerstoneTools.getToolState(\n        this.state.element,\n        'stack'\n      );\n      const stackData = stackState.data[0];\n\n      this.setState({\n        scale: viewport.scale,\n        wwwc: wwwc,\n        size: imageDimensions,\n        slice: stackData.currentImageIdIndex + 1,\n        stackSize: stackData.imageIds.length,\n      });\n    }\n  };\n\n  logScrollButton = () => {\n    const stackState = cornerstoneTools.getToolState(\n      this.state.element,\n      'stack'\n    );\n    const stackData = stackState.data[0];\n\n    this.setState({\n      slice: stackData.currentImageIdIndex + 1,\n      stackSize: stackData.imageIds.length,\n    });\n  };\n\n  componentDidMount() {\n    if (this.props.nrrdFile) {\n      let oneFile = this.props.nrrdFile;\n      let reader = new FileReader();\n      reader.readAsArrayBuffer(oneFile);\n\n      let elementos = document.getElementsByClassName('ViewerMain');\n\n      let element = elementos[0];\n\n      element.innerText = '';\n\n      cornerstone.enable(element);\n\n      this.setState({ element: element });\n      element.addEventListener('mouseup', this.logMouseButton);\n      element.addEventListener('wheel', this.logScrollButton);\n\n      const scope = this;\n\n      reader.onload = function() {\n        let volume = larvitar.importNRRDImage(reader.result);\n\n        let serie = larvitar.buildNrrdImage(volume, '1234', {});\n\n        scope.renderImage(serie, element);\n      };\n    }\n  }\n\n  getSeriesData(series) {\n    let data = {};\n    if (series.isMultiframe) {\n      data.isMultiframe = true;\n      data.numberOfSlices = series.imageIds.length;\n      data.imageIndex = 0;\n      data.imageId = series.imageIds[data.imageIndex];\n    } else {\n      data.isMultiframe = false;\n      data.numberOfSlices = series.imageIds.length;\n\n      data.imageIndex = Math.floor(data.numberOfSlices / 2);\n\n      data.imageId = series.imageIds[data.imageIndex];\n    }\n    data.isColor = series.color;\n    data.isTimeserie = false; // TODO 4D\n\n    // rows, cols and x y z spacing\n    data.rows = series.instances[series.imageIds[0]].metadata['x00280010'];\n    data.cols = series.instances[series.imageIds[0]].metadata['x00280011'];\n    data.thickness = series.instances[series.imageIds[0]].metadata['x00180050'];\n    data.spacing_x = series.instances[series.imageIds[0]].metadata['x00280030']\n      ? series.instances[series.imageIds[0]].metadata['x00280030'][0]\n      : null;\n    data.spacing_y = series.instances[series.imageIds[0]].metadata['x00280030']\n      ? series.instances[series.imageIds[0]].metadata['x00280030'][1]\n      : null;\n\n    // window center and window width\n    data.wc = series.instances[series.imageIds[0]].metadata['x00281050'];\n\n    data.ww = series.instances[series.imageIds[0]].metadata['x00281051'];\n\n    // default values for reset\n    data.defaultWW = data.ww;\n    data.defaultWC = data.wc;\n\n    if (data.rows == null || data.cols == null) {\n      alert('invalid image metadata');\n\n      return;\n    }\n    return data;\n  }\n\n  updateData(element) {\n    let elementEnabled = cornerstone.getEnabledElement(element);\n    let image = elementEnabled.image;\n\n    let viewport = cornerstone.getViewport(element);\n    let imageDimensions = `${image.width} x ${image.height}`;\n    let wwwc = `W: ${\n      image.windowWidth.toFixed\n        ? image.windowWidth.toFixed(0)\n        : image.windowWidth\n    } L: ${\n      image.windowWidth.toFixed\n        ? image.windowCenter.toFixed(0)\n        : image.windowCenter\n    }`;\n\n    this.setState({\n      scale: viewport.scale,\n      wwwc: wwwc,\n      imageDimensions: imageDimensions,\n    });\n  }\n\n  renderImage(seriesStack, element) {\n    let series = { ...seriesStack };\n    let data;\n\n    data = this.getSeriesData(series);\n    if (!data.imageId) {\n      alert('Error during renderImage: imageId has not been loaded yet.');\n      return;\n    }\n\n    // Add stack tool, and set it's mode\n    const StackScrollTool = cornerstoneTools.StackScrollTool;\n\n    //define the stack\n    const stack = {\n      currentImageIdIndex: 0,\n      imageIds: series.imageIds,\n    };\n\n    this.setState({ slice: 1, stackSize: series.imageIds.length });\n\n    const scope = this;\n\n    cornerstone.loadImage(data.imageId).then(function(image) {\n      cornerstone.displayImage(element, image);\n      scope.updateData(element);\n      cornerstoneTools.addStackStateManager(element, ['stack']);\n      cornerstoneTools.addToolState(element, 'stack', stack);\n      cornerstoneTools.addTool(StackScrollTool);\n\n      let colormap = cornerstone.colors.getColormap('gray');\n      let viewport = cornerstone.getViewport(element);\n\n      element.style.width = image.width;\n      element.style.height = image.height;\n      cornerstone.resize(element, true);\n\n      viewport.voi.windowWidth = image.windowWidth;\n      viewport.voi.windowCenter = image.windowCenter;\n      viewport.invert = image.invert;\n      viewport.colormap = colormap;\n      cornerstone.setViewport(element, viewport);\n\n      cornerstone.fitToWindow(element);\n    });\n  }\n\n  render() {\n    const zoomPercentage = parseFloat(this.state.scale * 100).toFixed(0);\n    return (\n      <>\n        <div style={{ marginLeft: '20px' }}>\n          {' '}\n          <p\n            style={{\n              float: 'left',\n            }}\n          >\n            <p\n              style={{\n                marginBottom: '10px',\n              }}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                fill=\"currentColor\"\n                className=\"bi bi-mouse2-fill\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path d=\"M7.5.026C4.958.286 3 2.515 3 5.188V5.5h4.5V.026zm1 0V5.5H13v-.312C13 2.515 11.042.286 8.5.026zM13 6.5H3v4.313C3 13.658 5.22 16 8 16s5-2.342 5-5.188V6.5z\" />\n              </svg>{' '}\n              <b>Commands</b>{' '}\n            </p>\n            Left Mouse Button: <b>WW/WC</b>; Right Mouse Button: <b>Zoom</b>;{' '}\n            <br></br>\n            Mouse Scroll: <b>Change Slice</b>; Press Scroll Button: <b>Pan</b>.\n          </p>\n          {cornerstone.getEnabledElements().length > 0 ? (\n            <p\n              style={{\n                marginRight: '30px',\n                float: 'right',\n              }}\n            >\n              <b>Zoom</b>: {zoomPercentage} %<br></br>\n              <b>Window Width/Level</b>: {this.state.wwwc}\n              <br></br>\n              <b>Image Dimensions</b>: {this.state.imageDimensions}\n              <br></br>\n              <b>Slice Number</b>: {this.state.slice}/{this.state.stackSize}\n              <br></br>\n            </p>\n          ) : null}\n        </div>\n        {/* VIEWPORTS */}\n        <div className=\"FlexboxLayout\">\n          {/* MAIN */}\n          <div className={classNames('main-content')}>\n            <ErrorBoundaryDialog context=\"ViewerMain\">\n              <ConnectedViewerMain\n                studies={this.props.studies}\n                isStudyLoaded={this.props.isStudyLoaded}\n              />\n            </ErrorBoundaryDialog>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withDialog(ViewerNrrd);\n","import React, { Component } from 'react';\nimport { metadata, utils } from '@ohif/core';\nimport ConnectedViewer from './ConnectedViewer.js';\nimport PropTypes from 'prop-types';\nimport { extensionManager } from './../App.js';\nimport Dropzone from 'react-dropzone';\nimport filesToStudies from '../lib/filesToStudies';\nimport './ViewerLocalFileData.css';\nimport ViewerNrrd from './ViewerNrrd.js';\nconst { OHIFStudyMetadata } = metadata;\nconst { studyMetadataManager } = utils;\n\nconst dropZoneLinkDialog = (onDrop, dir) => {\n  return (\n    <Dropzone onDrop={onDrop} noDrag>\n      {({ getRootProps, getInputProps }) => (\n        <span {...getRootProps()} className=\"link-dialog\">\n          {dir ? (\n            <span>\n              Load folders\n              <input\n                {...getInputProps()}\n                webkitdirectory=\"true\"\n                mozdirectory=\"true\"\n              />\n            </span>\n          ) : (\n            <span>\n              Load files\n              <input {...getInputProps()} />\n            </span>\n          )}\n        </span>\n      )}\n    </Dropzone>\n  );\n};\n\nconst linksDialogMessage = onDrop => {\n  return (\n    <>\n      Or click to {` `}\n      {dropZoneLinkDialog(onDrop)}\n      {` `} or {` `}\n      {dropZoneLinkDialog(onDrop, true)}\n      {` `} from dialog\n    </>\n  );\n};\n\nclass ViewerLocalFileData extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      studies: null,\n      loading: false,\n      error: null,\n      nrrdFile: null,\n      scale: null,\n      slice: null,\n      stackSize: null,\n      wwwc: null,\n      size: null,\n    };\n  }\n  static propTypes = {\n    studies: PropTypes.array,\n  };\n\n  updateStudies = studies => {\n    // Render the viewer when the data is ready\n    studyMetadataManager.purge();\n\n    // Map studies to new format, update metadata manager?\n    const updatedStudies = studies.map(study => {\n      const studyMetadata = new OHIFStudyMetadata(\n        study,\n        study.StudyInstanceUID\n      );\n      const sopClassHandlerModules =\n        extensionManager.modules['sopClassHandlerModule'];\n\n      study.displaySets =\n        study.displaySets ||\n        studyMetadata.createDisplaySets(sopClassHandlerModules);\n\n      studyMetadata.forEachDisplaySet(displayset => {\n        displayset.localFile = true;\n      });\n\n      studyMetadataManager.add(studyMetadata);\n\n      return study;\n    });\n\n    this.setState({\n      studies: updatedStudies,\n    });\n  };\n\n  render() {\n    const onDrop = async acceptedFiles => {\n      this.setState({ loading: true });\n\n      let oneFile = acceptedFiles[0];\n\n      if (oneFile['name'].includes('.nrrd')) {\n        this.setState({\n          studies: [],\n          loading: false,\n          nrrdFile: oneFile,\n          isNrrdImage: true,\n        });\n      } else {\n        const studies = await filesToStudies(acceptedFiles);\n\n        const updatedStudies = this.updateStudies(studies);\n\n        if (!updatedStudies) {\n          return;\n        }\n\n        this.setState({\n          studies: updatedStudies,\n          loading: false,\n          isNrrdImage: false,\n        });\n      }\n    };\n\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    }\n\n    return (\n      <Dropzone onDrop={onDrop} noClick>\n        {({ getRootProps }) => (\n          <div {...getRootProps()}>\n            {this.state.studies && !this.state.isNrrdImage ? (\n              <ConnectedViewer\n                studies={this.state.studies}\n                studyInstanceUIDs={\n                  this.state.studies &&\n                  this.state.studies.map(a => a.StudyInstanceUID)\n                }\n                isNrrdImage={this.state.isNrrdImage}\n              />\n            ) : this.state.isNrrdImage && this.state.nrrdFile ? (\n              <ViewerNrrd\n                studies={this.state.studies}\n                isStudyLoaded={true}\n                nrrdFile={this.state.nrrdFile}\n              />\n            ) : (\n              <div className={'drag-drop-instructions'}>\n                <div className={'drag-drop-contents'}>\n                  {this.state.loading ? (\n                    <h3>Loading...</h3>\n                  ) : (\n                    <>\n                      <h3>\n                        Drag and Drop DICOM files here to load them in the\n                        Viewer\n                      </h3>\n                      <h4>{linksDialogMessage(onDrop)}</h4>\n                    </>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </Dropzone>\n    );\n  }\n}\n\nexport default ViewerLocalFileData;\n"],"sourceRoot":""}